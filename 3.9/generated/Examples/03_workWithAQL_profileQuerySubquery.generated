arangosh&gt; db._profileQuery(`
........&gt; LET list = (FOR doc in acollection FILTER doc.value &gt; 90 RETURN doc)
........&gt; FOR a IN list 
........&gt;  FILTER a.value &lt; 91 
........&gt;  RETURN a`, {}, {colors: false, optimizer:{rules:[&quot;-all&quot;]}}
........&gt; );
Query String (116 chars, cacheable: false):
 LET list = (FOR doc in acollection FILTER doc.value &gt; 90 RETURN doc)
 FOR a IN list 
  FILTER a.value &lt; 91 
  RETURN a

Execution plan:
 Id   NodeType                  Calls   Items   Runtime [s]   Comment
  1   SingletonNode                 1       1       0.00002   * ROOT
 12   SubqueryStartNode             1       2       0.00002     - LET list = ( /* subquery begin */
  3   EnumerateCollectionNode      11   10001       0.00670       - FOR doc IN acollection   /* full collection scan  */
  4   CalculationNode              11   10001       0.00533         - LET #5 = (doc.`value` &gt; 90)   /* simple expression */   /* collections used: doc : acollection */
  5   FilterNode                   10    9910       0.00408         - FILTER #5
 13   SubqueryEndNode               1       1       0.00271         - RETURN  doc ) /* subquery end */
  8   EnumerateListNode            10    9909       0.00278     - FOR a IN list   /* list iteration */
  9   CalculationNode              10    9909       0.00436       - LET #7 = (a.`value` &lt; 91)   /* simple expression */
 10   FilterNode                    1       0       0.00090       - FILTER #7
 11   ReturnNode                    1       0       0.00002       - RETURN a

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  1   splice-subqueries

Query Statistics:
 Writes Exec   Writes Ign   Scan Full   Scan Index   Filtered   Peak Mem [b]   Exec Time [s]
           0            0       10000            0      10000         720896         0.02777

Query Profile:
 Query Stage           Duration [s]
 initializing               0.00003
 parsing                    0.00013
 optimizing ast             0.00002
 loading collections        0.00001
 instantiating plan         0.00009
 optimizing plan            0.00053
 executing                  0.02694
 finalizing                 0.00004


