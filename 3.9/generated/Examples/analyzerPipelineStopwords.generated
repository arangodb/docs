arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/analyzers"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">"norm_stop"</span>, <span class="hljs-string">"pipeline"</span>, { <span class="hljs-string">"pipeline"</span>: [
........&gt;   { <span class="hljs-attr">type</span>: <span class="hljs-string">"norm"</span>, <span class="hljs-attr">properties</span>: { <span class="hljs-attr">locale</span>: <span class="hljs-string">"en.utf-8"</span>, <span class="hljs-attr">accent</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">case</span>: <span class="hljs-string">"lower"</span> } },
........&gt;   { <span class="hljs-attr">type</span>: <span class="hljs-string">"stopwords"</span>, <span class="hljs-attr">properties</span>: { <span class="hljs-attr">stopwords</span>: [<span class="hljs-string">"616e64"</span>,<span class="hljs-string">"746865"</span>] } },
........&gt; ]}, [<span class="hljs-string">"frequency"</span>, <span class="hljs-string">"norm"</span>]);
arangosh&gt; db._query(<span class="hljs-string">"RETURN FLATTEN(TOKENS(SPLIT('The fox AND the dog äñḏ a ţhéäter', ' '), 'norm_stop'))"</span>);
[ 
  [ 
    <span class="hljs-string">"fox"</span>, 
    <span class="hljs-string">"dog"</span>, 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"theater"</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
