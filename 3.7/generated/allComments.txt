@startDocuBlock errorCodes 
################################################################################

## General errors

################################################################################



ERROR_NO_ERROR,0,"no error","No error has occurred."

ERROR_FAILED,1,"failed","Will be raised when a general error occurred."

ERROR_SYS_ERROR,2,"system error","Will be raised when operating system error occurred."

ERROR_OUT_OF_MEMORY,3,"out of memory","Will be raised when there is a memory shortage."

ERROR_INTERNAL,4,"internal error","Will be raised when an internal error occurred."

ERROR_ILLEGAL_NUMBER,5,"illegal number","Will be raised when an illegal representation of a number was given."

ERROR_NUMERIC_OVERFLOW,6,"numeric overflow","Will be raised when a numeric overflow occurred."

ERROR_ILLEGAL_OPTION,7,"illegal option","Will be raised when an unknown option was supplied by the user."

ERROR_DEAD_PID,8,"dead process identifier","Will be raised when a PID without a living process was found."

ERROR_NOT_IMPLEMENTED,9,"not implemented","Will be raised when hitting an unimplemented feature."

ERROR_BAD_PARAMETER,10,"bad parameter","Will be raised when the parameter does not fulfill the requirements."

ERROR_FORBIDDEN,11,"forbidden","Will be raised when you are missing permission for the operation."

ERROR_OUT_OF_MEMORY_MMAP,12,"out of memory in mmap","Will be raised when there is a memory shortage."

ERROR_CORRUPTED_CSV,13,"csv is corrupt","Will be raised when encountering a corrupt csv line."

ERROR_FILE_NOT_FOUND,14,"file not found","Will be raised when a file is not found."

ERROR_CANNOT_WRITE_FILE,15,"cannot write file","Will be raised when a file cannot be written."

ERROR_CANNOT_OVERWRITE_FILE,16,"cannot overwrite file","Will be raised when an attempt is made to overwrite an existing file."

ERROR_TYPE_ERROR,17,"type error","Will be raised when a type error is encountered."

ERROR_LOCK_TIMEOUT,18,"lock timeout","Will be raised when there's a timeout waiting for a lock."

ERROR_CANNOT_CREATE_DIRECTORY,19,"cannot create directory","Will be raised when an attempt to create a directory fails."

ERROR_CANNOT_CREATE_TEMP_FILE,20,"cannot create temporary file","Will be raised when an attempt to create a temporary file fails."

ERROR_REQUEST_CANCELED,21,"canceled request","Will be raised when a request is canceled by the user."

ERROR_DEBUG,22,"intentional debug error","Will be raised intentionally during debugging."

ERROR_IP_ADDRESS_INVALID,25,"IP address is invalid","Will be raised when the structure of an IP address is invalid."

ERROR_FILE_EXISTS,27,"file exists","Will be raised when a file already exists."

ERROR_LOCKED,28,"locked","Will be raised when a resource or an operation is locked."

ERROR_DEADLOCK,29,"deadlock detected","Will be raised when a deadlock is detected when accessing collections."

ERROR_SHUTTING_DOWN,30,"shutdown in progress","Will be raised when a call cannot succeed because a server shutdown is already in progress."

ERROR_ONLY_ENTERPRISE,31,"only enterprise version","Will be raised when an Enterprise Edition feature is requested from the Community Edition."

ERROR_RESOURCE_LIMIT,32,"resource limit exceeded","Will be raised when the resources used by an operation exceed the configured maximum value."

ERROR_ARANGO_ICU_ERROR,33,"icu error: %s","will be raised if icu operations failed"

ERROR_CANNOT_READ_FILE,34,"cannot read file","Will be raised when a file cannot be read."

ERROR_INCOMPATIBLE_VERSION,35,"incompatible server version","Will be raised when a server is running an incompatible version of ArangoDB."

ERROR_DISABLED,36,"disabled","Will be raised when a requested resource is not enabled."



################################################################################

## HTTP error status codes

################################################################################



ERROR_HTTP_BAD_PARAMETER,400,"bad parameter","Will be raised when the HTTP request does not fulfill the requirements."

ERROR_HTTP_UNAUTHORIZED,401,"unauthorized","Will be raised when authorization is required but the user is not authorized."

ERROR_HTTP_FORBIDDEN,403,"forbidden","Will be raised when the operation is forbidden."

ERROR_HTTP_NOT_FOUND,404,"not found","Will be raised when an URI is unknown."

ERROR_HTTP_METHOD_NOT_ALLOWED,405,"method not supported","Will be raised when an unsupported HTTP method is used for an operation."

ERROR_HTTP_NOT_ACCEPTABLE,406,"request not acceptable","Will be raised when an unsupported HTTP content type is used for an operation, or if a request is not acceptable for a leader or follower."

ERROR_HTTP_PRECONDITION_FAILED,412,"precondition failed","Will be raised when a precondition for an HTTP request is not met."

ERROR_HTTP_SERVER_ERROR,500,"internal server error","Will be raised when an internal server is encountered."

ERROR_HTTP_SERVICE_UNAVAILABLE,503,"service unavailable","Will be raised when a service is temporarily unavailable."

ERROR_HTTP_GATEWAY_TIMEOUT,504,"gateway timeout","Will be raised when a service contacted by ArangoDB does not respond in a timely manner."



################################################################################

## HTTP processing errors

################################################################################



ERROR_HTTP_CORRUPTED_JSON,600,"invalid JSON object","Will be raised when a string representation of a JSON object is corrupt."

ERROR_HTTP_SUPERFLUOUS_SUFFICES,601,"superfluous URL suffices","Will be raised when the URL contains superfluous suffices."



################################################################################

## Internal ArangoDB storage errors

## For errors that occur because of a programming error.

################################################################################



ERROR_ARANGO_ILLEGAL_STATE,1000,"illegal state","Internal error that will be raised when the datafile is not in the required state."

ERROR_ARANGO_DATAFILE_SEALED,1002,"datafile sealed","Internal error that will be raised when trying to write to a datafile."

ERROR_ARANGO_READ_ONLY,1004,"read only","Internal error that will be raised when trying to write to a read-only datafile or collection."

ERROR_ARANGO_DUPLICATE_IDENTIFIER,1005,"duplicate identifier","Internal error that will be raised when a identifier duplicate is detected."

ERROR_ARANGO_DATAFILE_UNREADABLE,1006,"datafile unreadable","Internal error that will be raised when a datafile is unreadable."

ERROR_ARANGO_DATAFILE_EMPTY,1007,"datafile empty","Internal error that will be raised when a datafile is empty."

ERROR_ARANGO_RECOVERY,1008,"logfile recovery error","Will be raised when an error occurred during WAL log file recovery."

ERROR_ARANGO_DATAFILE_STATISTICS_NOT_FOUND,1009,"datafile statistics not found","Will be raised when a required datafile statistics object was not found."



################################################################################

## External ArangoDB storage errors

## For errors that occur because of an outside event.

################################################################################



ERROR_ARANGO_CORRUPTED_DATAFILE,1100,"corrupted datafile","Will be raised when a corruption is detected in a datafile."

ERROR_ARANGO_ILLEGAL_PARAMETER_FILE,1101,"illegal or unreadable parameter file","Will be raised if a parameter file is corrupted or cannot be read."

ERROR_ARANGO_CORRUPTED_COLLECTION,1102,"corrupted collection","Will be raised when a collection contains one or more corrupted data files."

ERROR_ARANGO_MMAP_FAILED,1103,"mmap failed","Will be raised when the system call mmap failed."

ERROR_ARANGO_FILESYSTEM_FULL,1104,"filesystem full","Will be raised when the filesystem is full."

ERROR_ARANGO_NO_JOURNAL,1105,"no journal","Will be raised when a journal cannot be created."

ERROR_ARANGO_DATAFILE_ALREADY_EXISTS,1106,"cannot create/rename datafile because it already exists","Will be raised when the datafile cannot be created or renamed because a file of the same name already exists."

ERROR_ARANGO_DATADIR_LOCKED,1107,"database directory is locked","Will be raised when the database directory is locked by a different process."

ERROR_ARANGO_COLLECTION_DIRECTORY_ALREADY_EXISTS,1108,"cannot create/rename collection because directory already exists","Will be raised when the collection cannot be created because a directory of the same name already exists."

ERROR_ARANGO_MSYNC_FAILED,1109,"msync failed","Will be raised when the system call msync failed."

ERROR_ARANGO_DATADIR_UNLOCKABLE,1110,"cannot lock database directory","Will be raised when the server cannot lock the database directory on startup."

ERROR_ARANGO_SYNC_TIMEOUT,1111,"sync timeout","Will be raised when the server waited too long for a datafile to be synced to disk."



################################################################################

## General ArangoDB storage errors

## For errors that occur when fulfilling a user request.

################################################################################



ERROR_ARANGO_CONFLICT,1200,"conflict","Will be raised when updating or deleting a document and a conflict has been detected."

ERROR_ARANGO_DATADIR_INVALID,1201,"invalid database directory","Will be raised when a non-existing database directory was specified when starting the database."

ERROR_ARANGO_DOCUMENT_NOT_FOUND,1202,"document not found","Will be raised when a document with a given identifier is unknown."

ERROR_ARANGO_DATA_SOURCE_NOT_FOUND,1203,"collection or view not found","Will be raised when a collection or View with the given identifier or name is unknown."

ERROR_ARANGO_COLLECTION_PARAMETER_MISSING,1204,"parameter 'collection' not found","Will be raised when the collection parameter is missing."

ERROR_ARANGO_DOCUMENT_HANDLE_BAD,1205,"illegal document identifier","Will be raised when a document identifier is corrupt."

ERROR_ARANGO_MAXIMAL_SIZE_TOO_SMALL,1206,"maximal size of journal too small","Will be raised when the maximal size of the journal is too small."

ERROR_ARANGO_DUPLICATE_NAME,1207,"duplicate name","Will be raised when a name duplicate is detected."

ERROR_ARANGO_ILLEGAL_NAME,1208,"illegal name","Will be raised when an illegal name is detected."

ERROR_ARANGO_NO_INDEX,1209,"no suitable index known","Will be raised when no suitable index for the query is known."

ERROR_ARANGO_UNIQUE_CONSTRAINT_VIOLATED,1210,"unique constraint violated","Will be raised when there is a unique constraint violation."

ERROR_ARANGO_INDEX_NOT_FOUND,1212,"index not found","Will be raised when an index with a given identifier is unknown."

ERROR_ARANGO_CROSS_COLLECTION_REQUEST,1213,"cross collection request not allowed","Will be raised when a cross-collection is requested."

ERROR_ARANGO_INDEX_HANDLE_BAD,1214,"illegal index identifier","Will be raised when a index identifier is corrupt."

ERROR_ARANGO_DOCUMENT_TOO_LARGE,1216,"document too large","Will be raised when the document cannot fit into any datafile because of it is too large."

ERROR_ARANGO_COLLECTION_NOT_UNLOADED,1217,"collection must be unloaded","Will be raised when a collection should be unloaded, but has a different status."

ERROR_ARANGO_COLLECTION_TYPE_INVALID,1218,"collection type invalid","Will be raised when an invalid collection type is used in a request."

ERROR_ARANGO_ATTRIBUTE_PARSER_FAILED,1220,"parsing attribute name definition failed","Will be raised when parsing an attribute name definition failed."

ERROR_ARANGO_DOCUMENT_KEY_BAD,1221,"illegal document key","Will be raised when a document key is corrupt."

ERROR_ARANGO_DOCUMENT_KEY_UNEXPECTED,1222,"unexpected document key","Will be raised when a user-defined document key is supplied for collections with auto key generation."

ERROR_ARANGO_DATADIR_NOT_WRITABLE,1224,"server database directory not writable","Will be raised when the server's database directory is not writable for the current user."

ERROR_ARANGO_OUT_OF_KEYS,1225,"out of keys","Will be raised when a key generator runs out of keys."

ERROR_ARANGO_DOCUMENT_KEY_MISSING,1226,"missing document key","Will be raised when a document key is missing."

ERROR_ARANGO_DOCUMENT_TYPE_INVALID,1227,"invalid document type","Will be raised when there is an attempt to create a document with an invalid type."

ERROR_ARANGO_DATABASE_NOT_FOUND,1228,"database not found","Will be raised when a non-existing database is accessed."

ERROR_ARANGO_DATABASE_NAME_INVALID,1229,"database name invalid","Will be raised when an invalid database name is used."

ERROR_ARANGO_USE_SYSTEM_DATABASE,1230,"operation only allowed in system database","Will be raised when an operation is requested in a database other than the system database."

ERROR_ARANGO_INVALID_KEY_GENERATOR,1232,"invalid key generator","Will be raised when an invalid key generator description is used."

ERROR_ARANGO_INVALID_EDGE_ATTRIBUTE,1233,"edge attribute missing or invalid","will be raised when the _from or _to values of an edge are undefined or contain an invalid value."

ERROR_ARANGO_INDEX_CREATION_FAILED,1235,"index creation failed","Will be raised when an attempt to create an index has failed."

ERROR_ARANGO_WRITE_THROTTLE_TIMEOUT,1236,"write-throttling timeout","Will be raised when the server is write-throttled and a write operation has waited too long for the server to process queued operations."

ERROR_ARANGO_COLLECTION_TYPE_MISMATCH,1237,"collection type mismatch","Will be raised when a collection has a different type from what has been expected."

ERROR_ARANGO_COLLECTION_NOT_LOADED,1238,"collection not loaded","Will be raised when a collection is accessed that is not yet loaded."

ERROR_ARANGO_DOCUMENT_REV_BAD,1239,"illegal document revision","Will be raised when a document revision is corrupt or is missing where needed."

ERROR_ARANGO_INCOMPLETE_READ,1240,"incomplete read","Will be raised by the storage engine when a read cannot be completed."



################################################################################

## Checked ArangoDB storage errors

## For errors that occur but are anticipated.

################################################################################



ERROR_ARANGO_DATAFILE_FULL,1300,"datafile full","Will be raised when the datafile reaches its limit."

ERROR_ARANGO_EMPTY_DATADIR,1301,"server database directory is empty","Will be raised when encountering an empty server database directory."

ERROR_ARANGO_TRY_AGAIN,1302,"operation should be tried again","Will be raised when an operation should be retried."

ERROR_ARANGO_BUSY,1303,"engine is busy","Will be raised when storage engine is busy."

ERROR_ARANGO_MERGE_IN_PROGRESS,1304,"merge in progress","Will be raised when storage engine has a datafile merge in progress and cannot complete the operation."

ERROR_ARANGO_IO_ERROR,1305,"storage engine I/O error","Will be raised when storage engine encounters an I/O error."



################################################################################

## ArangoDB replication errors

################################################################################



ERROR_REPLICATION_NO_RESPONSE,1400,"no response","Will be raised when the replication applier does not receive any or an incomplete response from the master."

ERROR_REPLICATION_INVALID_RESPONSE,1401,"invalid response","Will be raised when the replication applier receives an invalid response from the master."

ERROR_REPLICATION_MASTER_ERROR,1402,"master error","Will be raised when the replication applier receives a server error from the master."

ERROR_REPLICATION_MASTER_INCOMPATIBLE,1403,"master incompatible","Will be raised when the replication applier connects to a master that has an incompatible version."

ERROR_REPLICATION_MASTER_CHANGE,1404,"master change","Will be raised when the replication applier connects to a different master than before."

ERROR_REPLICATION_LOOP,1405,"loop detected","Will be raised when the replication applier is asked to connect to itself for replication."

ERROR_REPLICATION_UNEXPECTED_MARKER,1406,"unexpected marker","Will be raised when an unexpected marker is found in the replication log stream."

ERROR_REPLICATION_INVALID_APPLIER_STATE,1407,"invalid applier state","Will be raised when an invalid replication applier state file is found."

ERROR_REPLICATION_UNEXPECTED_TRANSACTION,1408,"invalid transaction","Will be raised when an unexpected transaction id is found."

ERROR_REPLICATION_INVALID_APPLIER_CONFIGURATION,1410,"invalid replication applier configuration","Will be raised when the configuration for the replication applier is invalid."

ERROR_REPLICATION_RUNNING,1411,"cannot perform operation while applier is running","Will be raised when there is an attempt to perform an operation while the replication applier is running."

ERROR_REPLICATION_APPLIER_STOPPED,1412,"replication stopped","Special error code used to indicate the replication applier was stopped by a user."

ERROR_REPLICATION_NO_START_TICK,1413,"no start tick","Will be raised when the replication applier is started without a known start tick value."

ERROR_REPLICATION_START_TICK_NOT_PRESENT,1414,"start tick not present","Will be raised when the replication applier fetches data using a start tick, but that start tick is not present on the logger server anymore."

ERROR_REPLICATION_WRONG_CHECKSUM,1416,"wrong checksum","Will be raised when a new born follower submits a wrong checksum"

ERROR_REPLICATION_SHARD_NONEMPTY,1417,"shard not empty","Will be raised when a shard is not empty and the follower tries a shortcut"



################################################################################

## ArangoDB cluster errors

################################################################################



ERROR_CLUSTER_FOLLOWER_TRANSACTION_COMMIT_PERFORMED,1447,"follower transaction intermediate commit already performed","Will be raised when a follower transaction has already performed an intermediate commit and must be rolled back."

ERROR_CLUSTER_CREATE_COLLECTION_PRECONDITION_FAILED,1448,"creating collection failed due to precondition","Will be raised when updating the plan on collection creation failed."

ERROR_CLUSTER_SERVER_UNKNOWN,1449,"got a request from an unkown server","Will be raised on some occasions when one server gets a request from another, which has not (yet?) been made known via the Agency."

ERROR_CLUSTER_TOO_MANY_SHARDS,1450,"too many shards","Will be raised when the number of shards for a collection is higher than allowed."

ERROR_CLUSTER_COLLECTION_ID_EXISTS,1453,"collection ID already exists","Will be raised when a Coordinator in a cluster tries to create a collection and the collection ID already exists."

ERROR_CLUSTER_COULD_NOT_CREATE_COLLECTION_IN_PLAN,1454,"could not create collection in plan","Will be raised when a Coordinator in a cluster cannot create an entry for a new collection in the Plan hierarchy in the Agency."

ERROR_CLUSTER_COULD_NOT_CREATE_COLLECTION,1456,"could not create collection","Will be raised when a Coordinator in a cluster notices that some DB-Servers report problems when creating shards for a new collection."

ERROR_CLUSTER_TIMEOUT,1457,"timeout in cluster operation","Will be raised when a Coordinator in a cluster runs into a timeout for some cluster wide operation."

ERROR_CLUSTER_COULD_NOT_REMOVE_COLLECTION_IN_PLAN,1458,"could not remove collection from plan","Will be raised when a Coordinator in a cluster cannot remove an entry for a collection in the Plan hierarchy in the Agency."

ERROR_CLUSTER_COULD_NOT_REMOVE_COLLECTION_IN_CURRENT,1459,"could not remove collection from current","Will be raised when a Coordinator in a cluster cannot remove an entry for a collection in the Current hierarchy in the Agency."

ERROR_CLUSTER_COULD_NOT_CREATE_DATABASE_IN_PLAN,1460,"could not create database in plan","Will be raised when a Coordinator in a cluster cannot create an entry for a new database in the Plan hierarchy in the Agency."

ERROR_CLUSTER_COULD_NOT_CREATE_DATABASE,1461,"could not create database","Will be raised when a Coordinator in a cluster notices that some DB-Servers report problems when creating databases for a new cluster wide database."

ERROR_CLUSTER_COULD_NOT_REMOVE_DATABASE_IN_PLAN,1462,"could not remove database from plan","Will be raised when a Coordinator in a cluster cannot remove an entry for a database in the Plan hierarchy in the Agency."

ERROR_CLUSTER_COULD_NOT_REMOVE_DATABASE_IN_CURRENT,1463,"could not remove database from current","Will be raised when a Coordinator in a cluster cannot remove an entry for a database in the Current hierarchy in the Agency."

ERROR_CLUSTER_SHARD_GONE,1464,"no responsible shard found","Will be raised when a Coordinator in a cluster cannot determine the shard that is responsible for a given document."

ERROR_CLUSTER_CONNECTION_LOST,1465,"cluster internal HTTP connection broken","Will be raised when a Coordinator in a cluster loses an HTTP connection to a DB-Server in the cluster whilst transferring data."

ERROR_CLUSTER_MUST_NOT_SPECIFY_KEY,1466,"must not specify _key for this collection","Will be raised when a Coordinator in a cluster finds that the _key attribute was specified in a sharded collection the uses not only _key as sharding attribute."

ERROR_CLUSTER_GOT_CONTRADICTING_ANSWERS,1467,"got contradicting answers from different shards","Will be raised if a Coordinator in a cluster gets conflicting results from different shards, which should never happen."

ERROR_CLUSTER_NOT_ALL_SHARDING_ATTRIBUTES_GIVEN,1468,"not all sharding attributes given","Will be raised if a Coordinator tries to find out which shard is responsible for a partial document, but cannot do this because not all sharding attributes are specified."

ERROR_CLUSTER_MUST_NOT_CHANGE_SHARDING_ATTRIBUTES,1469,"must not change the value of a shard key attribute","Will be raised if there is an attempt to update the value of a shard attribute."

ERROR_CLUSTER_UNSUPPORTED,1470,"unsupported operation or parameter","Will be raised when there is an attempt to carry out an operation that is not supported in the context of a sharded collection."

ERROR_CLUSTER_ONLY_ON_COORDINATOR,1471,"this operation is only valid on a coordinator in a cluster","Will be raised if there is an attempt to run a Coordinator-only operation on a different type of node."

ERROR_CLUSTER_READING_PLAN_AGENCY,1472,"error reading Plan in agency","Will be raised if a Coordinator or DB-Server cannot read the Plan in the Agency."

ERROR_CLUSTER_COULD_NOT_TRUNCATE_COLLECTION,1473,"could not truncate collection","Will be raised if a Coordinator cannot truncate all shards of a cluster collection."

ERROR_CLUSTER_AQL_COMMUNICATION,1474,"error in cluster internal communication for AQL","Will be raised if the internal communication of the cluster for AQL produces an error."

ERROR_CLUSTER_ONLY_ON_DBSERVER,1477,"this operation is only valid on a DBserver in a cluster","Will be raised if there is an attempt to run a DB-Server-only operation on a different type of node."

ERROR_CLUSTER_BACKEND_UNAVAILABLE,1478,"A cluster backend which was required for the operation could not be reached","Will be raised if a required DB-Server can't be reached."

ERROR_CLUSTER_AQL_COLLECTION_OUT_OF_SYNC,1481,"collection is out of sync","Will be raised if a collection needed during query execution is out of sync. This currently can only happen when using SatelliteCollections"

ERROR_CLUSTER_COULD_NOT_CREATE_INDEX_IN_PLAN,1482,"could not create index in plan","Will be raised when a Coordinator in a cluster cannot create an entry for a new index in the Plan hierarchy in the Agency."

ERROR_CLUSTER_COULD_NOT_DROP_INDEX_IN_PLAN,1483,"could not drop index in plan","Will be raised when a Coordinator in a cluster cannot remove an index from the Plan hierarchy in the Agency."

ERROR_CLUSTER_CHAIN_OF_DISTRIBUTESHARDSLIKE,1484,"chain of distributeShardsLike references","Will be raised if one tries to create a collection with a distributeShardsLike attribute which points to another collection that also has one."

ERROR_CLUSTER_MUST_NOT_DROP_COLL_OTHER_DISTRIBUTESHARDSLIKE,1485,"must not drop collection while another has a distributeShardsLike attribute pointing to it","Will be raised if one tries to drop a collection to which another collection points with its distributeShardsLike attribute."

ERROR_CLUSTER_UNKNOWN_DISTRIBUTESHARDSLIKE,1486,"must not have a distributeShardsLike attribute pointing to an unknown collection","Will be raised if one tries to create a collection which points to an unknown collection in its distributeShardsLike attribute."

ERROR_CLUSTER_INSUFFICIENT_DBSERVERS,1487,"the number of current dbservers is lower than the requested replicationFactor","Will be raised if one tries to create a collection with a replicationFactor greater than the available number of DB-Servers."

ERROR_CLUSTER_COULD_NOT_DROP_FOLLOWER,1488,"a follower could not be dropped in agency","Will be raised if a follower that ought to be dropped could not be dropped in the Agency (under Current)."

ERROR_CLUSTER_SHARD_LEADER_REFUSES_REPLICATION,1489,"a shard leader refuses to perform a replication operation","Will be raised if a replication operation is refused by a shard leader."

ERROR_CLUSTER_SHARD_FOLLOWER_REFUSES_OPERATION,1490,"a shard follower refuses to perform an operation","Will be raised if a replication operation is refused by a shard follower because it is coming from the wrong leader."

ERROR_CLUSTER_SHARD_LEADER_RESIGNED,1491,"a (former) shard leader refuses to perform an operation, because it has resigned in the meantime","Will be raised if a non-replication operation is refused by a former shard leader that has found out that it is no longer the leader."

ERROR_CLUSTER_AGENCY_COMMUNICATION_FAILED,1492,"some agency operation failed","Will be raised if after various retries an Agency operation could not be performed successfully."

ERROR_CLUSTER_LEADERSHIP_CHALLENGE_ONGOING,1495,"leadership challenge is ongoing","Will be raised when servers are currently competing for leadership, and the result is still unknown."

ERROR_CLUSTER_NOT_LEADER,1496,"not a leader","Will be raised when an operation is sent to a non-leading server."

ERROR_CLUSTER_COULD_NOT_CREATE_VIEW_IN_PLAN,1497,"could not create view in plan","Will be raised when a Coordinator in a cluster cannot create an entry for a new View in the Plan hierarchy in the Agency."

ERROR_CLUSTER_VIEW_ID_EXISTS,1498,"view ID already exists","Will be raised when a Coordinator in a cluster tries to create a View and the View ID already exists."

ERROR_CLUSTER_COULD_NOT_DROP_COLLECTION,1499,"could not drop collection in plan","Will be raised when a Coordinator in a cluster cannot drop a collection entry in the Plan hierarchy in the Agency."



################################################################################

## ArangoDB query errors

################################################################################



ERROR_QUERY_KILLED,1500,"query killed","Will be raised when a running query is killed by an explicit admin command."

ERROR_QUERY_PARSE,1501,"%s","Will be raised when query is parsed and is found to be syntactically invalid."

ERROR_QUERY_EMPTY,1502,"query is empty","Will be raised when an empty query is specified."

ERROR_QUERY_SCRIPT,1503,"runtime error '%s'","Will be raised when a runtime error is caused by the query."

ERROR_QUERY_NUMBER_OUT_OF_RANGE,1504,"number out of range","Will be raised when a number is outside the expected range."

ERROR_QUERY_INVALID_GEO_VALUE,1505,"invalid geo coordinate value","Will be raised when a geo index coordinate is invalid or out of range."

ERROR_QUERY_VARIABLE_NAME_INVALID,1510,"variable name '%s' has an invalid format","Will be raised when an invalid variable name is used."

ERROR_QUERY_VARIABLE_REDECLARED,1511,"variable '%s' is assigned multiple times","Will be raised when a variable gets re-assigned in a query."

ERROR_QUERY_VARIABLE_NAME_UNKNOWN,1512,"unknown variable '%s'","Will be raised when an unknown variable is used or the variable is undefined the context it is used."

ERROR_QUERY_COLLECTION_LOCK_FAILED,1521,"unable to read-lock collection %s","Will be raised when a read lock on the collection cannot be acquired."

ERROR_QUERY_TOO_MANY_COLLECTIONS,1522,"too many collections/shards","Will be raised when the number of collections or shards in a query is beyond the allowed value."

ERROR_QUERY_DOCUMENT_ATTRIBUTE_REDECLARED,1530,"document attribute '%s' is assigned multiple times","Will be raised when a document attribute is re-assigned."

ERROR_QUERY_FUNCTION_NAME_UNKNOWN,1540,"usage of unknown function '%s()'","Will be raised when an undefined function is called."

ERROR_QUERY_FUNCTION_ARGUMENT_NUMBER_MISMATCH,1541,"invalid number of arguments for function '%s()', expected number of arguments: minimum: %d, maximum: %d","Will be raised when the number of arguments used in a function call does not match the expected number of arguments for the function."

ERROR_QUERY_FUNCTION_ARGUMENT_TYPE_MISMATCH,1542,"invalid argument type in call to function '%s()'","Will be raised when the type of an argument used in a function call does not match the expected argument type."

ERROR_QUERY_INVALID_REGEX,1543,"invalid regex value","Will be raised when an invalid regex argument value is used in a call to a function that expects a regex."

ERROR_QUERY_BIND_PARAMETERS_INVALID,1550,"invalid structure of bind parameters","Will be raised when the structure of bind parameters passed has an unexpected format."

ERROR_QUERY_BIND_PARAMETER_MISSING,1551,"no value specified for declared bind parameter '%s'","Will be raised when a bind parameter was declared in the query but the query is being executed with no value for that parameter."

ERROR_QUERY_BIND_PARAMETER_UNDECLARED,1552,"bind parameter '%s' was not declared in the query","Will be raised when a value gets specified for an undeclared bind parameter."

ERROR_QUERY_BIND_PARAMETER_TYPE,1553,"bind parameter '%s' has an invalid value or type","Will be raised when a bind parameter has an invalid value or type."

ERROR_QUERY_INVALID_LOGICAL_VALUE,1560,"invalid logical value","Will be raised when a non-boolean value is used in a logical operation."

ERROR_QUERY_INVALID_ARITHMETIC_VALUE,1561,"invalid arithmetic value","Will be raised when a non-numeric value is used in an arithmetic operation."

ERROR_QUERY_DIVISION_BY_ZERO,1562,"division by zero","Will be raised when there is an attempt to divide by zero."

ERROR_QUERY_ARRAY_EXPECTED,1563,"array expected","Will be raised when a non-array operand is used for an operation that expects an array argument operand."

ERROR_QUERY_FAIL_CALLED,1569,"FAIL(%s) called","Will be raised when the function FAIL() is called from inside a query."

ERROR_QUERY_GEO_INDEX_MISSING,1570,"no suitable geo index found for geo restriction on '%s'","Will be raised when a geo restriction was specified but no suitable geo index is found to resolve it."

ERROR_QUERY_FULLTEXT_INDEX_MISSING,1571,"no suitable fulltext index found for fulltext query on '%s'","Will be raised when a fulltext query is performed on a collection without a suitable fulltext index."

ERROR_QUERY_INVALID_DATE_VALUE,1572,"invalid date value","Will be raised when a value cannot be converted to a date."

ERROR_QUERY_MULTI_MODIFY,1573,"multi-modify query","Will be raised when an AQL query contains more than one data-modifying operation."

ERROR_QUERY_INVALID_AGGREGATE_EXPRESSION,1574,"invalid aggregate expression","Will be raised when an AQL query contains an invalid aggregate expression."

ERROR_QUERY_COMPILE_TIME_OPTIONS,1575,"query options must be readable at query compile time","Will be raised when an AQL data-modification query contains options that cannot be figured out at query compile time."

ERROR_QUERY_EXCEPTION_OPTIONS,1576,"query options expected","Will be raised when an AQL data-modification query contains an invalid options specification."

ERROR_QUERY_FORCED_INDEX_HINT_UNUSABLE,1577,"could not use forced index hint","Will be raised when forceIndexHint is specified, and the hint cannot be used to serve the query."

ERROR_QUERY_DISALLOWED_DYNAMIC_CALL,1578,"disallowed dynamic call to '%s'","Will be raised when a dynamic function call is made to a function that cannot be called dynamically."

ERROR_QUERY_ACCESS_AFTER_MODIFICATION,1579,"access after data-modification by %s","Will be raised when collection data are accessed after a data-modification operation."



################################################################################

## AQL user function errors

################################################################################



ERROR_QUERY_FUNCTION_INVALID_NAME,1580,"invalid user function name","Will be raised when a user function with an invalid name is registered."

ERROR_QUERY_FUNCTION_INVALID_CODE,1581,"invalid user function code","Will be raised when a user function is registered with invalid code."

ERROR_QUERY_FUNCTION_NOT_FOUND,1582,"user function '%s()' not found","Will be raised when a user function is accessed but not found."

ERROR_QUERY_FUNCTION_RUNTIME_ERROR,1583,"user function runtime error: %s","Will be raised when a user function throws a runtime exception."



################################################################################

## AQL query registry errors

################################################################################



ERROR_QUERY_BAD_JSON_PLAN,1590,"bad execution plan JSON","Will be raised when an HTTP API for a query got an invalid JSON object."

ERROR_QUERY_NOT_FOUND,1591,"query ID not found","Will be raised when an Id of a query is not found by the HTTP API."



ERROR_QUERY_USER_ASSERT,1593,"%s","Will be raised if and user provided expression fails to evaluate to true"

ERROR_QUERY_USER_WARN,1594,"%s","Will be raised if and user provided expression fails to evaluate to true"



################################################################################

## ArangoDB cursor errors

################################################################################



ERROR_CURSOR_NOT_FOUND,1600,"cursor not found","Will be raised when a cursor is requested via its id but a cursor with that id cannot be found."

ERROR_CURSOR_BUSY,1601,"cursor is busy","Will be raised when a cursor is requested via its id but a concurrent request is still using the cursor."



################################################################################

## ArangoDB schema validation errors

################################################################################



ERROR_VALIDATION_FAILED,1620,"schema validation failed","Will be raised when a document does not pass schema validation."

ERROR_VALIDATION_BAD_PARAMETER,1621,"invalid schema validation parameter","Will be raised when the schema description is invalid."



################################################################################

## ArangoDB transaction errors

################################################################################



ERROR_TRANSACTION_INTERNAL,1650,"internal transaction error","Will be raised when a wrong usage of transactions is detected. this is an internal error and indicates a bug in ArangoDB."

ERROR_TRANSACTION_NESTED,1651,"nested transactions detected","Will be raised when transactions are nested."

ERROR_TRANSACTION_UNREGISTERED_COLLECTION,1652,"unregistered collection used in transaction","Will be raised when a collection is used in the middle of a transaction but was not registered at transaction start."

ERROR_TRANSACTION_DISALLOWED_OPERATION,1653,"disallowed operation inside transaction","Will be raised when a disallowed operation is carried out in a transaction."

ERROR_TRANSACTION_ABORTED,1654,"transaction aborted","Will be raised when a transaction was aborted."

ERROR_TRANSACTION_NOT_FOUND,1655,"transaction not found","Will be raised when a transaction was not found."



################################################################################

## User management errors

################################################################################



ERROR_USER_INVALID_NAME,1700,"invalid user name","Will be raised when an invalid user name is used."

ERROR_USER_DUPLICATE,1702,"duplicate user","Will be raised when a user name already exists."

ERROR_USER_NOT_FOUND,1703,"user not found","Will be raised when a user name is updated that does not exist."

ERROR_USER_EXTERNAL,1705,"user is external","Will be raised when the user is authenticated by an external server."



###############################################################################

## Service management errors (legacy)

## These have been superseded by the Foxx management errors in public APIs.

################################################################################



ERROR_SERVICE_DOWNLOAD_FAILED,1752,"service download failed","Will be raised when a service download from the central repository failed."

ERROR_SERVICE_UPLOAD_FAILED,1753,"service upload failed","Will be raised when a service upload from the client to the ArangoDB server failed."



################################################################################

## LDAP errors

################################################################################



ERROR_LDAP_CANNOT_INIT,1800,"cannot init a LDAP connection","can not init a LDAP connection"

ERROR_LDAP_CANNOT_SET_OPTION,1801,"cannot set a LDAP option","can not set a LDAP option"

ERROR_LDAP_CANNOT_BIND,1802,"cannot bind to a LDAP server","can not bind to a LDAP server"

ERROR_LDAP_CANNOT_UNBIND,1803,"cannot unbind from a LDAP server","can not unbind from a LDAP server"

ERROR_LDAP_CANNOT_SEARCH,1804,"cannot issue a LDAP search","can not search the LDAP server"

ERROR_LDAP_CANNOT_START_TLS,1805,"cannot start a TLS LDAP session","can not star a TLS LDAP session"

ERROR_LDAP_FOUND_NO_OBJECTS,1806,"LDAP didn't found any objects","LDAP didn't found any objects with the specified search query"

ERROR_LDAP_NOT_ONE_USER_FOUND,1807,"LDAP found zero ore more than one user","LDAP found zero ore more than one user"

ERROR_LDAP_USER_NOT_IDENTIFIED,1808,"LDAP found a user, but its not the desired one","LDAP found a user, but its not the desired one"

ERROR_LDAP_OPERATIONS_ERROR,1809,"LDAP returned an operations error","LDAP returned an operations error"

ERROR_LDAP_INVALID_MODE,1820,"invalid ldap mode","cant distinguish a valid mode for provided LDAP configuration"



################################################################################

## Task errors

################################################################################



ERROR_TASK_INVALID_ID,1850,"invalid task id","Will be raised when a task is created with an invalid id."

ERROR_TASK_DUPLICATE_ID,1851,"duplicate task id","Will be raised when a task id is created with a duplicate id."

ERROR_TASK_NOT_FOUND,1852,"task not found","Will be raised when a task with the specified id could not be found."



################################################################################

## Graph / traversal errors

################################################################################



ERROR_GRAPH_INVALID_GRAPH,1901,"invalid graph","Will be raised when an invalid name is passed to the server."

ERROR_GRAPH_COULD_NOT_CREATE_GRAPH,1902,"could not create graph","Will be raised when an invalid name, vertices or edges is passed to the server."

ERROR_GRAPH_INVALID_VERTEX,1903,"invalid vertex","Will be raised when an invalid vertex id is passed to the server."

ERROR_GRAPH_COULD_NOT_CREATE_VERTEX,1904,"could not create vertex","Will be raised when the vertex could not be created."

ERROR_GRAPH_COULD_NOT_CHANGE_VERTEX,1905,"could not change vertex","Will be raised when the vertex could not be changed."

ERROR_GRAPH_INVALID_EDGE,1906,"invalid edge","Will be raised when an invalid edge id is passed to the server."

ERROR_GRAPH_COULD_NOT_CREATE_EDGE,1907,"could not create edge","Will be raised when the edge could not be created."

ERROR_GRAPH_COULD_NOT_CHANGE_EDGE,1908,"could not change edge","Will be raised when the edge could not be changed."

ERROR_GRAPH_TOO_MANY_ITERATIONS,1909,"too many iterations - try increasing the value of 'maxIterations'","Will be raised when too many iterations are done in a graph traversal."

ERROR_GRAPH_INVALID_FILTER_RESULT,1910,"invalid filter result","Will be raised when an invalid filter result is returned in a graph traversal."

ERROR_GRAPH_COLLECTION_MULTI_USE,1920,"multi use of edge collection in edge def","an edge collection may only be used once in one edge definition of a graph.",

ERROR_GRAPH_COLLECTION_USE_IN_MULTI_GRAPHS,1921,"edge collection already used in edge def"," is already used by another graph in a different edge definition.",

ERROR_GRAPH_CREATE_MISSING_NAME,1922,"missing graph name","a graph name is required to create or drop a graph.",

ERROR_GRAPH_CREATE_MALFORMED_EDGE_DEFINITION,1923,"malformed edge definition","the edge definition is malformed. It has to be an array of objects.",

ERROR_GRAPH_NOT_FOUND,1924,"graph '%s' not found","a graph with this name could not be found.",

ERROR_GRAPH_DUPLICATE,1925,"graph already exists","a graph with this name already exists.",

ERROR_GRAPH_VERTEX_COL_DOES_NOT_EXIST,1926,"vertex collection does not exist or is not part of the graph","the specified vertex collection does not exist or is not part of the graph.",

ERROR_GRAPH_WRONG_COLLECTION_TYPE_VERTEX,1927,"collection not a vertex collection","the collection is not a vertex collection.",

ERROR_GRAPH_NOT_IN_ORPHAN_COLLECTION,1928,"collection is not in list of orphan collections","Vertex collection not in list of orphan collections of the graph.",

ERROR_GRAPH_COLLECTION_USED_IN_EDGE_DEF,1929,"collection already used in edge def","The collection is already used in an edge definition of the graph.",

ERROR_GRAPH_EDGE_COLLECTION_NOT_USED,1930,"edge collection not used in graph","The edge collection is not used in any edge definition of the graph.",

ERROR_GRAPH_NO_GRAPH_COLLECTION,1932,"collection _graphs does not exist","collection _graphs does not exist.",

ERROR_GRAPH_INVALID_EXAMPLE_ARRAY_OBJECT_STRING,1933,"Invalid example type. Has to be String, Array or Object","Invalid example type. Has to be String, Array or Object.",

ERROR_GRAPH_INVALID_EXAMPLE_ARRAY_OBJECT,1934,"Invalid example type. Has to be Array or Object","Invalid example type. Has to be Array or Object.",

ERROR_GRAPH_INVALID_NUMBER_OF_ARGUMENTS,1935,"Invalid number of arguments. Expected: ","Invalid number of arguments. Expected: ",

ERROR_GRAPH_INVALID_PARAMETER,1936,"Invalid parameter type.","Invalid parameter type.",

ERROR_GRAPH_INVALID_ID,1937,"Invalid id","Invalid id",

ERROR_GRAPH_COLLECTION_USED_IN_ORPHANS,1938,"collection used in orphans","The collection is already used in the orphans of the graph.",

ERROR_GRAPH_EDGE_COL_DOES_NOT_EXIST,1939,"edge collection does not exist or is not part of the graph","the specified edge collection does not exist or is not part of the graph.",

ERROR_GRAPH_EMPTY,1940,"empty graph","The requested graph has no edge collections."

ERROR_GRAPH_INTERNAL_DATA_CORRUPT,1941,"internal graph data corrupt","The _graphs collection contains invalid data."

ERROR_GRAPH_INTERNAL_EDGE_COLLECTION_ALREADY_SET,1942,"edge collection already set","Tried to add an edge collection which is already defined."

ERROR_GRAPH_CREATE_MALFORMED_ORPHAN_LIST,1943,"malformed orphan list","the orphan list argument is malformed. It has to be an array of strings."

ERROR_GRAPH_EDGE_DEFINITION_IS_DOCUMENT,1944,"edge definition collection is a document collection","the collection used as a relation is existing, but is a document collection, it cannot be used here."

ERROR_GRAPH_COLLECTION_IS_INITIAL,1945,"initial collection is not allowed to be removed manually","the collection is used as the initial collection of this graph and is not allowed to be removed manually."

ERROR_GRAPH_NO_INITIAL_COLLECTION,1946,"no valid initial collection found","during the graph creation process no collection could be selected as the needed initial collection. Happens if a distributeShardsLike or replicationFactor mismatch was found."

ERROR_GRAPH_REFERENCED_VERTEX_COLLECTION_NOT_USED,1947,"referenced vertex collection is not part of the graph","the _from or _to collection specified for the edge refers to a vertex collection which is not used in any edge definition of the graph."



################################################################################

## Session errors

################################################################################



ERROR_SESSION_UNKNOWN,1950,"unknown session","Will be raised when an invalid/unknown session id is passed to the server."

ERROR_SESSION_EXPIRED,1951,"session expired","Will be raised when a session is expired."



################################################################################

## Simple Client errors

################################################################################



ERROR_SIMPLE_CLIENT_UNKNOWN_ERROR,2000,"unknown client error","This error should not happen."

ERROR_SIMPLE_CLIENT_COULD_NOT_CONNECT,2001,"could not connect to server","Will be raised when the client could not connect to the server."

ERROR_SIMPLE_CLIENT_COULD_NOT_WRITE,2002,"could not write to server","Will be raised when the client could not write data."

ERROR_SIMPLE_CLIENT_COULD_NOT_READ,2003,"could not read from server","Will be raised when the client could not read data."



ERROR_WAS_ERLAUBE,2019,"was erlaube?!","Will be raised if was erlaube?!"



################################################################################

## internal AQL errors

################################################################################



ERROR_INTERNAL_AQL,2200,"General internal AQL error","Internal error during AQL execution"

ERROR_WROTE_TOO_FEW_OUTPUT_REGISTERS,2201,"An AQL block wrote too few output registers","An AQL block wrote too few output registers"

ERROR_WROTE_TOO_MANY_OUTPUT_REGISTERS,2202,"An AQL block wrote too many output registers","An AQL block wrote too many output registers"

ERROR_WROTE_OUTPUT_REGISTER_TWICE,2203,"An AQL block wrote an output register twice","An AQL block wrote an output register twice"

ERROR_WROTE_IN_WRONG_REGISTER,2204,"An AQL block wrote in a register that is not its output","An AQL block wrote in a register that is not its output"

ERROR_INPUT_REGISTERS_NOT_COPIED,2205,"An AQL block did not copy its input registers","An AQL block did not copy its input registers"



################################################################################

## Foxx management errors

################################################################################



ERROR_MALFORMED_MANIFEST_FILE,3000,"failed to parse manifest file","The service manifest file is not well-formed JSON."

ERROR_INVALID_SERVICE_MANIFEST,3001,"manifest file is invalid","The service manifest contains invalid values."

ERROR_SERVICE_FILES_MISSING,3002,"service files missing","The service folder or bundle does not exist on this server."

ERROR_SERVICE_FILES_OUTDATED,3003,"service files outdated","The local service bundle does not match the checksum in the database."

ERROR_INVALID_FOXX_OPTIONS,3004,"service options are invalid","The service options contain invalid values."

ERROR_INVALID_MOUNTPOINT,3007,"invalid mountpath","The service mountpath contains invalid characters."

ERROR_SERVICE_NOT_FOUND,3009,"service not found","No service found at the given mountpath."

ERROR_SERVICE_NEEDS_CONFIGURATION,3010,"service needs configuration","The service is missing configuration or dependencies."

ERROR_SERVICE_MOUNTPOINT_CONFLICT,3011,"service already exists","A service already exists at the given mountpath."

ERROR_SERVICE_MANIFEST_NOT_FOUND,3012,"missing manifest file","The service directory does not contain a manifest file."

ERROR_SERVICE_OPTIONS_MALFORMED,3013,"failed to parse service options","The service options are not well-formed JSON."

ERROR_SERVICE_SOURCE_NOT_FOUND,3014,"source path not found","The source path does not match a file or directory."

ERROR_SERVICE_SOURCE_ERROR,3015,"error resolving source","The source path could not be resolved."

ERROR_SERVICE_UNKNOWN_SCRIPT,3016,"unknown script","The service does not have a script with this name."

ERROR_SERVICE_API_DISABLED,3099,"service api disabled","The API for managing Foxx services has been disabled on this server."



################################################################################

## JavaScript module loader errors

################################################################################



ERROR_MODULE_NOT_FOUND,3100,"cannot locate module","The module path could not be resolved."

ERROR_MODULE_SYNTAX_ERROR,3101,"syntax error in module","The module could not be parsed because of a syntax error."

ERROR_MODULE_FAILURE,3103,"failed to invoke module","Failed to invoke the module in its context."



################################################################################

## Enterprise Edition errors

################################################################################



ERROR_NO_SMART_COLLECTION,4000,"collection is not smart","The requested collection needs to be smart, but it ain't"

ERROR_NO_SMART_GRAPH_ATTRIBUTE,4001,"smart graph attribute not given","The given document does not have the SmartGraph attribute set."

ERROR_CANNOT_DROP_SMART_COLLECTION,4002,"cannot drop this smart collection","This smart collection cannot be dropped, it dictates sharding in the graph."

ERROR_KEY_MUST_BE_PREFIXED_WITH_SMART_GRAPH_ATTRIBUTE,4003,"in smart vertex collections _key must be prefixed with the value of the smart graph attribute","In a smart vertex collection _key must be prefixed with the value of the SmartGraph attribute."

ERROR_ILLEGAL_SMART_GRAPH_ATTRIBUTE,4004,"attribute cannot be used as smart graph attribute","The given smartGraph attribute is illegal and cannot be used for sharding. All system attributes are forbidden."

ERROR_SMART_GRAPH_ATTRIBUTE_MISMATCH,4005,"smart graph attribute mismatch","The SmartGraph attribute of the given collection does not match the SmartGraph attribute of the graph."

ERROR_INVALID_SMART_JOIN_ATTRIBUTE,4006,"invalid smart join attribute declaration","Will be raised when the smartJoinAttribute declaration is invalid."

ERROR_KEY_MUST_BE_PREFIXED_WITH_SMART_JOIN_ATTRIBUTE,4007,"shard key value must be prefixed with the value of the smart join attribute","when using smartJoinAttribute for a collection, the shard key value must be prefixed with the value of the SmartJoin attribute."

ERROR_NO_SMART_JOIN_ATTRIBUTE,4008,"smart join attribute not given or invalid","The given document does not have the required SmartJoin attribute set or it has an invalid value."

ERROR_CLUSTER_MUST_NOT_CHANGE_SMART_JOIN_ATTRIBUTE,4009,"must not change the value of the smartJoinAttribute","Will be raised if there is an attempt to update the value of the smartJoinAttribute."

ERROR_INVALID_DISJOINT_SMART_EDGE,4010,"non disjoint edge found","Will be raised if there is an attempt to create an edge between separated graph components."



################################################################################

## Cluster repair errors

################################################################################



ERROR_CLUSTER_REPAIRS_FAILED,5000,"error during cluster repairs","General error during cluster repairs"

ERROR_CLUSTER_REPAIRS_NOT_ENOUGH_HEALTHY,5001,"not enough (healthy) db servers","Will be raised when, during repairDistributeShardsLike, there must be a free DB-Server to move a shard, but there is no candidate or none is healthy."

ERROR_CLUSTER_REPAIRS_REPLICATION_FACTOR_VIOLATED,5002,"replication factor violated during cluster repairs","Will be raised on various inconsistencies regarding the replication factor"

ERROR_CLUSTER_REPAIRS_NO_DBSERVERS,5003,"no dbservers during cluster repairs","Will be raised if a collection that is fixed has some shard without DB-Servers"

ERROR_CLUSTER_REPAIRS_MISMATCHING_LEADERS,5004,"mismatching leaders during cluster repairs","Will be raised if a shard in collection and its prototype in the corresponding distributeShardsLike collection have mismatching leaders (when they should already have been fixed)"

ERROR_CLUSTER_REPAIRS_MISMATCHING_FOLLOWERS,5005,"mismatching followers during cluster repairs","Will be raised if a shard in collection and its prototype in the corresponding distributeShardsLike collection don't have the same followers (when they should already have been adjusted)"

ERROR_CLUSTER_REPAIRS_INCONSISTENT_ATTRIBUTES,5006,"inconsistent attributes during cluster repairs","Will be raised if a collection that is fixed does (not) have distributeShardsLike when it is expected, or does (not) have repairingDistributeShardsLike when it is expected"

ERROR_CLUSTER_REPAIRS_MISMATCHING_SHARDS,5007,"mismatching shards during cluster repairs","Will be raised if in a collection and its distributeShardsLike prototype collection some shard and its prototype have an unequal number of DB-Servers"

ERROR_CLUSTER_REPAIRS_JOB_FAILED,5008,"move shard job failed during cluster repairs","Will be raised if a move shard job in the Agency failed during cluster repairs"

ERROR_CLUSTER_REPAIRS_JOB_DISAPPEARED,5009,"move shard job disappeared during cluster repairs","Will be raised if a move shard job in the Agency cannot be found anymore before it finished"

ERROR_CLUSTER_REPAIRS_OPERATION_FAILED,5010,"agency transaction failed during cluster repairs","Will be raised if an agency transaction failed during either sending or executing it."



################################################################################

## Agency errors

################################################################################



ERROR_AGENCY_INFORM_MUST_BE_OBJECT,20011,"Inform message must be an object.","The inform message in the Agency must be an object."

ERROR_AGENCY_INFORM_MUST_CONTAIN_TERM,20012,"Inform message must contain uint parameter 'term'","The inform message in the Agency must contain a uint parameter 'term'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_ID,20013,"Inform message must contain string parameter 'id'","The inform message in the Agency must contain a string parameter 'id'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_ACTIVE,20014,"Inform message must contain array 'active'","The inform message in the Agency must contain an array 'active'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_POOL,20015,"Inform message must contain object 'pool'","The inform message in the Agency must contain an object 'pool'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_MIN_PING,20016,"Inform message must contain object 'min ping'","The inform message in the Agency must contain an object 'min ping'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_MAX_PING,20017,"Inform message must contain object 'max ping'","The inform message in the Agency must contain an object 'max ping'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_TIMEOUT_MULT,20018,"Inform message must contain object 'timeoutMult'","The inform message in the Agency must contain an object 'timeoutMult'."

ERROR_AGENCY_CANNOT_REBUILD_DBS,20021,"Cannot rebuild readDB and spearHead","Will be raised if the readDB or the spearHead cannot be rebuilt from the replicated log."



################################################################################

## Supervision errors

################################################################################



ERROR_SUPERVISION_GENERAL_FAILURE,20501,"general supervision failure","General supervision failure."



################################################################################

## Dispatcher errors

################################################################################



ERROR_QUEUE_FULL,21003,"named queue is full","Will be returned if a queue with this name is full."



################################################################################

## Maintenance errors

################################################################################



ERROR_ACTION_OPERATION_UNABORTABLE,6002,"this maintenance action cannot be stopped","This maintenance action cannot be stopped once it is started"

ERROR_ACTION_UNFINISHED,6003,"maintenance action still processing","This maintenance action is still processing"

ERROR_NO_SUCH_ACTION,6004,"no such maintenance action","No such maintenance action exists"



################################################################################

## Backup/Restore errors

################################################################################



ERROR_HOT_BACKUP_INTERNAL,7001,"internal hot backup error","Failed to create hot backup set"

ERROR_HOT_RESTORE_INTERNAL,7002,"internal hot restore error","Failed to restore to hot backup set"

ERROR_BACKUP_TOPOLOGY,7003,"backup does not match this topology","The hot backup set cannot be restored on non matching cluster topology"

ERROR_NO_SPACE_LEFT_ON_DEVICE,7004,"no space left on device","No space left on device"

ERROR_FAILED_TO_UPLOAD_BACKUP,7005,"failed to upload hot backup set to remote target","Failed to upload hot backup set to remote target"

ERROR_FAILED_TO_DOWNLOAD_BACKUP,7006,"failed to download hot backup set from remote source","Failed to download hot backup set from remote source"

ERROR_NO_SUCH_HOT_BACKUP,7007,"no such hot backup set can be found","Cannot find a hot backup set with this Id"

ERROR_REMOTE_REPOSITORY_CONFIG_BAD,7008,"remote hotback repository configuration error","The configuration given for upload or download operation to/from remote hot backup repositories is wrong."

ERROR_LOCAL_LOCK_FAILED,7009,"some db servers cannot be reached for transaction locks","Some of the DB-Servers cannot be reached for transaction locks."

ERROR_LOCAL_LOCK_RETRY,7010,"some db servers cannot be reached for transaction locks","Some of the DB-Servers cannot be reached for transaction locks."

ERROR_HOT_BACKUP_CONFLICT,7011,"hot backup conflict","Conflict of multiple hot backup processes."

ERROR_HOT_BACKUP_DBSERVERS_AWOL,7012,"hot backup not all db servers reachable","One or more DB-Servers could not be reached for hot backup inquiry"



################################################################################

## Plan Analyzers errors

################################################################################

ERROR_CLUSTER_COULD_NOT_MODIFY_ANALYZERS_IN_PLAN,7021,"analyzers in plan could not be modified","Plan could not be modified while creating or deleting Analyzers revision"

@endDocuBlock 

<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionDrop


<div class="example-container" id="collectionDrop_container">
<div id="collectionDrop_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76157</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.drop();
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">76157</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionDropSystem


<div class="example-container" id="collectionDropSystem_container">
<div id="collectionDropSystem_long">
<pre>
arangosh&gt; col = db._example;
[ArangoCollection <span class="hljs-number">76164</span>, <span class="hljs-string">&quot;_example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.drop({ <span class="hljs-attr">isSystem</span>: <span class="hljs-literal">true</span> });
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">76164</span>, <span class="hljs-string">&quot;_example&quot;</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDropSystem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionTruncate


<div class="example-container" id="collectionTruncate_container">
<div id="collectionTruncate_long" style="display: none;">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76318</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.save({ <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76323&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76323&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZYW---&quot;</span> 
}
arangosh&gt; col.count();
<span class="hljs-number">1</span>
arangosh&gt; col.truncate();
arangosh&gt; col.count();
<span class="hljs-number">0</span>
</pre>
<div id="collectionTruncate_container_collapse" onclick="$('#collectionTruncate_long').hide(); $('#collectionTruncate_short').show(); window.location.hash='collectionTruncate_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionTruncate_short" onclick="$('#collectionTruncate_short').hide(); $('#collectionTruncate_long').show();">
<pre>
arangosh&gt; col = db.example;
arangosh&gt; col.save({ <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> });
arangosh&gt; col.count();
arangosh&gt; col.truncate();
arangosh&gt; col.count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionTruncate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionFigures


<div class="example-container" id="collectionFigures_container">
<div id="collectionFigures_long" style="display: none;">
<pre>
arangosh&gt; db.demo.figures()
{ 
  <span class="hljs-string">&quot;indexes&quot;</span> : { 
    <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;documentsSize&quot;</span> : <span class="hljs-number">16452</span>, 
  <span class="hljs-string">&quot;cacheInUse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cacheSize&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;cacheUsage&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="collectionFigures_container_collapse" onclick="$('#collectionFigures_long').hide(); $('#collectionFigures_short').show(); window.location.hash='collectionFigures_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFigures_short" onclick="$('#collectionFigures_short').hide(); $('#collectionFigures_long').show();">
<pre>
arangosh&gt; db.demo.figures()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFigures


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionFiguresDetails


<div class="example-container" id="collectionFiguresDetails_container">
<div id="collectionFiguresDetails_long" style="display: none;">
<pre>
arangosh&gt; db.demo.figures(<span class="hljs-literal">true</span>)
{ 
  <span class="hljs-string">&quot;indexes&quot;</span> : { 
    <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;documentsSize&quot;</span> : <span class="hljs-number">4702</span>, 
  <span class="hljs-string">&quot;cacheInUse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cacheSize&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;cacheUsage&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;engine&quot;</span> : { 
    <span class="hljs-string">&quot;documents&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;indexes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span> 
      } 
    ] 
  } 
}
</pre>
<div id="collectionFiguresDetails_container_collapse" onclick="$('#collectionFiguresDetails_long').hide(); $('#collectionFiguresDetails_short').show(); window.location.hash='collectionFiguresDetails_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFiguresDetails_short" onclick="$('#collectionFiguresDetails_short').hide(); $('#collectionFiguresDetails_long').show();">
<pre>
arangosh&gt; db.demo.figures(<span class="hljs-literal">true</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFiguresDetails


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionLoad


<div class="example-container" id="collectionLoad_container">
<div id="collectionLoad_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76245</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.load();
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">76245</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionLoad


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline CollectionUnload


<div class="example-container" id="CollectionUnload_container">
<div id="CollectionUnload_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">65565</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.unload();
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">65565</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status unloaded)]
</pre>
</div>
</div>

    @endDocuBlock CollectionUnload


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionRename


<div class="example-container" id="collectionRename_container">
<div id="collectionRename_long">
<pre>
arangosh&gt; c = db.example;
[ArangoCollection <span class="hljs-number">76309</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; c.rename(<span class="hljs-string">&quot;better-example&quot;</span>);
arangosh&gt; c;
[ArangoCollection <span class="hljs-number">76309</span>, <span class="hljs-string">&quot;better-example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionRename


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline collectionGetIndexes


<div class="example-container" id="collectionGetIndexes_container">
<div id="collectionGetIndexes_long" style="display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [
........&gt; <span class="hljs-string">&quot;attribute&quot;</span>, <span class="hljs-string">&quot;secondAttribute.subAttribute&quot;</span>] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;attribute&quot;</span>, 
    <span class="hljs-string">&quot;secondAttribute.subAttribute&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76238&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239806902272&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.getIndexes();
[ 
  { 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;_key&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/0&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;attribute&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76230&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239803756544&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;uniqueAttribute&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76234&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239804805120&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;attribute&quot;</span>, 
      <span class="hljs-string">&quot;secondAttribute.subAttribute&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76238&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239806902272&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
  } 
]
</pre>
<div id="collectionGetIndexes_container_collapse" onclick="$('#collectionGetIndexes_long').hide(); $('#collectionGetIndexes_short').show(); window.location.hash='collectionGetIndexes_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionGetIndexes_short" onclick="$('#collectionGetIndexes_short').hide(); $('#collectionGetIndexes_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [
........&gt; <span class="hljs-string">&quot;attribute&quot;</span>, <span class="hljs-string">&quot;secondAttribute.subAttribute&quot;</span>] });
arangosh&gt; db.test.getIndexes();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionGetIndexes


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline collectionEnsureIndex


<div class="example-container" id="collectionEnsureIndex_container">
<div id="collectionEnsureIndex_long" style="display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span> ], <span class="hljs-attr">sparse</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76175&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239726161920&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76179&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239729307648&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="collectionEnsureIndex_container_collapse" onclick="$('#collectionEnsureIndex_long').hide(); $('#collectionEnsureIndex_short').show(); window.location.hash='collectionEnsureIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionEnsureIndex_short" onclick="$('#collectionEnsureIndex_short').hide(); $('#collectionEnsureIndex_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span> ], <span class="hljs-attr">sparse</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionEnsureIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline col_dropIndex


<div class="example-container" id="col_dropIndex_container">
<div id="col_dropIndex_long" style="display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/76020&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239538466816&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
[ 
  { 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;_key&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/0&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;a&quot;</span>, 
      <span class="hljs-string">&quot;b&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/76020&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239538466816&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
  } 
]
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">0</span>])
<span class="hljs-literal">false</span>
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
<span class="hljs-literal">true</span>
arangosh&gt; indexInfo = db.example.getIndexes();
[ 
  { 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;_key&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/0&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  } 
]
</pre>
<div id="col_dropIndex_container_collapse" onclick="$('#col_dropIndex_long').hide(); $('#col_dropIndex_short').show(); window.location.hash='col_dropIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="col_dropIndex_short" onclick="$('#col_dropIndex_short').hide(); $('#col_dropIndex_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>] });
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">0</span>])
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
arangosh&gt; indexInfo = db.example.getIndexes();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock col_dropIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline LoadIndexesIntoMemory


<div class="example-container" id="loadIndexesIntoMemory_container">
<div id="loadIndexesIntoMemory_long">
<pre>
arangosh&gt; db.example.loadIndexesIntoMemory();
{ 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>

    @endDocuBlock LoadIndexesIntoMemory


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline IndexHandle


<div class="example-container" id="IndexHandle_container">
<div id="IndexHandle_long" style="display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/70618&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769186504638464&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
arangosh&gt; indexInfo;
[ 
  <span class="hljs-string">&quot;example/0&quot;</span>, 
  <span class="hljs-string">&quot;example/70618&quot;</span> 
]
arangosh&gt; db._index(indexInfo[<span class="hljs-number">0</span>])
{ 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;_key&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/0&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
arangosh&gt; db._index(indexInfo[<span class="hljs-number">1</span>])
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/70618&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769186504638464&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="IndexHandle_container_collapse" onclick="$('#IndexHandle_long').hide(); $('#IndexHandle_short').show(); window.location.hash='IndexHandle_container';" class="example_show_button">Hide execution results</div></div>
<div id="IndexHandle_short" onclick="$('#IndexHandle_short').hide(); $('#IndexHandle_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
arangosh&gt; indexInfo;
arangosh&gt; db._index(indexInfo[<span class="hljs-number">0</span>])
arangosh&gt; db._index(indexInfo[<span class="hljs-number">1</span>])
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock IndexHandle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline dropIndex


<div class="example-container" id="dropIndex_container">
<div id="dropIndex_long" style="display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/76874&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240432902144&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
[ 
  { 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;_key&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/0&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;a&quot;</span>, 
      <span class="hljs-string">&quot;b&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/76874&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240432902144&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
  } 
]
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">0</span>])
<span class="hljs-literal">false</span>
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
<span class="hljs-literal">true</span>
arangosh&gt; indexInfo = db.example.getIndexes();
[ 
  { 
    <span class="hljs-string">&quot;fields&quot;</span> : [ 
      <span class="hljs-string">&quot;_key&quot;</span> 
    ], 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/0&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
    <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
  } 
]
</pre>
<div id="dropIndex_container_collapse" onclick="$('#dropIndex_long').hide(); $('#dropIndex_short').show(); window.location.hash='dropIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="dropIndex_short" onclick="$('#dropIndex_short').hide(); $('#dropIndex_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">0</span>])
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
arangosh&gt; indexInfo = db.example.getIndexes();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock dropIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline IndexVerify


<div class="example-container" id="IndexVerify_container">
<div id="IndexVerify_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> explain = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).explain;
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/70632&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769186526658560&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; explain(<span class="hljs-string">&quot;FOR doc IN example FILTER doc.a &lt; 23 RETURN doc&quot;</span>, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">47</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">true</span>):
 FOR doc IN example FILTER doc.a &lt; <span class="hljs-number">23</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">6</span>   IndexNode          <span class="hljs-number">0</span>     - FOR doc IN example   <span class="hljs-comment">/* skiplist index scan */</span>    
  <span class="hljs-number">5</span>   ReturnNode         <span class="hljs-number">0</span>       - RETURN doc

Indexes used:
 By   Name                      Type       Collection   Unique   Sparse   Selectivity   Fields         Ranges
  <span class="hljs-number">6</span>   idx_1728769186526658560   skiplist   example      <span class="hljs-literal">false</span>    <span class="hljs-literal">false</span>       <span class="hljs-number">100.00</span> %   [ <span class="hljs-string">`a`</span>, <span class="hljs-string">`b`</span> ]   (doc.<span class="hljs-string">`a`</span> &lt; <span class="hljs-number">23</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   use-indexes
  <span class="hljs-number">2</span>   remove-filter-covered-by-index
  <span class="hljs-number">3</span>   remove-unnecessary-calculations-<span class="hljs-number">2</span>


</pre>
<div id="IndexVerify_container_collapse" onclick="$('#IndexVerify_long').hide(); $('#IndexVerify_short').show(); window.location.hash='IndexVerify_container';" class="example_show_button">Hide execution results</div></div>
<div id="IndexVerify_short" onclick="$('#IndexVerify_short').hide(); $('#IndexVerify_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> explain = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).explain;
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
arangosh&gt; explain(<span class="hljs-string">&quot;FOR doc IN example FILTER doc.a &lt; 23 RETURN doc&quot;</span>, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock IndexVerify


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-examples.md -->
    @startDocuBlockInline shellUseDB


<div class="example-container" id="shellUseDB_container">
<div id="shellUseDB_long">
<pre>
arangosh&gt; db._createDatabase(<span class="hljs-string">&quot;myapp&quot;</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._useDatabase(<span class="hljs-string">&quot;myapp&quot;</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._useDatabase(<span class="hljs-string">&quot;_system&quot;</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._dropDatabase(<span class="hljs-string">&quot;myapp&quot;</span>);
<span class="hljs-literal">true</span>
</pre>
</div>
</div>

    @endDocuBlock shellUseDB


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
    @startDocuBlockInline satelliteGraphCreate1_cluster


<div class="example-container" id="satelliteGraphCreate1_cluster_container">
<div id="satelliteGraphCreate1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
arangosh&gt; satelliteGraphModule._graph(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
{[SatelliteGraph] 
}
</pre>
</div>
</div>

    @endDocuBlock satelliteGraphCreate1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
    @startDocuBlockInline satelliteGraphCreate2_cluster


<div class="example-container" id="satelliteGraphCreate2_cluster_container">
<div id="satelliteGraphCreate2_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph = satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;aVertexCollection&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock satelliteGraphCreate2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
    @startDocuBlockInline satelliteGraphCreate3_cluster


<div class="example-container" id="satelliteGraphCreate3_cluster_container">
<div id="satelliteGraphCreate3_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph = satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = satelliteGraphModule._relation(<span class="hljs-string">&quot;isFriend&quot;</span>, [<span class="hljs-string">&quot;person&quot;</span>], [<span class="hljs-string">&quot;person&quot;</span>]);
arangosh&gt; graph._extendEdgeDefinitions(relation);
</pre>
</div>
</div>

    @endDocuBlock satelliteGraphCreate3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
        @startDocuBlockInline satelliteGraphPrototype1_cluster


<div class="example-container" id="satelliteGraphPrototype1_cluster_container">
<div id="satelliteGraphPrototype1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
{[SatelliteGraph] 
}
</pre>
</div>
</div>

        @endDocuBlock satelliteGraphPrototype1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
        @startDocuBlockInline satelliteGraphPrototype2_cluster


<div class="example-container" id="satelliteGraphPrototype2_cluster_container">
<div id="satelliteGraphPrototype2_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myPrototypeColl&quot;</span>);
</pre>
</div>
</div>

        @endDocuBlock satelliteGraphPrototype2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
        @startDocuBlockInline satelliteGraphPrototype3_cluster


<div class="example-container" id="satelliteGraphPrototype3_cluster_container">
<div id="satelliteGraphPrototype3_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = satelliteGraphModule._relation(<span class="hljs-string">&quot;isFriend&quot;</span>, [<span class="hljs-string">&quot;person&quot;</span>], [<span class="hljs-string">&quot;person&quot;</span>]);
arangosh&gt; graph._extendEdgeDefinitions(relation);
</pre>
</div>
</div>

        @endDocuBlock satelliteGraphPrototype3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
        @startDocuBlockInline satelliteGraphGeneralGraph1_cluster


<div class="example-container" id="satelliteGraphGeneralGraph1_cluster_container">
<div id="satelliteGraphGeneralGraph1_cluster_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; graphModule._create(<span class="hljs-string">&quot;normalGraph&quot;</span>, [ graphModule._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>) ], [], {});
{[Graph] 
  <span class="hljs-string">&quot;edges&quot;</span> : [ArangoCollection <span class="hljs-number">2010074</span>, <span class="hljs-string">&quot;edges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010073</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
arangosh&gt; satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>, [ satelliteGraphModule._relation(<span class="hljs-string">&quot;satEdges&quot;</span>, <span class="hljs-string">&quot;satVertices&quot;</span>, <span class="hljs-string">&quot;satVertices&quot;</span>) ], [], {});
{[SatelliteGraph] 
  <span class="hljs-string">&quot;satEdges&quot;</span> : [ArangoCollection <span class="hljs-number">2010080</span>, <span class="hljs-string">&quot;satEdges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;satVertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010078</span>, <span class="hljs-string">&quot;satVertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
arangosh&gt; db._create(<span class="hljs-string">&quot;collection&quot;</span>, {<span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">8</span>});
[ArangoCollection <span class="hljs-number">2010082</span>, <span class="hljs-string">&quot;collection&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
<div id="satelliteGraphGeneralGraph1_cluster_container_collapse" onclick="$('#satelliteGraphGeneralGraph1_cluster_long').hide(); $('#satelliteGraphGeneralGraph1_cluster_short').show(); window.location.hash='satelliteGraphGeneralGraph1_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="satelliteGraphGeneralGraph1_cluster_short" onclick="$('#satelliteGraphGeneralGraph1_cluster_short').hide(); $('#satelliteGraphGeneralGraph1_cluster_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; graphModule._create(<span class="hljs-string">&quot;normalGraph&quot;</span>, [ graphModule._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>) ], [], {});
arangosh&gt; satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>, [ satelliteGraphModule._relation(<span class="hljs-string">&quot;satEdges&quot;</span>, <span class="hljs-string">&quot;satVertices&quot;</span>, <span class="hljs-string">&quot;satVertices&quot;</span>) ], [], {});
arangosh&gt; db._create(<span class="hljs-string">&quot;collection&quot;</span>, {<span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">8</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

        @endDocuBlock satelliteGraphGeneralGraph1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
        @startDocuBlockInline satelliteGraphGeneralGraph2_cluster


<div class="example-container" id="satelliteGraphGeneralGraph2_cluster_container">
<div id="satelliteGraphGeneralGraph2_cluster_long" style="display: none;">
<pre>
arangosh&gt; db._explain(`FOR doc in collection FOR v,e,p IN OUTBOUND &quot;vertices/start&quot; GRAPH &quot;normalGraph&quot; RETURN [doc,v,e,p]`, {}, {colors: false});
Query String (99 chars, cacheable: true):
 FOR doc in collection FOR v,e,p IN OUTBOUND &quot;vertices/start&quot; GRAPH &quot;normalGraph&quot; RETURN [doc,v,e,p]

Execution plan:
 Id   NodeType                  Site  Est.   Comment
  1   SingletonNode             DBS      1   * ROOT
  2   EnumerateCollectionNode   DBS      0     - FOR doc IN collection   /* full collection scan, 8 shard(s) */
  8   RemoteNode                COOR     0       - REMOTE
  9   GatherNode                COOR     0       - GATHER   /* unsorted */
  3   TraversalNode             COOR     1       - FOR v  /* vertex */, e  /* edge */, p  /* paths */ IN 1..1  /* min..maxPathDepth */ OUTBOUND &#x27;vertices/start&#x27; /* startnode */  GRAPH &#x27;normalGraph&#x27;
  4   CalculationNode           COOR     1         - LET #6 = [ doc, v, e, p ]   /* simple expression */   /* collections used: doc : collection */
  5   ReturnNode                COOR     1         - RETURN #6

Indexes used:
 By   Name   Type   Collection   Unique   Sparse   Selectivity   Fields        Ranges
  3   edge   edge   edges        false    false       100.00 %   [ `_from` ]   base OUTBOUND

Traversals on graphs:
 Id  Depth  Vertex collections  Edge collections  Options                                  Filter / Prune Conditions
 3   1..1   vertices            edges             uniqueVertices: none, uniqueEdges: path                           

Optimization rules applied:
 Id   RuleName
  1   scatter-in-cluster
  2   remove-unnecessary-remote-scatter


</pre>
<div id="satelliteGraphGeneralGraph2_cluster_container_collapse" onclick="$('#satelliteGraphGeneralGraph2_cluster_long').hide(); $('#satelliteGraphGeneralGraph2_cluster_short').show(); window.location.hash='satelliteGraphGeneralGraph2_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="satelliteGraphGeneralGraph2_cluster_short" onclick="$('#satelliteGraphGeneralGraph2_cluster_short').hide(); $('#satelliteGraphGeneralGraph2_cluster_long').show();">
<pre>
arangosh&gt; db._explain(`FOR doc in collection FOR v,e,p IN OUTBOUND &quot;vertices/start&quot; GRAPH &quot;normalGraph&quot; RETURN [doc,v,e,p]`, {}, {colors: false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

        @endDocuBlock satelliteGraphGeneralGraph2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-details.md -->
        @startDocuBlockInline satelliteGraphGeneralGraph3_cluster


<div class="example-container" id="satelliteGraphGeneralGraph3_cluster_container">
<div id="satelliteGraphGeneralGraph3_cluster_long" style="display: none;">
<pre>
arangosh&gt; db._explain(`FOR doc in collection FOR v,e,p IN OUTBOUND &quot;vertices/start&quot; GRAPH &quot;satelliteGraph&quot; RETURN [doc,v,e,p]`, {}, {colors: false});
Query String (102 chars, cacheable: true):
 FOR doc in collection FOR v,e,p IN OUTBOUND &quot;vertices/start&quot; GRAPH &quot;satelliteGraph&quot; RETURN 
 [doc,v,e,p]

Execution plan:
 Id   NodeType                  Site  Est.   Comment
  1   SingletonNode             DBS      1   * ROOT
  2   EnumerateCollectionNode   DBS      0     - FOR doc IN collection   /* full collection scan, 8 shard(s) */
 10   TraversalNode             DBS      1       - FOR v  /* vertex */, e  /* edge */, p  /* paths */ IN 1..1  /* min..maxPathDepth */ OUTBOUND &#x27;vertices/start&#x27; /* startnode */  satEdges /* local graph node, used as satellite */
  4   CalculationNode           DBS      1         - LET #6 = [ doc, v, e, p ]   /* simple expression */   /* collections used: doc : collection */
 13   RemoteNode                COOR     1         - REMOTE
 14   GatherNode                COOR     1         - GATHER   /* parallel, unsorted */
  5   ReturnNode                COOR     1         - RETURN #6

Indexes used:
 By   Name   Type   Collection   Unique   Sparse   Selectivity   Fields        Ranges
 10   edge   edge   satEdges     false    false       100.00 %   [ `_from` ]   base OUTBOUND

Traversals on graphs:
 Id  Depth  Vertex collections  Edge collections  Options                                  Filter / Prune Conditions
 10  1..1   satVertices         satEdges          uniqueVertices: none, uniqueEdges: path                           

Optimization rules applied:
 Id   RuleName
  1   scatter-in-cluster
  2   scatter-satellite-graphs
  3   remove-satellite-joins
  4   distribute-filtercalc-to-cluster
  5   remove-unnecessary-remote-scatter
  6   parallelize-gather


</pre>
<div id="satelliteGraphGeneralGraph3_cluster_container_collapse" onclick="$('#satelliteGraphGeneralGraph3_cluster_long').hide(); $('#satelliteGraphGeneralGraph3_cluster_short').show(); window.location.hash='satelliteGraphGeneralGraph3_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="satelliteGraphGeneralGraph3_cluster_short" onclick="$('#satelliteGraphGeneralGraph3_cluster_short').hide(); $('#satelliteGraphGeneralGraph3_cluster_long').show();">
<pre>
arangosh&gt; db._explain(`FOR doc in collection FOR v,e,p IN OUTBOUND &quot;vertices/start&quot; GRAPH &quot;satelliteGraph&quot; RETURN [doc,v,e,p]`, {}, {colors: false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

        @endDocuBlock satelliteGraphGeneralGraph3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-details.md -->
    @startDocuBlockInline shellPaste


<div class="example-container" id="shellPaste_container">
<div id="shellPaste_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++) {
........&gt;         <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).print(<span class="hljs-string">&quot;Hello world &quot;</span> + i + <span class="hljs-string">&quot;!\n&quot;</span>);
........&gt; }
Hello world <span class="hljs-number">0</span>!

Hello world <span class="hljs-number">1</span>!

Hello world <span class="hljs-number">2</span>!

Hello world <span class="hljs-number">3</span>!

Hello world <span class="hljs-number">4</span>!

Hello world <span class="hljs-number">5</span>!

Hello world <span class="hljs-number">6</span>!

Hello world <span class="hljs-number">7</span>!

Hello world <span class="hljs-number">8</span>!

Hello world <span class="hljs-number">9</span>!

</pre>
<div id="shellPaste_container_collapse" onclick="$('#shellPaste_long').hide(); $('#shellPaste_short').show(); window.location.hash='shellPaste_container';" class="example_show_button">Hide execution results</div></div>
<div id="shellPaste_short" onclick="$('#shellPaste_short').hide(); $('#shellPaste_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++) {
........&gt;         <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).print(<span class="hljs-string">&quot;Hello world &quot;</span> + i + <span class="hljs-string">&quot;!\n&quot;</span>);
........&gt; }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock shellPaste


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-details.md -->
    @startDocuBlockInline lastExpressionResult


<div class="example-container" id="lastExpressionResult_container">
<div id="lastExpressionResult_long">
<pre>
arangosh&gt; <span class="hljs-number">42</span> * <span class="hljs-number">23</span>
<span class="hljs-number">966</span>
</pre>
</div>
</div>

    @endDocuBlock lastExpressionResult


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-details.md -->
    @startDocuBlockInline lastExpressionResultCaptured


<div class="example-container" id="lastExpressionResultCaptured_container">
<div id="lastExpressionResultCaptured_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> calculationResult = <span class="hljs-number">42</span> * <span class="hljs-number">23</span>
</pre>
</div>
</div>

    @endDocuBlock lastExpressionResultCaptured


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-details.md -->
    @startDocuBlockInline printFunction


<div class="example-container" id="printFunction_container">
<div id="printFunction_long" style="display: none;">
<pre>
arangosh&gt; print({ <span class="hljs-attr">a</span>: <span class="hljs-string">&quot;123&quot;</span>, <span class="hljs-attr">b</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>], <span class="hljs-attr">c</span>: <span class="hljs-string">&quot;test&quot;</span> });
{ 
  <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-string">&quot;123&quot;</span>, 
  <span class="hljs-string">&quot;b&quot;</span> : [ 
    <span class="hljs-number">1</span>, 
    <span class="hljs-number">2</span>, 
    <span class="hljs-number">3</span> 
  ], 
  <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
</pre>
<div id="printFunction_container_collapse" onclick="$('#printFunction_long').hide(); $('#printFunction_short').show(); window.location.hash='printFunction_container';" class="example_show_button">Hide execution results</div></div>
<div id="printFunction_short" onclick="$('#printFunction_short').hide(); $('#printFunction_long').show();">
<pre>
arangosh&gt; print({ <span class="hljs-attr">a</span>: <span class="hljs-string">&quot;123&quot;</span>, <span class="hljs-attr">b</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>], <span class="hljs-attr">c</span>: <span class="hljs-string">&quot;test&quot;</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock printFunction


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-details.md -->
    @startDocuBlockInline usingToArray


<div class="example-container" id="usingToArray_container">
<div id="usingToArray_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;five&quot;</span>)
[ArangoCollection <span class="hljs-number">89688</span>, <span class="hljs-string">&quot;five&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.five.save({<span class="hljs-attr">value</span>:i})
arangosh&gt; db.five.toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89693&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89693&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfKO---&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89695&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89695&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfKO--A&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89697&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89697&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfKS---&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89699&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89699&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfKW---&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">3</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89701&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89701&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfKW--A&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">4</span> 
  } 
]
</pre>
<div id="usingToArray_container_collapse" onclick="$('#usingToArray_long').hide(); $('#usingToArray_short').show(); window.location.hash='usingToArray_container';" class="example_show_button">Hide execution results</div></div>
<div id="usingToArray_short" onclick="$('#usingToArray_short').hide(); $('#usingToArray_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;five&quot;</span>)
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.five.save({<span class="hljs-attr">value</span>:i})
arangosh&gt; db.five.toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock usingToArray


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/programs-arangosh-details.md -->
    @startDocuBlockInline shellHelp


<div class="example-container" id="shellHelp_container">
<div id="shellHelp_long" style="display: none;">
<pre>
arangosh&gt; db._help(); 

--------------------------- ArangoDatabase (db) help ---------------------------
Administration Functions:                                                 
  _help()                               <span class="hljs-built_in">this</span> help                         
  _flushCache()                         flush and refill collection cache 
                                                                          
Collection Functions:                                                     
  _collections()                        list all collections              
  _collection(&lt;name&gt;)                   get collection by identifier/name 
  _create(&lt;name&gt;, &lt;properties&gt;)         creates a <span class="hljs-keyword">new</span> collection          
  _createEdgeCollection(&lt;name&gt;)         creates a <span class="hljs-keyword">new</span> edge collection     
  _drop(&lt;name&gt;)                         <span class="hljs-keyword">delete</span> a collection               
                                                                          
Document Functions:                                                       
  _document(&lt;id&gt;)                       get <span class="hljs-built_in">document</span> by handle (_id)      
  _replace(&lt;id&gt;, &lt;data&gt;, &lt;overwrite&gt;)   overwrite <span class="hljs-built_in">document</span>                
  _update(&lt;id&gt;, &lt;data&gt;, &lt;overwrite&gt;,    partially update <span class="hljs-built_in">document</span>         
          &lt;keepNull&gt;)                                                     
  _remove(&lt;id&gt;)                         <span class="hljs-keyword">delete</span> <span class="hljs-built_in">document</span>                   
  _exists(&lt;id&gt;)                         checks whether a <span class="hljs-built_in">document</span> exists  
  _truncate()                           <span class="hljs-keyword">delete</span> all documents              
                                                                          
Database Management Functions:                                            
  _createDatabase(&lt;name&gt;)               creates a <span class="hljs-keyword">new</span> database            
  _dropDatabase(&lt;name&gt;)                 drops an existing database        
  _useDatabase(&lt;name&gt;)                  switches into an existing database
  _drop(&lt;name&gt;)                         <span class="hljs-keyword">delete</span> a collection               
  _name()                               name <span class="hljs-keyword">of</span> the current database      
                                                                          
Query / Transaction Functions:                                            
  _executeTransaction(&lt;transaction&gt;)    execute transaction               
  _query(&lt;query&gt;)                       execute AQL query                 
  _createStatement(&lt;data&gt;)              create and <span class="hljs-keyword">return</span> AQL query       
                                                                          
View Functions:                                                           
  _views()                              list all views                    
  _view(&lt;name&gt;)                         get view by name                  
  _createView(&lt;name&gt;, &lt;type&gt;,           creates a <span class="hljs-keyword">new</span> view                
              &lt;properties&gt;)                                               
  _dropView(&lt;name&gt;)                     <span class="hljs-keyword">delete</span> a view                     
</pre>
<div id="shellHelp_container_collapse" onclick="$('#shellHelp_long').hide(); $('#shellHelp_short').show(); window.location.hash='shellHelp_container';" class="example_show_button">Hide execution results</div></div>
<div id="shellHelp_short" onclick="$('#shellHelp_short').hide(); $('#shellHelp_long').show();">
<pre>
arangosh&gt; db._help(); 
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock shellHelp


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_01


<div class="example-container" id="viewUsage_01_container">
<div id="viewUsage_01_long">
<pre>
arangosh&gt; view = db._createView(<span class="hljs-string">&quot;myView&quot;</span>, <span class="hljs-string">&quot;arangosearch&quot;</span>, {});
[ArangoView <span class="hljs-number">89775</span>, <span class="hljs-string">&quot;myView&quot;</span> (type arangosearch)]
</pre>
</div>
</div>

    @endDocuBlock viewUsage_01


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_02


<div class="example-container" id="viewUsage_02_container">
<div id="viewUsage_02_long">
<pre>
arangosh&gt; view = db._view(<span class="hljs-string">&quot;myView&quot;</span>);
[ArangoView <span class="hljs-number">89775</span>, <span class="hljs-string">&quot;myView&quot;</span> (type arangosearch)]
</pre>
</div>
</div>

    @endDocuBlock viewUsage_02


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_03


<div class="example-container" id="viewUsage_03_container">
<div id="viewUsage_03_long" style="display: none;">
<pre>
arangosh&gt; view.properties();
{ 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span> 
}
</pre>
<div id="viewUsage_03_container_collapse" onclick="$('#viewUsage_03_long').hide(); $('#viewUsage_03_short').show(); window.location.hash='viewUsage_03_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewUsage_03_short" onclick="$('#viewUsage_03_short').hide(); $('#viewUsage_03_long').show();">
<pre>
arangosh&gt; view.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewUsage_03


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_04


<div class="example-container" id="viewUsage_04_container">
<div id="viewUsage_04_long" style="display: none;">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">cleanupIntervalStep</span>: <span class="hljs-number">12</span>});
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  } 
}
</pre>
<div id="viewUsage_04_container_collapse" onclick="$('#viewUsage_04_long').hide(); $('#viewUsage_04_short').show(); window.location.hash='viewUsage_04_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewUsage_04_short" onclick="$('#viewUsage_04_short').hide(); $('#viewUsage_04_long').show();">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">cleanupIntervalStep</span>: <span class="hljs-number">12</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewUsage_04


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_05


<div class="example-container" id="viewUsage_05_container">
<div id="viewUsage_05_long" style="display: none;">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">colA</span>: {<span class="hljs-attr">includeAllFields</span>: <span class="hljs-literal">true</span>}}});
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
    <span class="hljs-string">&quot;colA&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;identity&quot;</span> 
      ], 
      <span class="hljs-string">&quot;fields&quot;</span> : { 
      }, 
      <span class="hljs-string">&quot;includeAllFields&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;storeValues&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
      <span class="hljs-string">&quot;trackListPositions&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  } 
}
</pre>
<div id="viewUsage_05_container_collapse" onclick="$('#viewUsage_05_long').hide(); $('#viewUsage_05_short').show(); window.location.hash='viewUsage_05_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewUsage_05_short" onclick="$('#viewUsage_05_short').hide(); $('#viewUsage_05_long').show();">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">colA</span>: {<span class="hljs-attr">includeAllFields</span>: <span class="hljs-literal">true</span>}}});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewUsage_05


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_06


<div class="example-container" id="viewUsage_06_container">
<div id="viewUsage_06_long" style="display: none;">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">colB</span>: {<span class="hljs-attr">fields</span>: {<span class="hljs-attr">text</span>: {}}}}});
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
    <span class="hljs-string">&quot;colA&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;identity&quot;</span> 
      ], 
      <span class="hljs-string">&quot;fields&quot;</span> : { 
      }, 
      <span class="hljs-string">&quot;includeAllFields&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;storeValues&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
      <span class="hljs-string">&quot;trackListPositions&quot;</span> : <span class="hljs-literal">false</span> 
    }, 
    <span class="hljs-string">&quot;colB&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;identity&quot;</span> 
      ], 
      <span class="hljs-string">&quot;fields&quot;</span> : { 
        <span class="hljs-string">&quot;text&quot;</span> : { 
        } 
      }, 
      <span class="hljs-string">&quot;includeAllFields&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;storeValues&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
      <span class="hljs-string">&quot;trackListPositions&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  } 
}
</pre>
<div id="viewUsage_06_container_collapse" onclick="$('#viewUsage_06_long').hide(); $('#viewUsage_06_short').show(); window.location.hash='viewUsage_06_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewUsage_06_short" onclick="$('#viewUsage_06_short').hide(); $('#viewUsage_06_long').show();">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">colB</span>: {<span class="hljs-attr">fields</span>: {<span class="hljs-attr">text</span>: {}}}}});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewUsage_06


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_07


<div class="example-container" id="viewUsage_07_container">
<div id="viewUsage_07_long" style="display: none;">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">colA</span>: <span class="hljs-literal">null</span>}});
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
    <span class="hljs-string">&quot;colB&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;identity&quot;</span> 
      ], 
      <span class="hljs-string">&quot;fields&quot;</span> : { 
        <span class="hljs-string">&quot;text&quot;</span> : { 
        } 
      }, 
      <span class="hljs-string">&quot;includeAllFields&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;storeValues&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
      <span class="hljs-string">&quot;trackListPositions&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  } 
}
</pre>
<div id="viewUsage_07_container_collapse" onclick="$('#viewUsage_07_long').hide(); $('#viewUsage_07_short').show(); window.location.hash='viewUsage_07_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewUsage_07_short" onclick="$('#viewUsage_07_short').hide(); $('#viewUsage_07_long').show();">
<pre>
arangosh&gt; view.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">colA</span>: <span class="hljs-literal">null</span>}});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewUsage_07


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views.md -->
    @startDocuBlockInline viewUsage_08


<div class="example-container" id="viewUsage_08_container">
<div id="viewUsage_08_long">
<pre>
arangosh&gt; db._dropView(<span class="hljs-string">&quot;myView&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock viewUsage_08


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-configuration.md -->
    @startDocuBlockInline listCurrentConfigOpts


<div class="example-container" id="listCurrentConfigOpts_container">
<div id="listCurrentConfigOpts_long" style="display: none;">
<pre>
arangosh&gt; db._executeTransaction({ <span class="hljs-attr">collections</span>: {}, <span class="hljs-attr">action</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{<span class="hljs-keyword">return</span> <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;internal&quot;</span>).options(); } })
{ 
  <span class="hljs-string">&quot;check-configuration&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;config&quot;</span> : <span class="hljs-string">&quot;/work/ArangoDB/etc/testing/arangod-single.conf&quot;</span>, 
  <span class="hljs-string">&quot;configuration&quot;</span> : <span class="hljs-string">&quot;/work/ArangoDB/etc/testing/arangod-single.conf&quot;</span>, 
  <span class="hljs-string">&quot;console&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;daemon&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;default-language&quot;</span> : <span class="hljs-string">&quot;en_US&quot;</span>, 
  <span class="hljs-string">&quot;define&quot;</span> : [ 
    <span class="hljs-string">&quot;TOP_DIR=/work/ArangoDB&quot;</span> 
  ], 
  <span class="hljs-string">&quot;dump-dependencies&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;dump-options&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fortune&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;gid&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;hund&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log&quot;</span> : [ 
    <span class="hljs-string">&quot;info&quot;</span>, 
    <span class="hljs-string">&quot;info&quot;</span>, 
    <span class="hljs-string">&quot;replication=warn&quot;</span> 
  ], 
  <span class="hljs-string">&quot;pid-file&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;supervisor&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;uid&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;working-directory&quot;</span> : <span class="hljs-string">&quot;/var/tmp&quot;</span>, 
  <span class="hljs-string">&quot;agency.activate&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;agency.compaction-keep-size&quot;</span> : <span class="hljs-number">50000</span>, 
  <span class="hljs-string">&quot;agency.compaction-step-size&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;agency.disaster-recovery-id&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;agency.election-timeout-max&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;agency.election-timeout-min&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;agency.endpoint&quot;</span> : [ ], 
  <span class="hljs-string">&quot;agency.max-append-size&quot;</span> : <span class="hljs-number">250</span>, 
  <span class="hljs-string">&quot;agency.my-address&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;agency.pool-size&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;agency.size&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;agency.supervision&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;agency.supervision-frequency&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;agency.supervision-grace-period&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;agency.supervision-ok-threshold&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;agency.wait-for-sync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;arangosearch.commit-threads&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;arangosearch.commit-threads-idle&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;arangosearch.consolidation-threads&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;arangosearch.consolidation-threads-idle&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;arangosearch.threads&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;arangosearch.threads-limit&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;audit.hostname&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;audit.max-entry-length&quot;</span> : <span class="hljs-number">134217728</span>, 
  <span class="hljs-string">&quot;audit.output&quot;</span> : [ ], 
  <span class="hljs-string">&quot;backup.api-enabled&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
  <span class="hljs-string">&quot;backup.local-path-prefix&quot;</span> : <span class="hljs-string">&quot;/&quot;</span>, 
  <span class="hljs-string">&quot;cache.rebalancing-interval&quot;</span> : <span class="hljs-number">2000000</span>, 
  <span class="hljs-string">&quot;cache.size&quot;</span> : <span class="hljs-number">16341497856</span>, 
  <span class="hljs-string">&quot;cluster.agency-endpoint&quot;</span> : [ ], 
  <span class="hljs-string">&quot;cluster.create-waits-for-sync-replication&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;cluster.default-replication-factor&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cluster.force-one-shard&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cluster.index-create-timeout&quot;</span> : <span class="hljs-number">259200</span>, 
  <span class="hljs-string">&quot;cluster.max-number-of-shards&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cluster.max-replication-factor&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;cluster.min-replication-factor&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cluster.my-address&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;cluster.my-advertised-endpoint&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;cluster.my-role&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;cluster.require-persisted-id&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cluster.resign-leadership-on-shutdown&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cluster.synchronous-replication-timeout-factor&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cluster.synchronous-replication-timeout-minimum&quot;</span> : <span class="hljs-number">30</span>, 
  <span class="hljs-string">&quot;cluster.synchronous-replication-timeout-per-4k&quot;</span> : <span class="hljs-number">0.1</span>, 
  <span class="hljs-string">&quot;cluster.system-replication-factor&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;cluster.upgrade&quot;</span> : <span class="hljs-string">&quot;auto&quot;</span>, 
  <span class="hljs-string">&quot;cluster.write-concern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;database.auto-upgrade&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.check-version&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.directory&quot;</span> : <span class="hljs-string">&quot;/tmp/arangosh_NOKnGO/rocksdb-clusterOrNot/data&quot;</span>, 
  <span class="hljs-string">&quot;database.force-sync-properties&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.ignore-datafile-errors&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.init-database&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.old-system-collections&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;database.required-directory-state&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;database.restore-admin&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.throw-collection-not-loaded-error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;database.upgrade-check&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;database.wait-for-sync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;foxx.api&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;foxx.force-update-on-startup&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;foxx.queues&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;foxx.queues-poll-interval&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;foxx.store&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;frontend.proxy-request-check&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;frontend.trusted-proxy&quot;</span> : [ ], 
  <span class="hljs-string">&quot;frontend.version-check&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;http.allow-method-override&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;http.hide-product-header&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;http.keep-alive-timeout&quot;</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">&quot;http.permanently-redirect-root&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;http.redirect-root-to&quot;</span> : <span class="hljs-string">&quot;/_admin/aardvark/index.html&quot;</span>, 
  <span class="hljs-string">&quot;http.trusted-origin&quot;</span> : [ 
    <span class="hljs-string">&quot;*&quot;</span> 
  ], 
  <span class="hljs-string">&quot;javascript.allow-admin-execute&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;javascript.allow-external-process-control&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;javascript.allow-port-testing&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;javascript.app-path&quot;</span> : <span class="hljs-string">&quot;/tmp/arangosh_NOKnGO/rocksdb-clusterOrNot/apps&quot;</span>, 
  <span class="hljs-string">&quot;javascript.copy-installation&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;javascript.enabled&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;javascript.endpoints-blacklist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.endpoints-whitelist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.environment-variables-blacklist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.environment-variables-whitelist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.files-whitelist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.gc-frequency&quot;</span> : <span class="hljs-number">60</span>, 
  <span class="hljs-string">&quot;javascript.gc-interval&quot;</span> : <span class="hljs-number">2000</span>, 
  <span class="hljs-string">&quot;javascript.harden&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;javascript.module-directory&quot;</span> : [ 
    <span class="hljs-string">&quot;/work/ArangoDB/enterprise/js&quot;</span> 
  ], 
  <span class="hljs-string">&quot;javascript.script&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.script-parameter&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.startup-directory&quot;</span> : <span class="hljs-string">&quot;/work/ArangoDB/js&quot;</span>, 
  <span class="hljs-string">&quot;javascript.startup-options-blacklist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.startup-options-whitelist&quot;</span> : [ ], 
  <span class="hljs-string">&quot;javascript.v8-contexts&quot;</span> : <span class="hljs-number">16</span>, 
  <span class="hljs-string">&quot;javascript.v8-contexts-max-age&quot;</span> : <span class="hljs-number">60</span>, 
  <span class="hljs-string">&quot;javascript.v8-contexts-max-invocations&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;javascript.v8-contexts-minimum&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;javascript.v8-max-heap&quot;</span> : <span class="hljs-number">3072</span>, 
  <span class="hljs-string">&quot;javascript.v8-options&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ldap.allow-offline&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.async-connect&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.basedn&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.binddn&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.debug&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.enabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.network-timeout&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ldap.port&quot;</span> : <span class="hljs-number">389</span>, 
  <span class="hljs-string">&quot;ldap.prefix&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.referrals&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.refresh-rate&quot;</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">&quot;ldap.responsible-for&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.restart&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.retries&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;ldap.roles-attribute-name&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.roles-exclude&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.roles-include&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.roles-search&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.roles-transformation&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ldap.search-attribute&quot;</span> : <span class="hljs-string">&quot;uid&quot;</span>, 
  <span class="hljs-string">&quot;ldap.search-filter&quot;</span> : <span class="hljs-string">&quot;objectClass=*&quot;</span>, 
  <span class="hljs-string">&quot;ldap.search-scope&quot;</span> : <span class="hljs-string">&quot;sub&quot;</span>, 
  <span class="hljs-string">&quot;ldap.serialize-timeout&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;ldap.serialized&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.server&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.suffix&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.superuser-role&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.timeout&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ldap.tls&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap.tls-cacert-dir&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.tls-cacert-file&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap.tls-cert-check-strategy&quot;</span> : <span class="hljs-string">&quot;hard&quot;</span>, 
  <span class="hljs-string">&quot;ldap.tls-version&quot;</span> : <span class="hljs-string">&quot;1.2&quot;</span>, 
  <span class="hljs-string">&quot;ldap.url&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.allow-offline&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.async-connect&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.basedn&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.binddn&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.debug&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.enabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.network-timeout&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ldap2.port&quot;</span> : <span class="hljs-number">389</span>, 
  <span class="hljs-string">&quot;ldap2.prefix&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.referrals&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.refresh-rate&quot;</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">&quot;ldap2.responsible-for&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.restart&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.retries&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;ldap2.roles-attribute-name&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.roles-exclude&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.roles-include&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.roles-search&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.roles-transformation&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ldap2.search-attribute&quot;</span> : <span class="hljs-string">&quot;uid&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.search-filter&quot;</span> : <span class="hljs-string">&quot;objectClass=*&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.search-scope&quot;</span> : <span class="hljs-string">&quot;sub&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.serialize-timeout&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;ldap2.serialized&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.server&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.suffix&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.superuser-role&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.timeout&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ldap2.tls&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ldap2.tls-cacert-dir&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.tls-cacert-file&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.tls-cert-check-strategy&quot;</span> : <span class="hljs-string">&quot;hard&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.tls-version&quot;</span> : <span class="hljs-string">&quot;1.2&quot;</span>, 
  <span class="hljs-string">&quot;ldap2.url&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;log.api-enabled&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
  <span class="hljs-string">&quot;log.color&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;log.escape&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;log.file&quot;</span> : <span class="hljs-string">&quot;/tmp/arangosh_NOKnGO/rocksdb-clusterOrNot/log&quot;</span>, 
  <span class="hljs-string">&quot;log.file-group&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;log.file-mode&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;log.force-direct&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.foreground-tty&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.ids&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;log.in-memory-level&quot;</span> : <span class="hljs-string">&quot;info&quot;</span>, 
  <span class="hljs-string">&quot;log.keep-logrotate&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.level&quot;</span> : [ 
    <span class="hljs-string">&quot;info&quot;</span>, 
    <span class="hljs-string">&quot;info&quot;</span>, 
    <span class="hljs-string">&quot;replication=warn&quot;</span> 
  ], 
  <span class="hljs-string">&quot;log.line-number&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.max-entry-length&quot;</span> : <span class="hljs-number">134217728</span>, 
  <span class="hljs-string">&quot;log.output&quot;</span> : [ 
    <span class="hljs-string">&quot;file:///tmp/arangosh_NOKnGO/rocksdb-clusterOrNot/log&quot;</span> 
  ], 
  <span class="hljs-string">&quot;log.performance&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.prefix&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;log.request-parameters&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;log.role&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;log.shorten-filenames&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;log.thread&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.thread-name&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.time-format&quot;</span> : <span class="hljs-string">&quot;utc-datestring&quot;</span>, 
  <span class="hljs-string">&quot;log.use-local-time&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;log.use-microtime&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;network.idle-connection-ttl&quot;</span> : <span class="hljs-number">60000</span>, 
  <span class="hljs-string">&quot;network.io-threads&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;network.max-open-connections&quot;</span> : <span class="hljs-number">1024</span>, 
  <span class="hljs-string">&quot;network.protocol&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;network.verify-hosts&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;nonce.size&quot;</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">&quot;query.cache-entries&quot;</span> : <span class="hljs-number">128</span>, 
  <span class="hljs-string">&quot;query.cache-entries-max-size&quot;</span> : <span class="hljs-number">268435456</span>, 
  <span class="hljs-string">&quot;query.cache-entry-max-size&quot;</span> : <span class="hljs-number">16777216</span>, 
  <span class="hljs-string">&quot;query.cache-include-system-collections&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;query.cache-mode&quot;</span> : <span class="hljs-string">&quot;off&quot;</span>, 
  <span class="hljs-string">&quot;query.fail-on-warning&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;query.max-parallelism&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;query.max-runtime&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;query.memory-limit&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;query.optimizer-max-plans&quot;</span> : <span class="hljs-number">128</span>, 
  <span class="hljs-string">&quot;query.optimizer-rules&quot;</span> : [ ], 
  <span class="hljs-string">&quot;query.parallelize-gather-writes&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;query.parallelize-traversals&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;query.registry-ttl&quot;</span> : <span class="hljs-number">30</span>, 
  <span class="hljs-string">&quot;query.require-with&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;query.slow-streaming-threshold&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;query.slow-threshold&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;query.smart-joins&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;query.tracking&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;query.tracking-slow-queries&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;query.tracking-with-bindvars&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;query.tracking-with-datasources&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;query.tracking-with-querystring&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;random.generator&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;rclone.executable&quot;</span> : <span class="hljs-string">&quot;rclone-arangodb&quot;</span>, 
  <span class="hljs-string">&quot;replication.active-failover&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;replication.auto-start&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;replication.automatic-failover&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;replication.connect-timeout&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;replication.max-parallel-tailing-invocations&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;replication.quick-keys-limit&quot;</span> : <span class="hljs-number">1000000</span>, 
  <span class="hljs-string">&quot;replication.request-timeout&quot;</span> : <span class="hljs-number">600</span>, 
  <span class="hljs-string">&quot;replication.sync-by-revision&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.allow-fallocate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.block-align-data-blocks&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.block-cache-shard-bits&quot;</span> : -<span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;rocksdb.block-cache-size&quot;</span> : <span class="hljs-number">19609797427</span>, 
  <span class="hljs-string">&quot;rocksdb.cache-index-and-filter-blocks&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.cache-index-and-filter-blocks-with-high-priority&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.compaction-read-ahead-size&quot;</span> : <span class="hljs-number">2097152</span>, 
  <span class="hljs-string">&quot;rocksdb.create-sha-files&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.debug-logging&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.delayed-write-rate&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;rocksdb.dynamic-level-bytes&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.edge-cache&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.enable-pipelined-write&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.enable-statistics&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.encryption-gen-internal-key&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.encryption-key-generator&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;rocksdb.encryption-key-rotation&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.encryption-keyfile&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;rocksdb.encryption-keyfolder&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;rocksdb.enforce-block-cache-size-limit&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.exclusive-writes&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.intermediate-commit-count&quot;</span> : <span class="hljs-number">1000000</span>, 
  <span class="hljs-string">&quot;rocksdb.intermediate-commit-size&quot;</span> : <span class="hljs-number">536870912</span>, 
  <span class="hljs-string">&quot;rocksdb.level0-compaction-trigger&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;rocksdb.level0-slowdown-trigger&quot;</span> : <span class="hljs-number">20</span>, 
  <span class="hljs-string">&quot;rocksdb.level0-stop-trigger&quot;</span> : <span class="hljs-number">36</span>, 
  <span class="hljs-string">&quot;rocksdb.limit-open-files-at-startup&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.max-background-jobs&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;rocksdb.max-bytes-for-level-base&quot;</span> : <span class="hljs-number">268435456</span>, 
  <span class="hljs-string">&quot;rocksdb.max-bytes-for-level-multiplier&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;rocksdb.max-parallel-compactions&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;rocksdb.max-subcompactions&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;rocksdb.max-total-wal-size&quot;</span> : <span class="hljs-number">83886080</span>, 
  <span class="hljs-string">&quot;rocksdb.max-transaction-size&quot;</span> : <span class="hljs-number">18446744073709552000</span>, 
  <span class="hljs-string">&quot;rocksdb.max-write-buffer-number&quot;</span> : <span class="hljs-number">9</span>, 
  <span class="hljs-string">&quot;rocksdb.max-write-buffer-size-to-maintain&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;rocksdb.min-write-buffer-number-to-merge&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;rocksdb.num-levels&quot;</span> : <span class="hljs-number">7</span>, 
  <span class="hljs-string">&quot;rocksdb.num-threads-priority-high&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;rocksdb.num-threads-priority-low&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;rocksdb.num-uncompressed-levels&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;rocksdb.optimize-filters-for-hits&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.pin-l0-filter-and-index-blocks-in-cache&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.pin-top-level-index-and-filter&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.recycle-log-file-num&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.sync-delay-threshold&quot;</span> : <span class="hljs-number">5000</span>, 
  <span class="hljs-string">&quot;rocksdb.sync-interval&quot;</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">&quot;rocksdb.table-block-size&quot;</span> : <span class="hljs-number">16384</span>, 
  <span class="hljs-string">&quot;rocksdb.target-file-size-base&quot;</span> : <span class="hljs-number">67108864</span>, 
  <span class="hljs-string">&quot;rocksdb.target-file-size-multiplier&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;rocksdb.throttle&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;rocksdb.total-write-buffer-size&quot;</span> : <span class="hljs-number">26146396569</span>, 
  <span class="hljs-string">&quot;rocksdb.transaction-lock-timeout&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;rocksdb.use-direct-io-for-flush-and-compaction&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.use-direct-reads&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.use-file-logging&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.use-fsync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.wal-archive-size-limit&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;rocksdb.wal-directory&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;rocksdb.wal-file-timeout&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;rocksdb.wal-file-timeout-initial&quot;</span> : <span class="hljs-number">180</span>, 
  <span class="hljs-string">&quot;rocksdb.wal-recovery-skip-corrupted&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;rocksdb.write-buffer-size&quot;</span> : <span class="hljs-number">67108864</span>, 
  <span class="hljs-string">&quot;server.allow-use-database&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.authentication&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;server.authentication-system-only&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.authentication-timeout&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;server.authentication-unix-sockets&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.descriptors-minimum&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;server.endpoint&quot;</span> : [ 
    <span class="hljs-string">&quot;tcp://127.0.0.1:27248&quot;</span> 
  ], 
  <span class="hljs-string">&quot;server.export-metrics-api&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.export-read-write-metrics&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;server.flush-interval&quot;</span> : <span class="hljs-number">1000000</span>, 
  <span class="hljs-string">&quot;server.gid&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;server.harden&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;server.io-threads&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;server.local-authentication&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.maintenance-actions-block&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;server.maintenance-actions-linger&quot;</span> : <span class="hljs-number">3600</span>, 
  <span class="hljs-string">&quot;server.maintenance-threads&quot;</span> : <span class="hljs-number">9</span>, 
  <span class="hljs-string">&quot;server.maximal-queue-size&quot;</span> : <span class="hljs-number">4096</span>, 
  <span class="hljs-string">&quot;server.maximal-threads&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;server.minimal-threads&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;server.prio1-size&quot;</span> : <span class="hljs-number">4096</span>, 
  <span class="hljs-string">&quot;server.rest-server&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.scheduler-queue-size&quot;</span> : <span class="hljs-number">4096</span>, 
  <span class="hljs-string">&quot;server.statistics&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.statistics-all-databases&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.statistics-history&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;server.storage-engine&quot;</span> : <span class="hljs-string">&quot;rocksdb&quot;</span>, 
  <span class="hljs-string">&quot;server.uid&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;server.unavailability-queue-fill-grade&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;server.validate-utf8-strings&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;ssl.cafile&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;ssl.cipher-list&quot;</span> : <span class="hljs-string">&quot;HIGH:!EXPORT:!aNULL@STRENGTH&quot;</span>, 
  <span class="hljs-string">&quot;ssl.ecdh-curve&quot;</span> : <span class="hljs-string">&quot;prime256v1&quot;</span>, 
  <span class="hljs-string">&quot;ssl.keyfile&quot;</span> : <span class="hljs-string">&quot;/work/ArangoDB/UnitTests/server.pem&quot;</span>, 
  <span class="hljs-string">&quot;ssl.options&quot;</span> : <span class="hljs-number">2147485780</span>, 
  <span class="hljs-string">&quot;ssl.prefer-http1-in-alpn&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ssl.protocol&quot;</span> : <span class="hljs-number">9</span>, 
  <span class="hljs-string">&quot;ssl.require-peer-certificate&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;ssl.server-name-indication&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ssl.session-cache&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;tcp.backlog-size&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;tcp.reuse-address&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;temp.path&quot;</span> : <span class="hljs-string">&quot;/tmp/arangosh_NOKnGO/rocksdb-clusterOrNot/tmp&quot;</span>, 
  <span class="hljs-string">&quot;transaction.streaming-lock-timeout&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;ttl.frequency&quot;</span> : <span class="hljs-number">30000</span>, 
  <span class="hljs-string">&quot;ttl.max-collection-removes&quot;</span> : <span class="hljs-number">1000000</span>, 
  <span class="hljs-string">&quot;ttl.max-total-removes&quot;</span> : <span class="hljs-number">1000000</span>, 
  <span class="hljs-string">&quot;ttl.only-loaded-collection&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="listCurrentConfigOpts_container_collapse" onclick="$('#listCurrentConfigOpts_long').hide(); $('#listCurrentConfigOpts_short').show(); window.location.hash='listCurrentConfigOpts_container';" class="example_show_button">Hide execution results</div></div>
<div id="listCurrentConfigOpts_short" onclick="$('#listCurrentConfigOpts_short').hide(); $('#listCurrentConfigOpts_long').show();">
<pre>
arangosh&gt; db._executeTransaction({ <span class="hljs-attr">collections</span>: {}, <span class="hljs-attr">action</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{<span class="hljs-keyword">return</span> <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;internal&quot;</span>).options(); } })
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock listCurrentConfigOpts


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerCreate


<div class="example-container" id="analyzerCreate_container">
<div id="analyzerCreate_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.save(<span class="hljs-string">&quot;csv&quot;</span>, <span class="hljs-string">&quot;delimiter&quot;</span>, { <span class="hljs-string">&quot;delimiter&quot;</span>: <span class="hljs-string">&quot;,&quot;</span> }, []);
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::csv&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;delimiter&quot;</span>, 
  <span class="hljs-string">&quot;properties&quot;</span> : { 
    <span class="hljs-string">&quot;delimiter&quot;</span> : <span class="hljs-string">&quot;,&quot;</span> 
  }, 
  <span class="hljs-string">&quot;features&quot;</span> : [ ] 
}
</pre>
<div id="analyzerCreate_container_collapse" onclick="$('#analyzerCreate_long').hide(); $('#analyzerCreate_short').show(); window.location.hash='analyzerCreate_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerCreate_short" onclick="$('#analyzerCreate_short').hide(); $('#analyzerCreate_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.save(<span class="hljs-string">&quot;csv&quot;</span>, <span class="hljs-string">&quot;delimiter&quot;</span>, { <span class="hljs-string">&quot;delimiter&quot;</span>: <span class="hljs-string">&quot;,&quot;</span> }, []);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerCreate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerByName


<div class="example-container" id="analyzerByName_container">
<div id="analyzerByName_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>);
[ArangoAnalyzer <span class="hljs-string">&quot;text_en&quot;</span> (type text)]
</pre>
</div>
</div>

    @endDocuBlock analyzerByName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerList


<div class="example-container" id="analyzerList_container">
<div id="analyzerList_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.toArray();
[ 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_zh&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_sv&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_fi&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_es&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;identity&quot;</span> (type identity)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_pt&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_en&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_de&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_fr&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_no&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_ru&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_it&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;text_nl&quot;</span> (type text)], 
  [ArangoAnalyzer <span class="hljs-string">&quot;_system::delimiter_hyphen&quot;</span> (type delimiter)] 
]
</pre>
<div id="analyzerList_container_collapse" onclick="$('#analyzerList_long').hide(); $('#analyzerList_short').show(); window.location.hash='analyzerList_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerList_short" onclick="$('#analyzerList_short').hide(); $('#analyzerList_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerList


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerRemove


<div class="example-container" id="analyzerRemove_container">
<div id="analyzerRemove_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.remove(<span class="hljs-string">&quot;csv&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock analyzerRemove


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerName


<div class="example-container" id="analyzerName_container">
<div id="analyzerName_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>).name();
text_en
</pre>
</div>
</div>

    @endDocuBlock analyzerName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerType


<div class="example-container" id="analyzerType_container">
<div id="analyzerType_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>).type();
text
</pre>
</div>
</div>

    @endDocuBlock analyzerType


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerProperties


<div class="example-container" id="analyzerProperties_container">
<div id="analyzerProperties_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>).properties();
{ 
  <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en.utf-8&quot;</span>, 
  <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
  <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
  <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="analyzerProperties_container_collapse" onclick="$('#analyzerProperties_long').hide(); $('#analyzerProperties_short').show(); window.location.hash='analyzerProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerProperties_short" onclick="$('#analyzerProperties_short').hide(); $('#analyzerProperties_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>).properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerProperties


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-analyzers.md -->
    @startDocuBlockInline analyzerFeatures


<div class="example-container" id="analyzerFeatures_container">
<div id="analyzerFeatures_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>).features();
[ 
  <span class="hljs-string">&quot;position&quot;</span>, 
  <span class="hljs-string">&quot;norm&quot;</span>, 
  <span class="hljs-string">&quot;frequency&quot;</span> 
]
</pre>
<div id="analyzerFeatures_container_collapse" onclick="$('#analyzerFeatures_long').hide(); $('#analyzerFeatures_short').show(); window.location.hash='analyzerFeatures_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerFeatures_short" onclick="$('#analyzerFeatures_short').hide(); $('#analyzerFeatures_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.analyzer(<span class="hljs-string">&quot;text_en&quot;</span>).features();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerFeatures


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphGetFromVertex


<div class="example-container" id="generalGraphGetFromVertex_container">
<div id="generalGraphGetFromVertex_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db.relation.any();
arangosh&gt; graph._fromVertex(<span class="hljs-string">&quot;relation/&quot;</span> + any._key);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaca---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
}
</pre>
<div id="generalGraphGetFromVertex_container_collapse" onclick="$('#generalGraphGetFromVertex_long').hide(); $('#generalGraphGetFromVertex_short').show(); window.location.hash='generalGraphGetFromVertex_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphGetFromVertex_short" onclick="$('#generalGraphGetFromVertex_short').hide(); $('#generalGraphGetFromVertex_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db.relation.any();
arangosh&gt; graph._fromVertex(<span class="hljs-string">&quot;relation/&quot;</span> + any._key);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphGetFromVertex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphGetToVertex


<div class="example-container" id="generalGraphGetToVertex_container">
<div id="generalGraphGetToVertex_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db.relation.any();
arangosh&gt; graph._toVertex(<span class="hljs-string">&quot;relation/&quot;</span> + any._key);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaeK---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
}
</pre>
<div id="generalGraphGetToVertex_container_collapse" onclick="$('#generalGraphGetToVertex_long').hide(); $('#generalGraphGetToVertex_short').show(); window.location.hash='generalGraphGetToVertex_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphGetToVertex_short" onclick="$('#generalGraphGetToVertex_short').hide(); $('#generalGraphGetToVertex_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db.relation.any();
arangosh&gt; graph._toVertex(<span class="hljs-string">&quot;relation/&quot;</span> + any._key);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphGetToVertex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleNeighbors1


<div class="example-container" id="generalGraphModuleNeighbors1_container">
<div id="generalGraphModuleNeighbors1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._neighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
[ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> 
]
</pre>
<div id="generalGraphModuleNeighbors1_container_collapse" onclick="$('#generalGraphModuleNeighbors1_long').hide(); $('#generalGraphModuleNeighbors1_short').show(); window.location.hash='generalGraphModuleNeighbors1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleNeighbors1_short" onclick="$('#generalGraphModuleNeighbors1_short').hide(); $('#generalGraphModuleNeighbors1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._neighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleNeighbors1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleNeighbors2


<div class="example-container" id="generalGraphModuleNeighbors2_container">
<div id="generalGraphModuleNeighbors2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._neighbors(<span class="hljs-string">&#x27;germanCity/Hamburg&#x27;</span>, {<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
[ 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
]
</pre>
<div id="generalGraphModuleNeighbors2_container_collapse" onclick="$('#generalGraphModuleNeighbors2_long').hide(); $('#generalGraphModuleNeighbors2_short').show(); window.location.hash='generalGraphModuleNeighbors2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleNeighbors2_short" onclick="$('#generalGraphModuleNeighbors2_short').hide(); $('#generalGraphModuleNeighbors2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._neighbors(<span class="hljs-string">&#x27;germanCity/Hamburg&#x27;</span>, {<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleNeighbors2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighbors1


<div class="example-container" id="generalGraphModuleCommonNeighbors1_container">
<div id="generalGraphModuleCommonNeighbors1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonNeighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>}, {<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
[ 
  { 
    <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;neighbors&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;neighbors&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighbors1_container_collapse" onclick="$('#generalGraphModuleCommonNeighbors1_long').hide(); $('#generalGraphModuleCommonNeighbors1_short').show(); window.location.hash='generalGraphModuleCommonNeighbors1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighbors1_short" onclick="$('#generalGraphModuleCommonNeighbors1_short').hide(); $('#generalGraphModuleCommonNeighbors1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonNeighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>}, {<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighbors1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighbors2


<div class="example-container" id="generalGraphModuleCommonNeighbors2_container">
<div id="generalGraphModuleCommonNeighbors2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonNeighbors(
........&gt;   <span class="hljs-string">&#x27;germanCity/Hamburg&#x27;</span>,
........&gt;   {},
........&gt;   {<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>},
........&gt; {<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
[ 
  { 
    <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;neighbors&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;neighbors&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;neighbors&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighbors2_container_collapse" onclick="$('#generalGraphModuleCommonNeighbors2_long').hide(); $('#generalGraphModuleCommonNeighbors2_short').show(); window.location.hash='generalGraphModuleCommonNeighbors2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighbors2_short" onclick="$('#generalGraphModuleCommonNeighbors2_short').hide(); $('#generalGraphModuleCommonNeighbors2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonNeighbors(
........&gt;   <span class="hljs-string">&#x27;germanCity/Hamburg&#x27;</span>,
........&gt;   {},
........&gt;   {<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>},
........&gt; {<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighbors2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighborsAmount1


<div class="example-container" id="generalGraphModuleCommonNeighborsAmount1_container">
<div id="generalGraphModuleCommonNeighborsAmount1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> example = { <span class="hljs-attr">isCapital</span>: <span class="hljs-literal">true</span> };
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(example, example, options, options);
[ 
  { 
    <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">3</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">3</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighborsAmount1_container_collapse" onclick="$('#generalGraphModuleCommonNeighborsAmount1_long').hide(); $('#generalGraphModuleCommonNeighborsAmount1_short').show(); window.location.hash='generalGraphModuleCommonNeighborsAmount1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighborsAmount1_short" onclick="$('#generalGraphModuleCommonNeighborsAmount1_short').hide(); $('#generalGraphModuleCommonNeighborsAmount1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> example = { <span class="hljs-attr">isCapital</span>: <span class="hljs-literal">true</span> };
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(example, example, options, options);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighborsAmount1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighborsAmount2


<div class="example-container" id="generalGraphModuleCommonNeighborsAmount2_container">
<div id="generalGraphModuleCommonNeighborsAmount2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">direction</span>: <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(<span class="hljs-string">&#x27;germanCity/Hamburg&#x27;</span>, {}, options, options);
[ 
  { 
    <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">3</span> 
      }, 
      { 
        <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">2</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighborsAmount2_container_collapse" onclick="$('#generalGraphModuleCommonNeighborsAmount2_long').hide(); $('#generalGraphModuleCommonNeighborsAmount2_short').show(); window.location.hash='generalGraphModuleCommonNeighborsAmount2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighborsAmount2_short" onclick="$('#generalGraphModuleCommonNeighborsAmount2_short').hide(); $('#generalGraphModuleCommonNeighborsAmount2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">direction</span>: <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">maxDepth</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(<span class="hljs-string">&#x27;germanCity/Hamburg&#x27;</span>, {}, options, options);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighborsAmount2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleProperties1


<div class="example-container" id="generalGraphModuleProperties1_container">
<div id="generalGraphModuleProperties1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonProperties({}, {});
[ 
  { 
    <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">1000000</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">1000000</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleProperties1_container_collapse" onclick="$('#generalGraphModuleProperties1_long').hide(); $('#generalGraphModuleProperties1_short').show(); window.location.hash='generalGraphModuleProperties1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleProperties1_short" onclick="$('#generalGraphModuleProperties1_short').hide(); $('#generalGraphModuleProperties1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonProperties({}, {});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleProperties1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleProperties2


<div class="example-container" id="generalGraphModuleProperties2_container">
<div id="generalGraphModuleProperties2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonProperties({}, {}, {<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">&#x27;population&#x27;</span>});
[ 
  { 
    <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleProperties2_container_collapse" onclick="$('#generalGraphModuleProperties2_long').hide(); $('#generalGraphModuleProperties2_short').show(); window.location.hash='generalGraphModuleProperties2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleProperties2_short" onclick="$('#generalGraphModuleProperties2_short').hide(); $('#generalGraphModuleProperties2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._commonProperties({}, {}, {<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">&#x27;population&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleProperties2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAmountProperties1


<div class="example-container" id="generalGraphModuleAmountProperties1_container">
<div id="generalGraphModuleAmountProperties1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._countCommonProperties({}, {});
[ 
  { 
    <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">2</span> 
  } 
]
</pre>
<div id="generalGraphModuleAmountProperties1_container_collapse" onclick="$('#generalGraphModuleAmountProperties1_long').hide(); $('#generalGraphModuleAmountProperties1_short').show(); window.location.hash='generalGraphModuleAmountProperties1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAmountProperties1_short" onclick="$('#generalGraphModuleAmountProperties1_short').hide(); $('#generalGraphModuleAmountProperties1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._countCommonProperties({}, {});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAmountProperties1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAmountProperties2


<div class="example-container" id="generalGraphModuleAmountProperties2_container">
<div id="generalGraphModuleAmountProperties2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._countCommonProperties({}, {}, {<span class="hljs-attr">vertex1CollectionRestriction</span> : <span class="hljs-string">&#x27;germanCity&#x27;</span>,
........&gt; vertex2CollectionRestriction : <span class="hljs-string">&#x27;germanCity&#x27;</span> ,<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">&#x27;population&#x27;</span>});
[ 
  { 
    <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">2</span> 
  } 
]
</pre>
<div id="generalGraphModuleAmountProperties2_container_collapse" onclick="$('#generalGraphModuleAmountProperties2_long').hide(); $('#generalGraphModuleAmountProperties2_short').show(); window.location.hash='generalGraphModuleAmountProperties2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAmountProperties2_short" onclick="$('#generalGraphModuleAmountProperties2_short').hide(); $('#generalGraphModuleAmountProperties2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._countCommonProperties({}, {}, {<span class="hljs-attr">vertex1CollectionRestriction</span> : <span class="hljs-string">&#x27;germanCity&#x27;</span>,
........&gt; vertex2CollectionRestriction : <span class="hljs-string">&#x27;germanCity&#x27;</span> ,<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">&#x27;population&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAmountProperties2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModulePaths1


<div class="example-container" id="generalGraphModulePaths1_container">
<div id="generalGraphModulePaths1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; g._paths();
[ 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81152&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81152&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuW---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81152&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81152&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuW---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81158&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81158&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbue--_&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81154&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81154&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbua---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81154&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81154&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbua---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81156&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81156&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbua--A&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81158&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81158&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbue--_&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuK--A&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81156&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81156&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbua--A&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbuS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModulePaths1_container_collapse" onclick="$('#generalGraphModulePaths1_long').hide(); $('#generalGraphModulePaths1_short').show(); window.location.hash='generalGraphModulePaths1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModulePaths1_short" onclick="$('#generalGraphModulePaths1_short').hide(); $('#generalGraphModulePaths1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; g._paths();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModulePaths1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModulePaths2


<div class="example-container" id="generalGraphModulePaths2_container">
<div id="generalGraphModulePaths2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; g._paths({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;inbound&#x27;</span>, <span class="hljs-attr">minLength</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">maxLength</span> :  <span class="hljs-number">2</span>});
[ 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxW---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81218&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81218&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxi--A&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxW---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81218&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81218&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxi--A&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81216&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81216&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxi---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxW---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81220&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81220&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxm---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81220&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81220&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxm---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81214&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81214&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxe---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxa---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxS---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81214&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81214&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxe---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxS---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;source&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxW---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
    }, 
    <span class="hljs-string">&quot;destination&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
    }, 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81216&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/81216&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxi---&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
        <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;vertice&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxW---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylbxO---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModulePaths2_container_collapse" onclick="$('#generalGraphModulePaths2_long').hide(); $('#generalGraphModulePaths2_short').show(); window.location.hash='generalGraphModulePaths2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModulePaths2_short" onclick="$('#generalGraphModulePaths2_short').hide(); $('#generalGraphModulePaths2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; g._paths({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;inbound&#x27;</span>, <span class="hljs-attr">minLength</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">maxLength</span> :  <span class="hljs-number">2</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModulePaths2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleShortestPaths1


<div class="example-container" id="generalGraphModuleShortestPaths1_container">
<div id="generalGraphModuleShortestPaths1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._shortestPath({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;frenchCity&#x27;</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">&#x27;germanCity&#x27;</span>});
[ 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81784&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchHighway/81784&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCi---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81786&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81786&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCm---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1100</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81794&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81794&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcC2---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">700</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81792&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81792&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCy---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1300</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81784&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchHighway/81784&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCi---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81788&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81788&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCq---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1200</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81796&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81796&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcC6---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81790&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81790&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCu---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">900</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81786&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81786&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCm---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1100</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81788&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81788&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCq---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1200</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81778&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/81778&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCW---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">850</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81780&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/81780&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCa---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">400</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81794&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81794&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcC2---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">700</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81796&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81796&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcC6---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81778&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/81778&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCW---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">850</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81782&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/81782&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCe---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">500</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81792&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81792&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCy---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1300</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81790&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81790&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCu---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">900</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81780&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/81780&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCa---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">400</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81782&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/81782&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcCe---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">500</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleShortestPaths1_container_collapse" onclick="$('#generalGraphModuleShortestPaths1_long').hide(); $('#generalGraphModuleShortestPaths1_short').show(); window.location.hash='generalGraphModuleShortestPaths1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleShortestPaths1_short" onclick="$('#generalGraphModuleShortestPaths1_short').hide(); $('#generalGraphModuleShortestPaths1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._shortestPath({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;frenchCity&#x27;</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">&#x27;germanCity&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleShortestPaths1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleShortestPaths2


<div class="example-container" id="generalGraphModuleShortestPaths2_container">
<div id="generalGraphModuleShortestPaths2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._shortestPath([{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Cologne&#x27;</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Munich&#x27;</span>}], <span class="hljs-string">&#x27;frenchCity/Lyon&#x27;</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
[ 
  { 
    <span class="hljs-string">&quot;vertices&quot;</span> : [ 
      <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
      <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> 
    ], 
    <span class="hljs-string">&quot;edges&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;81892&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/81892&quot;</span>, 
        <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
        <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcGq---&quot;</span>, 
        <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">700</span> 
      } 
    ], 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleShortestPaths2_container_collapse" onclick="$('#generalGraphModuleShortestPaths2_long').hide(); $('#generalGraphModuleShortestPaths2_short').show(); window.location.hash='generalGraphModuleShortestPaths2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleShortestPaths2_short" onclick="$('#generalGraphModuleShortestPaths2_short').hide(); $('#generalGraphModuleShortestPaths2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._shortestPath([{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Cologne&#x27;</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Munich&#x27;</span>}], <span class="hljs-string">&#x27;frenchCity/Lyon&#x27;</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleShortestPaths2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDistanceTo1


<div class="example-container" id="generalGraphModuleDistanceTo1_container">
<div id="generalGraphModuleDistanceTo1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._distanceTo({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;frenchCity&#x27;</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">&#x27;germanCity&#x27;</span>});
[ 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleDistanceTo1_container_collapse" onclick="$('#generalGraphModuleDistanceTo1_long').hide(); $('#generalGraphModuleDistanceTo1_short').show(); window.location.hash='generalGraphModuleDistanceTo1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleDistanceTo1_short" onclick="$('#generalGraphModuleDistanceTo1_short').hide(); $('#generalGraphModuleDistanceTo1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._distanceTo({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;frenchCity&#x27;</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">&#x27;germanCity&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleDistanceTo1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDistanceTo2


<div class="example-container" id="generalGraphModuleDistanceTo2_container">
<div id="generalGraphModuleDistanceTo2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._distanceTo([{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Cologne&#x27;</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Munich&#x27;</span>}], <span class="hljs-string">&#x27;frenchCity/Lyon&#x27;</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
[ 
  { 
    <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleDistanceTo2_container_collapse" onclick="$('#generalGraphModuleDistanceTo2_long').hide(); $('#generalGraphModuleDistanceTo2_short').show(); window.location.hash='generalGraphModuleDistanceTo2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleDistanceTo2_short" onclick="$('#generalGraphModuleDistanceTo2_short').hide(); $('#generalGraphModuleDistanceTo2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; g._distanceTo([{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Cologne&#x27;</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">&#x27;germanCity/Munich&#x27;</span>}], <span class="hljs-string">&#x27;frenchCity/Lyon&#x27;</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleDistanceTo2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsEccentricity1


<div class="example-container" id="generalGraphModuleAbsEccentricity1_container">
<div id="generalGraphModuleAbsEccentricity1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteEccentricity({});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsEccentricity1_container_collapse" onclick="$('#generalGraphModuleAbsEccentricity1_long').hide(); $('#generalGraphModuleAbsEccentricity1_short').show(); window.location.hash='generalGraphModuleAbsEccentricity1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsEccentricity1_short" onclick="$('#generalGraphModuleAbsEccentricity1_short').hide(); $('#generalGraphModuleAbsEccentricity1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteEccentricity({});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsEccentricity1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsEccentricity2


<div class="example-container" id="generalGraphModuleAbsEccentricity2_container">
<div id="generalGraphModuleAbsEccentricity2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsEccentricity2_container_collapse" onclick="$('#generalGraphModuleAbsEccentricity2_long').hide(); $('#generalGraphModuleAbsEccentricity2_short').show(); window.location.hash='generalGraphModuleAbsEccentricity2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsEccentricity2_short" onclick="$('#generalGraphModuleAbsEccentricity2_short').hide(); $('#generalGraphModuleAbsEccentricity2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsEccentricity2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsEccentricity3


<div class="example-container" id="generalGraphModuleAbsEccentricity3_container">
<div id="generalGraphModuleAbsEccentricity3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;germanCity&#x27;</span>,
........&gt; direction : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsEccentricity3_container_collapse" onclick="$('#generalGraphModuleAbsEccentricity3_long').hide(); $('#generalGraphModuleAbsEccentricity3_short').show(); window.location.hash='generalGraphModuleAbsEccentricity3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsEccentricity3_short" onclick="$('#generalGraphModuleAbsEccentricity3_short').hide(); $('#generalGraphModuleAbsEccentricity3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;germanCity&#x27;</span>,
........&gt; direction : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsEccentricity3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleEccentricity2


<div class="example-container" id="generalGraphModuleEccentricity2_container">
<div id="generalGraphModuleEccentricity2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._eccentricity();
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleEccentricity2_container_collapse" onclick="$('#generalGraphModuleEccentricity2_long').hide(); $('#generalGraphModuleEccentricity2_short').show(); window.location.hash='generalGraphModuleEccentricity2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleEccentricity2_short" onclick="$('#generalGraphModuleEccentricity2_short').hide(); $('#generalGraphModuleEccentricity2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._eccentricity();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleEccentricity2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleEccentricity3


<div class="example-container" id="generalGraphModuleEccentricity3_container">
<div id="generalGraphModuleEccentricity3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._eccentricity({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleEccentricity3_container_collapse" onclick="$('#generalGraphModuleEccentricity3_long').hide(); $('#generalGraphModuleEccentricity3_short').show(); window.location.hash='generalGraphModuleEccentricity3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleEccentricity3_short" onclick="$('#generalGraphModuleEccentricity3_short').hide(); $('#generalGraphModuleEccentricity3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._eccentricity({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleEccentricity3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsCloseness1


<div class="example-container" id="generalGraphModuleAbsCloseness1_container">
<div id="generalGraphModuleAbsCloseness1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteCloseness({});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">4</span> 
}
</pre>
<div id="generalGraphModuleAbsCloseness1_container_collapse" onclick="$('#generalGraphModuleAbsCloseness1_long').hide(); $('#generalGraphModuleAbsCloseness1_short').show(); window.location.hash='generalGraphModuleAbsCloseness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsCloseness1_short" onclick="$('#generalGraphModuleAbsCloseness1_short').hide(); $('#generalGraphModuleAbsCloseness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteCloseness({});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsCloseness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsCloseness2


<div class="example-container" id="generalGraphModuleAbsCloseness2_container">
<div id="generalGraphModuleAbsCloseness2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">4</span> 
}
</pre>
<div id="generalGraphModuleAbsCloseness2_container_collapse" onclick="$('#generalGraphModuleAbsCloseness2_long').hide(); $('#generalGraphModuleAbsCloseness2_short').show(); window.location.hash='generalGraphModuleAbsCloseness2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsCloseness2_short" onclick="$('#generalGraphModuleAbsCloseness2_short').hide(); $('#generalGraphModuleAbsCloseness2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsCloseness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsCloseness3


<div class="example-container" id="generalGraphModuleAbsCloseness3_container">
<div id="generalGraphModuleAbsCloseness3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;germanCity&#x27;</span>,
........&gt; direction : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="generalGraphModuleAbsCloseness3_container_collapse" onclick="$('#generalGraphModuleAbsCloseness3_long').hide(); $('#generalGraphModuleAbsCloseness3_short').show(); window.location.hash='generalGraphModuleAbsCloseness3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsCloseness3_short" onclick="$('#generalGraphModuleAbsCloseness3_short').hide(); $('#generalGraphModuleAbsCloseness3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">&#x27;germanCity&#x27;</span>,
........&gt; direction : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsCloseness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCloseness1


<div class="example-container" id="generalGraphModuleCloseness1_container">
<div id="generalGraphModuleCloseness1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._closeness();
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleCloseness1_container_collapse" onclick="$('#generalGraphModuleCloseness1_long').hide(); $('#generalGraphModuleCloseness1_short').show(); window.location.hash='generalGraphModuleCloseness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCloseness1_short" onclick="$('#generalGraphModuleCloseness1_short').hide(); $('#generalGraphModuleCloseness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._closeness();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCloseness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCloseness2


<div class="example-container" id="generalGraphModuleCloseness2_container">
<div id="generalGraphModuleCloseness2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleCloseness2_container_collapse" onclick="$('#generalGraphModuleCloseness2_long').hide(); $('#generalGraphModuleCloseness2_short').show(); window.location.hash='generalGraphModuleCloseness2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCloseness2_short" onclick="$('#generalGraphModuleCloseness2_short').hide(); $('#generalGraphModuleCloseness2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCloseness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCloseness3


<div class="example-container" id="generalGraphModuleCloseness3_container">
<div id="generalGraphModuleCloseness3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">0.25</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">0.5</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">0.3333333333333333</span> 
}
</pre>
<div id="generalGraphModuleCloseness3_container_collapse" onclick="$('#generalGraphModuleCloseness3_long').hide(); $('#generalGraphModuleCloseness3_short').show(); window.location.hash='generalGraphModuleCloseness3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCloseness3_short" onclick="$('#generalGraphModuleCloseness3_short').hide(); $('#generalGraphModuleCloseness3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCloseness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsBetweenness1


<div class="example-container" id="generalGraphModuleAbsBetweenness1_container">
<div id="generalGraphModuleAbsBetweenness1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteBetweenness({});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleAbsBetweenness1_container_collapse" onclick="$('#generalGraphModuleAbsBetweenness1_long').hide(); $('#generalGraphModuleAbsBetweenness1_short').show(); window.location.hash='generalGraphModuleAbsBetweenness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsBetweenness1_short" onclick="$('#generalGraphModuleAbsBetweenness1_short').hide(); $('#generalGraphModuleAbsBetweenness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteBetweenness({});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsBetweenness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsBetweenness2


<div class="example-container" id="generalGraphModuleAbsBetweenness2_container">
<div id="generalGraphModuleAbsBetweenness2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteBetweenness({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsBetweenness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsBetweenness3


<div class="example-container" id="generalGraphModuleAbsBetweenness3_container">
<div id="generalGraphModuleAbsBetweenness3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._absoluteBetweenness({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsBetweenness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleBetweenness1


<div class="example-container" id="generalGraphModuleBetweenness1_container">
<div id="generalGraphModuleBetweenness1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._betweenness();
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleBetweenness1_container_collapse" onclick="$('#generalGraphModuleBetweenness1_long').hide(); $('#generalGraphModuleBetweenness1_short').show(); window.location.hash='generalGraphModuleBetweenness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleBetweenness1_short" onclick="$('#generalGraphModuleBetweenness1_short').hide(); $('#generalGraphModuleBetweenness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._betweenness();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleBetweenness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleBetweenness2


<div class="example-container" id="generalGraphModuleBetweenness2_container">
<div id="generalGraphModuleBetweenness2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleBetweenness2_container_collapse" onclick="$('#generalGraphModuleBetweenness2_long').hide(); $('#generalGraphModuleBetweenness2_short').show(); window.location.hash='generalGraphModuleBetweenness2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleBetweenness2_short" onclick="$('#generalGraphModuleBetweenness2_short').hide(); $('#generalGraphModuleBetweenness2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleBetweenness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleBetweenness3


<div class="example-container" id="generalGraphModuleBetweenness3_container">
<div id="generalGraphModuleBetweenness3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
{ 
  <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;frenchCity/Paris&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Berlin&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Cologne&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleBetweenness3_container_collapse" onclick="$('#generalGraphModuleBetweenness3_long').hide(); $('#generalGraphModuleBetweenness3_short').show(); window.location.hash='generalGraphModuleBetweenness3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleBetweenness3_short" onclick="$('#generalGraphModuleBetweenness3_short').hide(); $('#generalGraphModuleBetweenness3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleBetweenness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleRadius1


<div class="example-container" id="generalGraphModuleRadius1_container">
<div id="generalGraphModuleRadius1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._radius();
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleRadius1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleRadius2


<div class="example-container" id="generalGraphModuleRadius2_container">
<div id="generalGraphModuleRadius2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._radius({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleRadius2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleRadius3


<div class="example-container" id="generalGraphModuleRadius3_container">
<div id="generalGraphModuleRadius3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._radius({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleRadius3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDiameter1


<div class="example-container" id="generalGraphModuleDiameter1_container">
<div id="generalGraphModuleDiameter1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._diameter();
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleDiameter1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDiameter2


<div class="example-container" id="generalGraphModuleDiameter2_container">
<div id="generalGraphModuleDiameter2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._diameter({<span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleDiameter2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDiameter3


<div class="example-container" id="generalGraphModuleDiameter3_container">
<div id="generalGraphModuleDiameter3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; graph._diameter({<span class="hljs-attr">direction</span> : <span class="hljs-string">&#x27;outbound&#x27;</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">&#x27;distance&#x27;</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleDiameter3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_knows_sample


<div class="example-container" id="graph_create_knows_sample_container">
<div id="graph_create_knows_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;knows_graph&quot;</span>);
arangosh&gt; db.persons.toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleA6---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleB----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBC---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBG---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
  } 
]
arangosh&gt; db.knows.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88554&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/88554&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBK---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88556&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/88556&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBO---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88558&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/88558&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBS---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88560&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/88560&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBW---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88562&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/88562&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleBW--A&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;knows_graph&quot;</span>);
</pre>
<div id="graph_create_knows_sample_container_collapse" onclick="$('#graph_create_knows_sample_long').hide(); $('#graph_create_knows_sample_short').show(); window.location.hash='graph_create_knows_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_knows_sample_short" onclick="$('#graph_create_knows_sample_short').hide(); $('#graph_create_knows_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;knows_graph&quot;</span>);
arangosh&gt; db.persons.toArray()
arangosh&gt; db.knows.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;knows_graph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_knows_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_social_sample


<div class="example-container" id="graph_create_social_sample_container">
<div id="graph_create_social_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; db.female.toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJq---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;diana&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJy--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Diana&quot;</span> 
  } 
]
arangosh&gt; db.male.toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charly&quot;</span> 
  } 
]
arangosh&gt; db.relation.toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88806&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/88806&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJ2---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88808&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/88808&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJ6---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88810&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/88810&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/charly&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleJ6--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;married&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;charly&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88812&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/88812&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleK----&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;social&quot;</span>);
</pre>
<div id="graph_create_social_sample_container_collapse" onclick="$('#graph_create_social_sample_long').hide(); $('#graph_create_social_sample_short').show(); window.location.hash='graph_create_social_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_social_sample_short" onclick="$('#graph_create_social_sample_short').hide(); $('#graph_create_social_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; db.female.toArray()
arangosh&gt; db.male.toArray()
arangosh&gt; db.relation.toArray()
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;social&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_social_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_cities_sample


<div class="example-container" id="graph_create_cities_sample_container">
<div id="graph_create_cities_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; db.frenchCity.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Lyon&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yld9y---&quot;</span>, 
    <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">80000</span>, 
    <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;geometry&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;Point&quot;</span>, 
      <span class="hljs-string">&quot;coordinates&quot;</span> : [ 
        <span class="hljs-number">4.84</span>, 
        <span class="hljs-number">45.76</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Paris&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yld92---&quot;</span>, 
    <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">4000000</span>, 
    <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;geometry&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;Point&quot;</span>, 
      <span class="hljs-string">&quot;coordinates&quot;</span> : [ 
        <span class="hljs-number">2.3508</span>, 
        <span class="hljs-number">48.8567</span> 
      ] 
    } 
  } 
]
arangosh&gt; db.germanCity.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Berlin&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yld9m---&quot;</span>, 
    <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">3000000</span>, 
    <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;geometry&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;Point&quot;</span>, 
      <span class="hljs-string">&quot;coordinates&quot;</span> : [ 
        <span class="hljs-number">13.3833</span>, 
        <span class="hljs-number">52.5167</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yld9q---&quot;</span>, 
    <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">1000000</span>, 
    <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;geometry&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;Point&quot;</span>, 
      <span class="hljs-string">&quot;coordinates&quot;</span> : [ 
        <span class="hljs-number">6.9528</span>, 
        <span class="hljs-number">50.9364</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yld9u---&quot;</span>, 
    <span class="hljs-string">&quot;population&quot;</span> : <span class="hljs-number">1000000</span>, 
    <span class="hljs-string">&quot;isCapital&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;geometry&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;Point&quot;</span>, 
      <span class="hljs-string">&quot;coordinates&quot;</span> : [ 
        <span class="hljs-number">10.0014</span>, 
        <span class="hljs-number">53.5653</span> 
      ] 
    } 
  } 
]
arangosh&gt; db.germanHighway.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88465&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/88465&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-G---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">850</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88467&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/88467&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-K---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">400</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88469&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;germanHighway/88469&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-O---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">500</span> 
  } 
]
arangosh&gt; db.frenchHighway.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88471&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;frenchHighway/88471&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-S---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">550</span> 
  } 
]
arangosh&gt; db.internationalHighway.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88473&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/88473&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-W---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1100</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88475&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/88475&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Berlin&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-a---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1200</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88477&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/88477&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-e---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">900</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88479&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/88479&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Hamburg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-i---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1300</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88481&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/88481&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Lyon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-i--A&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">700</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88483&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;internationalHighway/88483&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;germanCity/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;frenchCity/Paris&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yle-m---&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">550</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
</pre>
<div id="graph_create_cities_sample_container_collapse" onclick="$('#graph_create_cities_sample_long').hide(); $('#graph_create_cities_sample_short').show(); window.location.hash='graph_create_cities_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_cities_sample_short" onclick="$('#graph_create_cities_sample_short').hide(); $('#graph_create_cities_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
arangosh&gt; db.frenchCity.toArray();
arangosh&gt; db.germanCity.toArray();
arangosh&gt; db.germanHighway.toArray();
arangosh&gt; db.frenchHighway.toArray();
arangosh&gt; db.internationalHighway.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_cities_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_traversal_sample


<div class="example-container" id="graph_create_traversal_sample_container">
<div id="graph_create_traversal_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
arangosh&gt; db.circles.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/A&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLi---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;1&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLi--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;2&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLm---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;3&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/D&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLq---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;4&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;E&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/E&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLu---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;5&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;F&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/F&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLu--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;6&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;G&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleLy---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;7&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;H&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/H&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleL2---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;8&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;I&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/I&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleL2--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;9&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;J&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/J&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleL6---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;10&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;K&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/K&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleM----&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;11&quot;</span> 
  } 
]
arangosh&gt; db.edges.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88873&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88873&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleM---A&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_bar&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88875&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88875&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMC---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_blarg&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88877&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88877&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/C&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/D&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMG---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_blorg&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88879&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88879&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/E&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMG--A&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_blub&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88881&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88881&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/E&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/F&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMK---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_schubi&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88883&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88883&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMO---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_foo&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88885&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88885&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/H&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMO--A&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_blob&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88887&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88887&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/H&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/I&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMS---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_blub&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88889&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88889&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/J&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMW---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_zip&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88891&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/88891&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/J&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/K&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleMW--A&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_zup&quot;</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
</pre>
<div id="graph_create_traversal_sample_container_collapse" onclick="$('#graph_create_traversal_sample_long').hide(); $('#graph_create_traversal_sample_short').show(); window.location.hash='graph_create_traversal_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_traversal_sample_short" onclick="$('#graph_create_traversal_sample_short').hide(); $('#graph_create_traversal_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
arangosh&gt; db.circles.toArray();
arangosh&gt; db.edges.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_traversal_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_kshortestpaths_sample


<div class="example-container" id="graph_create_kshortestpaths_sample_container">
<div id="graph_create_kshortestpaths_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
arangosh&gt; db.places.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleC6---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Inverness&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleD----&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Aberdeen&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDC---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Leuchars&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDG---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;StAndrews&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDK---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Edinburgh&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDO---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Glasgow&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;York&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDO--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;York&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDS---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Carlisle&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDW---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Birmingham&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;London&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDW--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;London&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDa--_&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Brussels&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDe---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Cologne&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDi---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Toronto&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDi--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Winnipeg&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDm---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Saskatoon&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDm--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Edmonton&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDq---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Jasper&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDq--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Vancouver&quot;</span> 
  } 
]
arangosh&gt; db.connections.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88622&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88622&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDu---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88624&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88624&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDu--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88626&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88626&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleDy---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88628&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88628&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleD2---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88630&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88630&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleD2--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88632&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88632&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleD6---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88634&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88634&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleD6--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88636&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88636&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleE----&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88638&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88638&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleE---A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88640&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88640&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEC---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">4</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88642&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88642&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEC--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88644&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88644&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEG---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88646&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88646&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEG--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88648&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88648&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEK---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88650&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88650&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEK--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88652&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88652&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEO---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88654&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88654&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEO--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88656&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88656&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleES---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88658&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88658&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEW---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">0.2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88660&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88660&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEW--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">0.2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88662&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88662&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEa---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.8</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88664&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88664&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEa--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88666&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88666&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEe---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88668&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88668&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEe--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88670&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88670&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEi---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88672&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88672&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEi--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88674&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88674&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEm---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">36</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88676&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88676&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEm--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">35</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88678&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88678&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEq---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">12</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88680&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88680&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEq--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88682&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88682&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEu---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">12</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88684&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88684&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEu--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">17</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88686&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88686&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEy---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">6</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88688&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88688&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleEy--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88690&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88690&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleE2---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">12</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88692&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/88692&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleE2--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">13</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
</pre>
<div id="graph_create_kshortestpaths_sample_container_collapse" onclick="$('#graph_create_kshortestpaths_sample_long').hide(); $('#graph_create_kshortestpaths_sample_short').show(); window.location.hash='graph_create_kshortestpaths_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_kshortestpaths_sample_short" onclick="$('#graph_create_kshortestpaths_sample_short').hide(); $('#graph_create_kshortestpaths_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
arangosh&gt; db.places.toArray();
arangosh&gt; db.connections.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_kshortestpaths_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_world_sample


<div class="example-container" id="graph_create_world_sample_container">
<div id="graph_create_world_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;worldCountry&quot;</span>);
arangosh&gt; db.worldVertices.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;world&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOS---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;World&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;root&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOW---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Africa&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;continent&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOa---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Asia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;continent&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;continent-australia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-australia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Australia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;continent&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOi---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Europe&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;continent&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOm---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;North America&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;continent&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOq---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;South America&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;continent&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-afghanistan&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-afghanistan&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOq--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Afghanistan&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;AFG&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-albania&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-albania&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Albania&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;ALB&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-algeria&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-algeria&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Algeria&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;DZA&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-andorra&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-andorra&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleOy--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Andorra&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;AND&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-angola&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-angola&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleO2---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angola&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;AGO&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-antigua-and-barbuda&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-antigua-and-barbuda&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleO6---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Antigua and Barbuda&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;ATG&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-argentina&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-argentina&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleO6--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Argentina&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;ARG&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-australia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-australia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleP----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Australia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;AUS&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-austria&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-austria&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleP---A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Austria&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;AUT&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bahamas&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bahamas&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePC---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bahamas&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BHS&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bahrain&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bahrain&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePC--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bahrain&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BHR&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bangladesh&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bangladesh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePG---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bangladesh&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BGD&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-barbados&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-barbados&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Barbados&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BRB&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-belgium&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-belgium&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePK---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Belgium&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BEL&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bhutan&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bhutan&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePK--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bhutan&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BTN&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bolivia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bolivia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePK--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bolivia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BOL&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bosnia-and-herzegovina&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bosnia-and-herzegovina&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePO---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bosnia and Herzegovina&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BIH&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-botswana&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-botswana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePO--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Botswana&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BWA&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-brazil&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-brazil&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePS---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Brazil&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BRA&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-brunei&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-brunei&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePS--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Brunei&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BRN&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-bulgaria&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bulgaria&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePW---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bulgaria&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BGR&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-burkina-faso&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-burkina-faso&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePW--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Burkina Faso&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BFA&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-burundi&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-burundi&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePW--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Burundi&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;BDI&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-cambodia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cambodia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePa---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Cambodia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;KHM&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-cameroon&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cameroon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePa--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Cameroon&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;CMR&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-canada&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-canada&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Canada&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;CAN&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-chad&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-chad&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePe--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Chad&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;TCD&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-chile&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-chile&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePi---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Chile&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;CHL&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-colombia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-colombia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePi--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Colombia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;COL&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-cote-d-ivoire&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cote-d-ivoire&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePm---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Cote d&#x27;Ivoire&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;CIV&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-croatia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-croatia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePm--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Croatia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;HRV&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-czech-republic&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-czech-republic&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePm--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Czech Republic&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;CZE&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-denmark&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-denmark&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePq---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Denmark&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;DNK&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-ecuador&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-ecuador&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePq--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Ecuador&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;ECU&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-egypt&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-egypt&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Egypt&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;EGY&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-eritrea&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-eritrea&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePu--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eritrea&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;ERI&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-finland&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-finland&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePu--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Finland&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;FIN&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-france&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-france&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;France&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;FRA&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-germany&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-germany&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylePy--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Germany&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;DEU&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;country-people-s-republic-of-china&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-people-s-republic-of-china&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleP2---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;People&#x27;s Republic of China&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;country&quot;</span>, 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;CHN&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-algiers&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-algiers&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleP2--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Algiers&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-andorra-la-vella&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-andorra-la-vella&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleP6---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Andorra la Vella&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-asmara&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-asmara&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleP6--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Asmara&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-bandar-seri-begawan&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bandar-seri-begawan&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bandar Seri Begawan&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-beijing&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-beijing&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ---A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Beijing&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-berlin&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-berlin&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ---C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Berlin&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-bogota&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bogota&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQC---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bogota&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-brasilia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-brasilia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQC--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Brasilia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-bridgetown&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bridgetown&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQG---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bridgetown&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-brussels&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Brussels&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-buenos-aires&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-buenos-aires&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQK---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Buenos Aires&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-bujumbura&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bujumbura&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQK--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bujumbura&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-cairo&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-cairo&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQK--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Cairo&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-canberra&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-canberra&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQO---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Canberra&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-copenhagen&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-copenhagen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQO--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Copenhagen&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-dhaka&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-dhaka&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQS---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dhaka&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-gaborone&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-gaborone&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQS--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gaborone&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-helsinki&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-helsinki&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQW---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helsinki&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-kabul&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-kabul&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQW--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Kabul&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-la-paz&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-la-paz&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQa---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;La Paz&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-luanda&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-luanda&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQa--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Luanda&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-manama&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-manama&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Manama&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-nassau&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-nassau&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQe--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Nassau&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-n-djamena&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-n-djamena&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQe--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;N&#x27;Djamena&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-ottawa&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-ottawa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQi---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Ottawa&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-ouagadougou&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-ouagadougou&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQi--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Ouagadougou&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-paris&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-paris&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQm---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Paris&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-phnom-penh&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-phnom-penh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQm--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Phnom Penh&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-prague&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-prague&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQq---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Prague&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-quito&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-quito&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQq--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Quito&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-saint-john-s&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-saint-john-s&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Saint John&#x27;s&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-santiago&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-santiago&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQu--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Santiago&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-sarajevo&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-sarajevo&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQu--C&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Sarajevo&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-sofia&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-sofia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Sofia&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-thimphu&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-thimphu&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQy--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Thimphu&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-tirana&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-tirana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ2---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Tirana&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-vienna&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-vienna&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ2--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Vienna&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-yamoussoukro&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-yamoussoukro&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ6---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Yamoussoukro&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-yaounde&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-yaounde&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleQ6--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Yaounde&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;capital-zagreb&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-zagreb&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleR----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Zagreb&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;capital&quot;</span> 
  } 
]
arangosh&gt; db.worldEdges.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89020&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89020&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleR---A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89022&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89022&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRC---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89024&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89024&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-australia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRC--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89026&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89026&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRG---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89028&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89028&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRG--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89030&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89030&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/world&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRK---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89032&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89032&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-afghanistan&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRK--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89034&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89034&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-albania&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRO---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89036&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89036&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-algeria&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRO--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89038&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89038&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-andorra&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRO--C&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89040&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89040&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-angola&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRS---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89042&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89042&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-antigua-and-barbuda&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRS--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89044&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89044&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-argentina&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRW---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89046&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89046&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-australia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-australia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRW--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89048&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89048&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-austria&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRa---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89050&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89050&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bahamas&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRa--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89052&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89052&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bahrain&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRe---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89054&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89054&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bangladesh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRe--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89056&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89056&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-barbados&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRi---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89058&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89058&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-belgium&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRi--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89060&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89060&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bhutan&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRm---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89062&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89062&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bolivia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRm--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89064&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89064&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bosnia-and-herzegovina&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRq---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89066&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89066&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-botswana&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRq--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89068&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89068&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-brazil&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRu---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89070&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89070&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-brunei&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRu--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89072&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89072&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bulgaria&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRy---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89074&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89074&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-burkina-faso&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleRy--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89076&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89076&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-burundi&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleR2---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89078&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89078&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cambodia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleR2--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89080&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89080&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cameroon&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleR6---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89082&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89082&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-canada&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-north-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleR6--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89084&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89084&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-chad&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleS----&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89086&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89086&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-chile&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleS---A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89088&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89088&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-colombia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSC---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89090&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89090&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cote-d-ivoire&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSC--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89092&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89092&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-croatia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSG---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89094&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89094&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-czech-republic&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSG--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89096&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89096&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-denmark&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSK---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89098&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89098&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-ecuador&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-south-america&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSK--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89100&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89100&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-egypt&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSO---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89102&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89102&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-eritrea&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-africa&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSO--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89104&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89104&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-finland&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSO--C&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89106&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89106&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-france&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSS--_&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89108&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89108&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-germany&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-europe&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSW---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89110&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89110&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-people-s-republic-of-china&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/continent-asia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSW--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89112&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89112&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-algiers&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-algeria&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSW--C&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89114&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89114&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-andorra-la-vella&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-andorra&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSa---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89116&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89116&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-asmara&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-eritrea&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSa--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89118&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89118&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bandar-seri-begawan&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-brunei&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSe---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89120&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89120&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-beijing&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-people-s-republic-of-china&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSe--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89122&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89122&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-berlin&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-germany&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSi---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89124&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89124&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bogota&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-colombia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSi--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89126&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89126&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-brasilia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-brazil&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSm---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89128&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89128&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bridgetown&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-barbados&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSm--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89130&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89130&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-brussels&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-belgium&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSq---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89132&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89132&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-buenos-aires&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-argentina&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSq--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89134&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89134&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-bujumbura&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-burundi&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSu---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89136&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89136&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-cairo&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-egypt&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSu--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89138&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89138&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-canberra&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-australia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSy---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89140&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89140&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-copenhagen&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-denmark&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleSy--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89142&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89142&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-dhaka&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bangladesh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleS2---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89144&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89144&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-gaborone&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-botswana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleS2--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89146&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89146&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-helsinki&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-finland&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleS6---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89148&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89148&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-kabul&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-afghanistan&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleS6--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89150&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89150&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-la-paz&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bolivia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleT----&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89152&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89152&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-luanda&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-angola&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleT---A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89154&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89154&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-manama&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bahrain&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTC---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89156&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89156&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-nassau&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bahamas&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTC--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89158&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89158&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-n-djamena&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-chad&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTG---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89160&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89160&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-ottawa&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-canada&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTG--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89162&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89162&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-ouagadougou&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-burkina-faso&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTK---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89164&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89164&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-paris&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-france&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTK--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89166&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89166&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-phnom-penh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cambodia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTO---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89168&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89168&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-prague&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-czech-republic&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTO--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89170&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89170&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-quito&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-ecuador&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTO--C&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89172&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89172&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-saint-john-s&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-antigua-and-barbuda&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTS---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89174&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89174&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-santiago&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-chile&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTS--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89176&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89176&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-sarajevo&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bosnia-and-herzegovina&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTW---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89178&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89178&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-sofia&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bulgaria&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTW--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89180&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89180&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-thimphu&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-bhutan&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTa---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89182&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89182&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-tirana&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-albania&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTa--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89184&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89184&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-vienna&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-austria&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTe---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89186&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89186&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-yamoussoukro&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cote-d-ivoire&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTe--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89188&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89188&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-yaounde&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-cameroon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTi---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89190&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;worldEdges/89190&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;worldVertices/capital-zagreb&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;worldVertices/country-croatia&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleTi--A&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;is-in&quot;</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;worldCountry&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;worldCountryUnManaged&quot;</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;worldCountryUnManaged&quot;</span>);
</pre>
<div id="graph_create_world_sample_container_collapse" onclick="$('#graph_create_world_sample_long').hide(); $('#graph_create_world_sample_short').show(); window.location.hash='graph_create_world_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_world_sample_short" onclick="$('#graph_create_world_sample_short').hide(); $('#graph_create_world_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;worldCountry&quot;</span>);
arangosh&gt; db.worldVertices.toArray();
arangosh&gt; db.worldEdges.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;worldCountry&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;worldCountryUnManaged&quot;</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;worldCountryUnManaged&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_world_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_mps_sample


<div class="example-container" id="graph_create_mps_sample_container">
<div id="graph_create_mps_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;mps_graph&quot;</span>);
arangosh&gt; db.mps_verts.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_verts/A&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleHm---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_verts/B&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleHq---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_verts/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleHu---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_verts/D&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleHy---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;E&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_verts/E&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleHy--A&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;F&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_verts/F&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleH2---&quot;</span> 
  } 
]
arangosh&gt; db.mps_edges.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88740&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88740&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/B&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleH6---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;A&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88742&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88742&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/E&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleI----&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;A&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88744&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88744&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/D&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleI---A&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;A&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88746&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88746&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/B&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleIC---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;B&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88748&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88748&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/D&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleIG---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;D&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88750&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88750&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/E&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/F&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleIK---&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;E&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;88752&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mps_edges/88752&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;mps_verts/F&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;mps_verts/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yleIK--A&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;F&quot;</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;mps_graph&quot;</span>);
</pre>
<div id="graph_create_mps_sample_container_collapse" onclick="$('#graph_create_mps_sample_long').hide(); $('#graph_create_mps_sample_short').show(); window.location.hash='graph_create_mps_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_mps_sample_short" onclick="$('#graph_create_mps_sample_short').hide(); $('#graph_create_mps_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;mps_graph&quot;</span>);
arangosh&gt; db.mps_verts.toArray();
arangosh&gt; db.mps_edges.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;mps_graph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_mps_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementCreate1_cluster


<div class="example-container" id="satelliteGraphManagementCreate1_cluster_container">
<div id="satelliteGraphManagementCreate1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> satelliteGraphModule = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = satelliteGraphModule._create(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
arangosh&gt; satelliteGraphModule._graph(<span class="hljs-string">&quot;satelliteGraph&quot;</span>);
{[SatelliteGraph] 
}
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementCreate1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementCreate2_cluster


<div class="example-container" id="satelliteGraphManagementCreate2_cluster_container">
<div id="satelliteGraphManagementCreate2_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>) ];
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SatelliteGraph] 
  <span class="hljs-string">&quot;edges&quot;</span> : [ArangoCollection <span class="hljs-number">2010147</span>, <span class="hljs-string">&quot;edges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010145</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementCreate2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementCreate3_cluster


<div class="example-container" id="satelliteGraphManagementCreate3_cluster_container">
<div id="satelliteGraphManagementCreate3_cluster_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ graph_module._relation(<span class="hljs-string">&quot;myRelation&quot;</span>, [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>], [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>]) ];
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions, [<span class="hljs-string">&quot;sessions&quot;</span>]);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SatelliteGraph] 
  <span class="hljs-string">&quot;myRelation&quot;</span> : [ArangoCollection <span class="hljs-number">2010156</span>, <span class="hljs-string">&quot;myRelation&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;female&quot;</span> : [ArangoCollection <span class="hljs-number">2010154</span>, <span class="hljs-string">&quot;female&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;male&quot;</span> : [ArangoCollection <span class="hljs-number">2010155</span>, <span class="hljs-string">&quot;male&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;sessions&quot;</span> : [ArangoCollection <span class="hljs-number">2010152</span>, <span class="hljs-string">&quot;sessions&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="satelliteGraphManagementCreate3_cluster_container_collapse" onclick="$('#satelliteGraphManagementCreate3_cluster_long').hide(); $('#satelliteGraphManagementCreate3_cluster_short').show(); window.location.hash='satelliteGraphManagementCreate3_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="satelliteGraphManagementCreate3_cluster_short" onclick="$('#satelliteGraphManagementCreate3_cluster_short').hide(); $('#satelliteGraphManagementCreate3_cluster_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ graph_module._relation(<span class="hljs-string">&quot;myRelation&quot;</span>, [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>], [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>]) ];
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions, [<span class="hljs-string">&quot;sessions&quot;</span>]);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

      @endDocuBlock satelliteGraphManagementCreate3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify1_cluster


<div class="example-container" id="satelliteGraphManagementModify1_cluster_container">
<div id="satelliteGraphManagementModify1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], [<span class="hljs-string">&quot;other&quot;</span>]);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">&quot;other&quot;</span> 
]
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify2_cluster


<div class="example-container" id="satelliteGraphManagementModify2_cluster_container">
<div id="satelliteGraphManagementModify2_cluster_long">
<pre>
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;other&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SatelliteGraph] 
  <span class="hljs-string">&quot;edges&quot;</span> : [ArangoCollection <span class="hljs-number">2010180</span>, <span class="hljs-string">&quot;edges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010177</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify3_cluster


<div class="example-container" id="satelliteGraphManagementModify3_cluster_container">
<div id="satelliteGraphManagementModify3_cluster_long">
<pre>
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
[ArangoError <span class="hljs-number">1928</span>: collection is not <span class="hljs-keyword">in</span> list <span class="hljs-keyword">of</span> orphan collections]
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify4_cluster


<div class="example-container" id="satelliteGraphManagementModify4_cluster_container">
<div id="satelliteGraphManagementModify4_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], []);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; db._drop(<span class="hljs-string">&quot;vertices&quot;</span>);
[ArangoError <span class="hljs-number">1485</span>: Collection <span class="hljs-string">&#x27;vertices&#x27;</span> must not be dropped <span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;edges&#x27;</span> has distributeShardsLike set to <span class="hljs-string">&#x27;vertices&#x27;</span>.]
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify4_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify5_cluster


<div class="example-container" id="satelliteGraphManagementModify5_cluster_container">
<div id="satelliteGraphManagementModify5_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], []);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;myGraph&quot;</span>, <span class="hljs-literal">true</span>); <span class="hljs-comment">// does not drop any collections</span>
arangosh&gt; db._drop(<span class="hljs-string">&quot;edges&quot;</span>); <span class="hljs-comment">// drop before sharding-defining &#x27;vertices&#x27; collection</span>
arangosh&gt; db._drop(<span class="hljs-string">&quot;vertices&quot;</span>);
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify5_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify6_cluster


<div class="example-container" id="satelliteGraphManagementModify6_cluster_container">
<div id="satelliteGraphManagementModify6_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/satellite-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], []);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SatelliteGraph] 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010204</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify6_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementModify7_cluster


<div class="example-container" id="satelliteGraphManagementModify7_cluster_container">
<div id="satelliteGraphManagementModify7_cluster_long">
<pre>
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementModify7_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementRemove1_cluster


<div class="example-container" id="satelliteGraphManagementRemove1_cluster_container">
<div id="satelliteGraphManagementRemove1_cluster_long">
<pre>
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;myGraph&quot;</span>, <span class="hljs-literal">true</span>);
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementRemove1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-satellite-graphs-management.md -->
      @startDocuBlockInline satelliteGraphManagementRemove2_cluster


<div class="example-container" id="satelliteGraphManagementRemove2_cluster_container">
<div id="satelliteGraphManagementRemove2_cluster_long">
<pre>
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;other&quot;</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;myGraph&quot;</span>, <span class="hljs-literal">true</span>);
[ArangoError <span class="hljs-number">1485</span>: Collection <span class="hljs-string">&#x27;vertices&#x27;</span> must not be dropped <span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;other&#x27;</span> has distributeShardsLike set to <span class="hljs-string">&#x27;vertices&#x27;</span>.]
</pre>
</div>
</div>

      @endDocuBlock satelliteGraphManagementRemove2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbName


<div class="example-container" id="dbName_container">
<div id="dbName_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db._name();
_system
</pre>
</div>
</div>

@endDocuBlock dbName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbId


<div class="example-container" id="dbId_container">
<div id="dbId_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db._id();
<span class="hljs-number">1</span>
</pre>
</div>
</div>

@endDocuBlock dbId


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbPath


<div class="example-container" id="dbPath_container">
<div id="dbPath_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db._path();
none
</pre>
</div>
</div>

@endDocuBlock dbPath


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbProperties_cluster


<div class="example-container" id="dbProperties_cluster_container">
<div id="dbProperties_cluster_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db._properties();
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;sharding&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;replicationFactor&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;path&quot;</span> : <span class="hljs-string">&quot;&quot;</span> 
}
</pre>
<div id="dbProperties_cluster_container_collapse" onclick="$('#dbProperties_cluster_long').hide(); $('#dbProperties_cluster_short').show(); window.location.hash='dbProperties_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="dbProperties_cluster_short" onclick="$('#dbProperties_cluster_short').hide(); $('#dbProperties_cluster_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db._properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

@endDocuBlock dbProperties_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
    @startDocuBlockInline dbVersion


<div class="example-container" id="dbVersion_container">
<div id="dbVersion_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).db._version();
<span class="hljs-number">3.7</span><span class="hljs-number">.18</span>
</pre>
</div>
</div>

    @endDocuBlock dbVersion


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs.md -->
    @startDocuBlockInline generalGraphCreateGraphHowTo1


<div class="example-container" id="generalGraphCreateGraphHowTo1_container">
<div id="generalGraphCreateGraphHowTo1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>);
arangosh&gt; graph;
{[Graph] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphHowTo1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs.md -->
    @startDocuBlockInline generalGraphCreateGraphHowTo2


<div class="example-container" id="generalGraphCreateGraphHowTo2_container">
<div id="generalGraphCreateGraphHowTo2_long">
<pre>
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;shop&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;customer&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;pet&quot;</span>);
arangosh&gt; graph;
{[Graph] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphHowTo2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs.md -->
    @startDocuBlockInline generalGraphCreateGraphHowTo3


<div class="example-container" id="generalGraphCreateGraphHowTo3_container">
<div id="generalGraphCreateGraphHowTo3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> rel = graph_module._relation(<span class="hljs-string">&quot;isCustomer&quot;</span>, [<span class="hljs-string">&quot;shop&quot;</span>], [<span class="hljs-string">&quot;customer&quot;</span>]);
arangosh&gt; graph._extendEdgeDefinitions(rel);
arangosh&gt; graph;
{[Graph] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphHowTo3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowTo1_cluster


<div class="example-container" id="smartGraphCreateGraphHowTo1_cluster_container">
<div id="smartGraphCreateGraphHowTo1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
}
</pre>
</div>
</div>

    @endDocuBlock smartGraphCreateGraphHowTo1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowToDisjoint1_cluster


<div class="example-container" id="smartGraphCreateGraphHowToDisjoint1_cluster_container">
<div id="smartGraphCreateGraphHowToDisjoint1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>, <span class="hljs-attr">isDisjoint</span>: <span class="hljs-literal">true</span>});
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
}
</pre>
</div>
</div>

    @endDocuBlock smartGraphCreateGraphHowToDisjoint1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowTo2_cluster


<div class="example-container" id="smartGraphCreateGraphHowTo2_cluster_container">
<div id="smartGraphCreateGraphHowTo2_cluster_long" style="display: none;">
<pre>
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;shop&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;customer&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;pet&quot;</span>);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
  <span class="hljs-string">&quot;customer&quot;</span> : [ArangoCollection <span class="hljs-number">2010374</span>, <span class="hljs-string">&quot;customer&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;pet&quot;</span> : [ArangoCollection <span class="hljs-number">2010384</span>, <span class="hljs-string">&quot;pet&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;shop&quot;</span> : [ArangoCollection <span class="hljs-number">2010364</span>, <span class="hljs-string">&quot;shop&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="smartGraphCreateGraphHowTo2_cluster_container_collapse" onclick="$('#smartGraphCreateGraphHowTo2_cluster_long').hide(); $('#smartGraphCreateGraphHowTo2_cluster_short').show(); window.location.hash='smartGraphCreateGraphHowTo2_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="smartGraphCreateGraphHowTo2_cluster_short" onclick="$('#smartGraphCreateGraphHowTo2_cluster_short').hide(); $('#smartGraphCreateGraphHowTo2_cluster_long').show();">
<pre>
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;shop&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;customer&quot;</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;pet&quot;</span>);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock smartGraphCreateGraphHowTo2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowTo3_cluster


<div class="example-container" id="smartGraphCreateGraphHowTo3_cluster_container">
<div id="smartGraphCreateGraphHowTo3_cluster_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> rel = graph_module._relation(<span class="hljs-string">&quot;isCustomer&quot;</span>, [<span class="hljs-string">&quot;shop&quot;</span>], [<span class="hljs-string">&quot;customer&quot;</span>]);
arangosh&gt; graph._extendEdgeDefinitions(rel);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
  <span class="hljs-string">&quot;isCustomer&quot;</span> : [ArangoCollection <span class="hljs-number">2010432</span>, <span class="hljs-string">&quot;isCustomer&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;shop&quot;</span> : [ArangoCollection <span class="hljs-number">2010401</span>, <span class="hljs-string">&quot;shop&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;customer&quot;</span> : [ArangoCollection <span class="hljs-number">2010411</span>, <span class="hljs-string">&quot;customer&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;pet&quot;</span> : [ArangoCollection <span class="hljs-number">2010421</span>, <span class="hljs-string">&quot;pet&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="smartGraphCreateGraphHowTo3_cluster_container_collapse" onclick="$('#smartGraphCreateGraphHowTo3_cluster_long').hide(); $('#smartGraphCreateGraphHowTo3_cluster_short').show(); window.location.hash='smartGraphCreateGraphHowTo3_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="smartGraphCreateGraphHowTo3_cluster_short" onclick="$('#smartGraphCreateGraphHowTo3_cluster_short').hide(); $('#smartGraphCreateGraphHowTo3_cluster_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> rel = graph_module._relation(<span class="hljs-string">&quot;isCustomer&quot;</span>, [<span class="hljs-string">&quot;shop&quot;</span>], [<span class="hljs-string">&quot;customer&quot;</span>]);
arangosh&gt; graph._extendEdgeDefinitions(rel);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock smartGraphCreateGraphHowTo3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-vertex-centric.md -->
    @startDocuBlockInline ensureVertexCentricIndex


<div class="example-container" id="ensureVertexCentricIndex_container">
<div id="ensureVertexCentricIndex_long" style="display: none;">
<pre>
arangosh&gt; db.collection.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;_from&quot;</span>, <span class="hljs-string">&quot;type&quot;</span> ] })
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;_from&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;collection/77283&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240662540288&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="ensureVertexCentricIndex_container_collapse" onclick="$('#ensureVertexCentricIndex_long').hide(); $('#ensureVertexCentricIndex_short').show(); window.location.hash='ensureVertexCentricIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureVertexCentricIndex_short" onclick="$('#ensureVertexCentricIndex_short').hide(); $('#ensureVertexCentricIndex_long').show();">
<pre>
arangosh&gt; db.collection.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;_from&quot;</span>, <span class="hljs-string">&quot;type&quot;</span> ] })
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureVertexCentricIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseNameKnown


<div class="example-container" id="collectionDatabaseNameKnown_container">
<div id="collectionDatabaseNameKnown_long">
<pre>
arangosh&gt; db._collection(<span class="hljs-string">&quot;demo&quot;</span>);
[ArangoCollection <span class="hljs-number">98</span>, <span class="hljs-string">&quot;demo&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseNameKnown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseNameUnknown


<div class="example-container" id="collectionDatabaseNameUnknown_container">
<div id="collectionDatabaseNameUnknown_long">
<pre>
arangosh&gt; db._collection(<span class="hljs-string">&quot;unknown&quot;</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseNameUnknown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateSuccess


<div class="example-container" id="collectionDatabaseCreateSuccess_container">
<div id="collectionDatabaseCreateSuccess_long" style="display: none;">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">&quot;users&quot;</span>);
[ArangoCollection <span class="hljs-number">76083</span>, <span class="hljs-string">&quot;users&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; c.properties();
{ 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span> 
}
</pre>
<div id="collectionDatabaseCreateSuccess_container_collapse" onclick="$('#collectionDatabaseCreateSuccess_long').hide(); $('#collectionDatabaseCreateSuccess_short').show(); window.location.hash='collectionDatabaseCreateSuccess_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateSuccess_short" onclick="$('#collectionDatabaseCreateSuccess_short').hide(); $('#collectionDatabaseCreateSuccess_long').show();">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">&quot;users&quot;</span>);
arangosh&gt; c.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateSuccess


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateProperties


<div class="example-container" id="collectionDatabaseCreateProperties_container">
<div id="collectionDatabaseCreateProperties_long" style="display: none;">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">&quot;users&quot;</span>, { <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span>,
........&gt; journalSize : <span class="hljs-number">1024</span> * <span class="hljs-number">1204</span>});
[ArangoCollection <span class="hljs-number">76063</span>, <span class="hljs-string">&quot;users&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; c.properties();
{ 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span> 
}
</pre>
<div id="collectionDatabaseCreateProperties_container_collapse" onclick="$('#collectionDatabaseCreateProperties_long').hide(); $('#collectionDatabaseCreateProperties_short').show(); window.location.hash='collectionDatabaseCreateProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateProperties_short" onclick="$('#collectionDatabaseCreateProperties_short').hide(); $('#collectionDatabaseCreateProperties_long').show();">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">&quot;users&quot;</span>, { <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span>,
........&gt; journalSize : <span class="hljs-number">1024</span> * <span class="hljs-number">1204</span>});
arangosh&gt; c.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateProperties


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateKey


<div class="example-container" id="collectionDatabaseCreateKey_container">
<div id="collectionDatabaseCreateKey_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;users&quot;</span>,
........&gt; { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;autoincrement&quot;</span>, <span class="hljs-attr">offset</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">increment</span>: <span class="hljs-number">5</span> } });
[ArangoCollection <span class="hljs-number">76053</span>, <span class="hljs-string">&quot;users&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 1&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/10&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;10&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZFe---&quot;</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 2&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/15&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;15&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZFi---&quot;</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 3&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/20&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;20&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZFm---&quot;</span> 
}
</pre>
<div id="collectionDatabaseCreateKey_container_collapse" onclick="$('#collectionDatabaseCreateKey_long').hide(); $('#collectionDatabaseCreateKey_short').show(); window.location.hash='collectionDatabaseCreateKey_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateKey_short" onclick="$('#collectionDatabaseCreateKey_short').hide(); $('#collectionDatabaseCreateKey_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;users&quot;</span>,
........&gt; { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;autoincrement&quot;</span>, <span class="hljs-attr">offset</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">increment</span>: <span class="hljs-number">5</span> } });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 1&quot;</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 2&quot;</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 3&quot;</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateKey


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateSpecialKey


<div class="example-container" id="collectionDatabaseCreateSpecialKey_container">
<div id="collectionDatabaseCreateSpecialKey_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;users&quot;</span>, { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">allowUserKeys</span>: <span class="hljs-literal">false</span> } });
[ArangoCollection <span class="hljs-number">76071</span>, <span class="hljs-string">&quot;users&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 1&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/76076&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76076&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZGq---&quot;</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 2&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;myuser&quot;</span> });
[ArangoError <span class="hljs-number">1222</span>: unexpected <span class="hljs-built_in">document</span> key]
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 3&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/76079&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76079&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZGy---&quot;</span> 
}
</pre>
<div id="collectionDatabaseCreateSpecialKey_container_collapse" onclick="$('#collectionDatabaseCreateSpecialKey_long').hide(); $('#collectionDatabaseCreateSpecialKey_short').show(); window.location.hash='collectionDatabaseCreateSpecialKey_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateSpecialKey_short" onclick="$('#collectionDatabaseCreateSpecialKey_short').hide(); $('#collectionDatabaseCreateSpecialKey_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;users&quot;</span>, { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">allowUserKeys</span>: <span class="hljs-literal">false</span> } });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 1&quot;</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 2&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;myuser&quot;</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;user 3&quot;</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateSpecialKey


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionsDatabaseName


<div class="example-container" id="collectionsDatabaseName_container">
<div id="collectionsDatabaseName_long" style="display: none;">
<pre>
arangosh&gt; db._collections();
[ 
  [ArangoCollection <span class="hljs-number">19</span>, <span class="hljs-string">&quot;_analyzers&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">34</span>, <span class="hljs-string">&quot;_appbundles&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">31</span>, <span class="hljs-string">&quot;_apps&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">22</span>, <span class="hljs-string">&quot;_aqlfunctions&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">43</span>, <span class="hljs-string">&quot;_fishbowl&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">37</span>, <span class="hljs-string">&quot;_frontend&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">7</span>, <span class="hljs-string">&quot;_graphs&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">28</span>, <span class="hljs-string">&quot;_jobs&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">40</span>, <span class="hljs-string">&quot;_modules&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">25</span>, <span class="hljs-string">&quot;_queues&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">10</span>, <span class="hljs-string">&quot;_statistics&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">13</span>, <span class="hljs-string">&quot;_statistics15&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">16</span>, <span class="hljs-string">&quot;_statisticsRaw&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">4</span>, <span class="hljs-string">&quot;_users&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">104</span>, <span class="hljs-string">&quot;animals&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">98</span>, <span class="hljs-string">&quot;demo&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">76330</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
]
</pre>
<div id="collectionsDatabaseName_container_collapse" onclick="$('#collectionsDatabaseName_long').hide(); $('#collectionsDatabaseName_short').show(); window.location.hash='collectionsDatabaseName_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionsDatabaseName_short" onclick="$('#collectionsDatabaseName_short').hide(); $('#collectionsDatabaseName_long').show();">
<pre>
arangosh&gt; db._collections();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionsDatabaseName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCollectionName


<div class="example-container" id="collectionDatabaseCollectionName_container">
<div id="collectionDatabaseCollectionName_long">
<pre>
arangosh&gt; db.example;
[ArangoCollection <span class="hljs-number">76038</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseCollectionName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseDropByObject


<div class="example-container" id="collectionDatabaseDropByObject_container">
<div id="collectionDatabaseDropByObject_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76098</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._drop(col);
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">76098</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseDropByObject


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseDropName


<div class="example-container" id="collectionDatabaseDropName_container">
<div id="collectionDatabaseDropName_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76105</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._drop(<span class="hljs-string">&quot;example&quot;</span>);
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">76105</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseDropName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseDropSystem


<div class="example-container" id="collectionDatabaseDropSystem_container">
<div id="collectionDatabaseDropSystem_long">
<pre>
arangosh&gt; col = db._example;
[ArangoCollection <span class="hljs-number">76112</span>, <span class="hljs-string">&quot;_example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._drop(<span class="hljs-string">&quot;_example&quot;</span>, { <span class="hljs-attr">isSystem</span>: <span class="hljs-literal">true</span> });
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">76112</span>, <span class="hljs-string">&quot;_example&quot;</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseDropSystem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseTruncateByObject


<div class="example-container" id="collectionDatabaseTruncateByObject_container">
<div id="collectionDatabaseTruncateByObject_long" style="display: none;">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76133</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.save({ <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76138&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76138&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZMG---&quot;</span> 
}
arangosh&gt; col.count();
<span class="hljs-number">1</span>
arangosh&gt; db._truncate(col);
arangosh&gt; col.count();
<span class="hljs-number">0</span>
</pre>
<div id="collectionDatabaseTruncateByObject_container_collapse" onclick="$('#collectionDatabaseTruncateByObject_long').hide(); $('#collectionDatabaseTruncateByObject_short').show(); window.location.hash='collectionDatabaseTruncateByObject_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseTruncateByObject_short" onclick="$('#collectionDatabaseTruncateByObject_short').hide(); $('#collectionDatabaseTruncateByObject_long').show();">
<pre>
arangosh&gt; col = db.example;
arangosh&gt; col.save({ <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> });
arangosh&gt; col.count();
arangosh&gt; db._truncate(col);
arangosh&gt; col.count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseTruncateByObject


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseTruncateName


<div class="example-container" id="collectionDatabaseTruncateName_container">
<div id="collectionDatabaseTruncateName_long" style="display: none;">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">76145</span>, <span class="hljs-string">&quot;example&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.save({ <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76150&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76150&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZM6---&quot;</span> 
}
arangosh&gt; col.count();
<span class="hljs-number">1</span>
arangosh&gt; db._truncate(<span class="hljs-string">&quot;example&quot;</span>);
arangosh&gt; col.count();
<span class="hljs-number">0</span>
</pre>
<div id="collectionDatabaseTruncateName_container_collapse" onclick="$('#collectionDatabaseTruncateName_long').hide(); $('#collectionDatabaseTruncateName_short').show(); window.location.hash='collectionDatabaseTruncateName_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseTruncateName_short" onclick="$('#collectionDatabaseTruncateName_short').hide(); $('#collectionDatabaseTruncateName_long').show();">
<pre>
arangosh&gt; col = db.example;
arangosh&gt; col.save({ <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> });
arangosh&gt; col.count();
arangosh&gt; db._truncate(<span class="hljs-string">&quot;example&quot;</span>);
arangosh&gt; col.count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseTruncateName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/arangosearch-fuzzy-search.md -->
    @startDocuBlockInline levenshtein_match_sample


<div class="example-container" id="levenshtein_match_sample_container">
<div id="levenshtein_match_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.save(<span class="hljs-string">&quot;text_en_no_stem&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>, { <span class="hljs-attr">locale</span>: <span class="hljs-string">&quot;en.utf-8&quot;</span>, <span class="hljs-attr">accent</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">case</span>: <span class="hljs-string">&quot;lower&quot;</span>, <span class="hljs-attr">stemming</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">stopwords</span>: [] }, [<span class="hljs-string">&quot;position&quot;</span>, <span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>]);
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::text_en_no_stem&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
  <span class="hljs-string">&quot;properties&quot;</span> : { 
    <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en.utf-8&quot;</span>, 
    <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
    <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
    <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;features&quot;</span> : [ 
    <span class="hljs-string">&quot;position&quot;</span>, 
    <span class="hljs-string">&quot;norm&quot;</span>, 
    <span class="hljs-string">&quot;frequency&quot;</span> 
  ] 
}
</pre>
<div id="levenshtein_match_sample_container_collapse" onclick="$('#levenshtein_match_sample_long').hide(); $('#levenshtein_match_sample_short').show(); window.location.hash='levenshtein_match_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="levenshtein_match_sample_short" onclick="$('#levenshtein_match_sample_short').hide(); $('#levenshtein_match_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.save(<span class="hljs-string">&quot;text_en_no_stem&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>, { <span class="hljs-attr">locale</span>: <span class="hljs-string">&quot;en.utf-8&quot;</span>, <span class="hljs-attr">accent</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">case</span>: <span class="hljs-string">&quot;lower&quot;</span>, <span class="hljs-attr">stemming</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">stopwords</span>: [] }, [<span class="hljs-string">&quot;position&quot;</span>, <span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock levenshtein_match_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/arangosearch-fuzzy-search.md -->
    @startDocuBlockInline ngram_match_sample


<div class="example-container" id="ngram_match_sample_container">
<div id="ngram_match_sample_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.save(<span class="hljs-string">&quot;trigram&quot;</span>, <span class="hljs-string">&quot;ngram&quot;</span>, { <span class="hljs-attr">min</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">preserveOriginal</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">streamType</span>: <span class="hljs-string">&quot;utf8&quot;</span> }, [<span class="hljs-string">&quot;position&quot;</span>, <span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>]);
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::trigram&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ngram&quot;</span>, 
  <span class="hljs-string">&quot;properties&quot;</span> : { 
    <span class="hljs-string">&quot;min&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;max&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;preserveOriginal&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;startMarker&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
    <span class="hljs-string">&quot;endMarker&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
    <span class="hljs-string">&quot;streamType&quot;</span> : <span class="hljs-string">&quot;utf8&quot;</span> 
  }, 
  <span class="hljs-string">&quot;features&quot;</span> : [ 
    <span class="hljs-string">&quot;position&quot;</span>, 
    <span class="hljs-string">&quot;norm&quot;</span>, 
    <span class="hljs-string">&quot;frequency&quot;</span> 
  ] 
}
</pre>
<div id="ngram_match_sample_container_collapse" onclick="$('#ngram_match_sample_long').hide(); $('#ngram_match_sample_short').show(); window.location.hash='ngram_match_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="ngram_match_sample_short" onclick="$('#ngram_match_sample_short').hide(); $('#ngram_match_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; analyzers.save(<span class="hljs-string">&quot;trigram&quot;</span>, <span class="hljs-string">&quot;ngram&quot;</span>, { <span class="hljs-attr">min</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">preserveOriginal</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">streamType</span>: <span class="hljs-string">&quot;utf8&quot;</span> }, [<span class="hljs-string">&quot;position&quot;</span>, <span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ngram_match_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_01_properyOfQueries


<div class="example-container" id="QUERY_01_properyOfQueries_container">
<div id="QUERY_01_properyOfQueries_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> queries = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/queries&quot;</span>);
arangosh&gt; queries.properties();
{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;enabled&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;trackSlowQueries&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;trackBindVars&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxSlowQueries&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;slowQueryThreshold&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;slowStreamingQueryThreshold&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;maxQueryStringLength&quot;</span> : <span class="hljs-number">4096</span> 
}
arangosh&gt; queries.properties({<span class="hljs-attr">slowQueryThreshold</span>: <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;enabled&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;trackSlowQueries&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;trackBindVars&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxSlowQueries&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;slowQueryThreshold&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;slowStreamingQueryThreshold&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;maxQueryStringLength&quot;</span> : <span class="hljs-number">4096</span> 
}
arangosh&gt; queries.properties({<span class="hljs-attr">slowStreamingQueryThreshold</span>: <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;enabled&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;trackSlowQueries&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;trackBindVars&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxSlowQueries&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;slowQueryThreshold&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;slowStreamingQueryThreshold&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;maxQueryStringLength&quot;</span> : <span class="hljs-number">4096</span> 
}
</pre>
<div id="QUERY_01_properyOfQueries_container_collapse" onclick="$('#QUERY_01_properyOfQueries_long').hide(); $('#QUERY_01_properyOfQueries_short').show(); window.location.hash='QUERY_01_properyOfQueries_container';" class="example_show_button">Hide execution results</div></div>
<div id="QUERY_01_properyOfQueries_short" onclick="$('#QUERY_01_properyOfQueries_short').hide(); $('#QUERY_01_properyOfQueries_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> queries = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/queries&quot;</span>);
arangosh&gt; queries.properties();
arangosh&gt; queries.properties({<span class="hljs-attr">slowQueryThreshold</span>: <span class="hljs-number">1</span>});
arangosh&gt; queries.properties({<span class="hljs-attr">slowStreamingQueryThreshold</span>: <span class="hljs-number">1</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock QUERY_01_properyOfQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_02_listQueries


<div class="example-container" id="QUERY_02_listQueries_container">
<div id="QUERY_02_listQueries_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> theQuery = <span class="hljs-string">&#x27;FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong&#x27;</span>;
arangosh&gt; <span class="hljs-keyword">var</span> tasks = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/tasks&quot;</span>);
arangosh&gt; tasks.register({
........&gt;  id: <span class="hljs-string">&quot;mytask-1&quot;</span>,
........&gt;  name: <span class="hljs-string">&quot;this is a sample task to spawn a slow aql query&quot;</span>,
........&gt;  command: <span class="hljs-string">&quot;require(&#x27;@arangodb&#x27;).db._query(&#x27;&quot;</span> + theQuery + <span class="hljs-string">&quot;&#x27;);&quot;</span>
........&gt; });
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;mytask-1&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;this is a sample task to spawn a slow aql query&quot;</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">1648682772.212025</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;timed&quot;</span>, 
  <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function (params) { require(&#x27;@arangodb&#x27;).db._query(&#x27;FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong&#x27;); } )(params);&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
arangosh&gt; queries.current();
[ 
  { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70640&quot;</span>, 
    <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
    <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong&quot;</span>, 
    <span class="hljs-string">&quot;bindVars&quot;</span> : { 
    }, 
    <span class="hljs-string">&quot;started&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:12Z&quot;</span>, 
    <span class="hljs-string">&quot;runTime&quot;</span> : <span class="hljs-number">1.0296456785872579</span>, 
    <span class="hljs-string">&quot;state&quot;</span> : <span class="hljs-string">&quot;executing&quot;</span>, 
    <span class="hljs-string">&quot;stream&quot;</span> : <span class="hljs-literal">false</span> 
  } 
]
</pre>
<div id="QUERY_02_listQueries_container_collapse" onclick="$('#QUERY_02_listQueries_long').hide(); $('#QUERY_02_listQueries_short').show(); window.location.hash='QUERY_02_listQueries_container';" class="example_show_button">Hide execution results</div></div>
<div id="QUERY_02_listQueries_short" onclick="$('#QUERY_02_listQueries_short').hide(); $('#QUERY_02_listQueries_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> theQuery = <span class="hljs-string">&#x27;FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong&#x27;</span>;
arangosh&gt; <span class="hljs-keyword">var</span> tasks = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/tasks&quot;</span>);
arangosh&gt; tasks.register({
........&gt;  id: <span class="hljs-string">&quot;mytask-1&quot;</span>,
........&gt;  name: <span class="hljs-string">&quot;this is a sample task to spawn a slow aql query&quot;</span>,
........&gt;  command: <span class="hljs-string">&quot;require(&#x27;@arangodb&#x27;).db._query(&#x27;&quot;</span> + theQuery + <span class="hljs-string">&quot;&#x27;);&quot;</span>
........&gt; });
arangosh&gt; queries.current();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock QUERY_02_listQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_03_listSlowQueries


<div class="example-container" id="QUERY_03_listSlowQueries_container">
<div id="QUERY_03_listSlowQueries_long">
<pre>
arangosh&gt; queries.slow();
[ ]
</pre>
</div>
</div>

    @endDocuBlock QUERY_03_listSlowQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_04_clearSlowQueries


<div class="example-container" id="QUERY_04_clearSlowQueries_container">
<div id="QUERY_04_clearSlowQueries_long">
<pre>
arangosh&gt; queries.clearSlow();
{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
arangosh&gt; queries.slow();
[ ]
</pre>
</div>
</div>

    @endDocuBlock QUERY_04_clearSlowQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_05_killQueries


<div class="example-container" id="QUERY_05_killQueries_container">
<div id="QUERY_05_killQueries_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> runningQueries = queries.current().filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">query</span>) </span>{
........&gt;   <span class="hljs-keyword">return</span> query.query === theQuery;
........&gt; });
arangosh&gt; queries.kill(runningQueries[<span class="hljs-number">0</span>].id);
{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
</div>
</div>

    @endDocuBlock QUERY_05_killQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-references-cursor-object.md -->
    @startDocuBlockInline cursorHasNext


<div class="example-container" id="cursorHasNext_container">
<div id="cursorHasNext_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> a = db._query(<span class="hljs-string">&quot;FOR x IN five RETURN x&quot;</span>);
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76402&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/76402&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZdG---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76404&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/76404&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZdG--A&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;two&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76406&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/76406&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZdK---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;three&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76408&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/76408&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZdK--A&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;four&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76410&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/76410&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZdO---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;five&quot;</span> 
}
</pre>
<div id="cursorHasNext_container_collapse" onclick="$('#cursorHasNext_long').hide(); $('#cursorHasNext_short').show(); window.location.hash='cursorHasNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="cursorHasNext_short" onclick="$('#cursorHasNext_short').hide(); $('#cursorHasNext_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> a = db._query(<span class="hljs-string">&quot;FOR x IN five RETURN x&quot;</span>);
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock cursorHasNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-references-cursor-object.md -->
    @startDocuBlockInline cursorNext


<div class="example-container" id="cursorNext_container">
<div id="cursorNext_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR x IN five RETURN x&quot;</span>).next();
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76421&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/76421&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZd6---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
}
</pre>
<div id="cursorNext_container_collapse" onclick="$('#cursorNext_long').hide(); $('#cursorNext_short').show(); window.location.hash='cursorNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="cursorNext_short" onclick="$('#cursorNext_short').hide(); $('#cursorNext_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR x IN five RETURN x&quot;</span>).next();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock cursorNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-references-cursor-object.md -->
    @startDocuBlockInline executeQueryNoBatchSize


<div class="example-container" id="executeQueryNoBatchSize_container">
<div id="executeQueryNoBatchSize_long" style="display: none;">
<pre>
arangosh&gt; result = db.users.all().toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77332&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77332&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaIa---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77334&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77334&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaIe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helmut&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77336&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77336&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaIe--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> 
  } 
]
arangosh&gt; <span class="hljs-keyword">var</span> q = db._query(<span class="hljs-string">&quot;FOR x IN users RETURN x&quot;</span>);
........&gt; result = [ ];
........&gt; <span class="hljs-keyword">while</span> (q.hasNext()) {
........&gt;   result.push(q.next());
........&gt; }
</pre>
<div id="executeQueryNoBatchSize_container_collapse" onclick="$('#executeQueryNoBatchSize_long').hide(); $('#executeQueryNoBatchSize_short').show(); window.location.hash='executeQueryNoBatchSize_container';" class="example_show_button">Hide execution results</div></div>
<div id="executeQueryNoBatchSize_short" onclick="$('#executeQueryNoBatchSize_short').hide(); $('#executeQueryNoBatchSize_long').show();">
<pre>
arangosh&gt; result = db.users.all().toArray();
arangosh&gt; <span class="hljs-keyword">var</span> q = db._query(<span class="hljs-string">&quot;FOR x IN users RETURN x&quot;</span>);
........&gt; result = [ ];
........&gt; <span class="hljs-keyword">while</span> (q.hasNext()) {
........&gt;   result.push(q.next());
........&gt; }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock executeQueryNoBatchSize


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-references-cursor-object.md -->
    @startDocuBlockInline executeQueryBatchSize


<div class="example-container" id="executeQueryBatchSize_container">
<div id="executeQueryBatchSize_long" style="display: none;">
<pre>
arangosh&gt; q = db.users.all(); q.setBatchSize(<span class="hljs-number">20</span>); q.execute(); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77313&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77313&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaHq---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77315&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77315&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaHu---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helmut&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77317&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77317&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaHu--A&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> 
}
SimpleQueryAll(users)
arangosh&gt; q = db.users.all(); q.execute(<span class="hljs-number">20</span>); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77313&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77313&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaHq---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77315&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77315&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaHu---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helmut&quot;</span> 
}
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77317&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/77317&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaHu--A&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> 
}
SimpleQueryAll(users)
</pre>
<div id="executeQueryBatchSize_container_collapse" onclick="$('#executeQueryBatchSize_long').hide(); $('#executeQueryBatchSize_short').show(); window.location.hash='executeQueryBatchSize_container';" class="example_show_button">Hide execution results</div></div>
<div id="executeQueryBatchSize_short" onclick="$('#executeQueryBatchSize_short').hide(); $('#executeQueryBatchSize_long').show();">
<pre>
arangosh&gt; q = db.users.all(); q.setBatchSize(<span class="hljs-number">20</span>); q.execute(); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
arangosh&gt; q = db.users.all(); q.execute(<span class="hljs-number">20</span>); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock executeQueryBatchSize


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-view-methods.md -->
    @startDocuBlockInline viewDrop


<div class="example-container" id="viewDrop_container">
<div id="viewDrop_long">
<pre>
arangosh&gt; v = db._createView(<span class="hljs-string">&quot;example&quot;</span>, <span class="hljs-string">&quot;arangosearch&quot;</span>);
........&gt; <span class="hljs-comment">// or</span>
[ArangoView <span class="hljs-number">89732</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
arangosh&gt; v = db._view(<span class="hljs-string">&quot;example&quot;</span>);
[ArangoView <span class="hljs-number">89732</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
arangosh&gt; v.drop();
arangosh&gt; db._view(<span class="hljs-string">&quot;example&quot;</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock viewDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-view-methods.md -->
    @startDocuBlockInline viewName


<div class="example-container" id="viewName_container">
<div id="viewName_long">
<pre>
arangosh&gt; v = db._view(<span class="hljs-string">&quot;demoView&quot;</span>);
[ArangoView <span class="hljs-number">108</span>, <span class="hljs-string">&quot;demoView&quot;</span> (type arangosearch)]
arangosh&gt; v.name();
demoView
</pre>
</div>
</div>

    @endDocuBlock viewName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-view-methods.md -->
    @startDocuBlockInline viewRename


<div class="example-container" id="viewRename_container">
<div id="viewRename_long">
<pre>
arangosh&gt; v = db._createView(<span class="hljs-string">&quot;example&quot;</span>, <span class="hljs-string">&quot;arangosearch&quot;</span>);
[ArangoView <span class="hljs-number">89758</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
arangosh&gt; v.name();
example
arangosh&gt; v.rename(<span class="hljs-string">&quot;exampleRenamed&quot;</span>);
arangosh&gt; v.name();
exampleRenamed
</pre>
</div>
</div>

    @endDocuBlock viewRename


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-view-methods.md -->
    @startDocuBlockInline viewType


<div class="example-container" id="viewType_container">
<div id="viewType_long">
<pre>
arangosh&gt; v = db._view(<span class="hljs-string">&quot;demoView&quot;</span>);
[ArangoView <span class="hljs-number">108</span>, <span class="hljs-string">&quot;demoView&quot;</span> (type arangosearch)]
arangosh&gt; v.type();
arangosearch
</pre>
</div>
</div>

    @endDocuBlock viewType


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-view-methods.md -->
    @startDocuBlockInline viewGetProperties


<div class="example-container" id="viewGetProperties_container">
<div id="viewGetProperties_long" style="display: none;">
<pre>
arangosh&gt; v = db._view(<span class="hljs-string">&quot;demoView&quot;</span>);
[ArangoView <span class="hljs-number">108</span>, <span class="hljs-string">&quot;demoView&quot;</span> (type arangosearch)]
arangosh&gt; v.properties();
{ 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span> 
}
</pre>
<div id="viewGetProperties_container_collapse" onclick="$('#viewGetProperties_long').hide(); $('#viewGetProperties_short').show(); window.location.hash='viewGetProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewGetProperties_short" onclick="$('#viewGetProperties_short').hide(); $('#viewGetProperties_long').show();">
<pre>
arangosh&gt; v = db._view(<span class="hljs-string">&quot;demoView&quot;</span>);
arangosh&gt; v.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewGetProperties


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-view-methods.md -->
    @startDocuBlockInline viewModifyProperties


<div class="example-container" id="viewModifyProperties_container">
<div id="viewModifyProperties_long" style="display: none;">
<pre>
arangosh&gt; v = db._view(<span class="hljs-string">&quot;example&quot;</span>);
[ArangoView <span class="hljs-number">89739</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
arangosh&gt; v.properties();
........&gt; <span class="hljs-comment">// set cleanupIntervalStep to 12</span>
{ 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span> 
}
arangosh&gt; v.properties({<span class="hljs-attr">cleanupIntervalStep</span>: <span class="hljs-number">12</span>});
........&gt; <span class="hljs-comment">// add a link</span>
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  } 
}
arangosh&gt; v.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">demo</span>: {}}})
........&gt; <span class="hljs-comment">// remove a link</span>
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
    <span class="hljs-string">&quot;demo&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;identity&quot;</span> 
      ], 
      <span class="hljs-string">&quot;fields&quot;</span> : { 
      }, 
      <span class="hljs-string">&quot;includeAllFields&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;storeValues&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
      <span class="hljs-string">&quot;trackListPositions&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  } 
}
arangosh&gt; v.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">demo</span>: <span class="hljs-literal">null</span>}})
{ 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">12</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  } 
}
</pre>
<div id="viewModifyProperties_container_collapse" onclick="$('#viewModifyProperties_long').hide(); $('#viewModifyProperties_short').show(); window.location.hash='viewModifyProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewModifyProperties_short" onclick="$('#viewModifyProperties_short').hide(); $('#viewModifyProperties_long').show();">
<pre>
arangosh&gt; v = db._view(<span class="hljs-string">&quot;example&quot;</span>);
arangosh&gt; v.properties();
........&gt; <span class="hljs-comment">// set cleanupIntervalStep to 12</span>
arangosh&gt; v.properties({<span class="hljs-attr">cleanupIntervalStep</span>: <span class="hljs-number">12</span>});
........&gt; <span class="hljs-comment">// add a link</span>
arangosh&gt; v.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">demo</span>: {}}})
........&gt; <span class="hljs-comment">// remove a link</span>
arangosh&gt; v.properties({<span class="hljs-attr">links</span>: {<span class="hljs-attr">demo</span>: <span class="hljs-literal">null</span>}})
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewModifyProperties


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-fulltext.md -->
    @startDocuBlockInline ensureFulltextIndex


<div class="example-container" id="ensureFulltextIndex_container">
<div id="ensureFulltextIndex_long" style="display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;fulltext&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;text&quot;</span> ], <span class="hljs-attr">minLength</span>: <span class="hljs-number">3</span> });
{ 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;text&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/76889&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;minLength&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240450727936&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;fulltext&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;the quick brown&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76893&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76893&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ5y---&quot;</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;quick brown fox&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">2</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76895&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76895&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ52---&quot;</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;brown fox jums&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76897&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76897&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ56---&quot;</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;fox jumps over&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">4</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76899&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76899&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6----&quot;</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;jumps over the&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">5</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76901&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76901&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6---A&quot;</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;over the lazy&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">6</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76903&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76903&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6C--_&quot;</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;the lazy dog&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">7</span> } });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76905&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76905&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6G---&quot;</span> 
}
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR document IN FULLTEXT(example, &#x27;text&#x27;, &#x27;the&#x27;) RETURN document&quot;</span>);
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76893&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76893&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ5y---&quot;</span>, 
    <span class="hljs-string">&quot;text&quot;</span> : <span class="hljs-string">&quot;the quick brown&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> : { 
      <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76901&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76901&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6---A&quot;</span>, 
    <span class="hljs-string">&quot;text&quot;</span> : <span class="hljs-string">&quot;jumps over the&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> : { 
      <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">5</span> 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76903&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76903&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6C--_&quot;</span>, 
    <span class="hljs-string">&quot;text&quot;</span> : <span class="hljs-string">&quot;over the lazy&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> : { 
      <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">6</span> 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76905&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76905&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ6G---&quot;</span>, 
    <span class="hljs-string">&quot;text&quot;</span> : <span class="hljs-string">&quot;the lazy dog&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> : { 
      <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">7</span> 
    } 
  } 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="ensureFulltextIndex_container_collapse" onclick="$('#ensureFulltextIndex_long').hide(); $('#ensureFulltextIndex_short').show(); window.location.hash='ensureFulltextIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureFulltextIndex_short" onclick="$('#ensureFulltextIndex_short').hide(); $('#ensureFulltextIndex_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;fulltext&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;text&quot;</span> ], <span class="hljs-attr">minLength</span>: <span class="hljs-number">3</span> });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;the quick brown&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;quick brown fox&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">2</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;brown fox jums&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;fox jumps over&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">4</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;jumps over the&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">5</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;over the lazy&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">6</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">&quot;the lazy dog&quot;</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">7</span> } });
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR document IN FULLTEXT(example, &#x27;text&#x27;, &#x27;the&#x27;) RETURN document&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureFulltextIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphCreate1_cluster


<div class="example-container" id="smartGraphCreate1_cluster_container">
<div id="smartGraphCreate1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
}
</pre>
</div>
</div>

    @endDocuBlock smartGraphCreate1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphCreate2_cluster


<div class="example-container" id="smartGraphCreate2_cluster_container">
<div id="smartGraphCreate2_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>) ];
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions, [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
  <span class="hljs-string">&quot;edges&quot;</span> : [ArangoCollection <span class="hljs-number">2010262</span>, <span class="hljs-string">&quot;edges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010252</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

    @endDocuBlock smartGraphCreate2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphCreate3_cluster


<div class="example-container" id="smartGraphCreate3_cluster_container">
<div id="smartGraphCreate3_cluster_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ graph_module._relation(<span class="hljs-string">&quot;myRelation&quot;</span>, [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>], [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>]) ];
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions, [<span class="hljs-string">&quot;sessions&quot;</span>], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
  <span class="hljs-string">&quot;myRelation&quot;</span> : [ArangoCollection <span class="hljs-number">2010308</span>, <span class="hljs-string">&quot;myRelation&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;female&quot;</span> : [ArangoCollection <span class="hljs-number">2010306</span>, <span class="hljs-string">&quot;female&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;male&quot;</span> : [ArangoCollection <span class="hljs-number">2010307</span>, <span class="hljs-string">&quot;male&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;sessions&quot;</span> : [ArangoCollection <span class="hljs-number">2010296</span>, <span class="hljs-string">&quot;sessions&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="smartGraphCreate3_cluster_container_collapse" onclick="$('#smartGraphCreate3_cluster_long').hide(); $('#smartGraphCreate3_cluster_short').show(); window.location.hash='smartGraphCreate3_cluster_container';" class="example_show_button">Hide execution results</div></div>
<div id="smartGraphCreate3_cluster_short" onclick="$('#smartGraphCreate3_cluster_short').hide(); $('#smartGraphCreate3_cluster_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ graph_module._relation(<span class="hljs-string">&quot;myRelation&quot;</span>, [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>], [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>]) ];
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions, [<span class="hljs-string">&quot;sessions&quot;</span>], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock smartGraphCreate3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify1_cluster


<div class="example-container" id="smartGraphModify1_cluster_container">
<div id="smartGraphModify1_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], [<span class="hljs-string">&quot;other&quot;</span>], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">&quot;other&quot;</span> 
]
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify2_cluster


<div class="example-container" id="smartGraphModify2_cluster_container">
<div id="smartGraphModify2_cluster_long">
<pre>
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;other&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
  <span class="hljs-string">&quot;edges&quot;</span> : [ArangoCollection <span class="hljs-number">2010539</span>, <span class="hljs-string">&quot;edges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010528</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify3_cluster


<div class="example-container" id="smartGraphModify3_cluster_container">
<div id="smartGraphModify3_cluster_long">
<pre>
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
[ArangoError <span class="hljs-number">1928</span>: collection is not <span class="hljs-keyword">in</span> list <span class="hljs-keyword">of</span> orphan collections]
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify3_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify4_cluster


<div class="example-container" id="smartGraphModify4_cluster_container">
<div id="smartGraphModify4_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; db._drop(<span class="hljs-string">&quot;vertices&quot;</span>);
[ArangoError <span class="hljs-number">1485</span>: Collection <span class="hljs-string">&#x27;vertices&#x27;</span> must not be dropped <span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;_to_edges&#x27;</span>, <span class="hljs-string">&#x27;_local_edges&#x27;</span>, <span class="hljs-string">&#x27;edges&#x27;</span>, <span class="hljs-string">&#x27;_from_edges&#x27;</span> have distributeShardsLike set to <span class="hljs-string">&#x27;vertices&#x27;</span>.]
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify4_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify5_cluster


<div class="example-container" id="smartGraphModify5_cluster_container">
<div id="smartGraphModify5_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;myGraph&quot;</span>, <span class="hljs-literal">true</span>); <span class="hljs-comment">// does not drop any collections</span>
arangosh&gt; db._drop(<span class="hljs-string">&quot;edges&quot;</span>); <span class="hljs-comment">// drop before sharding-defining &#x27;vertices&#x27; collection</span>
arangosh&gt; db._drop(<span class="hljs-string">&quot;vertices&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify5_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify6_cluster


<div class="example-container" id="smartGraphModify6_cluster_container">
<div id="smartGraphModify6_cluster_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/smart-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>, <span class="hljs-string">&quot;vertices&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [relation], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">&quot;region&quot;</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph_module._graph(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[SmartGraph] 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">2010711</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify6_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphModify7_cluster


<div class="example-container" id="smartGraphModify7_cluster_container">
<div id="smartGraphModify7_cluster_long">
<pre>
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;edges&quot;</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;vertices&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock smartGraphModify7_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphRemove1_cluster


<div class="example-container" id="smartGraphRemove1_cluster_container">
<div id="smartGraphRemove1_cluster_long">
<pre>
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;myGraph&quot;</span>, <span class="hljs-literal">true</span>);
</pre>
</div>
</div>

    @endDocuBlock smartGraphRemove1_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs-management.md -->
    @startDocuBlockInline smartGraphRemove2_cluster


<div class="example-container" id="smartGraphRemove2_cluster_container">
<div id="smartGraphRemove2_cluster_long">
<pre>
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;other&quot;</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;myGraph&quot;</span>, <span class="hljs-literal">true</span>);
[ArangoError <span class="hljs-number">1485</span>: Collection <span class="hljs-string">&#x27;vertices&#x27;</span> must not be dropped <span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;other&#x27;</span> has distributeShardsLike set to <span class="hljs-string">&#x27;vertices&#x27;</span>.]
</pre>
</div>
</div>

    @endDocuBlock smartGraphRemove2_cluster


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-persistent.md -->
    @startDocuBlockInline ensureUniquePersistentSingle


<div class="example-container" id="ensureUniquePersistentSingle_container">
<div id="ensureUniquePersistentSingle_long" style="display: none;">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;myId&quot;</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;myId&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;ids/77224&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240617451520&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">123</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;ids/77228&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77228&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaDu---&quot;</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">456</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;ids/77230&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77230&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaDy---&quot;</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">789</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;ids/77232&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77232&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaD2---&quot;</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">123</span> });
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index idx_1728769240617451520 <span class="hljs-keyword">of</span> type persistent over <span class="hljs-string">&#x27;myId&#x27;</span>; conflicting key: <span class="hljs-number">77228</span>]
</pre>
<div id="ensureUniquePersistentSingle_container_collapse" onclick="$('#ensureUniquePersistentSingle_long').hide(); $('#ensureUniquePersistentSingle_short').show(); window.location.hash='ensureUniquePersistentSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniquePersistentSingle_short" onclick="$('#ensureUniquePersistentSingle_short').hide(); $('#ensureUniquePersistentSingle_long').show();">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;myId&quot;</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">123</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">456</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">789</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;myId&quot;</span>: <span class="hljs-number">123</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniquePersistentSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-persistent.md -->
    @startDocuBlockInline ensureUniquePersistentMultiColmun


<div class="example-container" id="ensureUniquePersistentMultiColmun_container">
<div id="ensureUniquePersistentMultiColmun_long" style="display: none;">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;name.first&quot;</span>, <span class="hljs-string">&quot;name.last&quot;</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;name.first&quot;</span>, 
    <span class="hljs-string">&quot;name.last&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;ids/77205&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240602771456&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;hans&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;hansen&quot;</span> }});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;ids/77209&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77209&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaCy---&quot;</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;jens&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;jensen&quot;</span> }});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;ids/77211&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77211&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaC2---&quot;</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;hans&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;jensen&quot;</span> }});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;ids/77213&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;77213&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaC6---&quot;</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;hans&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;hansen&quot;</span> }});
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index idx_1728769240602771456 <span class="hljs-keyword">of</span> type persistent over <span class="hljs-string">&#x27;name.first, name.last&#x27;</span>; conflicting key: <span class="hljs-number">77209</span>]
</pre>
<div id="ensureUniquePersistentMultiColmun_container_collapse" onclick="$('#ensureUniquePersistentMultiColmun_long').hide(); $('#ensureUniquePersistentMultiColmun_short').show(); window.location.hash='ensureUniquePersistentMultiColmun_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniquePersistentMultiColmun_short" onclick="$('#ensureUniquePersistentMultiColmun_short').hide(); $('#ensureUniquePersistentMultiColmun_long').show();">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;name.first&quot;</span>, <span class="hljs-string">&quot;name.last&quot;</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;hans&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;hansen&quot;</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;jens&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;jensen&quot;</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;hans&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;jensen&quot;</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">&quot;name&quot;</span> : { <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;hans&quot;</span>, <span class="hljs-string">&quot;last&quot;</span>: <span class="hljs-string">&quot;hansen&quot;</span> }});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniquePersistentMultiColmun


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-persistent.md -->
    @startDocuBlockInline ensurePersistent


<div class="example-container" id="ensurePersistent_container">
<div id="ensurePersistent_long" style="display: none;">
<pre>
arangosh&gt; db.names.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;first&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;first&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;names/76933&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240487428096&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tim&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;names/76937&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76937&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ8----&quot;</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tom&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;names/76939&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76939&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ8C---&quot;</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;John&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;names/76941&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76941&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ8G---&quot;</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tim&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;names/76943&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76943&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ8K---&quot;</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tom&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;names/76945&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76945&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ8O---&quot;</span> 
}
</pre>
<div id="ensurePersistent_container_collapse" onclick="$('#ensurePersistent_long').hide(); $('#ensurePersistent_short').show(); window.location.hash='ensurePersistent_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensurePersistent_short" onclick="$('#ensurePersistent_short').hide(); $('#ensurePersistent_long').show();">
<pre>
arangosh&gt; db.names.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;persistent&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;first&quot;</span> ] });
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tim&quot;</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tom&quot;</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;John&quot;</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tim&quot;</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">&quot;first&quot;</span> : <span class="hljs-string">&quot;Tom&quot;</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensurePersistent


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-fulltext-queries.md -->
    @startDocuBlockInline collectionFulltext


<div class="example-container" id="collectionFulltext_container">
<div id="collectionFulltext_long" style="display: none;">
<pre>
arangosh&gt; db.emails.ensureFulltextIndex(<span class="hljs-string">&quot;content&quot;</span>);
{ 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;content&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;emails/76209&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;minLength&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769239784882176&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;fulltext&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">&quot;Hello Alice, how are you doing? Regards, Bob&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;emails/76213&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76213&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZSG---&quot;</span> 
}
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">&quot;Hello Charlie, do Alice and Bob know about it?&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;emails/76215&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76215&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZSK---&quot;</span> 
}
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;I think they don&#x27;t know. Regards, Eve&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;emails/76217&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76217&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZSO---&quot;</span> 
}
arangosh&gt; db.emails.fulltext(<span class="hljs-string">&quot;content&quot;</span>, <span class="hljs-string">&quot;charlie,|eve&quot;</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76215&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;emails/76215&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZSK---&quot;</span>, 
    <span class="hljs-string">&quot;content&quot;</span> : <span class="hljs-string">&quot;Hello Charlie, do Alice and Bob know about it?&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76217&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;emails/76217&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZSO---&quot;</span>, 
    <span class="hljs-string">&quot;content&quot;</span> : <span class="hljs-string">&quot;I think they don&#x27;t know. Regards, Eve&quot;</span> 
  } 
]
</pre>
<div id="collectionFulltext_container_collapse" onclick="$('#collectionFulltext_long').hide(); $('#collectionFulltext_short').show(); window.location.hash='collectionFulltext_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFulltext_short" onclick="$('#collectionFulltext_short').hide(); $('#collectionFulltext_long').show();">
<pre>
arangosh&gt; db.emails.ensureFulltextIndex(<span class="hljs-string">&quot;content&quot;</span>);
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">&quot;Hello Alice, how are you doing? Regards, Bob&quot;</span>});
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">&quot;Hello Charlie, do Alice and Bob know about it?&quot;</span>});
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>: <span class="hljs-string">&quot;I think they don&#x27;t know. Regards, Eve&quot;</span> });
arangosh&gt; db.emails.fulltext(<span class="hljs-string">&quot;content&quot;</span>, <span class="hljs-string">&quot;charlie,|eve&quot;</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFulltext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsDocumentName


<div class="example-container" id="documentsDocumentName_container">
<div id="documentsDocumentName_long" style="display: none;">
<pre>
arangosh&gt; db._document(<span class="hljs-string">&quot;example/12345&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;12345&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/12345&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ3i---&quot;</span> 
}
</pre>
<div id="documentsDocumentName_container_collapse" onclick="$('#documentsDocumentName_long').hide(); $('#documentsDocumentName_short').show(); window.location.hash='documentsDocumentName_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsDocumentName_short" onclick="$('#documentsDocumentName_short').hide(); $('#documentsDocumentName_long').show();">
<pre>
arangosh&gt; db._document(<span class="hljs-string">&quot;example/12345&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsDocumentName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsDocumentReplace


<div class="example-container" id="documentsDocumentReplace_container">
<div id="documentsDocumentReplace_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76862&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76862&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ4C---&quot;</span> 
}
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76862&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76862&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ4G---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ4C---&quot;</span> 
}
arangosh&gt; a3 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
[ArangoError <span class="hljs-number">1200</span>: conflict]
</pre>
<div id="documentsDocumentReplace_container_collapse" onclick="$('#documentsDocumentReplace_long').hide(); $('#documentsDocumentReplace_short').show(); window.location.hash='documentsDocumentReplace_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsDocumentReplace_short" onclick="$('#documentsDocumentReplace_short').hide(); $('#documentsDocumentReplace_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; a3 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsDocumentReplace


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentDocumentUpdate


<div class="example-container" id="documentDocumentUpdate_container">
<div id="documentDocumentUpdate_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76551&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76551&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZlu---&quot;</span> 
}
arangosh&gt; a2 = db._update(a1, { <span class="hljs-attr">b</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76551&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76551&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZly---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZlu---&quot;</span> 
}
arangosh&gt; a3 = db._update(a1, { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> });
[ArangoError <span class="hljs-number">1200</span>: conflict]
</pre>
<div id="documentDocumentUpdate_container_collapse" onclick="$('#documentDocumentUpdate_long').hide(); $('#documentDocumentUpdate_short').show(); window.location.hash='documentDocumentUpdate_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentDocumentUpdate_short" onclick="$('#documentDocumentUpdate_short').hide(); $('#documentDocumentUpdate_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db._update(a1, { <span class="hljs-attr">b</span> : <span class="hljs-number">2</span> });
arangosh&gt; a3 = db._update(a1, { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentDocumentUpdate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsCollectionRemoveSuccess


<div class="example-container" id="documentsCollectionRemoveSuccess_container">
<div id="documentsCollectionRemoveSuccess_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76692&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76692&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZuG---&quot;</span> 
}
arangosh&gt; db._remove(a1);
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76692&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76692&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZuG---&quot;</span> 
}
arangosh&gt; db._remove(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>});
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentsCollectionRemoveSuccess_container_collapse" onclick="$('#documentsCollectionRemoveSuccess_long').hide(); $('#documentsCollectionRemoveSuccess_short').show(); window.location.hash='documentsCollectionRemoveSuccess_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionRemoveSuccess_short" onclick="$('#documentsCollectionRemoveSuccess_short').hide(); $('#documentsCollectionRemoveSuccess_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; db._remove(a1);
arangosh&gt; db._remove(a1);
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionRemoveSuccess


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsCollectionRemoveConflict


<div class="example-container" id="documentsCollectionRemoveConflict_container">
<div id="documentsCollectionRemoveConflict_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76669&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76669&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZs2---&quot;</span> 
}
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76669&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76669&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZt----&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZs2---&quot;</span> 
}
arangosh&gt; db._remove(a1);
[ArangoError <span class="hljs-number">1200</span>: conflict]
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>} );
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76669&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76669&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZt----&quot;</span> 
}
arangosh&gt; db._document(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentsCollectionRemoveConflict_container_collapse" onclick="$('#documentsCollectionRemoveConflict_long').hide(); $('#documentsCollectionRemoveConflict_short').show(); window.location.hash='documentsCollectionRemoveConflict_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionRemoveConflict_short" onclick="$('#documentsCollectionRemoveConflict_short').hide(); $('#documentsCollectionRemoveConflict_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; db._remove(a1);
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>} );
arangosh&gt; db._document(a1);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionRemoveConflict


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsCollectionRemoveSignature


<div class="example-container" id="documentsCollectionRemoveSignature_container">
<div id="documentsCollectionRemoveSignature_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;11265325374&quot;</span>, <span class="hljs-attr">a</span>:  <span class="hljs-number">1</span> } );
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/11265325374&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;11265325374&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZtq---&quot;</span> 
}
arangosh&gt; db.example.remove(<span class="hljs-string">&quot;example/11265325374&quot;</span>,
........&gt; { <span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">false</span>})
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/11265325374&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;11265325374&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZtq---&quot;</span> 
}
</pre>
<div id="documentsCollectionRemoveSignature_container_collapse" onclick="$('#documentsCollectionRemoveSignature_long').hide(); $('#documentsCollectionRemoveSignature_short').show(); window.location.hash='documentsCollectionRemoveSignature_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionRemoveSignature_short" onclick="$('#documentsCollectionRemoveSignature_short').hide(); $('#documentsCollectionRemoveSignature_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;11265325374&quot;</span>, <span class="hljs-attr">a</span>:  <span class="hljs-number">1</span> } );
arangosh&gt; db.example.remove(<span class="hljs-string">&quot;example/11265325374&quot;</span>,
........&gt; { <span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">false</span>})
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionRemoveSignature


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-database-methods.md -->
    @startDocuBlockInline viewDatabaseGet


<div class="example-container" id="viewDatabaseGet_container">
<div id="viewDatabaseGet_long">
<pre>
arangosh&gt; view = db._view(<span class="hljs-string">&quot;example&quot;</span>);
........&gt; <span class="hljs-comment">// or, alternatively</span>
[ArangoView <span class="hljs-number">89720</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
arangosh&gt; view = db[<span class="hljs-string">&quot;example&quot;</span>]
[ArangoView <span class="hljs-number">89720</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
</pre>
</div>
</div>

    @endDocuBlock viewDatabaseGet


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-database-methods.md -->
    @startDocuBlockInline viewDatabaseNameKnown


<div class="example-container" id="viewDatabaseNameKnown_container">
<div id="viewDatabaseNameKnown_long">
<pre>
arangosh&gt; db._view(<span class="hljs-string">&quot;demoView&quot;</span>);
[ArangoView <span class="hljs-number">108</span>, <span class="hljs-string">&quot;demoView&quot;</span> (type arangosearch)]
</pre>
</div>
</div>

    @endDocuBlock viewDatabaseNameKnown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-database-methods.md -->
    @startDocuBlockInline viewDatabaseNameUnknown


<div class="example-container" id="viewDatabaseNameUnknown_container">
<div id="viewDatabaseNameUnknown_long">
<pre>
arangosh&gt; db._view(<span class="hljs-string">&quot;unknown&quot;</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock viewDatabaseNameUnknown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-database-methods.md -->
    @startDocuBlockInline viewDatabaseCreate


<div class="example-container" id="viewDatabaseCreate_container">
<div id="viewDatabaseCreate_long" style="display: none;">
<pre>
arangosh&gt; v = db._createView(<span class="hljs-string">&quot;example&quot;</span>, <span class="hljs-string">&quot;arangosearch&quot;</span>);
[ArangoView <span class="hljs-number">89710</span>, <span class="hljs-string">&quot;example&quot;</span> (type arangosearch)]
arangosh&gt; v.properties()
{ 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span> 
}
arangosh&gt; db._dropView(<span class="hljs-string">&quot;example&quot;</span>)
</pre>
<div id="viewDatabaseCreate_container_collapse" onclick="$('#viewDatabaseCreate_long').hide(); $('#viewDatabaseCreate_short').show(); window.location.hash='viewDatabaseCreate_container';" class="example_show_button">Hide execution results</div></div>
<div id="viewDatabaseCreate_short" onclick="$('#viewDatabaseCreate_short').hide(); $('#viewDatabaseCreate_long').show();">
<pre>
arangosh&gt; v = db._createView(<span class="hljs-string">&quot;example&quot;</span>, <span class="hljs-string">&quot;arangosearch&quot;</span>);
arangosh&gt; v.properties()
arangosh&gt; db._dropView(<span class="hljs-string">&quot;example&quot;</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock viewDatabaseCreate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-database-methods.md -->
    @startDocuBlockInline viewDatabaseList


<div class="example-container" id="viewDatabaseList_container">
<div id="viewDatabaseList_long">
<pre>
arangosh&gt; db._views();
[ 
  [ArangoView <span class="hljs-number">108</span>, <span class="hljs-string">&quot;demoView&quot;</span> (type arangosearch)], 
  [ArangoView <span class="hljs-number">89724</span>, <span class="hljs-string">&quot;exampleView&quot;</span> (type arangosearch)] 
]
</pre>
</div>
</div>

    @endDocuBlock viewDatabaseList


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-views-database-methods.md -->
    @startDocuBlockInline viewDatabaseDrop


<div class="example-container" id="viewDatabaseDrop_container">
<div id="viewDatabaseDrop_long">
<pre>
arangosh&gt; db._createView(<span class="hljs-string">&quot;exampleView&quot;</span>, <span class="hljs-string">&quot;arangosearch&quot;</span>);
[ArangoView <span class="hljs-number">89716</span>, <span class="hljs-string">&quot;exampleView&quot;</span> (type arangosearch)]
arangosh&gt; db._dropView(<span class="hljs-string">&quot;exampleView&quot;</span>);
arangosh&gt; db._view(<span class="hljs-string">&quot;exampleView&quot;</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock viewDatabaseDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerIdentity


<div class="example-container" id="analyzerIdentity_container">
<div id="analyzerIdentity_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;identity&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;UPPER lower dïäcríticš&quot;</span> 
  ] 
]
</pre>
<div id="analyzerIdentity_container_collapse" onclick="$('#analyzerIdentity_long').hide(); $('#analyzerIdentity_short').show(); window.location.hash='analyzerIdentity_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerIdentity_short" onclick="$('#analyzerIdentity_short').hide(); $('#analyzerIdentity_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;identity&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerIdentity


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerDelimiter


<div class="example-container" id="analyzerDelimiter_container">
<div id="analyzerDelimiter_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;delimiter_hyphen&quot;</span>, <span class="hljs-string">&quot;delimiter&quot;</span>, {
........&gt;   delimiter: <span class="hljs-string">&quot;-&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;some-delimited-words&quot;, &quot;delimiter_hyphen&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;some&quot;</span>, 
    <span class="hljs-string">&quot;delimited&quot;</span>, 
    <span class="hljs-string">&quot;words&quot;</span> 
  ] 
]
</pre>
<div id="analyzerDelimiter_container_collapse" onclick="$('#analyzerDelimiter_long').hide(); $('#analyzerDelimiter_short').show(); window.location.hash='analyzerDelimiter_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerDelimiter_short" onclick="$('#analyzerDelimiter_short').hide(); $('#analyzerDelimiter_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;delimiter_hyphen&quot;</span>, <span class="hljs-string">&quot;delimiter&quot;</span>, {
........&gt;   delimiter: <span class="hljs-string">&quot;-&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;some-delimited-words&quot;, &quot;delimiter_hyphen&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerDelimiter


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerStem


<div class="example-container" id="analyzerStem_container">
<div id="analyzerStem_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;stem_en&quot;</span>, <span class="hljs-string">&quot;stem&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;databases&quot;, &quot;stem_en&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;databas&quot;</span> 
  ] 
]
</pre>
<div id="analyzerStem_container_collapse" onclick="$('#analyzerStem_long').hide(); $('#analyzerStem_short').show(); window.location.hash='analyzerStem_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerStem_short" onclick="$('#analyzerStem_short').hide(); $('#analyzerStem_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;stem_en&quot;</span>, <span class="hljs-string">&quot;stem&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;databases&quot;, &quot;stem_en&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerStem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerNorm1


<div class="example-container" id="analyzerNorm1_container">
<div id="analyzerNorm1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;norm_upper&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;upper&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;norm_upper&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;UPPER LOWER DÏÄCRÍTICŠ&quot;</span> 
  ] 
]
</pre>
<div id="analyzerNorm1_container_collapse" onclick="$('#analyzerNorm1_long').hide(); $('#analyzerNorm1_short').show(); window.location.hash='analyzerNorm1_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerNorm1_short" onclick="$('#analyzerNorm1_short').hide(); $('#analyzerNorm1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;norm_upper&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;upper&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;norm_upper&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerNorm1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerNorm2


<div class="example-container" id="analyzerNorm2_container">
<div id="analyzerNorm2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;norm_accent&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;norm_accent&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;UPPER lower diacritics&quot;</span> 
  ] 
]
</pre>
<div id="analyzerNorm2_container_collapse" onclick="$('#analyzerNorm2_long').hide(); $('#analyzerNorm2_short').show(); window.location.hash='analyzerNorm2_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerNorm2_short" onclick="$('#analyzerNorm2_short').hide(); $('#analyzerNorm2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;norm_accent&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;norm_accent&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerNorm2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerNorm3


<div class="example-container" id="analyzerNorm3_container">
<div id="analyzerNorm3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;norm_accent_lower&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;lower&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;norm_accent_lower&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;upper lower diacritics&quot;</span> 
  ] 
]
</pre>
<div id="analyzerNorm3_container_collapse" onclick="$('#analyzerNorm3_long').hide(); $('#analyzerNorm3_short').show(); window.location.hash='analyzerNorm3_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerNorm3_short" onclick="$('#analyzerNorm3_short').hide(); $('#analyzerNorm3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;norm_accent_lower&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;lower&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;UPPER lower dïäcríticš&quot;, &quot;norm_accent_lower&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerNorm3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerNgram1


<div class="example-container" id="analyzerNgram1_container">
<div id="analyzerNgram1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;trigram&quot;</span>, <span class="hljs-string">&quot;ngram&quot;</span>, {
........&gt;   min: <span class="hljs-number">3</span>,
........&gt;   max: <span class="hljs-number">3</span>,
........&gt;   preserveOriginal: <span class="hljs-literal">false</span>,
........&gt;   streamType: <span class="hljs-string">&quot;utf8&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;foobar&quot;, &quot;trigram&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;oob&quot;</span>, 
    <span class="hljs-string">&quot;oba&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span> 
  ] 
]
</pre>
<div id="analyzerNgram1_container_collapse" onclick="$('#analyzerNgram1_long').hide(); $('#analyzerNgram1_short').show(); window.location.hash='analyzerNgram1_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerNgram1_short" onclick="$('#analyzerNgram1_short').hide(); $('#analyzerNgram1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;trigram&quot;</span>, <span class="hljs-string">&quot;ngram&quot;</span>, {
........&gt;   min: <span class="hljs-number">3</span>,
........&gt;   max: <span class="hljs-number">3</span>,
........&gt;   preserveOriginal: <span class="hljs-literal">false</span>,
........&gt;   streamType: <span class="hljs-string">&quot;utf8&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;foobar&quot;, &quot;trigram&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerNgram1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerNgram2


<div class="example-container" id="analyzerNgram2_container">
<div id="analyzerNgram2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;bigram_markers&quot;</span>, <span class="hljs-string">&quot;ngram&quot;</span>, {
........&gt;   min: <span class="hljs-number">2</span>,
........&gt;   max: <span class="hljs-number">2</span>,
........&gt;   preserveOriginal: <span class="hljs-literal">true</span>,
........&gt;   startMarker: <span class="hljs-string">&quot;^&quot;</span>,
........&gt;   endMarker: <span class="hljs-string">&quot;$&quot;</span>,
........&gt;   streamType: <span class="hljs-string">&quot;utf8&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;foobar&quot;, &quot;bigram_markers&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;^fo&quot;</span>, 
    <span class="hljs-string">&quot;^foobar&quot;</span>, 
    <span class="hljs-string">&quot;foobar$&quot;</span>, 
    <span class="hljs-string">&quot;oo&quot;</span>, 
    <span class="hljs-string">&quot;ob&quot;</span>, 
    <span class="hljs-string">&quot;ba&quot;</span>, 
    <span class="hljs-string">&quot;ar$&quot;</span> 
  ] 
]
</pre>
<div id="analyzerNgram2_container_collapse" onclick="$('#analyzerNgram2_long').hide(); $('#analyzerNgram2_short').show(); window.location.hash='analyzerNgram2_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerNgram2_short" onclick="$('#analyzerNgram2_short').hide(); $('#analyzerNgram2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;bigram_markers&quot;</span>, <span class="hljs-string">&quot;ngram&quot;</span>, {
........&gt;   min: <span class="hljs-number">2</span>,
........&gt;   max: <span class="hljs-number">2</span>,
........&gt;   preserveOriginal: <span class="hljs-literal">true</span>,
........&gt;   startMarker: <span class="hljs-string">&quot;^&quot;</span>,
........&gt;   endMarker: <span class="hljs-string">&quot;$&quot;</span>,
........&gt;   streamType: <span class="hljs-string">&quot;utf8&quot;</span>
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>, <span class="hljs-string">&quot;norm&quot;</span>, <span class="hljs-string">&quot;position&quot;</span>]);
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;foobar&quot;, &quot;bigram_markers&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerNgram2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerTextStem


<div class="example-container" id="analyzerTextStem_container">
<div id="analyzerTextStem_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;Crazy fast NoSQL-database!&quot;, &quot;text_en&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;crazi&quot;</span>, 
    <span class="hljs-string">&quot;fast&quot;</span>, 
    <span class="hljs-string">&quot;nosql&quot;</span>, 
    <span class="hljs-string">&quot;databas&quot;</span> 
  ] 
]
</pre>
<div id="analyzerTextStem_container_collapse" onclick="$('#analyzerTextStem_long').hide(); $('#analyzerTextStem_short').show(); window.location.hash='analyzerTextStem_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerTextStem_short" onclick="$('#analyzerTextStem_short').hide(); $('#analyzerTextStem_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;Crazy fast NoSQL-database!&quot;, &quot;text_en&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerTextStem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerTextNoStem


<div class="example-container" id="analyzerTextNoStem_container">
<div id="analyzerTextNoStem_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;text_en_nostem&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;lower&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>,
........&gt;   stemming: <span class="hljs-literal">false</span>,
........&gt;   stopwords: []
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>,<span class="hljs-string">&quot;norm&quot;</span>,<span class="hljs-string">&quot;position&quot;</span>])
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;Crazy fast NoSQL-database!&quot;, &quot;text_en_nostem&quot;)`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;crazy&quot;</span>, 
    <span class="hljs-string">&quot;fast&quot;</span>, 
    <span class="hljs-string">&quot;nosql&quot;</span>, 
    <span class="hljs-string">&quot;database&quot;</span> 
  ] 
]
</pre>
<div id="analyzerTextNoStem_container_collapse" onclick="$('#analyzerTextNoStem_long').hide(); $('#analyzerTextNoStem_short').show(); window.location.hash='analyzerTextNoStem_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerTextNoStem_short" onclick="$('#analyzerTextNoStem_short').hide(); $('#analyzerTextNoStem_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;text_en_nostem&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>, {
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;lower&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>,
........&gt;   stemming: <span class="hljs-literal">false</span>,
........&gt;   stopwords: []
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>,<span class="hljs-string">&quot;norm&quot;</span>,<span class="hljs-string">&quot;position&quot;</span>])
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(&quot;Crazy fast NoSQL-database!&quot;, &quot;text_en_nostem&quot;)`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerTextNoStem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/analyzers.md -->
    @startDocuBlockInline analyzerTextEdgeNgram


<div class="example-container" id="analyzerTextEdgeNgram_container">
<div id="analyzerTextEdgeNgram_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;text_edge_ngrams&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>, {
........&gt;   edgeNgram: { <span class="hljs-attr">min</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">8</span>, <span class="hljs-attr">preserveOriginal</span>: <span class="hljs-literal">true</span> },
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;lower&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>,
........&gt;   stemming: <span class="hljs-literal">false</span>,
........&gt;   stopwords: [ <span class="hljs-string">&quot;the&quot;</span> ]
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>,<span class="hljs-string">&quot;norm&quot;</span>,<span class="hljs-string">&quot;position&quot;</span>])
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(
........&gt;   &quot;The quick brown fox jumps over the dogWithAVeryLongName&quot;,
........&gt;   &quot;text_edge_ngrams&quot;
........&gt; )`</span>).toArray();
[ 
  [ 
    <span class="hljs-string">&quot;qui&quot;</span>, 
    <span class="hljs-string">&quot;quic&quot;</span>, 
    <span class="hljs-string">&quot;quick&quot;</span>, 
    <span class="hljs-string">&quot;bro&quot;</span>, 
    <span class="hljs-string">&quot;brow&quot;</span>, 
    <span class="hljs-string">&quot;brown&quot;</span>, 
    <span class="hljs-string">&quot;fox&quot;</span>, 
    <span class="hljs-string">&quot;jum&quot;</span>, 
    <span class="hljs-string">&quot;jump&quot;</span>, 
    <span class="hljs-string">&quot;jumps&quot;</span>, 
    <span class="hljs-string">&quot;ove&quot;</span>, 
    <span class="hljs-string">&quot;over&quot;</span>, 
    <span class="hljs-string">&quot;dog&quot;</span>, 
    <span class="hljs-string">&quot;dogw&quot;</span>, 
    <span class="hljs-string">&quot;dogwi&quot;</span>, 
    <span class="hljs-string">&quot;dogwit&quot;</span>, 
    <span class="hljs-string">&quot;dogwith&quot;</span>, 
    <span class="hljs-string">&quot;dogwitha&quot;</span>, 
    <span class="hljs-string">&quot;dogwithaverylongname&quot;</span> 
  ] 
]
</pre>
<div id="analyzerTextEdgeNgram_container_collapse" onclick="$('#analyzerTextEdgeNgram_long').hide(); $('#analyzerTextEdgeNgram_short').show(); window.location.hash='analyzerTextEdgeNgram_container';" class="example_show_button">Hide execution results</div></div>
<div id="analyzerTextEdgeNgram_short" onclick="$('#analyzerTextEdgeNgram_short').hide(); $('#analyzerTextEdgeNgram_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> a = analyzers.save(<span class="hljs-string">&quot;text_edge_ngrams&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>, {
........&gt;   edgeNgram: { <span class="hljs-attr">min</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">8</span>, <span class="hljs-attr">preserveOriginal</span>: <span class="hljs-literal">true</span> },
........&gt;   locale: <span class="hljs-string">&quot;en.utf-8&quot;</span>,
........&gt;   <span class="hljs-keyword">case</span>: <span class="hljs-string">&quot;lower&quot;</span>,
........&gt;   accent: <span class="hljs-literal">false</span>,
........&gt;   stemming: <span class="hljs-literal">false</span>,
........&gt;   stopwords: [ <span class="hljs-string">&quot;the&quot;</span> ]
........&gt; }, [<span class="hljs-string">&quot;frequency&quot;</span>,<span class="hljs-string">&quot;norm&quot;</span>,<span class="hljs-string">&quot;position&quot;</span>])
arangosh&gt; db._query(<span class="hljs-string">`RETURN TOKENS(
........&gt;   &quot;The quick brown fox jumps over the dogWithAVeryLongName&quot;,
........&gt;   &quot;text_edge_ngrams&quot;
........&gt; )`</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock analyzerTextEdgeNgram


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_02_saveUser


<div class="example-container" id="USER_02_saveUser_container">
<div id="USER_02_saveUser_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@arangodb/users&#x27;</span>).save(<span class="hljs-string">&#x27;my-user&#x27;</span>, <span class="hljs-string">&#x27;my-secret-password&#x27;</span>);
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;my-user&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="USER_02_saveUser_container_collapse" onclick="$('#USER_02_saveUser_long').hide(); $('#USER_02_saveUser_short').show(); window.location.hash='USER_02_saveUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_02_saveUser_short" onclick="$('#USER_02_saveUser_short').hide(); $('#USER_02_saveUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@arangodb/users&#x27;</span>).save(<span class="hljs-string">&#x27;my-user&#x27;</span>, <span class="hljs-string">&#x27;my-secret-password&#x27;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_02_saveUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_03_replaceUser


<div class="example-container" id="USER_03_replaceUser_container">
<div id="USER_03_replaceUser_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).replace(<span class="hljs-string">&quot;my-user&quot;</span>, <span class="hljs-string">&quot;my-changed-password&quot;</span>);
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;my-user&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="USER_03_replaceUser_container_collapse" onclick="$('#USER_03_replaceUser_long').hide(); $('#USER_03_replaceUser_short').show(); window.location.hash='USER_03_replaceUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_03_replaceUser_short" onclick="$('#USER_03_replaceUser_short').hide(); $('#USER_03_replaceUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).replace(<span class="hljs-string">&quot;my-user&quot;</span>, <span class="hljs-string">&quot;my-changed-password&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_03_replaceUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_04_updateUser


<div class="example-container" id="USER_04_updateUser_container">
<div id="USER_04_updateUser_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).update(<span class="hljs-string">&quot;my-user&quot;</span>, <span class="hljs-string">&quot;my-secret-password&quot;</span>);
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;my-user&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="USER_04_updateUser_container_collapse" onclick="$('#USER_04_updateUser_long').hide(); $('#USER_04_updateUser_short').show(); window.location.hash='USER_04_updateUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_04_updateUser_short" onclick="$('#USER_04_updateUser_short').hide(); $('#USER_04_updateUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).update(<span class="hljs-string">&quot;my-user&quot;</span>, <span class="hljs-string">&quot;my-secret-password&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_04_updateUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_05_isValidUser


<div class="example-container" id="USER_05_isValidUser_container">
<div id="USER_05_isValidUser_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).isValid(<span class="hljs-string">&quot;my-user&quot;</span>, <span class="hljs-string">&quot;my-secret-password&quot;</span>);
<span class="hljs-literal">true</span>
</pre>
</div>
</div>

    @endDocuBlock USER_05_isValidUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_07_removeUser


<div class="example-container" id="USER_07_removeUser_container">
<div id="USER_07_removeUser_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).remove(<span class="hljs-string">&quot;my-user&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock USER_07_removeUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_04_documentUser


<div class="example-container" id="USER_04_documentUser_container">
<div id="USER_04_documentUser_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).document(<span class="hljs-string">&quot;my-user&quot;</span>);
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;my-user&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="USER_04_documentUser_container_collapse" onclick="$('#USER_04_documentUser_long').hide(); $('#USER_04_documentUser_short').show(); window.location.hash='USER_04_documentUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_04_documentUser_short" onclick="$('#USER_04_documentUser_short').hide(); $('#USER_04_documentUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).document(<span class="hljs-string">&quot;my-user&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_04_documentUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_06_AllUsers


<div class="example-container" id="USER_06_AllUsers_container">
<div id="USER_06_AllUsers_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).all();
[ 
  { 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;tester&quot;</span>, 
    <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;extra&quot;</span> : { 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span>, 
    <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;extra&quot;</span> : { 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
    <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;extra&quot;</span> : { 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;my-user&quot;</span>, 
    <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;extra&quot;</span> : { 
    } 
  } 
]
</pre>
<div id="USER_06_AllUsers_container_collapse" onclick="$('#USER_06_AllUsers_long').hide(); $('#USER_06_AllUsers_short').show(); window.location.hash='USER_06_AllUsers_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_06_AllUsers_short" onclick="$('#USER_06_AllUsers_short').hide(); $('#USER_06_AllUsers_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).all();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_06_AllUsers


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_03_reloadUser


<div class="example-container" id="USER_03_reloadUser_container">
<div id="USER_03_reloadUser_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).reload();
</pre>
</div>
</div>

    @endDocuBlock USER_03_reloadUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_05_permission


<div class="example-container" id="USER_05_permission_container">
<div id="USER_05_permission_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/users&quot;</span>).permission(<span class="hljs-string">&quot;my-user&quot;</span>, <span class="hljs-string">&quot;testdb&quot;</span>);
rw
</pre>
</div>
</div>

    @endDocuBlock USER_05_permission


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline queryLimit


<div class="example-container" id="queryLimit_container">
<div id="queryLimit_long" style="display: none;">
<pre>
arangosh&gt; db.five.all().toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89580&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89580&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDS---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89582&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89582&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDW---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;two&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89584&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89584&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDa---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;three&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89586&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89586&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDa--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;four&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89588&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89588&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;five&quot;</span> 
  } 
]
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89580&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89580&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDS---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89582&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89582&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfDW---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;two&quot;</span> 
  } 
]
</pre>
<div id="queryLimit_container_collapse" onclick="$('#queryLimit_long').hide(); $('#queryLimit_short').show(); window.location.hash='queryLimit_container';" class="example_show_button">Hide execution results</div></div>
<div id="queryLimit_short" onclick="$('#queryLimit_short').hide(); $('#queryLimit_long').show();">
<pre>
arangosh&gt; db.five.all().toArray();
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock queryLimit


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline querySkip


<div class="example-container" id="querySkip_container">
<div id="querySkip_long" style="display: none;">
<pre>
arangosh&gt; db.five.all().toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89603&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89603&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEC---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89605&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89605&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEG---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;two&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89607&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89607&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEK---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;three&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89609&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89609&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEK--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;four&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89611&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89611&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEO---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;five&quot;</span> 
  } 
]
arangosh&gt; db.five.all().skip(<span class="hljs-number">3</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89609&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89609&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEK--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;four&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89611&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/89611&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfEO---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;five&quot;</span> 
  } 
]
</pre>
<div id="querySkip_container_collapse" onclick="$('#querySkip_long').hide(); $('#querySkip_short').show(); window.location.hash='querySkip_container';" class="example_show_button">Hide execution results</div></div>
<div id="querySkip_short" onclick="$('#querySkip_short').hide(); $('#querySkip_long').show();">
<pre>
arangosh&gt; db.five.all().toArray();
arangosh&gt; db.five.all().skip(<span class="hljs-number">3</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock querySkip


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline cursorCountUnLimited


<div class="example-container" id="cursorCountUnLimited_container">
<div id="cursorCountUnLimited_long">
<pre>
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).count();
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock cursorCountUnLimited


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline cursorCountLimit


<div class="example-container" id="cursorCountLimit_container">
<div id="cursorCountLimit_long">
<pre>
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).count(<span class="hljs-literal">true</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock cursorCountLimit


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexCreateForArrayAttribute1


<div class="example-container" id="geoIndexCreateForArrayAttribute1_container">
<div id="geoIndexCreateForArrayAttribute1_long" style="display: none;">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;loc&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;loc&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;geo/84129&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769243618476032&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="geoIndexCreateForArrayAttribute1_container_collapse" onclick="$('#geoIndexCreateForArrayAttribute1_long').hide(); $('#geoIndexCreateForArrayAttribute1_short').show(); window.location.hash='geoIndexCreateForArrayAttribute1_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexCreateForArrayAttribute1_short" onclick="$('#geoIndexCreateForArrayAttribute1_short').hide(); $('#geoIndexCreateForArrayAttribute1_long').show();">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;loc&quot;</span> ] });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexCreateForArrayAttribute1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexCreateForArrayAttribute2


<div class="example-container" id="geoIndexCreateForArrayAttribute2_container">
<div id="geoIndexCreateForArrayAttribute2_long" style="display: none;">
<pre>
arangosh&gt; db.geo2.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;location.latitude&quot;</span>, <span class="hljs-string">&quot;location.longitude&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;location.latitude&quot;</span>, 
    <span class="hljs-string">&quot;location.longitude&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;geo2/84140&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769243627913216&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="geoIndexCreateForArrayAttribute2_container_collapse" onclick="$('#geoIndexCreateForArrayAttribute2_long').hide(); $('#geoIndexCreateForArrayAttribute2_short').show(); window.location.hash='geoIndexCreateForArrayAttribute2_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexCreateForArrayAttribute2_short" onclick="$('#geoIndexCreateForArrayAttribute2_short').hide(); $('#geoIndexCreateForArrayAttribute2_long').show();">
<pre>
arangosh&gt; db.geo2.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;location.latitude&quot;</span>, <span class="hljs-string">&quot;location.longitude&quot;</span> ] });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexCreateForArrayAttribute2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexSortOptimization


<div class="example-container" id="geoIndexSortOptimization_container">
<div id="geoIndexSortOptimization_long" style="display: none;">
<pre>
arangosh&gt; db.geoSort.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;latitude&quot;</span>, <span class="hljs-string">&quot;longitude&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;latitude&quot;</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;geoSort/87005&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769244439511040&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoSort.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc in geoSort SORT DISTANCE(doc.latitude, doc.longitude, 0, 0) LIMIT 5 RETURN doc&quot;</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">86</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">true</span>):
 FOR doc <span class="hljs-keyword">in</span> geoSort SORT DISTANCE(doc.latitude, doc.longitude, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) LIMIT <span class="hljs-number">5</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">7</span>   IndexNode        <span class="hljs-number">703</span>     - FOR doc IN geoSort   <span class="hljs-comment">/* geo index scan */</span>    
  <span class="hljs-number">5</span>   LimitNode          <span class="hljs-number">5</span>       - LIMIT <span class="hljs-number">0</span>, <span class="hljs-number">5</span>
  <span class="hljs-number">6</span>   ReturnNode         <span class="hljs-number">5</span>       - RETURN doc

Indexes used:
 By   Name                      Type   Collection   Unique   Sparse   Selectivity   Fields                        Ranges
  <span class="hljs-number">7</span>   idx_1728769244439511040   geo    geoSort      <span class="hljs-literal">false</span>    <span class="hljs-literal">true</span>             n/a   [ <span class="hljs-string">`latitude`</span>, <span class="hljs-string">`longitude`</span> ]   (GEO_DISTANCE([ <span class="hljs-number">0</span>, <span class="hljs-number">0</span> ], [ doc.<span class="hljs-string">`longitude`</span>, doc.<span class="hljs-string">`latitude`</span> ]) &lt; <span class="hljs-string">&quot;unlimited&quot;</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   geo-index-optimizer
  <span class="hljs-number">2</span>   remove-unnecessary-calculations-<span class="hljs-number">2</span>


arangosh&gt; db._query(query);
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;87711&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geoSort/87711&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldyK---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/0&quot;</span>, 
    <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;87785&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geoSort/87785&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldzK--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/0&quot;</span>, 
    <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;87713&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geoSort/87713&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldyK--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/10&quot;</span>, 
    <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">10</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;87637&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geoSort/87637&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldxG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-10/0&quot;</span>, 
    <span class="hljs-string">&quot;latitude&quot;</span> : -<span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;87709&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geoSort/87709&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldyG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/-10&quot;</span>, 
    <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> : -<span class="hljs-number">10</span> 
  } 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="geoIndexSortOptimization_container_collapse" onclick="$('#geoIndexSortOptimization_long').hide(); $('#geoIndexSortOptimization_short').show(); window.location.hash='geoIndexSortOptimization_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexSortOptimization_short" onclick="$('#geoIndexSortOptimization_short').hide(); $('#geoIndexSortOptimization_long').show();">
<pre>
arangosh&gt; db.geoSort.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;latitude&quot;</span>, <span class="hljs-string">&quot;longitude&quot;</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoSort.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc in geoSort SORT DISTANCE(doc.latitude, doc.longitude, 0, 0) LIMIT 5 RETURN doc&quot;</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
arangosh&gt; db._query(query);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexSortOptimization


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexFilterOptimization


<div class="example-container" id="geoIndexFilterOptimization_container">
<div id="geoIndexFilterOptimization_long" style="display: none;">
<pre>
arangosh&gt; db.geoFilter.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;latitude&quot;</span>, <span class="hljs-string">&quot;longitude&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;latitude&quot;</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;geoFilter/84151&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769243637350400&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoFilter.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc in geoFilter FILTER DISTANCE(doc.latitude, doc.longitude, 0, 0) &lt; 2000 RETURN doc&quot;</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">89</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">true</span>):
 FOR doc <span class="hljs-keyword">in</span> geoFilter FILTER DISTANCE(doc.latitude, doc.longitude, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) &lt; <span class="hljs-number">2000</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">6</span>   IndexNode        <span class="hljs-number">703</span>     - FOR doc IN geoFilter   <span class="hljs-comment">/* geo index scan */</span>    
  <span class="hljs-number">5</span>   ReturnNode       <span class="hljs-number">703</span>       - RETURN doc

Indexes used:
 By   Name                      Type   Collection   Unique   Sparse   Selectivity   Fields                        Ranges
  <span class="hljs-number">6</span>   idx_1728769243637350400   geo    geoFilter    <span class="hljs-literal">false</span>    <span class="hljs-literal">true</span>             n/a   [ <span class="hljs-string">`latitude`</span>, <span class="hljs-string">`longitude`</span> ]   (GEO_DISTANCE([ <span class="hljs-number">0</span>, <span class="hljs-number">0</span> ], [ doc.<span class="hljs-string">`longitude`</span>, doc.<span class="hljs-string">`latitude`</span> ]) &lt; <span class="hljs-number">2000</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   geo-index-optimizer
  <span class="hljs-number">2</span>   remove-unnecessary-calculations-<span class="hljs-number">2</span>


arangosh&gt; db._query(query);
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;84857&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geoFilter/84857&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldDG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/0&quot;</span>, 
    <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span> 
  } 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="geoIndexFilterOptimization_container_collapse" onclick="$('#geoIndexFilterOptimization_long').hide(); $('#geoIndexFilterOptimization_short').show(); window.location.hash='geoIndexFilterOptimization_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexFilterOptimization_short" onclick="$('#geoIndexFilterOptimization_short').hide(); $('#geoIndexFilterOptimization_long').show();">
<pre>
arangosh&gt; db.geoFilter.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;latitude&quot;</span>, <span class="hljs-string">&quot;longitude&quot;</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoFilter.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc in geoFilter FILTER DISTANCE(doc.latitude, doc.longitude, 0, 0) &lt; 2000 RETURN doc&quot;</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
arangosh&gt; db._query(query);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexFilterOptimization


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 001_collectionAll


<div class="example-container" id="001_collectionAll_container">
<div id="001_collectionAll_long" style="display: none;">
<pre>
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;one&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/117&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;117&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTe---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;two&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/119&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;119&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTm---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;three&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/121&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;121&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTu---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;four&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/123&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;123&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTy---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;five&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/125&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;125&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWT2---&quot;</span> 
}
arangosh&gt; db.five.all().toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;117&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/117&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;119&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/119&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTm---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;two&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;121&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/121&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;three&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;123&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/123&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWTy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;four&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;125&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/125&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWT2---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;five&quot;</span> 
  } 
]
</pre>
<div id="001_collectionAll_container_collapse" onclick="$('#001_collectionAll_long').hide(); $('#001_collectionAll_short').show(); window.location.hash='001_collectionAll_container';" class="example_show_button">Hide execution results</div></div>
<div id="001_collectionAll_short" onclick="$('#001_collectionAll_short').hide(); $('#001_collectionAll_long').show();">
<pre>
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;one&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;two&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;three&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;four&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;five&quot;</span> });
arangosh&gt; db.five.all().toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 001_collectionAll


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 002_collectionAllNext


<div class="example-container" id="002_collectionAllNext_container">
<div id="002_collectionAllNext_long" style="display: none;">
<pre>
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;one&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/137&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;137&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWa---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;two&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/139&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;139&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWe---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;three&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/141&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;141&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWi---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;four&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/143&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;143&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWm---&quot;</span> 
}
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;five&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/145&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;145&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWq---&quot;</span> 
}
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;137&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/137&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWa---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;one&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;139&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;five/139&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWWe---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;two&quot;</span> 
  } 
]
</pre>
<div id="002_collectionAllNext_container_collapse" onclick="$('#002_collectionAllNext_long').hide(); $('#002_collectionAllNext_short').show(); window.location.hash='002_collectionAllNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="002_collectionAllNext_short" onclick="$('#002_collectionAllNext_short').hide(); $('#002_collectionAllNext_long').show();">
<pre>
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;one&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;two&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;three&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;four&quot;</span> });
arangosh&gt; db.five.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;five&quot;</span> });
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 002_collectionAllNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 003_collectionByExample


<div class="example-container" id="003_collectionByExample_container">
<div id="003_collectionByExample_long" style="display: none;">
<pre>
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Gerhard&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/157&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;157&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWXu---&quot;</span> 
}
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Helmut&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/159&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;159&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWXy---&quot;</span> 
}
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Angela&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/161&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;161&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWX2---&quot;</span> 
}
arangosh&gt; db.users.all().toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;157&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/157&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWXu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;159&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/159&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWXy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helmut&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;161&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/161&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWX2---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> 
  } 
]
arangosh&gt; db.users.byExample({ <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/20&quot;</span> }).toArray();
[ ]
arangosh&gt; db.users.byExample({ <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> }).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;157&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/157&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWXu---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> 
  } 
]
arangosh&gt; db.users.byExample({ <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helmut&quot;</span>, <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/15&quot;</span> }).toArray();
[ ]
</pre>
<div id="003_collectionByExample_container_collapse" onclick="$('#003_collectionByExample_long').hide(); $('#003_collectionByExample_short').show(); window.location.hash='003_collectionByExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="003_collectionByExample_short" onclick="$('#003_collectionByExample_short').hide(); $('#003_collectionByExample_long').show();">
<pre>
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Gerhard&quot;</span> });
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Helmut&quot;</span> });
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Angela&quot;</span> });
arangosh&gt; db.users.all().toArray();
arangosh&gt; db.users.byExample({ <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/20&quot;</span> }).toArray();
arangosh&gt; db.users.byExample({ <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Gerhard&quot;</span> }).toArray();
arangosh&gt; db.users.byExample({ <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Helmut&quot;</span>, <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/15&quot;</span> }).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 003_collectionByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 004_collectionByExampleNext


<div class="example-container" id="004_collectionByExampleNext_container">
<div id="004_collectionByExampleNext_long" style="display: none;">
<pre>
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Gerhard&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/179&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;179&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWZO---&quot;</span> 
}
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Helmut&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/181&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;181&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWZS---&quot;</span> 
}
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Angela&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/183&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;183&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWZW---&quot;</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> a = db.users.byExample( {<span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> } );
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;183&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/183&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWZW---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> 
}
</pre>
<div id="004_collectionByExampleNext_container_collapse" onclick="$('#004_collectionByExampleNext_long').hide(); $('#004_collectionByExampleNext_short').show(); window.location.hash='004_collectionByExampleNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="004_collectionByExampleNext_short" onclick="$('#004_collectionByExampleNext_short').hide(); $('#004_collectionByExampleNext_long').show();">
<pre>
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Gerhard&quot;</span> });
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Helmut&quot;</span> });
arangosh&gt; db.users.insert({ <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Angela&quot;</span> });
arangosh&gt; <span class="hljs-keyword">var</span> a = db.users.byExample( {<span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> } );
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 004_collectionByExampleNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionFirstExample


<div class="example-container" id="collectionFirstExample_container">
<div id="collectionFirstExample_long" style="display: none;">
<pre>
arangosh&gt; db.users.firstExample(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Angela&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76198&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;users/76198&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZRW---&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Angela&quot;</span> 
}
</pre>
<div id="collectionFirstExample_container_collapse" onclick="$('#collectionFirstExample_long').hide(); $('#collectionFirstExample_short').show(); window.location.hash='collectionFirstExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFirstExample_short" onclick="$('#collectionFirstExample_short').hide(); $('#collectionFirstExample_long').show();">
<pre>
arangosh&gt; db.users.firstExample(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Angela&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFirstExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 005_collectionRange


<div class="example-container" id="005_collectionRange_container">
<div id="005_collectionRange_long" style="display: none;">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;age&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;age&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;old/194&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769167983640576&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/198&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;198&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWaa---&quot;</span> 
}
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/200&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;200&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWae---&quot;</span> 
}
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/202&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;202&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWai---&quot;</span> 
}
arangosh&gt; db.old.range(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;198&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/198&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWaa---&quot;</span>, 
    <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">15</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;200&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/200&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWae---&quot;</span>, 
    <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">25</span> 
  } 
]
</pre>
<div id="005_collectionRange_container_collapse" onclick="$('#005_collectionRange_long').hide(); $('#005_collectionRange_short').show(); window.location.hash='005_collectionRange_container';" class="example_show_button">Hide execution results</div></div>
<div id="005_collectionRange_short" onclick="$('#005_collectionRange_short').hide(); $('#005_collectionRange_long').show();">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;age&quot;</span> ] });
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
arangosh&gt; db.old.range(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 005_collectionRange


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 006_collectionClosedRange


<div class="example-container" id="006_collectionClosedRange_container">
<div id="006_collectionClosedRange_long" style="display: none;">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;age&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;age&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;old/214&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769168011952128&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/218&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;218&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWcG---&quot;</span> 
}
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/220&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;220&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWcK---&quot;</span> 
}
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/222&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;222&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWcO---&quot;</span> 
}
arangosh&gt; db.old.closedRange(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;218&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/218&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWcG---&quot;</span>, 
    <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">15</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;220&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/220&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWcK---&quot;</span>, 
    <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">25</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;222&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;old/222&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWcO---&quot;</span>, 
    <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">30</span> 
  } 
]
</pre>
<div id="006_collectionClosedRange_container_collapse" onclick="$('#006_collectionClosedRange_long').hide(); $('#006_collectionClosedRange_short').show(); window.location.hash='006_collectionClosedRange_container';" class="example_show_button">Hide execution results</div></div>
<div id="006_collectionClosedRange_short" onclick="$('#006_collectionClosedRange_short').hide(); $('#006_collectionClosedRange_long').show();">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;age&quot;</span> ] });
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
arangosh&gt; db.old.insert({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
arangosh&gt; db.old.closedRange(<span class="hljs-string">&quot;age&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 006_collectionClosedRange


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionCount


<div class="example-container" id="collectionCount_container">
<div id="collectionCount_long">
<pre>
arangosh&gt; db.users.count();
<span class="hljs-number">0</span>
</pre>
</div>
</div>

    @endDocuBlock collectionCount


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidPlain


<div class="example-container" id="documentsCollectionNameValidPlain_container">
<div id="documentsCollectionNameValidPlain_long" style="display: none;">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/2873916&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2873916&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/2873916&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZse---&quot;</span> 
}
</pre>
<div id="documentsCollectionNameValidPlain_container_collapse" onclick="$('#documentsCollectionNameValidPlain_long').hide(); $('#documentsCollectionNameValidPlain_short').show(); window.location.hash='documentsCollectionNameValidPlain_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidPlain_short" onclick="$('#documentsCollectionNameValidPlain_short').hide(); $('#documentsCollectionNameValidPlain_long').show();">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/2873916&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidPlain


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidByKey


<div class="example-container" id="documentsCollectionNameValidByKey_container">
<div id="documentsCollectionNameValidByKey_long" style="display: none;">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">&quot;2873916&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2873916&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/2873916&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZrC---&quot;</span> 
}
</pre>
<div id="documentsCollectionNameValidByKey_container_collapse" onclick="$('#documentsCollectionNameValidByKey_long').hide(); $('#documentsCollectionNameValidByKey_short').show(); window.location.hash='documentsCollectionNameValidByKey_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidByKey_short" onclick="$('#documentsCollectionNameValidByKey_short').hide(); $('#documentsCollectionNameValidByKey_long').show();">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">&quot;2873916&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidByKey


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidByObject


<div class="example-container" id="documentsCollectionNameValidByObject_container">
<div id="documentsCollectionNameValidByObject_long" style="display: none;">
<pre>
arangosh&gt; db.example.document({<span class="hljs-attr">_id</span>: <span class="hljs-string">&quot;example/2873916&quot;</span>});
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2873916&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/2873916&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZre---&quot;</span> 
}
</pre>
<div id="documentsCollectionNameValidByObject_container_collapse" onclick="$('#documentsCollectionNameValidByObject_long').hide(); $('#documentsCollectionNameValidByObject_short').show(); window.location.hash='documentsCollectionNameValidByObject_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidByObject_short" onclick="$('#documentsCollectionNameValidByObject_short').hide(); $('#documentsCollectionNameValidByObject_long').show();">
<pre>
arangosh&gt; db.example.document({<span class="hljs-attr">_id</span>: <span class="hljs-string">&quot;example/2873916&quot;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidByObject


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidMulti


<div class="example-container" id="documentsCollectionNameValidMulti_container">
<div id="documentsCollectionNameValidMulti_long" style="display: none;">
<pre>
arangosh&gt; db.example.document([<span class="hljs-string">&quot;2873916&quot;</span>,<span class="hljs-string">&quot;2873917&quot;</span>]);
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2873916&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/2873916&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZs----&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2873917&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/2873917&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZs---A&quot;</span> 
  } 
]
</pre>
<div id="documentsCollectionNameValidMulti_container_collapse" onclick="$('#documentsCollectionNameValidMulti_long').hide(); $('#documentsCollectionNameValidMulti_short').show(); window.location.hash='documentsCollectionNameValidMulti_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidMulti_short" onclick="$('#documentsCollectionNameValidMulti_short').hide(); $('#documentsCollectionNameValidMulti_long').show();">
<pre>
arangosh&gt; db.example.document([<span class="hljs-string">&quot;2873916&quot;</span>,<span class="hljs-string">&quot;2873917&quot;</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameUnknown


<div class="example-container" id="documentsCollectionNameUnknown_container">
<div id="documentsCollectionNameUnknown_long">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/4472917&quot;</span>);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
</div>
</div>

    @endDocuBlock documentsCollectionNameUnknown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameHandle


<div class="example-container" id="documentsCollectionNameHandle_container">
<div id="documentsCollectionNameHandle_long">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">&quot;&quot;</span>);
[ArangoError <span class="hljs-number">1205</span>: illegal <span class="hljs-built_in">document</span> identifier]
</pre>
</div>
</div>

    @endDocuBlock documentsCollectionNameHandle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionLookupByKeys


<div class="example-container" id="collectionLookupByKeys_container">
<div id="collectionLookupByKeys_long" style="display: none;">
<pre>
arangosh&gt; keys = [ ];
[ ]
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;test&quot;</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">&quot;test&quot;</span> + i);
........&gt; }
arangosh&gt; db.example.documents(keys);
{ 
  <span class="hljs-string">&quot;documents&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test0&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test0&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZUq---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test1&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test1&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZUq--A&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test2&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test2&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZUu---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test3&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test3&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZUy---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">3</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test4&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test4&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZUy--A&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">4</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test5&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test5&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZU2---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">5</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test6&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test6&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZU2--A&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">6</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test7&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test7&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZU6---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">7</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test8&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test8&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZV----&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">8</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test9&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/test9&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZV---A&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">9</span> 
    } 
  ] 
}
</pre>
<div id="collectionLookupByKeys_container_collapse" onclick="$('#collectionLookupByKeys_long').hide(); $('#collectionLookupByKeys_short').show(); window.location.hash='collectionLookupByKeys_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionLookupByKeys_short" onclick="$('#collectionLookupByKeys_short').hide(); $('#collectionLookupByKeys_long').show();">
<pre>
arangosh&gt; keys = [ ];
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;test&quot;</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">&quot;test&quot;</span> + i);
........&gt; }
arangosh&gt; db.example.documents(keys);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionLookupByKeys


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionInsertSingle


<div class="example-container" id="documentsCollectionInsertSingle_container">
<div id="documentsCollectionInsertSingle_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76587&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76587&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZoC---&quot;</span> 
}
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> }, {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76589&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76589&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZoK---&quot;</span> 
}
</pre>
<div id="documentsCollectionInsertSingle_container_collapse" onclick="$('#documentsCollectionInsertSingle_long').hide(); $('#documentsCollectionInsertSingle_short').show(); window.location.hash='documentsCollectionInsertSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionInsertSingle_short" onclick="$('#documentsCollectionInsertSingle_short').hide(); $('#documentsCollectionInsertSingle_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> });
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> }, {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionInsertSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionInsertMulti


<div class="example-container" id="documentsCollectionInsertMulti_container">
<div id="documentsCollectionInsertMulti_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;there&quot;</span>}])
[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76574&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76574&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZm6---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76575&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76575&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZm6--A&quot;</span> 
  } 
]
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> }, {}], {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76577&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76577&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZn----&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76578&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76578&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZn---A&quot;</span> 
  } 
]
</pre>
<div id="documentsCollectionInsertMulti_container_collapse" onclick="$('#documentsCollectionInsertMulti_long').hide(); $('#documentsCollectionInsertMulti_short').show(); window.location.hash='documentsCollectionInsertMulti_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionInsertMulti_short" onclick="$('#documentsCollectionInsertMulti_short').hide(); $('#documentsCollectionInsertMulti_long').show();">
<pre>
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;there&quot;</span>}])
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> }, {}], {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionInsertMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionInsertSingleOverwrite


<div class="example-container" id="documentsCollectionInsertSingleOverwrite_container">
<div id="documentsCollectionInsertSingleOverwrite_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span> : <span class="hljs-string">&quot;666&quot;</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/666&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;666&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZpG---&quot;</span> 
}
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span> : <span class="hljs-string">&quot;666&quot;</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;Universe&quot;</span> }, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">returnOld</span>: <span class="hljs-literal">true</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/666&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;666&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZpK---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZpG---&quot;</span>, 
  <span class="hljs-string">&quot;old&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;666&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/666&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZpG---&quot;</span>, 
    <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> 
  } 
}
</pre>
<div id="documentsCollectionInsertSingleOverwrite_container_collapse" onclick="$('#documentsCollectionInsertSingleOverwrite_long').hide(); $('#documentsCollectionInsertSingleOverwrite_short').show(); window.location.hash='documentsCollectionInsertSingleOverwrite_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionInsertSingleOverwrite_short" onclick="$('#documentsCollectionInsertSingleOverwrite_short').hide(); $('#documentsCollectionInsertSingleOverwrite_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span> : <span class="hljs-string">&quot;666&quot;</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> });
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span> : <span class="hljs-string">&quot;666&quot;</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;Universe&quot;</span> }, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">returnOld</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionInsertSingleOverwrite


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionReplace1


<div class="example-container" id="documentsCollectionReplace1_container">
<div id="documentsCollectionReplace1_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76716&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76716&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZvO---&quot;</span> 
}
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76716&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76716&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZvS---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZvO---&quot;</span> 
}
arangosh&gt; a3 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
[ArangoError <span class="hljs-number">1200</span>: conflict]
</pre>
<div id="documentsCollectionReplace1_container_collapse" onclick="$('#documentsCollectionReplace1_long').hide(); $('#documentsCollectionReplace1_short').show(); window.location.hash='documentsCollectionReplace1_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionReplace1_short" onclick="$('#documentsCollectionReplace1_short').hide(); $('#documentsCollectionReplace1_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; a3 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionReplace1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionReplaceHandle


<div class="example-container" id="documentsCollectionReplaceHandle_container">
<div id="documentsCollectionReplaceHandle_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/3903045&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3903045&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZv2---&quot;</span> 
}
arangosh&gt; a2 = db.example.replace(<span class="hljs-string">&quot;example/3903044&quot;</span>, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/3903044&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3903044&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZv6---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZvy---&quot;</span> 
}
</pre>
<div id="documentsCollectionReplaceHandle_container_collapse" onclick="$('#documentsCollectionReplaceHandle_long').hide(); $('#documentsCollectionReplaceHandle_short').show(); window.location.hash='documentsCollectionReplaceHandle_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionReplaceHandle_short" onclick="$('#documentsCollectionReplaceHandle_short').hide(); $('#documentsCollectionReplaceHandle_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db.example.replace(<span class="hljs-string">&quot;example/3903044&quot;</span>, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionReplaceHandle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateDocument


<div class="example-container" id="documentsCollection_UpdateDocument_container">
<div id="documentsCollection_UpdateDocument_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76796&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76796&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0G---&quot;</span> 
}
arangosh&gt; a2 = db.example.update(a1, {<span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-number">2</span>, <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">3</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76796&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76796&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0K---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0G---&quot;</span> 
}
arangosh&gt; a3 = db.example.update(a1, {<span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-number">4</span>});
[ArangoError <span class="hljs-number">1200</span>: conflict]
arangosh&gt; a4 = db.example.update(a2, {<span class="hljs-string">&quot;e&quot;</span> : <span class="hljs-number">5</span>, <span class="hljs-string">&quot;f&quot;</span> : <span class="hljs-number">6</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76796&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76796&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0S---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0K---&quot;</span> 
}
arangosh&gt; db.example.document(a4);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76796&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76796&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0S---&quot;</span>, 
  <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;f&quot;</span> : <span class="hljs-number">6</span>, 
  <span class="hljs-string">&quot;e&quot;</span> : <span class="hljs-number">5</span> 
}
arangosh&gt; a5 = db.example.update(a4, {<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">c</span> : <span class="hljs-number">9</span>, <span class="hljs-attr">e</span> : <span class="hljs-number">42</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76796&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76796&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0a---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0S---&quot;</span> 
}
arangosh&gt; db.example.document(a5);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76796&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76796&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ0a---&quot;</span>, 
  <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">9</span>, 
  <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;f&quot;</span> : <span class="hljs-number">6</span>, 
  <span class="hljs-string">&quot;e&quot;</span> : <span class="hljs-number">42</span> 
}
</pre>
<div id="documentsCollection_UpdateDocument_container_collapse" onclick="$('#documentsCollection_UpdateDocument_long').hide(); $('#documentsCollection_UpdateDocument_short').show(); window.location.hash='documentsCollection_UpdateDocument_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateDocument_short" onclick="$('#documentsCollection_UpdateDocument_short').hide(); $('#documentsCollection_UpdateDocument_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>});
arangosh&gt; a2 = db.example.update(a1, {<span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-number">2</span>, <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-number">3</span>});
arangosh&gt; a3 = db.example.update(a1, {<span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-number">4</span>});
arangosh&gt; a4 = db.example.update(a2, {<span class="hljs-string">&quot;e&quot;</span> : <span class="hljs-number">5</span>, <span class="hljs-string">&quot;f&quot;</span> : <span class="hljs-number">6</span> });
arangosh&gt; db.example.document(a4);
arangosh&gt; a5 = db.example.update(a4, {<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">c</span> : <span class="hljs-number">9</span>, <span class="hljs-attr">e</span> : <span class="hljs-number">42</span> });
arangosh&gt; db.example.document(a5);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateDocument


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateHandleSingle


<div class="example-container" id="documentsCollection_UpdateHandleSingle_container">
<div id="documentsCollection_UpdateHandleSingle_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/18612116&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;18612116&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ3G---&quot;</span> 
}
arangosh&gt; a2 = db.example.update(<span class="hljs-string">&quot;example/18612115&quot;</span>, { <span class="hljs-string">&quot;x&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-string">&quot;y&quot;</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/18612115&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;18612115&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ3K---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ3C---&quot;</span> 
}
</pre>
<div id="documentsCollection_UpdateHandleSingle_container_collapse" onclick="$('#documentsCollection_UpdateHandleSingle_long').hide(); $('#documentsCollection_UpdateHandleSingle_short').show(); window.location.hash='documentsCollection_UpdateHandleSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateHandleSingle_short" onclick="$('#documentsCollection_UpdateHandleSingle_short').hide(); $('#documentsCollection_UpdateHandleSingle_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>});
arangosh&gt; a2 = db.example.update(<span class="hljs-string">&quot;example/18612115&quot;</span>, { <span class="hljs-string">&quot;x&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-string">&quot;y&quot;</span> : <span class="hljs-number">2</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateHandleSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateHandleKeepNull


<div class="example-container" id="documentsCollection_UpdateHandleKeepNull_container">
<div id="documentsCollection_UpdateHandleKeepNull_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988372&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988372&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2C---&quot;</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/19988371&quot;</span>,
........&gt; { <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-number">3</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988371&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988371&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2G---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2----&quot;</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/19988371&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988371&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988371&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2G---&quot;</span>, 
  <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-literal">null</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/19988371&quot;</span>, { <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988371&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988371&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2O---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2G---&quot;</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/19988371&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988371&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988371&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2O---&quot;</span>, 
  <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-literal">null</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/19988371&quot;</span>,
........&gt; { <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;c&quot;</span>: <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988371&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988371&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2S---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2O---&quot;</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/19988371&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;19988371&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/19988371&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ2S---&quot;</span> 
}
</pre>
<div id="documentsCollection_UpdateHandleKeepNull_container_collapse" onclick="$('#documentsCollection_UpdateHandleKeepNull_long').hide(); $('#documentsCollection_UpdateHandleKeepNull_short').show(); window.location.hash='documentsCollection_UpdateHandleKeepNull_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateHandleKeepNull_short" onclick="$('#documentsCollection_UpdateHandleKeepNull_short').hide(); $('#documentsCollection_UpdateHandleKeepNull_long').show();">
<pre>
arangosh&gt; db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span>});
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/19988371&quot;</span>,
........&gt; { <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-number">3</span> });
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/19988371&quot;</span>);
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/19988371&quot;</span>, { <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/19988371&quot;</span>);
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/19988371&quot;</span>,
........&gt; { <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;c&quot;</span>: <span class="hljs-literal">null</span>, <span class="hljs-string">&quot;d&quot;</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/19988371&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateHandleKeepNull


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateHandleArray


<div class="example-container" id="documentsCollection_UpdateHandleArray_container">
<div id="documentsCollection_UpdateHandleArray_long" style="display: none;">
<pre>
arangosh&gt;  db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : { <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-string">&quot;two&quot;</span> : <span class="hljs-number">2</span>, <span class="hljs-string">&quot;three&quot;</span> : <span class="hljs-number">3</span> },
........&gt; <span class="hljs-string">&quot;b&quot;</span> : { }});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/20774804&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;20774804&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1C--A&quot;</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/20774803&quot;</span>, {<span class="hljs-string">&quot;a&quot;</span> : { <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> },
........&gt; <span class="hljs-string">&quot;b&quot;</span> : { <span class="hljs-string">&quot;b1&quot;</span> : <span class="hljs-number">1</span> }});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/20774803&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;20774803&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1G---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1C---&quot;</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/20774803&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;20774803&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/20774803&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1G---&quot;</span>, 
  <span class="hljs-string">&quot;b&quot;</span> : { 
    <span class="hljs-string">&quot;b1&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;a&quot;</span> : { 
    <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> 
  } 
}
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/20774803&quot;</span>, { <span class="hljs-string">&quot;a&quot;</span> : { <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-literal">null</span> },
........&gt;                                         <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span> },
........&gt; <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/20774803&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;20774803&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1O---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1G---&quot;</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/20774803&quot;</span>);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;20774803&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/20774803&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZ1O---&quot;</span>, 
  <span class="hljs-string">&quot;a&quot;</span> : { 
    <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> 
  } 
}
</pre>
<div id="documentsCollection_UpdateHandleArray_container_collapse" onclick="$('#documentsCollection_UpdateHandleArray_long').hide(); $('#documentsCollection_UpdateHandleArray_short').show(); window.location.hash='documentsCollection_UpdateHandleArray_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateHandleArray_short" onclick="$('#documentsCollection_UpdateHandleArray_short').hide(); $('#documentsCollection_UpdateHandleArray_long').show();">
<pre>
arangosh&gt;  db.example.insert({<span class="hljs-string">&quot;a&quot;</span> : { <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-string">&quot;two&quot;</span> : <span class="hljs-number">2</span>, <span class="hljs-string">&quot;three&quot;</span> : <span class="hljs-number">3</span> },
........&gt; <span class="hljs-string">&quot;b&quot;</span> : { }});
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/20774803&quot;</span>, {<span class="hljs-string">&quot;a&quot;</span> : { <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> },
........&gt; <span class="hljs-string">&quot;b&quot;</span> : { <span class="hljs-string">&quot;b1&quot;</span> : <span class="hljs-number">1</span> }});
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/20774803&quot;</span>);
arangosh&gt; db.example.update(<span class="hljs-string">&quot;example/20774803&quot;</span>, { <span class="hljs-string">&quot;a&quot;</span> : { <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-literal">null</span> },
........&gt;                                         <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-literal">null</span> },
........&gt; <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.document(<span class="hljs-string">&quot;example/20774803&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateHandleArray


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentDocumentRemoveSimple


<div class="example-container" id="documentDocumentRemoveSimple_container">
<div id="documentDocumentRemoveSimple_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76539&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76539&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZlG---&quot;</span> 
}
arangosh&gt; db.example.document(a1);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76539&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76539&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZlG---&quot;</span>, 
  <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-number">1</span> 
}
arangosh&gt; db.example.remove(a1);
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76539&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76539&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZlG---&quot;</span> 
}
arangosh&gt; db.example.document(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentDocumentRemoveSimple_container_collapse" onclick="$('#documentDocumentRemoveSimple_long').hide(); $('#documentDocumentRemoveSimple_short').show(); window.location.hash='documentDocumentRemoveSimple_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentDocumentRemoveSimple_short" onclick="$('#documentDocumentRemoveSimple_short').hide(); $('#documentDocumentRemoveSimple_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; db.example.document(a1);
arangosh&gt; db.example.remove(a1);
arangosh&gt; db.example.document(a1);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentDocumentRemoveSimple


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentDocumentRemoveConflict


<div class="example-container" id="documentDocumentRemoveConflict_container">
<div id="documentDocumentRemoveConflict_long" style="display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76525&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZka---&quot;</span> 
}
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76525&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZke---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylZka---&quot;</span> 
}
arangosh&gt; db.example.remove(a1);
[ArangoError <span class="hljs-number">1200</span>: conflict]
arangosh&gt; db.example.remove(a1, <span class="hljs-literal">true</span>);
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/76525&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;76525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylZke---&quot;</span> 
}
arangosh&gt; db.example.document(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentDocumentRemoveConflict_container_collapse" onclick="$('#documentDocumentRemoveConflict_long').hide(); $('#documentDocumentRemoveConflict_short').show(); window.location.hash='documentDocumentRemoveConflict_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentDocumentRemoveConflict_short" onclick="$('#documentDocumentRemoveConflict_short').hide(); $('#documentDocumentRemoveConflict_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; db.example.remove(a1);
arangosh&gt; db.example.remove(a1, <span class="hljs-literal">true</span>);
arangosh&gt; db.example.document(a1);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentDocumentRemoveConflict


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionRemoveByKeys


<div class="example-container" id="collectionRemoveByKeys_container">
<div id="collectionRemoveByKeys_long" style="display: none;">
<pre>
arangosh&gt; keys = [ ];
[ ]
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;test&quot;</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">&quot;test&quot;</span> + i);
........&gt; }
arangosh&gt; db.example.removeByKeys(keys);
{ 
  <span class="hljs-string">&quot;removed&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="collectionRemoveByKeys_container_collapse" onclick="$('#collectionRemoveByKeys_long').hide(); $('#collectionRemoveByKeys_short').show(); window.location.hash='collectionRemoveByKeys_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionRemoveByKeys_short" onclick="$('#collectionRemoveByKeys_short').hide(); $('#collectionRemoveByKeys_long').show();">
<pre>
arangosh&gt; keys = [ ];
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;test&quot;</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">&quot;test&quot;</span> + i);
........&gt; }
arangosh&gt; db.example.removeByKeys(keys);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionRemoveByKeys


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 010_documentsCollectionRemoveByExample


<div class="example-container" id="010_documentsCollectionRemoveByExample_container">
<div id="010_documentsCollectionRemoveByExample_long">
<pre>
arangosh&gt; db.example.removeByExample( {<span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;world&quot;</span>} );
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock 010_documentsCollectionRemoveByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 011_documentsCollectionReplaceByExample


<div class="example-container" id="011_documentsCollectionReplaceByExample_container">
<div id="011_documentsCollectionReplaceByExample_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;world&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/4511&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;4511&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXfS---&quot;</span> 
}
arangosh&gt; db.example.replaceByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;world&quot;</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;mars&quot;</span>}, <span class="hljs-literal">false</span>, <span class="hljs-number">5</span>);
<span class="hljs-number">1</span>
</pre>
<div id="011_documentsCollectionReplaceByExample_container_collapse" onclick="$('#011_documentsCollectionReplaceByExample_long').hide(); $('#011_documentsCollectionReplaceByExample_short').show(); window.location.hash='011_documentsCollectionReplaceByExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="011_documentsCollectionReplaceByExample_short" onclick="$('#011_documentsCollectionReplaceByExample_short').hide(); $('#011_documentsCollectionReplaceByExample_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;world&quot;</span> });
arangosh&gt; db.example.replaceByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;world&quot;</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;mars&quot;</span>}, <span class="hljs-literal">false</span>, <span class="hljs-number">5</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 011_documentsCollectionReplaceByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 012_documentsCollectionUpdateByExample


<div class="example-container" id="012_documentsCollectionUpdateByExample_container">
<div id="012_documentsCollectionUpdateByExample_long" style="display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;world&quot;</span>, <span class="hljs-attr">foo</span> : <span class="hljs-string">&quot;bar&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/4522&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;4522&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXgC---&quot;</span> 
}
arangosh&gt; db.example.updateByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;world&quot;</span> }, { <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-attr">World</span>: <span class="hljs-string">&quot;bar&quot;</span> }, <span class="hljs-literal">false</span>);
<span class="hljs-number">1</span>
arangosh&gt; db.example.byExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;foo&quot;</span> }).toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;4522&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;example/4522&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXgO---&quot;</span>, 
    <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;World&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span> 
  } 
]
</pre>
<div id="012_documentsCollectionUpdateByExample_container_collapse" onclick="$('#012_documentsCollectionUpdateByExample_long').hide(); $('#012_documentsCollectionUpdateByExample_short').show(); window.location.hash='012_documentsCollectionUpdateByExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="012_documentsCollectionUpdateByExample_short" onclick="$('#012_documentsCollectionUpdateByExample_short').hide(); $('#012_documentsCollectionUpdateByExample_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;world&quot;</span>, <span class="hljs-attr">foo</span> : <span class="hljs-string">&quot;bar&quot;</span> });
arangosh&gt; db.example.updateByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;world&quot;</span> }, { <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-attr">World</span>: <span class="hljs-string">&quot;bar&quot;</span> }, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.byExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">&quot;foo&quot;</span> }).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 012_documentsCollectionUpdateByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline EDGCOL_02_Relation


<div class="example-container" id="EDGCOL_02_Relation_container">
<div id="EDGCOL_02_Relation_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;vertex&quot;</span>);
[ArangoCollection <span class="hljs-number">65594</span>, <span class="hljs-string">&quot;vertex&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">&quot;relation&quot;</span>);
[ArangoCollection <span class="hljs-number">65599</span>, <span class="hljs-string">&quot;relation&quot;</span> (type edge, status loaded)]
arangosh&gt; <span class="hljs-keyword">var</span> myGraph = {};
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 1&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;vertex/65606&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65606&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklRy---&quot;</span> 
}
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 2&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;vertex/65608&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65608&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklR2---&quot;</span> 
}
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;knows&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65610&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65610&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklR6---&quot;</span> 
}
arangosh&gt; db._document(myGraph.e1);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65610&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65610&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertex/65606&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertex/65608&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklR6---&quot;</span>, 
  <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span> 
}
arangosh&gt; db.relation.edges(myGraph.e1._id);
[ ]
</pre>
<div id="EDGCOL_02_Relation_container_collapse" onclick="$('#EDGCOL_02_Relation_long').hide(); $('#EDGCOL_02_Relation_short').show(); window.location.hash='EDGCOL_02_Relation_container';" class="example_show_button">Hide execution results</div></div>
<div id="EDGCOL_02_Relation_short" onclick="$('#EDGCOL_02_Relation_short').hide(); $('#EDGCOL_02_Relation_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;vertex&quot;</span>);
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">&quot;relation&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> myGraph = {};
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 1&quot;</span> });
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 2&quot;</span> });
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;knows&quot;</span>});
arangosh&gt; db._document(myGraph.e1);
arangosh&gt; db.relation.edges(myGraph.e1._id);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock EDGCOL_02_Relation


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline EDGCOL_02_inEdges


<div class="example-container" id="EDGCOL_02_inEdges_container">
<div id="EDGCOL_02_inEdges_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;vertex&quot;</span>);
[ArangoCollection <span class="hljs-number">65618</span>, <span class="hljs-string">&quot;vertex&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">&quot;relation&quot;</span>);
[ArangoCollection <span class="hljs-number">65623</span>, <span class="hljs-string">&quot;relation&quot;</span> (type edge, status loaded)]
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 1&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;vertex/65630&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65630&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklSy---&quot;</span> 
}
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 2&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;vertex/65632&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65632&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklS2---&quot;</span> 
}
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;knows&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65634&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65634&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklS6---&quot;</span> 
}
arangosh&gt; db._document(myGraph.e1);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65634&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65634&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertex/65630&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertex/65632&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklS6---&quot;</span>, 
  <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span> 
}
arangosh&gt; db.relation.inEdges(myGraph.v1._id);
[ ]
arangosh&gt; db.relation.inEdges(myGraph.v2._id);
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65634&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65634&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertex/65630&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertex/65632&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklS6---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span> 
  } 
]
</pre>
<div id="EDGCOL_02_inEdges_container_collapse" onclick="$('#EDGCOL_02_inEdges_long').hide(); $('#EDGCOL_02_inEdges_short').show(); window.location.hash='EDGCOL_02_inEdges_container';" class="example_show_button">Hide execution results</div></div>
<div id="EDGCOL_02_inEdges_short" onclick="$('#EDGCOL_02_inEdges_short').hide(); $('#EDGCOL_02_inEdges_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;vertex&quot;</span>);
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">&quot;relation&quot;</span>);
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 1&quot;</span> });
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 2&quot;</span> });
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;knows&quot;</span>});
arangosh&gt; db._document(myGraph.e1);
arangosh&gt; db.relation.inEdges(myGraph.v1._id);
arangosh&gt; db.relation.inEdges(myGraph.v2._id);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock EDGCOL_02_inEdges


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline EDGCOL_02_outEdges


<div class="example-container" id="EDGCOL_02_outEdges_container">
<div id="EDGCOL_02_outEdges_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;vertex&quot;</span>);
[ArangoCollection <span class="hljs-number">65644</span>, <span class="hljs-string">&quot;vertex&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">&quot;relation&quot;</span>);
[ArangoCollection <span class="hljs-number">65649</span>, <span class="hljs-string">&quot;relation&quot;</span> (type edge, status loaded)]
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 1&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;vertex/65656&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65656&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklT2---&quot;</span> 
}
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 2&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;vertex/65658&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65658&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklT6---&quot;</span> 
}
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;knows&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65660&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65660&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklT6--A&quot;</span> 
}
arangosh&gt; db._document(myGraph.e1);
{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65660&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65660&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertex/65656&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertex/65658&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklT6--A&quot;</span>, 
  <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span> 
}
arangosh&gt; db.relation.outEdges(myGraph.v1._id);
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;65660&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/65660&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertex/65656&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertex/65658&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklT6--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span> 
  } 
]
arangosh&gt; db.relation.outEdges(myGraph.v2._id);
[ ]
</pre>
<div id="EDGCOL_02_outEdges_container_collapse" onclick="$('#EDGCOL_02_outEdges_long').hide(); $('#EDGCOL_02_outEdges_short').show(); window.location.hash='EDGCOL_02_outEdges_container';" class="example_show_button">Hide execution results</div></div>
<div id="EDGCOL_02_outEdges_short" onclick="$('#EDGCOL_02_outEdges_short').hide(); $('#EDGCOL_02_outEdges_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;vertex&quot;</span>);
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">&quot;relation&quot;</span>);
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 1&quot;</span> });
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;vertex 2&quot;</span> });
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;knows&quot;</span>});
arangosh&gt; db._document(myGraph.e1);
arangosh&gt; db.relation.outEdges(myGraph.v1._id);
arangosh&gt; db.relation.outEdges(myGraph.v2._id);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock EDGCOL_02_outEdges


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline accessViaGeoIndex


<div class="example-container" id="accessViaGeoIndex_container">
<div id="accessViaGeoIndex_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.example.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;home&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;home&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/75601&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769238886252544&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; items = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
........&gt; db.example.index(items[<span class="hljs-number">1</span>]);
[ 
  <span class="hljs-string">&quot;example/0&quot;</span>, 
  <span class="hljs-string">&quot;example/75601&quot;</span> 
]
</pre>
<div id="accessViaGeoIndex_container_collapse" onclick="$('#accessViaGeoIndex_long').hide(); $('#accessViaGeoIndex_short').show(); window.location.hash='accessViaGeoIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="accessViaGeoIndex_short" onclick="$('#accessViaGeoIndex_short').hide(); $('#accessViaGeoIndex_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.example.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;home&quot;</span> ] });
arangosh&gt; items = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
........&gt; db.example.index(items[<span class="hljs-number">1</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


    @endDocuBlock accessViaGeoIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeDefinitionsSimple


<div class="example-container" id="generalGraphEdgeDefinitionsSimple_container">
<div id="generalGraphEdgeDefinitionsSimple_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">&quot;lives_in&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;city&quot;</span>);
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;lives_in&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;user&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;city&quot;</span> 
  ] 
}
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>);
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;user&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;user&quot;</span> 
  ] 
}
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation, undirected_relation);
[ 
  { 
    <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;lives_in&quot;</span>, 
    <span class="hljs-string">&quot;from&quot;</span> : [ 
      <span class="hljs-string">&quot;user&quot;</span> 
    ], 
    <span class="hljs-string">&quot;to&quot;</span> : [ 
      <span class="hljs-string">&quot;city&quot;</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span>, 
    <span class="hljs-string">&quot;from&quot;</span> : [ 
      <span class="hljs-string">&quot;user&quot;</span> 
    ], 
    <span class="hljs-string">&quot;to&quot;</span> : [ 
      <span class="hljs-string">&quot;user&quot;</span> 
    ] 
  } 
]
</pre>
<div id="generalGraphEdgeDefinitionsSimple_container_collapse" onclick="$('#generalGraphEdgeDefinitionsSimple_long').hide(); $('#generalGraphEdgeDefinitionsSimple_short').show(); window.location.hash='generalGraphEdgeDefinitionsSimple_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeDefinitionsSimple_short" onclick="$('#generalGraphEdgeDefinitionsSimple_short').hide(); $('#generalGraphEdgeDefinitionsSimple_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">&quot;lives_in&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;city&quot;</span>);
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>);
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation, undirected_relation);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeDefinitionsSimple


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeDefinitionsExtend


<div class="example-container" id="generalGraphEdgeDefinitionsExtend_container">
<div id="generalGraphEdgeDefinitionsExtend_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">&quot;lives_in&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;city&quot;</span>);
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;lives_in&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;user&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;city&quot;</span> 
  ] 
}
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>);
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;knows&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;user&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;user&quot;</span> 
  ] 
}
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation);
[ 
  { 
    <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;lives_in&quot;</span>, 
    <span class="hljs-string">&quot;from&quot;</span> : [ 
      <span class="hljs-string">&quot;user&quot;</span> 
    ], 
    <span class="hljs-string">&quot;to&quot;</span> : [ 
      <span class="hljs-string">&quot;city&quot;</span> 
    ] 
  } 
]
arangosh&gt; edgedefinitions = graph_module._extendEdgeDefinitions(undirected_relation);
</pre>
<div id="generalGraphEdgeDefinitionsExtend_container_collapse" onclick="$('#generalGraphEdgeDefinitionsExtend_long').hide(); $('#generalGraphEdgeDefinitionsExtend_short').show(); window.location.hash='generalGraphEdgeDefinitionsExtend_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeDefinitionsExtend_short" onclick="$('#generalGraphEdgeDefinitionsExtend_short').hide(); $('#generalGraphEdgeDefinitionsExtend_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">&quot;lives_in&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;city&quot;</span>);
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>);
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation);
arangosh&gt; edgedefinitions = graph_module._extendEdgeDefinitions(undirected_relation);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeDefinitionsExtend


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphRelationDefinitionSave


<div class="example-container" id="generalGraphRelationDefinitionSave_container">
<div id="generalGraphRelationDefinitionSave_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">&quot;has_bought&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Company&quot;</span>], [<span class="hljs-string">&quot;Groceries&quot;</span>, <span class="hljs-string">&quot;Electronics&quot;</span>]);
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;has_bought&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;Customer&quot;</span>, 
    <span class="hljs-string">&quot;Company&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;Groceries&quot;</span>, 
    <span class="hljs-string">&quot;Electronics&quot;</span> 
  ] 
}
</pre>
<div id="generalGraphRelationDefinitionSave_container_collapse" onclick="$('#generalGraphRelationDefinitionSave_long').hide(); $('#generalGraphRelationDefinitionSave_short').show(); window.location.hash='generalGraphRelationDefinitionSave_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphRelationDefinitionSave_short" onclick="$('#generalGraphRelationDefinitionSave_short').hide(); $('#generalGraphRelationDefinitionSave_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">&quot;has_bought&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Company&quot;</span>], [<span class="hljs-string">&quot;Groceries&quot;</span>, <span class="hljs-string">&quot;Electronics&quot;</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphRelationDefinitionSave


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphRelationDefinitionSingle


<div class="example-container" id="generalGraphRelationDefinitionSingle_container">
<div id="generalGraphRelationDefinitionSingle_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">&quot;has_bought&quot;</span>, <span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Product&quot;</span>);
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;has_bought&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;Customer&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;Product&quot;</span> 
  ] 
}
</pre>
<div id="generalGraphRelationDefinitionSingle_container_collapse" onclick="$('#generalGraphRelationDefinitionSingle_long').hide(); $('#generalGraphRelationDefinitionSingle_short').show(); window.location.hash='generalGraphRelationDefinitionSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphRelationDefinitionSingle_short" onclick="$('#generalGraphRelationDefinitionSingle_short').hide(); $('#generalGraphRelationDefinitionSingle_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">&quot;has_bought&quot;</span>, <span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Product&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphRelationDefinitionSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphCreateGraphNoData


<div class="example-container" id="generalGraphCreateGraphNoData_container">
<div id="generalGraphCreateGraphNoData_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>);
{[Graph] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphNoData


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphCreateGraphSingle


<div class="example-container" id="generalGraphCreateGraphSingle_container">
<div id="generalGraphCreateGraphSingle_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ { <span class="hljs-attr">collection</span>: <span class="hljs-string">&quot;edges&quot;</span>, <span class="hljs-string">&quot;from&quot;</span>: [ <span class="hljs-string">&quot;vertices&quot;</span> ], <span class="hljs-string">&quot;to&quot;</span> : [ <span class="hljs-string">&quot;vertices&quot;</span> ] } ];
arangosh&gt; graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, edgeDefinitions);
{[Graph] 
  <span class="hljs-string">&quot;edges&quot;</span> : [ArangoCollection <span class="hljs-number">77554</span>, <span class="hljs-string">&quot;edges&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;vertices&quot;</span> : [ArangoCollection <span class="hljs-number">77551</span>, <span class="hljs-string">&quot;vertices&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphCreateGraph2


<div class="example-container" id="generalGraphCreateGraph2_container">
<div id="generalGraphCreateGraph2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>,
........&gt; [graph_module._relation(<span class="hljs-string">&quot;myRelation&quot;</span>, [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>], [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>])], [<span class="hljs-string">&quot;sessions&quot;</span>]);
{[Graph] 
  <span class="hljs-string">&quot;myRelation&quot;</span> : [ArangoCollection <span class="hljs-number">77359</span>, <span class="hljs-string">&quot;myRelation&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;female&quot;</span> : [ArangoCollection <span class="hljs-number">77353</span>, <span class="hljs-string">&quot;female&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;male&quot;</span> : [ArangoCollection <span class="hljs-number">77356</span>, <span class="hljs-string">&quot;male&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;sessions&quot;</span> : [ArangoCollection <span class="hljs-number">77350</span>, <span class="hljs-string">&quot;sessions&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="generalGraphCreateGraph2_container_collapse" onclick="$('#generalGraphCreateGraph2_long').hide(); $('#generalGraphCreateGraph2_short').show(); window.location.hash='generalGraphCreateGraph2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphCreateGraph2_short" onclick="$('#generalGraphCreateGraph2_short').hide(); $('#generalGraphCreateGraph2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>,
........&gt; [graph_module._relation(<span class="hljs-string">&quot;myRelation&quot;</span>, [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>], [<span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;female&quot;</span>])], [<span class="hljs-string">&quot;sessions&quot;</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphCreateGraph2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph_create_graph_example1


<div class="example-container" id="general_graph_create_graph_example1_container">
<div id="general_graph_create_graph_example1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions();
arangosh&gt; graph_module._extendEdgeDefinitions(edgeDefinitions, graph_module._relation(<span class="hljs-string">&quot;friend_of&quot;</span>, <span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Customer&quot;</span>));
arangosh&gt; graph_module._extendEdgeDefinitions(
........&gt; edgeDefinitions, graph_module._relation(
........&gt; <span class="hljs-string">&quot;has_bought&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Company&quot;</span>], [<span class="hljs-string">&quot;Groceries&quot;</span>, <span class="hljs-string">&quot;Electronics&quot;</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">&quot;myStore&quot;</span>, edgeDefinitions);
{[Graph] 
  <span class="hljs-string">&quot;friend_of&quot;</span> : [ArangoCollection <span class="hljs-number">82634</span>, <span class="hljs-string">&quot;friend_of&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;Customer&quot;</span> : [ArangoCollection <span class="hljs-number">82626</span>, <span class="hljs-string">&quot;Customer&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;has_bought&quot;</span> : [ArangoCollection <span class="hljs-number">82629</span>, <span class="hljs-string">&quot;has_bought&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;Company&quot;</span> : [ArangoCollection <span class="hljs-number">82620</span>, <span class="hljs-string">&quot;Company&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;Electronics&quot;</span> : [ArangoCollection <span class="hljs-number">82617</span>, <span class="hljs-string">&quot;Electronics&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;Groceries&quot;</span> : [ArangoCollection <span class="hljs-number">82623</span>, <span class="hljs-string">&quot;Groceries&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="general_graph_create_graph_example1_container_collapse" onclick="$('#general_graph_create_graph_example1_long').hide(); $('#general_graph_create_graph_example1_short').show(); window.location.hash='general_graph_create_graph_example1_container';" class="example_show_button">Hide execution results</div></div>
<div id="general_graph_create_graph_example1_short" onclick="$('#general_graph_create_graph_example1_short').hide(); $('#general_graph_create_graph_example1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions();
arangosh&gt; graph_module._extendEdgeDefinitions(edgeDefinitions, graph_module._relation(<span class="hljs-string">&quot;friend_of&quot;</span>, <span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Customer&quot;</span>));
arangosh&gt; graph_module._extendEdgeDefinitions(
........&gt; edgeDefinitions, graph_module._relation(
........&gt; <span class="hljs-string">&quot;has_bought&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Company&quot;</span>], [<span class="hljs-string">&quot;Groceries&quot;</span>, <span class="hljs-string">&quot;Electronics&quot;</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">&quot;myStore&quot;</span>, edgeDefinitions);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock general_graph_create_graph_example1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph_create_graph_example2


<div class="example-container" id="general_graph_create_graph_example2_container">
<div id="general_graph_create_graph_example2_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt;  <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions(
........&gt;  graph_module._relation(<span class="hljs-string">&quot;friend_of&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>], [<span class="hljs-string">&quot;Customer&quot;</span>]), graph_module._relation(
........&gt; <span class="hljs-string">&quot;has_bought&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Company&quot;</span>], [<span class="hljs-string">&quot;Groceries&quot;</span>, <span class="hljs-string">&quot;Electronics&quot;</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">&quot;myStore&quot;</span>, edgeDefinitions);
{[Graph] 
  <span class="hljs-string">&quot;friend_of&quot;</span> : [ArangoCollection <span class="hljs-number">82676</span>, <span class="hljs-string">&quot;friend_of&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;Customer&quot;</span> : [ArangoCollection <span class="hljs-number">82668</span>, <span class="hljs-string">&quot;Customer&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;has_bought&quot;</span> : [ArangoCollection <span class="hljs-number">82671</span>, <span class="hljs-string">&quot;has_bought&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;Company&quot;</span> : [ArangoCollection <span class="hljs-number">82662</span>, <span class="hljs-string">&quot;Company&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;Electronics&quot;</span> : [ArangoCollection <span class="hljs-number">82659</span>, <span class="hljs-string">&quot;Electronics&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;Groceries&quot;</span> : [ArangoCollection <span class="hljs-number">82665</span>, <span class="hljs-string">&quot;Groceries&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="general_graph_create_graph_example2_container_collapse" onclick="$('#general_graph_create_graph_example2_long').hide(); $('#general_graph_create_graph_example2_short').show(); window.location.hash='general_graph_create_graph_example2_container';" class="example_show_button">Hide execution results</div></div>
<div id="general_graph_create_graph_example2_short" onclick="$('#general_graph_create_graph_example2_short').hide(); $('#general_graph_create_graph_example2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt;  <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions(
........&gt;  graph_module._relation(<span class="hljs-string">&quot;friend_of&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>], [<span class="hljs-string">&quot;Customer&quot;</span>]), graph_module._relation(
........&gt; <span class="hljs-string">&quot;has_bought&quot;</span>, [<span class="hljs-string">&quot;Customer&quot;</span>, <span class="hljs-string">&quot;Company&quot;</span>], [<span class="hljs-string">&quot;Groceries&quot;</span>, <span class="hljs-string">&quot;Electronics&quot;</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">&quot;myStore&quot;</span>, edgeDefinitions);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock general_graph_create_graph_example2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphList


<div class="example-container" id="generalGraphList_container">
<div id="generalGraphList_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._list();
[ ]
</pre>
</div>
</div>

    @endDocuBlock generalGraphList


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphLoadGraph


<div class="example-container" id="generalGraphLoadGraph_container">
<div id="generalGraphLoadGraph_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph = graph_module._graph(<span class="hljs-string">&quot;social&quot;</span>);
{[Graph] 
  <span class="hljs-string">&quot;relation&quot;</span> : [ArangoCollection <span class="hljs-number">78130</span>, <span class="hljs-string">&quot;relation&quot;</span> (type edge, status loaded)], 
  <span class="hljs-string">&quot;female&quot;</span> : [ArangoCollection <span class="hljs-number">78120</span>, <span class="hljs-string">&quot;female&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">&quot;male&quot;</span> : [ArangoCollection <span class="hljs-number">78125</span>, <span class="hljs-string">&quot;male&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="generalGraphLoadGraph_container_collapse" onclick="$('#generalGraphLoadGraph_long').hide(); $('#generalGraphLoadGraph_short').show(); window.location.hash='generalGraphLoadGraph_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphLoadGraph_short" onclick="$('#generalGraphLoadGraph_short').hide(); $('#generalGraphLoadGraph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph = graph_module._graph(<span class="hljs-string">&quot;social&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphLoadGraph


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphDropGraphKeep


<div class="example-container" id="generalGraphDropGraphKeep_container">
<div id="generalGraphDropGraphKeep_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; db._collection(<span class="hljs-string">&quot;female&quot;</span>);
[ArangoCollection <span class="hljs-number">77637</span>, <span class="hljs-string">&quot;female&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._collection(<span class="hljs-string">&quot;male&quot;</span>);
[ArangoCollection <span class="hljs-number">77642</span>, <span class="hljs-string">&quot;male&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._collection(<span class="hljs-string">&quot;relation&quot;</span>);
[ArangoCollection <span class="hljs-number">77647</span>, <span class="hljs-string">&quot;relation&quot;</span> (type edge, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock generalGraphDropGraphKeep


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphDropGraphDropCollections


<div class="example-container" id="generalGraphDropGraphDropCollections_container">
<div id="generalGraphDropGraphDropCollections_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">&quot;social&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; db._collection(<span class="hljs-string">&quot;female&quot;</span>);
<span class="hljs-literal">null</span>
arangosh&gt; db._collection(<span class="hljs-string">&quot;male&quot;</span>);
<span class="hljs-literal">null</span>
arangosh&gt; db._collection(<span class="hljs-string">&quot;relation&quot;</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphDropGraphDropCollections


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__extendEdgeDefinitions


<div class="example-container" id="general_graph__extendEdgeDefinitions_container">
<div id="general_graph__extendEdgeDefinitions_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> ed2 = graph_module._relation(<span class="hljs-string">&quot;myEC2&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC3&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1]);
arangosh&gt; graph._extendEdgeDefinitions(ed2);
</pre>
</div>
</div>

    @endDocuBlock general_graph__extendEdgeDefinitions


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__editEdgeDefinition


<div class="example-container" id="general_graph__editEdgeDefinition_container">
<div id="general_graph__editEdgeDefinition_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> original = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> modified = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC2&quot;</span>], [<span class="hljs-string">&quot;myVC3&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [original]);
arangosh&gt; graph._editEdgeDefinitions(modified);
</pre>
</div>
</div>

    @endDocuBlock general_graph__editEdgeDefinition


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__deleteEdgeDefinitionNoDrop


<div class="example-container" id="general_graph__deleteEdgeDefinitionNoDrop_container">
<div id="general_graph__deleteEdgeDefinitionNoDrop_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> ed2 = graph_module._relation(<span class="hljs-string">&quot;myEC2&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC3&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1, ed2]);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;myEC1&quot;</span>);
arangosh&gt; db._collection(<span class="hljs-string">&quot;myEC1&quot;</span>);
[ArangoCollection <span class="hljs-number">82253</span>, <span class="hljs-string">&quot;myEC1&quot;</span> (type edge, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock general_graph__deleteEdgeDefinitionNoDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__deleteEdgeDefinitionWithDrop


<div class="example-container" id="general_graph__deleteEdgeDefinitionWithDrop_container">
<div id="general_graph__deleteEdgeDefinitionWithDrop_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> ed2 = graph_module._relation(<span class="hljs-string">&quot;myEC2&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC3&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1, ed2]);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">&quot;myEC1&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; db._collection(<span class="hljs-string">&quot;myEC1&quot;</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock general_graph__deleteEdgeDefinitionWithDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__addVertexCollection


<div class="example-container" id="general_graph__addVertexCollection_container">
<div id="general_graph__addVertexCollection_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myVC3&quot;</span>, <span class="hljs-literal">true</span>);
</pre>
</div>
</div>

    @endDocuBlock general_graph__addVertexCollection


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__orphanCollections


<div class="example-container" id="general_graph__orphanCollections_container">
<div id="general_graph__orphanCollections_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myVC3&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">&quot;myVC3&quot;</span> 
]
</pre>
</div>
</div>

    @endDocuBlock general_graph__orphanCollections


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__removeVertexCollections


<div class="example-container" id="general_graph__removeVertexCollections_container">
<div id="general_graph__removeVertexCollections_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myVC3&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myVC4&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">&quot;myVC3&quot;</span>, 
  <span class="hljs-string">&quot;myVC4&quot;</span> 
]
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;myVC3&quot;</span>);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">&quot;myVC4&quot;</span> 
]
</pre>
<div id="general_graph__removeVertexCollections_container_collapse" onclick="$('#general_graph__removeVertexCollections_long').hide(); $('#general_graph__removeVertexCollections_short').show(); window.location.hash='general_graph__removeVertexCollections_container';" class="example_show_button">Hide execution results</div></div>
<div id="general_graph__removeVertexCollections_short" onclick="$('#general_graph__removeVertexCollections_short').hide(); $('#general_graph__removeVertexCollections_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/general-graph&quot;</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">&quot;myEC1&quot;</span>, [<span class="hljs-string">&quot;myVC1&quot;</span>], [<span class="hljs-string">&quot;myVC2&quot;</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">&quot;myGraph&quot;</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myVC3&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">&quot;myVC4&quot;</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._orphanCollections();
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">&quot;myVC3&quot;</span>);
arangosh&gt; graph._orphanCollections();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock general_graph__removeVertexCollections


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionSave


<div class="example-container" id="generalGraphVertexCollectionSave_container">
<div id="generalGraphVertexCollectionSave_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Floyd&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;floyd&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/floyd&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;floyd&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcNC---&quot;</span> 
}
</pre>
<div id="generalGraphVertexCollectionSave_container_collapse" onclick="$('#generalGraphVertexCollectionSave_long').hide(); $('#generalGraphVertexCollectionSave_short').show(); window.location.hash='generalGraphVertexCollectionSave_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionSave_short" onclick="$('#generalGraphVertexCollectionSave_short').hide(); $('#generalGraphVertexCollectionSave_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Floyd&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;floyd&quot;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionSave


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionReplace


<div class="example-container" id="generalGraphVertexCollectionReplace_container">
<div id="generalGraphVertexCollectionReplace_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">neym</span>: <span class="hljs-string">&quot;Jon&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;john&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/john&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;john&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcLa---&quot;</span> 
}
arangosh&gt; graph.male.replace(<span class="hljs-string">&quot;male/john&quot;</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/john&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;john&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcLa--A&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylcLa---&quot;</span> 
}
</pre>
<div id="generalGraphVertexCollectionReplace_container_collapse" onclick="$('#generalGraphVertexCollectionReplace_long').hide(); $('#generalGraphVertexCollectionReplace_short').show(); window.location.hash='generalGraphVertexCollectionReplace_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionReplace_short" onclick="$('#generalGraphVertexCollectionReplace_short').hide(); $('#generalGraphVertexCollectionReplace_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">neym</span>: <span class="hljs-string">&quot;Jon&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;john&quot;</span>});
arangosh&gt; graph.male.replace(<span class="hljs-string">&quot;male/john&quot;</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;John&quot;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionReplace


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionUpdate


<div class="example-container" id="generalGraphVertexCollectionUpdate_container">
<div id="generalGraphVertexCollectionUpdate_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.female.save({<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Lynda&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;linda&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/linda&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;linda&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcOm---&quot;</span> 
}
arangosh&gt; graph.female.update(<span class="hljs-string">&quot;female/linda&quot;</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Linda&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;linda&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/linda&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;linda&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcOq---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylcOm---&quot;</span> 
}
</pre>
<div id="generalGraphVertexCollectionUpdate_container_collapse" onclick="$('#generalGraphVertexCollectionUpdate_long').hide(); $('#generalGraphVertexCollectionUpdate_short').show(); window.location.hash='generalGraphVertexCollectionUpdate_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionUpdate_short" onclick="$('#generalGraphVertexCollectionUpdate_short').hide(); $('#generalGraphVertexCollectionUpdate_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.female.save({<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Lynda&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;linda&quot;</span>});
arangosh&gt; graph.female.update(<span class="hljs-string">&quot;female/linda&quot;</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Linda&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;linda&quot;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionUpdate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionRemove


<div class="example-container" id="generalGraphVertexCollectionRemove_container">
<div id="generalGraphVertexCollectionRemove_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Kermit&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;kermit&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/kermit&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;kermit&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylcJW--A&quot;</span> 
}
arangosh&gt; db._exists(<span class="hljs-string">&quot;male/kermit&quot;</span>)
<span class="hljs-literal">true</span>
arangosh&gt; graph.male.remove(<span class="hljs-string">&quot;male/kermit&quot;</span>)
<span class="hljs-literal">true</span>
arangosh&gt; db._exists(<span class="hljs-string">&quot;male/kermit&quot;</span>)
<span class="hljs-literal">false</span>
</pre>
<div id="generalGraphVertexCollectionRemove_container_collapse" onclick="$('#generalGraphVertexCollectionRemove_long').hide(); $('#generalGraphVertexCollectionRemove_short').show(); window.location.hash='generalGraphVertexCollectionRemove_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionRemove_short" onclick="$('#generalGraphVertexCollectionRemove_short').hide(); $('#generalGraphVertexCollectionRemove_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Kermit&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;kermit&quot;</span>});
arangosh&gt; db._exists(<span class="hljs-string">&quot;male/kermit&quot;</span>)
arangosh&gt; graph.male.remove(<span class="hljs-string">&quot;male/kermit&quot;</span>)
arangosh&gt; db._exists(<span class="hljs-string">&quot;male/kermit&quot;</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionRemove


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionSave1


<div class="example-container" id="generalGraphEdgeCollectionSave1_container">
<div id="generalGraphEdgeCollectionSave1_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save({
........&gt;   _from: <span class="hljs-string">&quot;male/bob&quot;</span>,
........&gt;   _to: <span class="hljs-string">&quot;female/alice&quot;</span>,
........&gt; _key: <span class="hljs-string">&quot;bobAndAlice&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;married&quot;</span> });
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/bobAndAlice&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bobAndAlice&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaXW--A&quot;</span> 
}
</pre>
<div id="generalGraphEdgeCollectionSave1_container_collapse" onclick="$('#generalGraphEdgeCollectionSave1_long').hide(); $('#generalGraphEdgeCollectionSave1_short').show(); window.location.hash='generalGraphEdgeCollectionSave1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionSave1_short" onclick="$('#generalGraphEdgeCollectionSave1_short').hide(); $('#generalGraphEdgeCollectionSave1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save({
........&gt;   _from: <span class="hljs-string">&quot;male/bob&quot;</span>,
........&gt;   _to: <span class="hljs-string">&quot;female/alice&quot;</span>,
........&gt; _key: <span class="hljs-string">&quot;bobAndAlice&quot;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;married&quot;</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionSave1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionSave2


<div class="example-container" id="generalGraphEdgeCollectionSave2_container">
<div id="generalGraphEdgeCollectionSave2_long">
<pre>
arangosh&gt; var examples = require(&quot;@arangodb/graph-examples/example-graph.js&quot;);
arangosh&gt; var graph = examples.loadGraph(&quot;social&quot;);
arangosh&gt; graph.relation.save(
........&gt;  &quot;relation/aliceAndBob&quot;,
........&gt;   &quot;female/alice&quot;,
........&gt; {type: &quot;married&quot;, _key: &quot;bobAndAlice&quot;});
[ArangoError 1906: invalid edge between relation/aliceAndBob and female/alice. Doesn&#x27;t conform to any edge definition]
</pre>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionSave2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionReplace


<div class="example-container" id="generalGraphEdgeCollectionReplace_container">
<div id="generalGraphEdgeCollectionReplace_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-string">&quot;female/diana&quot;</span>, {<span class="hljs-attr">typo</span>: <span class="hljs-string">&quot;nose&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaVq---&quot;</span> 
}
arangosh&gt; graph.relation.replace(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-attr">_from</span>: <span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-attr">_to</span>: <span class="hljs-string">&quot;female/diana&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaVq--A&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylaVq---&quot;</span> 
}
</pre>
<div id="generalGraphEdgeCollectionReplace_container_collapse" onclick="$('#generalGraphEdgeCollectionReplace_long').hide(); $('#generalGraphEdgeCollectionReplace_short').show(); window.location.hash='generalGraphEdgeCollectionReplace_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionReplace_short" onclick="$('#generalGraphEdgeCollectionReplace_short').hide(); $('#generalGraphEdgeCollectionReplace_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-string">&quot;female/diana&quot;</span>, {<span class="hljs-attr">typo</span>: <span class="hljs-string">&quot;nose&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
arangosh&gt; graph.relation.replace(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-attr">_from</span>: <span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-attr">_to</span>: <span class="hljs-string">&quot;female/diana&quot;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionReplace


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionUpdate


<div class="example-container" id="generalGraphEdgeCollectionUpdate_container">
<div id="generalGraphEdgeCollectionUpdate_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-string">&quot;female/diana&quot;</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaae---&quot;</span> 
}
arangosh&gt; graph.relation.update(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">&quot;quarreled&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaai---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylaae---&quot;</span> 
}
</pre>
<div id="generalGraphEdgeCollectionUpdate_container_collapse" onclick="$('#generalGraphEdgeCollectionUpdate_long').hide(); $('#generalGraphEdgeCollectionUpdate_short').show(); window.location.hash='generalGraphEdgeCollectionUpdate_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionUpdate_short" onclick="$('#generalGraphEdgeCollectionUpdate_short').hide(); $('#generalGraphEdgeCollectionUpdate_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-string">&quot;female/diana&quot;</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">&quot;knows&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
arangosh&gt; graph.relation.update(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">&quot;quarreled&quot;</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionUpdate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionRemove


<div class="example-container" id="generalGraphEdgeCollectionRemove_container">
<div id="generalGraphEdgeCollectionRemove_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-string">&quot;female/diana&quot;</span>, {<span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;aliceAndDiana&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylaTm---&quot;</span> 
}
arangosh&gt; db._exists(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>)
<span class="hljs-literal">true</span>
arangosh&gt; graph.relation.remove(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>)
<span class="hljs-literal">true</span>
arangosh&gt; db._exists(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>)
<span class="hljs-literal">false</span>
</pre>
<div id="generalGraphEdgeCollectionRemove_container_collapse" onclick="$('#generalGraphEdgeCollectionRemove_long').hide(); $('#generalGraphEdgeCollectionRemove_short').show(); window.location.hash='generalGraphEdgeCollectionRemove_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionRemove_short" onclick="$('#generalGraphEdgeCollectionRemove_short').hide(); $('#generalGraphEdgeCollectionRemove_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;social&quot;</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">&quot;female/alice&quot;</span>, <span class="hljs-string">&quot;female/diana&quot;</span>, {<span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;aliceAndDiana&quot;</span>});
arangosh&gt; db._exists(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>)
arangosh&gt; graph.relation.remove(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>)
arangosh&gt; db._exists(<span class="hljs-string">&quot;relation/aliceAndDiana&quot;</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionRemove


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-ttl.md -->
    @startDocuBlockInline ensureTtlIndex


<div class="example-container" id="ensureTtlIndex_container">
<div id="ensureTtlIndex_long" style="display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;ttl&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;creationDate&quot;</span> ], <span class="hljs-attr">expireAfter</span>: <span class="hljs-number">600</span> });
{ 
  <span class="hljs-string">&quot;expireAfter&quot;</span> : <span class="hljs-number">600</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;creationDate&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;test/76975&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769240523079680&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ttl&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; ++i) { db.test.insert({ <span class="hljs-attr">creationDate</span>: <span class="hljs-built_in">Date</span>.now() / <span class="hljs-number">1000</span> }); }
</pre>
<div id="ensureTtlIndex_container_collapse" onclick="$('#ensureTtlIndex_long').hide(); $('#ensureTtlIndex_short').show(); window.location.hash='ensureTtlIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureTtlIndex_short" onclick="$('#ensureTtlIndex_short').hide(); $('#ensureTtlIndex_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;ttl&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;creationDate&quot;</span> ], <span class="hljs-attr">expireAfter</span>: <span class="hljs-number">600</span> });
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; ++i) { db.test.insert({ <span class="hljs-attr">creationDate</span>: <span class="hljs-built_in">Date</span>.now() / <span class="hljs-number">1000</span> }); }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureTtlIndex


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline lowerfunc


<div class="example-container" id="lowerfunc_container">
<div id="lowerfunc_long">
<strong>Query:</strong>
<pre>
  RETURN LOWER(<span class="hljs-string">&quot;AVOcado&quot;</span>) <span class="hljs-comment">// &quot;avocado&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;avocado&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock lowerfunc


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline substr1


<div class="example-container" id="substr1_container">
<div id="substr1_long">
<strong>Query:</strong>
<pre>
  RETURN SUBSTRING(<span class="hljs-string">&quot;Holy Guacamole!&quot;</span>, <span class="hljs-number">5</span>) <span class="hljs-comment">// &quot;Guacamole!&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;Guacamole!&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock substr1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline substr2


<div class="example-container" id="substr2_container">
<div id="substr2_long">
<strong>Query:</strong>
<pre>
  RETURN SUBSTRING(<span class="hljs-string">&quot;Holy Guacamole!&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>) <span class="hljs-comment">// &quot;mole&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;mole&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock substr2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline tobase1


<div class="example-container" id="tobase1_container">
<div id="tobase1_long">
<strong>Query:</strong>
<pre>
  RETURN TO_BASE64(<span class="hljs-string">&quot;ABC.&quot;</span>) <span class="hljs-comment">// &quot;QUJDLg==&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;QUJDLg==&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock tobase1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline tobase2


<div class="example-container" id="tobase2_container">
<div id="tobase2_long">
<strong>Query:</strong>
<pre>
  RETURN TO_BASE64(<span class="hljs-string">&quot;123456&quot;</span>) <span class="hljs-comment">// &quot;MTIzNDU2&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;MTIzNDU2&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock tobase2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline tohex1


<div class="example-container" id="tohex1_container">
<div id="tohex1_long">
<strong>Query:</strong>
<pre>
  RETURN TO_HEX(<span class="hljs-string">&quot;ABC.&quot;</span>) <span class="hljs-comment">// &quot;4142432e&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;4142432e&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock tohex1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline tohex2


<div class="example-container" id="tohex2_container">
<div id="tohex2_long">
<strong>Query:</strong>
<pre>
  RETURN TO_HEX(<span class="hljs-string">&quot;ü&quot;</span>) <span class="hljs-comment">// &quot;c3bc&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;c3bc&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock tohex2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline upper1


<div class="example-container" id="upper1_container">
<div id="upper1_long">
<strong>Query:</strong>
<pre>
  RETURN UPPER(<span class="hljs-string">&quot;AVOcado&quot;</span>) <span class="hljs-comment">// &quot;AVOCADO&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;AVOCADO&quot;</span>
]</pre>
</div>
</div>

  @endDocuBlock upper1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-string.md -->
  @startDocuBlockInline uuid1


<div class="example-container" id="uuid1_container">
<div id="uuid1_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR i IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> RETURN UUID()
  <span class="hljs-comment">/* For example:
  [
    &quot;28bc5873-68ae-4e0f-89a3-31d717c822de&quot;,
    &quot;1084d263-71aa-415c-81d6-451de42e18a3&quot;,
    &quot;7fce640a-f340-4204-bca4-0d2ceebe2699&quot;
  ]
  */</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;2cde7fef-3fbc-40ae-9cc0-5bc89da92623&quot;</span>,
  <span class="hljs-string">&quot;1e90da45-a395-4c10-a4aa-26cc2c9cff28&quot;</span>,
  <span class="hljs-string">&quot;b655d461-1e8e-4723-a548-8aecde5b6a56&quot;</span>
]</pre>
<div id="uuid1_container_collapse" onclick="$('#uuid1_long').hide(); $('#uuid1_short').show(); window.location.hash='uuid1_container';" class="example_show_button">Hide query result</div></div>
<div id="uuid1_short" onclick="$('#uuid1_short').hide(); $('#uuid1_long').show();">
<strong>Query:</strong>
<pre>
  FOR i IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> RETURN UUID()
  <span class="hljs-comment">/* For example:
  [
    &quot;28bc5873-68ae-4e0f-89a3-31d717c822de&quot;,
    &quot;1084d263-71aa-415c-81d6-451de42e18a3&quot;,
    &quot;7fce640a-f340-4204-bca4-0d2ceebe2699&quot;
  ]
  */</span>

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock uuid1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 01_workWithAQL_all


<div class="example-container" id="01_workWithAQL_all_container">
<div id="01_workWithAQL_all_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;mycollection&quot;</span>)
[ArangoCollection <span class="hljs-number">4530</span>, <span class="hljs-string">&quot;mycollection&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db.mycollection.save({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;testKey&quot;</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> })
{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mycollection/testKey&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;testKey&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXhC---&quot;</span> 
}
arangosh&gt; db._query(<span class="hljs-string">&#x27;FOR my IN mycollection RETURN my._key&#x27;</span>).toArray()
[ 
  <span class="hljs-string">&quot;testKey&quot;</span> 
]
</pre>
<div id="01_workWithAQL_all_container_collapse" onclick="$('#01_workWithAQL_all_long').hide(); $('#01_workWithAQL_all_short').show(); window.location.hash='01_workWithAQL_all_container';" class="example_show_button">Hide execution results</div></div>
<div id="01_workWithAQL_all_short" onclick="$('#01_workWithAQL_all_short').hide(); $('#01_workWithAQL_all_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;mycollection&quot;</span>)
arangosh&gt; db.mycollection.save({ <span class="hljs-attr">_key</span>: <span class="hljs-string">&quot;testKey&quot;</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">&quot;World&quot;</span> })
arangosh&gt; db._query(<span class="hljs-string">&#x27;FOR my IN mycollection RETURN my._key&#x27;</span>).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 01_workWithAQL_all


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_bindValues


<div class="example-container" id="02_workWithAQL_bindValues_container">
<div id="02_workWithAQL_bindValues_long">
<pre>
arangosh&gt; db._query(
........&gt; <span class="hljs-string">&#x27;FOR c IN @@collection FILTER c._key == @key RETURN c._key&#x27;</span>, {
........&gt;   <span class="hljs-string">&#x27;@collection&#x27;</span>: <span class="hljs-string">&#x27;mycollection&#x27;</span>, 
........&gt;   <span class="hljs-string">&#x27;key&#x27;</span>: <span class="hljs-string">&#x27;testKey&#x27;</span>
........&gt; }).toArray();
[ 
  <span class="hljs-string">&quot;testKey&quot;</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 02_workWithAQL_bindValues


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_aqlQuery


<div class="example-container" id="02_workWithAQL_aqlQuery_container">
<div id="02_workWithAQL_aqlQuery_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> key = <span class="hljs-string">&#x27;testKey&#x27;</span>;
arangosh&gt; db._query(
........&gt; aql<span class="hljs-string">`FOR c IN mycollection FILTER c._key == <span class="hljs-subst">${key}</span> RETURN c._key`</span>
........&gt; ).toArray();
[ 
  <span class="hljs-string">&quot;testKey&quot;</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 02_workWithAQL_aqlQuery


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_aqlCollectionQuery


<div class="example-container" id="02_workWithAQL_aqlCollectionQuery_container">
<div id="02_workWithAQL_aqlCollectionQuery_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> key = <span class="hljs-string">&#x27;testKey&#x27;</span>;
arangosh&gt; db._query(aql<span class="hljs-string">`FOR doc IN <span class="hljs-subst">${ db.mycollection }</span> RETURN doc`</span>
........&gt; ).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;testKey&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;mycollection/testKey&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXhC---&quot;</span>, 
    <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> 
  } 
]
</pre>
<div id="02_workWithAQL_aqlCollectionQuery_container_collapse" onclick="$('#02_workWithAQL_aqlCollectionQuery_long').hide(); $('#02_workWithAQL_aqlCollectionQuery_short').show(); window.location.hash='02_workWithAQL_aqlCollectionQuery_container';" class="example_show_button">Hide execution results</div></div>
<div id="02_workWithAQL_aqlCollectionQuery_short" onclick="$('#02_workWithAQL_aqlCollectionQuery_short').hide(); $('#02_workWithAQL_aqlCollectionQuery_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> key = <span class="hljs-string">&#x27;testKey&#x27;</span>;
arangosh&gt; db._query(aql<span class="hljs-string">`FOR doc IN <span class="hljs-subst">${ db.mycollection }</span> RETURN doc`</span>
........&gt; ).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 02_workWithAQL_aqlCollectionQuery


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 03_workWithAQL_getExtra


<div class="example-container" id="03_workWithAQL_getExtra_container">
<div id="03_workWithAQL_getExtra_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR i IN 1..100
........&gt;             INSERT { _key: CONCAT(&#x27;test&#x27;, TO_STRING(i)) }
........&gt;                INTO mycollection`</span>
........&gt; ).getExtra();
{ 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0033443402498960495</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">42128</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
}
</pre>
<div id="03_workWithAQL_getExtra_container_collapse" onclick="$('#03_workWithAQL_getExtra_long').hide(); $('#03_workWithAQL_getExtra_short').show(); window.location.hash='03_workWithAQL_getExtra_container';" class="example_show_button">Hide execution results</div></div>
<div id="03_workWithAQL_getExtra_short" onclick="$('#03_workWithAQL_getExtra_short').hide(); $('#03_workWithAQL_getExtra_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR i IN 1..100
........&gt;             INSERT { _key: CONCAT(&#x27;test&#x27;, TO_STRING(i)) }
........&gt;                INTO mycollection`</span>
........&gt; ).getExtra();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 03_workWithAQL_getExtra


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_memoryLimit


<div class="example-container" id="02_workWithAQL_memoryLimit_container">
<div id="02_workWithAQL_memoryLimit_long">
<pre>
arangosh&gt; db._query(
........&gt; <span class="hljs-string">&#x27;FOR i IN 1..100000 SORT i RETURN i&#x27;</span>, {}, {
........&gt;   memoryLimit: <span class="hljs-number">100000</span>
........&gt; }).toArray();
[ArangoError <span class="hljs-number">32</span>: AQL: query would use more memory than allowed (<span class="hljs-keyword">while</span> executing)]
</pre>
</div>
</div>

    @endDocuBlock 02_workWithAQL_memoryLimit


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 04_workWithAQL_statements1


<div class="example-container" id="04_workWithAQL_statements1_container">
<div id="04_workWithAQL_statements1_long">
<pre>
arangosh&gt; stmt = db._createStatement( {
........&gt; <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;FOR i IN [ 1, 2 ] RETURN i * 2&quot;</span> } );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 04_workWithAQL_statements1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements2


<div class="example-container" id="05_workWithAQL_statements2_container">
<div id="05_workWithAQL_statements2_long" style="display: none;">
<pre>
arangosh&gt; c = stmt.execute();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="05_workWithAQL_statements2_container_collapse" onclick="$('#05_workWithAQL_statements2_long').hide(); $('#05_workWithAQL_statements2_short').show(); window.location.hash='05_workWithAQL_statements2_container';" class="example_show_button">Hide execution results</div></div>
<div id="05_workWithAQL_statements2_short" onclick="$('#05_workWithAQL_statements2_short').hide(); $('#05_workWithAQL_statements2_long').show();">
<pre>
arangosh&gt; c = stmt.execute();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements3


<div class="example-container" id="05_workWithAQL_statements3_container">
<div id="05_workWithAQL_statements3_long">
<pre>
arangosh&gt; c.toArray();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements4


<div class="example-container" id="05_workWithAQL_statements4_container">
<div id="05_workWithAQL_statements4_long">
<pre>
arangosh&gt; <span class="hljs-keyword">while</span> (c.hasNext()) { <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).print(c.next()); }
<span class="hljs-number">2</span>
<span class="hljs-number">4</span>
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements5


<div class="example-container" id="05_workWithAQL_statements5_container">
<div id="05_workWithAQL_statements5_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement( {
........&gt; <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;FOR i IN [ @one, @two ] RETURN i * 2&quot;</span> } );
arangosh&gt; stmt.bind(<span class="hljs-string">&quot;one&quot;</span>, <span class="hljs-number">1</span>);
arangosh&gt; stmt.bind(<span class="hljs-string">&quot;two&quot;</span>, <span class="hljs-number">2</span>);
arangosh&gt; c = stmt.execute();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="05_workWithAQL_statements5_container_collapse" onclick="$('#05_workWithAQL_statements5_long').hide(); $('#05_workWithAQL_statements5_short').show(); window.location.hash='05_workWithAQL_statements5_container';" class="example_show_button">Hide execution results</div></div>
<div id="05_workWithAQL_statements5_short" onclick="$('#05_workWithAQL_statements5_short').hide(); $('#05_workWithAQL_statements5_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement( {
........&gt; <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;FOR i IN [ @one, @two ] RETURN i * 2&quot;</span> } );
arangosh&gt; stmt.bind(<span class="hljs-string">&quot;one&quot;</span>, <span class="hljs-number">1</span>);
arangosh&gt; stmt.bind(<span class="hljs-string">&quot;two&quot;</span>, <span class="hljs-number">2</span>);
arangosh&gt; c = stmt.execute();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements6


<div class="example-container" id="05_workWithAQL_statements6_container">
<div id="05_workWithAQL_statements6_long">
<pre>
arangosh&gt; c.toArray();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements6


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements7


<div class="example-container" id="05_workWithAQL_statements7_container">
<div id="05_workWithAQL_statements7_long">
<pre>
arangosh&gt; <span class="hljs-keyword">while</span> (c.hasNext()) { <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb&quot;</span>).print(c.next()); }
<span class="hljs-number">2</span>
<span class="hljs-number">4</span>
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements7


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements8


<div class="example-container" id="05_workWithAQL_statements8_container">
<div id="05_workWithAQL_statements8_long">
<pre>
arangosh&gt; stmt = db._createStatement( { 
........&gt;  <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;FOR i IN [ @one, @two ] RETURN i * 2&quot;</span>, 
........&gt;  <span class="hljs-string">&quot;bindVars&quot;</span>: { 
........&gt;    <span class="hljs-string">&quot;one&quot;</span>: <span class="hljs-number">1</span>, 
........&gt;    <span class="hljs-string">&quot;two&quot;</span>: <span class="hljs-number">2</span> 
........&gt;  } 
........&gt; } );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements8


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements9


<div class="example-container" id="05_workWithAQL_statements9_container">
<div id="05_workWithAQL_statements9_long">
<pre>
arangosh&gt; stmt = db._createStatement( {
........&gt; <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;FOR i IN [ 1, 2, 3, 4 ] RETURN i&quot;</span>,
........&gt; <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-literal">true</span> } );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements9


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements10


<div class="example-container" id="05_workWithAQL_statements10_container">
<div id="05_workWithAQL_statements10_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> c = stmt.execute();
arangosh&gt; c.count();
<span class="hljs-number">4</span>
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements10


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 06_workWithAQL_statements11


<div class="example-container" id="06_workWithAQL_statements11_container">
<div id="06_workWithAQL_statements11_long">
<pre>
arangosh&gt; stmt = db._createStatement( {
........&gt; <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;FOR i IN [ 1, 2, 3, 4 ] RETURN i&quot;</span>,
........&gt; options: {<span class="hljs-string">&quot;profile&quot;</span>: <span class="hljs-literal">true</span>}} );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statements11


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 06_workWithAQL_statements12


<div class="example-container" id="06_workWithAQL_statements12_container">
<div id="06_workWithAQL_statements12_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> c = stmt.execute();
arangosh&gt; c.getExtra();
{ 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0002250373363494873</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">22544</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;profile&quot;</span> : { 
    <span class="hljs-string">&quot;initializing&quot;</span> : <span class="hljs-number">0.000002343207597732544</span>, 
    <span class="hljs-string">&quot;parsing&quot;</span> : <span class="hljs-number">0.000033816322684288025</span>, 
    <span class="hljs-string">&quot;optimizing ast&quot;</span> : <span class="hljs-number">0.000003936700522899628</span>, 
    <span class="hljs-string">&quot;loading collections&quot;</span> : <span class="hljs-number">0.000004656612873077393</span>, 
    <span class="hljs-string">&quot;instantiating plan&quot;</span> : <span class="hljs-number">0.000017962418496608734</span>, 
    <span class="hljs-string">&quot;optimizing plan&quot;</span> : <span class="hljs-number">0.00008001644164323807</span>, 
    <span class="hljs-string">&quot;executing&quot;</span> : <span class="hljs-number">0.00005597248673439026</span>, 
    <span class="hljs-string">&quot;finalizing&quot;</span> : <span class="hljs-number">0.000016676262021064758</span> 
  } 
}
</pre>
<div id="06_workWithAQL_statements12_container_collapse" onclick="$('#06_workWithAQL_statements12_long').hide(); $('#06_workWithAQL_statements12_short').show(); window.location.hash='06_workWithAQL_statements12_container';" class="example_show_button">Hide execution results</div></div>
<div id="06_workWithAQL_statements12_short" onclick="$('#06_workWithAQL_statements12_short').hide(); $('#06_workWithAQL_statements12_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> c = stmt.execute();
arangosh&gt; c.getExtra();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statements12


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 06_workWithAQL_statements13


<div class="example-container" id="06_workWithAQL_statements13_container">
<div id="06_workWithAQL_statements13_long" style="display: none;">
<pre>
arangosh&gt; db._parse( <span class="hljs-string">&quot;FOR i IN [ 1, 2 ] RETURN i&quot;</span> );
{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;parsed&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;collections&quot;</span> : [ ], 
  <span class="hljs-string">&quot;bindVars&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ast&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;for&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;variable&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;array&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                  <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span> 
                }, 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                  <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;no-op&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;return&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        } 
      ] 
    } 
  ] 
}
</pre>
<div id="06_workWithAQL_statements13_container_collapse" onclick="$('#06_workWithAQL_statements13_long').hide(); $('#06_workWithAQL_statements13_short').show(); window.location.hash='06_workWithAQL_statements13_container';" class="example_show_button">Hide execution results</div></div>
<div id="06_workWithAQL_statements13_short" onclick="$('#06_workWithAQL_statements13_short').hide(); $('#06_workWithAQL_statements13_long').show();">
<pre>
arangosh&gt; db._parse( <span class="hljs-string">&quot;FOR i IN [ 1, 2 ] RETURN i&quot;</span> );
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statements13


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_01_axplainer


<div class="example-container" id="AQLEXP_01_axplainer_container">
<div id="AQLEXP_01_axplainer_long" style="display: none;">
<pre>
arangosh&gt; db._create(&quot;test&quot;);
[ArangoCollection 64738, &quot;test&quot; (type document, status loaded)]
arangosh&gt; for (i = 0; i &lt; 100; ++i) { db.test.save({ value: i }); }
arangosh&gt; db.test.ensureIndex({ type: &quot;skiplist&quot;, fields: [ &quot;value&quot; ] });
{ 
  &quot;deduplicate&quot; : true, 
  &quot;fields&quot; : [ 
    &quot;value&quot; 
  ], 
  &quot;id&quot; : &quot;test/64943&quot;, 
  &quot;isNewlyCreated&quot; : true, 
  &quot;name&quot; : &quot;idx_1728769183502565376&quot;, 
  &quot;selectivityEstimate&quot; : 1, 
  &quot;sparse&quot; : false, 
  &quot;type&quot; : &quot;skiplist&quot;, 
  &quot;unique&quot; : false, 
  &quot;code&quot; : 201 
}
arangosh&gt; var explain = require(&quot;@arangodb/aql/explainer&quot;).explain;
arangosh&gt; explain(&quot;FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value&quot;, {colors:false});
Query String (61 chars, cacheable: true):
 FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  9   IndexNode          100     - FOR i IN test   /* skiplist index scan, index only, projections: `value` */    
  5   CalculationNode    100       - LET #3 = i.`value`   /* attribute expression */   /* collections used: i : test */
  8   ReturnNode         100       - RETURN #3

Indexes used:
 By   Name                      Type       Collection   Unique   Sparse   Selectivity   Fields        Ranges
  9   idx_1728769183502565376   skiplist   test         false    false       100.00 %   [ `value` ]   (i.`value` &gt; 97)

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   move-filters-up
  3   remove-redundant-calculations
  4   remove-unnecessary-calculations
  5   move-calculations-up-2
  6   move-filters-up-2
  7   use-indexes
  8   remove-filter-covered-by-index
  9   use-index-for-sort
 10   remove-unnecessary-calculations-2
 11   reduce-extraction-to-projection


</pre>
<div id="AQLEXP_01_axplainer_container_collapse" onclick="$('#AQLEXP_01_axplainer_long').hide(); $('#AQLEXP_01_axplainer_short').show(); window.location.hash='AQLEXP_01_axplainer_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_01_axplainer_short" onclick="$('#AQLEXP_01_axplainer_short').hide(); $('#AQLEXP_01_axplainer_long').show();">
<pre>
arangosh&gt; db._create(&quot;test&quot;);
arangosh&gt; for (i = 0; i &lt; 100; ++i) { db.test.save({ value: i }); }
arangosh&gt; db.test.ensureIndex({ type: &quot;skiplist&quot;, fields: [ &quot;value&quot; ] });
arangosh&gt; var explain = require(&quot;@arangodb/aql/explainer&quot;).explain;
arangosh&gt; explain(&quot;FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value&quot;, {colors:false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_01_axplainer


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_01_explainCreate


<div class="example-container" id="AQLEXP_01_explainCreate_container">
<div id="AQLEXP_01_explainCreate_long" style="display: none;">
<pre>
arangosh&gt; stmt = db._createStatement(<span class="hljs-string">&quot;FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value&quot;</span>);
[object ArangoStatement]
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">12.643856189774723</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ 
          <span class="hljs-string">&quot;value&quot;</span> 
        ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
        <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexes&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;64943&quot;</span>, 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769183502565376&quot;</span>, 
            <span class="hljs-string">&quot;fields&quot;</span> : [ 
              <span class="hljs-string">&quot;value&quot;</span> 
            ], 
            <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;condition&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                        { 
                          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
                      <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                      <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">112.64385618977472</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up&quot;</span>, 
      <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up-2&quot;</span>, 
      <span class="hljs-string">&quot;use-indexes&quot;</span>, 
      <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
      <span class="hljs-string">&quot;use-index-for-sort&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
      <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_01_explainCreate_container_collapse" onclick="$('#AQLEXP_01_explainCreate_long').hide(); $('#AQLEXP_01_explainCreate_short').show(); window.location.hash='AQLEXP_01_explainCreate_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_01_explainCreate_short" onclick="$('#AQLEXP_01_explainCreate_short').hide(); $('#AQLEXP_01_explainCreate_long').show();">
<pre>
arangosh&gt; stmt = db._createStatement(<span class="hljs-string">&quot;FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value&quot;</span>);
arangosh&gt; stmt.explain();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_01_explainCreate


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_02_explainOverview


<div class="example-container" id="AQLEXP_02_explainOverview_container">
<div id="AQLEXP_02_explainOverview_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain().plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">node</span>) </span>{ <span class="hljs-keyword">return</span> node.type; });
[ 
  <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
  <span class="hljs-string">&quot;IndexNode&quot;</span>, 
  <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
  <span class="hljs-string">&quot;ReturnNode&quot;</span> 
]
</pre>
<div id="AQLEXP_02_explainOverview_container_collapse" onclick="$('#AQLEXP_02_explainOverview_long').hide(); $('#AQLEXP_02_explainOverview_short').show(); window.location.hash='AQLEXP_02_explainOverview_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_02_explainOverview_short" onclick="$('#AQLEXP_02_explainOverview_short').hide(); $('#AQLEXP_02_explainOverview_long').show();">
<pre>
arangosh&gt; stmt.explain().plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">node</span>) </span>{ <span class="hljs-keyword">return</span> node.type; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_02_explainOverview


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_03_explainRules


<div class="example-container" id="AQLEXP_03_explainRules_container">
<div id="AQLEXP_03_explainRules_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain().plan.rules;
[ 
  <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
  <span class="hljs-string">&quot;move-filters-up&quot;</span>, 
  <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
  <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
  <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
  <span class="hljs-string">&quot;move-filters-up-2&quot;</span>, 
  <span class="hljs-string">&quot;use-indexes&quot;</span>, 
  <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
  <span class="hljs-string">&quot;use-index-for-sort&quot;</span>, 
  <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
  <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span> 
]
</pre>
<div id="AQLEXP_03_explainRules_container_collapse" onclick="$('#AQLEXP_03_explainRules_long').hide(); $('#AQLEXP_03_explainRules_short').show(); window.location.hash='AQLEXP_03_explainRules_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_03_explainRules_short" onclick="$('#AQLEXP_03_explainRules_short').hide(); $('#AQLEXP_03_explainRules_long').show();">
<pre>
arangosh&gt; stmt.explain().plan.rules;
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_03_explainRules


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_04_explainCollections


<div class="example-container" id="AQLEXP_04_explainCollections_container">
<div id="AQLEXP_04_explainCollections_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain().plan.collections
[ 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
  } 
]
</pre>
<div id="AQLEXP_04_explainCollections_container_collapse" onclick="$('#AQLEXP_04_explainCollections_long').hide(); $('#AQLEXP_04_explainCollections_short').show(); window.location.hash='AQLEXP_04_explainCollections_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_04_explainCollections_short" onclick="$('#AQLEXP_04_explainCollections_short').hide(); $('#AQLEXP_04_explainCollections_long').show();">
<pre>
arangosh&gt; stmt.explain().plan.collections
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_04_explainCollections


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_05_explainAllPlans


<div class="example-container" id="AQLEXP_05_explainAllPlans_container">
<div id="AQLEXP_05_explainAllPlans_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">&quot;plans&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;nodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">12.643856189774723</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
          }, 
          <span class="hljs-string">&quot;projections&quot;</span> : [ 
            <span class="hljs-string">&quot;value&quot;</span> 
          ], 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
          <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
          <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;indexes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;64943&quot;</span>, 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769183502565376&quot;</span>, 
              <span class="hljs-string">&quot;fields&quot;</span> : [ 
                <span class="hljs-string">&quot;value&quot;</span> 
              ], 
              <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          ], 
          <span class="hljs-string">&quot;condition&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
                <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                  { 
                    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
                    <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
                    <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                      { 
                        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                        <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                        <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                          { 
                            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                          } 
                        ] 
                      }, 
                      { 
                        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                        <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                        <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
                        <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                        <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                      } 
                    ] 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">9</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">112.64385618977472</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">5</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
          <span class="hljs-string">&quot;inVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
        <span class="hljs-string">&quot;move-filters-up&quot;</span>, 
        <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
        <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
        <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
        <span class="hljs-string">&quot;move-filters-up-2&quot;</span>, 
        <span class="hljs-string">&quot;use-indexes&quot;</span>, 
        <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
        <span class="hljs-string">&quot;use-index-for-sort&quot;</span>, 
        <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
        <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span> 
      ], 
      <span class="hljs-string">&quot;collections&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;variables&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
      <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
      <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ], 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
</pre>
<div id="AQLEXP_05_explainAllPlans_container_collapse" onclick="$('#AQLEXP_05_explainAllPlans_long').hide(); $('#AQLEXP_05_explainAllPlans_short').show(); window.location.hash='AQLEXP_05_explainAllPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_05_explainAllPlans_short" onclick="$('#AQLEXP_05_explainAllPlans_short').hide(); $('#AQLEXP_05_explainAllPlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_05_explainAllPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_06_explainUnoptimizedPlans


<div class="example-container" id="AQLEXP_06_explainUnoptimizedPlans_container">
<div id="AQLEXP_06_explainUnoptimizedPlans_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">&quot;-all&quot;</span> ] } });
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateCollectionNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">102</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;random&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexHint&quot;</span> : { 
          <span class="hljs-string">&quot;forced&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">202</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;FilterNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">302</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        } 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">402</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SortNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1066.3856189774724</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;elements&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;inVariable&quot;</span> : { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
              <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
            }, 
            <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;stable&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;strategy&quot;</span> : <span class="hljs-string">&quot;standard&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">7</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1166.3856189774724</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">7</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1266.3856189774724</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1266.3856189774724</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">39</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_06_explainUnoptimizedPlans_container_collapse" onclick="$('#AQLEXP_06_explainUnoptimizedPlans_long').hide(); $('#AQLEXP_06_explainUnoptimizedPlans_short').show(); window.location.hash='AQLEXP_06_explainUnoptimizedPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_06_explainUnoptimizedPlans_short" onclick="$('#AQLEXP_06_explainUnoptimizedPlans_short').hide(); $('#AQLEXP_06_explainUnoptimizedPlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">&quot;-all&quot;</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_06_explainUnoptimizedPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_07_explainSingleRulePlans


<div class="example-container" id="AQLEXP_07_explainSingleRulePlans_container">
<div id="AQLEXP_07_explainSingleRulePlans_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">&quot;-all&quot;</span>, <span class="hljs-string">&quot;+use-index-range&quot;</span> ] } });
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateCollectionNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">102</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;random&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexHint&quot;</span> : { 
          <span class="hljs-string">&quot;forced&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">202</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;FilterNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">302</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        } 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">402</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SortNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1066.3856189774724</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;elements&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;inVariable&quot;</span> : { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
              <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
            }, 
            <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;stable&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;strategy&quot;</span> : <span class="hljs-string">&quot;standard&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">7</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1166.3856189774724</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">7</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1266.3856189774724</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1266.3856189774724</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">39</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_07_explainSingleRulePlans_container_collapse" onclick="$('#AQLEXP_07_explainSingleRulePlans_long').hide(); $('#AQLEXP_07_explainSingleRulePlans_short').show(); window.location.hash='AQLEXP_07_explainSingleRulePlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_07_explainSingleRulePlans_short" onclick="$('#AQLEXP_07_explainSingleRulePlans_short').hide(); $('#AQLEXP_07_explainSingleRulePlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">&quot;-all&quot;</span>, <span class="hljs-string">&quot;+use-index-range&quot;</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_07_explainSingleRulePlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_08_explainDisableSingleRulePlans


<div class="example-container" id="AQLEXP_08_explainDisableSingleRulePlans_container">
<div id="AQLEXP_08_explainDisableSingleRulePlans_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">&quot;-use-index-range&quot;</span>, <span class="hljs-string">&quot;-use-index-for-sort&quot;</span> ] } });
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">12.643856189774723</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ 
          <span class="hljs-string">&quot;value&quot;</span> 
        ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
        <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexes&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;64943&quot;</span>, 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769183502565376&quot;</span>, 
            <span class="hljs-string">&quot;fields&quot;</span> : [ 
              <span class="hljs-string">&quot;value&quot;</span> 
            ], 
            <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;condition&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                        { 
                          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
                      <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                      <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">112.64385618977472</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SortNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">777.0294751672471</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;elements&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;inVariable&quot;</span> : { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
              <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
            }, 
            <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;stable&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;strategy&quot;</span> : <span class="hljs-string">&quot;standard&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">877.0294751672471</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up&quot;</span>, 
      <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up-2&quot;</span>, 
      <span class="hljs-string">&quot;use-indexes&quot;</span>, 
      <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
      <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">877.0294751672471</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">40</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_08_explainDisableSingleRulePlans_container_collapse" onclick="$('#AQLEXP_08_explainDisableSingleRulePlans_long').hide(); $('#AQLEXP_08_explainDisableSingleRulePlans_short').show(); window.location.hash='AQLEXP_08_explainDisableSingleRulePlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_08_explainDisableSingleRulePlans_short" onclick="$('#AQLEXP_08_explainDisableSingleRulePlans_short').hide(); $('#AQLEXP_08_explainDisableSingleRulePlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">&quot;-use-index-range&quot;</span>, <span class="hljs-string">&quot;-use-index-for-sort&quot;</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_08_explainDisableSingleRulePlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_09_explainMaxNumberOfPlans


<div class="example-container" id="AQLEXP_09_explainMaxNumberOfPlans_container">
<div id="AQLEXP_09_explainMaxNumberOfPlans_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">maxNumberOfPlans</span>: <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">12.643856189774723</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ 
          <span class="hljs-string">&quot;value&quot;</span> 
        ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
        <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexes&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;64943&quot;</span>, 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769183502565376&quot;</span>, 
            <span class="hljs-string">&quot;fields&quot;</span> : [ 
              <span class="hljs-string">&quot;value&quot;</span> 
            ], 
            <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;condition&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                        { 
                          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
                      <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                      <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">112.64385618977472</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up&quot;</span>, 
      <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up-2&quot;</span>, 
      <span class="hljs-string">&quot;use-indexes&quot;</span>, 
      <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
      <span class="hljs-string">&quot;use-index-for-sort&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
      <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">40</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_09_explainMaxNumberOfPlans_container_collapse" onclick="$('#AQLEXP_09_explainMaxNumberOfPlans_long').hide(); $('#AQLEXP_09_explainMaxNumberOfPlans_short').show(); window.location.hash='AQLEXP_09_explainMaxNumberOfPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_09_explainMaxNumberOfPlans_short" onclick="$('#AQLEXP_09_explainMaxNumberOfPlans_short').hide(); $('#AQLEXP_09_explainMaxNumberOfPlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">maxNumberOfPlans</span>: <span class="hljs-number">1</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_09_explainMaxNumberOfPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_10_explainWarn


<div class="example-container" id="AQLEXP_10_explainWarn_container">
<div id="AQLEXP_10_explainWarn_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(<span class="hljs-string">&quot;FOR i IN 1..10 RETURN 1 / 0&quot;</span>)
arangosh&gt; stmt.explain().warnings;
[ 
  { 
    <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">1562</span>, 
    <span class="hljs-string">&quot;message&quot;</span> : <span class="hljs-string">&quot;division by zero&quot;</span> 
  } 
]
</pre>
<div id="AQLEXP_10_explainWarn_container_collapse" onclick="$('#AQLEXP_10_explainWarn_long').hide(); $('#AQLEXP_10_explainWarn_short').show(); window.location.hash='AQLEXP_10_explainWarn_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_10_explainWarn_short" onclick="$('#AQLEXP_10_explainWarn_short').hide(); $('#AQLEXP_10_explainWarn_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(<span class="hljs-string">&quot;FOR i IN 1..10 RETURN 1 / 0&quot;</span>)
arangosh&gt; stmt.explain().warnings;
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_10_explainWarn


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-remove-vertex.md -->
    @startDocuBlockInline GRAPHTRAV_removeVertex1


<div class="example-container" id="GRAPHTRAV_removeVertex1_container">
<div id="GRAPHTRAV_removeVertex1_long">
<strong>Query:</strong>
<pre>
LET edgeKeys = (FOR v, e IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> ANY <span class="hljs-string">&#x27;persons/eve&#x27;</span> GRAPH <span class="hljs-string">&#x27;knows_graph&#x27;</span> RETURN e._key)
LET r = (FOR key IN edgeKeys REMOVE key IN knows) 
REMOVE <span class="hljs-string">&#x27;eve&#x27;</span> IN persons

</pre>
<strong>Query results:</strong>
<pre>
[]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_removeVertex1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-remove-vertex.md -->
    @startDocuBlockInline GRAPHTRAV_removeVertex2


<div class="example-container" id="GRAPHTRAV_removeVertex2_container">
<div id="GRAPHTRAV_removeVertex2_long">
<strong>Query:</strong>
<pre>
LET edgeKeys = (FOR v, e IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> ANY <span class="hljs-string">&#x27;persons/eve&#x27;</span> GRAPH <span class="hljs-string">&#x27;knows_graph&#x27;</span>
          REMOVE e._key IN knows)
REMOVE <span class="hljs-string">&#x27;eve&#x27;</span> IN persons

</pre>
<strong>Query results:</strong>
<pre>
[]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_removeVertex2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-remove-vertex.md -->
    @startDocuBlockInline GRAPHTRAV_removeVertex3


<div class="example-container" id="GRAPHTRAV_removeVertex3_container">
<div id="GRAPHTRAV_removeVertex3_long">
<strong>Query:</strong>
<pre>
LET edgeKeys = (FOR v, e IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> ANY <span class="hljs-string">&#x27;germanCity/Berlin&#x27;</span> GRAPH <span class="hljs-string">&#x27;routeplanner&#x27;</span> RETURN e._key)
LET r = (FOR key IN edgeKeys REMOVE key IN internationalHighway
      OPTIONS { <span class="hljs-attr">ignoreErrors</span>: <span class="hljs-literal">true</span> } REMOVE key IN germanHighway
      OPTIONS { <span class="hljs-attr">ignoreErrors</span>: <span class="hljs-literal">true</span> } REMOVE key IN frenchHighway
      OPTIONS { <span class="hljs-attr">ignoreErrors</span>: <span class="hljs-literal">true</span> }) 
REMOVE <span class="hljs-string">&#x27;Berlin&#x27;</span> IN germanCity

</pre>
<strong>Query results:</strong>
<pre>
[]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_removeVertex3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-join.md -->
    @startDocuBlockInline joinTuples


<div class="example-container" id="joinTuples_container">
<div id="joinTuples_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR u IN users
    FILTER u.active == <span class="hljs-literal">true</span>
    LIMIT <span class="hljs-number">0</span>, <span class="hljs-number">4</span>
    FOR f IN relations
      FILTER f.type == @friend &amp;&amp; f.friendOf == u.userId
      RETURN {
        <span class="hljs-string">&quot;user&quot;</span> : u.name,
        <span class="hljs-string">&quot;friendId&quot;</span> : f.thisUser
      }
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;friend&quot;</span>: <span class="hljs-string">&quot;friend&quot;</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Abigail&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">2</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Abigail&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">3</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Abigail&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">4</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Fred&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">5</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Fred&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">2</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Mary&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">4</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Mary&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">1</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Mariah&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">1</span>
  },
  {
    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;Mariah&quot;</span>,
    <span class="hljs-string">&quot;friendId&quot;</span>: <span class="hljs-number">2</span>
  }
]</pre>
<div id="joinTuples_container_collapse" onclick="$('#joinTuples_long').hide(); $('#joinTuples_short').show(); window.location.hash='joinTuples_container';" class="example_show_button">Hide query result</div></div>
<div id="joinTuples_short" onclick="$('#joinTuples_short').hide(); $('#joinTuples_long').show();">
<strong>Query:</strong>
<pre>
  FOR u IN users
    FILTER u.active == <span class="hljs-literal">true</span>
    LIMIT <span class="hljs-number">0</span>, <span class="hljs-number">4</span>
    FOR f IN relations
      FILTER f.type == @friend &amp;&amp; f.friendOf == u.userId
      RETURN {
        <span class="hljs-string">&quot;user&quot;</span> : u.name,
        <span class="hljs-string">&quot;friendId&quot;</span> : f.thisUser
      }
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;friend&quot;</span>: <span class="hljs-string">&quot;friend&quot;</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock joinTuples


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedyofwk1


<div class="example-container" id="datedyofwk1_container">
<div id="datedyofwk1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAYOFWEEK(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">6</span>
]</pre>
</div>
</div>

  @endDocuBlock datedyofwk1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedyofwk2


<div class="example-container" id="datedyofwk2_container">
<div id="datedyofwk2_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAYOFWEEK(<span class="hljs-number">0</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">4</span>
]</pre>
</div>
</div>

  @endDocuBlock datedyofwk2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline dateyr1


<div class="example-container" id="dateyr1_container">
<div id="dateyr1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_YEAR(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">2020</span>
]</pre>
</div>
</div>

  @endDocuBlock dateyr1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline dateyr2


<div class="example-container" id="dateyr2_container">
<div id="dateyr2_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_YEAR(<span class="hljs-number">0</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1970</span>
]</pre>
</div>
</div>

  @endDocuBlock dateyr2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datemn1


<div class="example-container" id="datemn1_container">
<div id="datemn1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_MONTH(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">8</span>
]</pre>
</div>
</div>

  @endDocuBlock datemn1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datemn2


<div class="example-container" id="datemn2_container">
<div id="datemn2_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_MONTH(<span class="hljs-number">0</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1</span>
]</pre>
</div>
</div>

  @endDocuBlock datemn2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedy1


<div class="example-container" id="datedy1_container">
<div id="datedy1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAY(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">29</span>
]</pre>
</div>
</div>

  @endDocuBlock datedy1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedy2


<div class="example-container" id="datedy2_container">
<div id="datedy2_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAY(<span class="hljs-number">0</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1</span>
]</pre>
</div>
</div>

  @endDocuBlock datedy2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datehr1


<div class="example-container" id="datehr1_container">
<div id="datehr1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_HOUR(<span class="hljs-string">&quot;2020-08-29T16:30:05.123&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">16</span>
]</pre>
</div>
</div>

  @endDocuBlock datehr1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datemin1


<div class="example-container" id="datemin1_container">
<div id="datemin1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_MINUTE(<span class="hljs-string">&quot;2020-08-29T16:30:05.123&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">30</span>
]</pre>
</div>
</div>

  @endDocuBlock datemin1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datesec1


<div class="example-container" id="datesec1_container">
<div id="datesec1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_SECOND(<span class="hljs-string">&quot;2020-08-29T16:30:05.123&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">5</span>
]</pre>
</div>
</div>

  @endDocuBlock datesec1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datemilsec1


<div class="example-container" id="datemilsec1_container">
<div id="datemilsec1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_MILLISECOND(<span class="hljs-string">&quot;2020-08-29T16:30:05.123&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">123</span>
]</pre>
</div>
</div>

  @endDocuBlock datemilsec1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedyofyr1


<div class="example-container" id="datedyofyr1_container">
<div id="datedyofyr1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAYOFYEAR(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">242</span>
]</pre>
</div>
</div>

  @endDocuBlock datedyofyr1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline dateisofwk1


<div class="example-container" id="dateisofwk1_container">
<div id="dateisofwk1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_ISOWEEK(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">35</span>
]</pre>
</div>
</div>

  @endDocuBlock dateisofwk1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datelpyr1


<div class="example-container" id="datelpyr1_container">
<div id="datelpyr1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_LEAPYEAR(<span class="hljs-string">&quot;2020-01-01&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">true</span>
]</pre>
</div>
</div>

  @endDocuBlock datelpyr1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datelpyr2


<div class="example-container" id="datelpyr2_container">
<div id="datelpyr2_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_LEAPYEAR(<span class="hljs-string">&quot;2021-01-01&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">false</span>
]</pre>
</div>
</div>

  @endDocuBlock datelpyr2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline dateqtr1


<div class="example-container" id="dateqtr1_container">
<div id="dateqtr1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_QUARTER(<span class="hljs-string">&quot;2020-08-29&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">3</span>
]</pre>
</div>
</div>

  @endDocuBlock dateqtr1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedysmn1


<div class="example-container" id="datedysmn1_container">
<div id="datedysmn1_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAYS_IN_MONTH(<span class="hljs-string">&quot;2020-08-01&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">31</span>
]</pre>
</div>
</div>

  @endDocuBlock datedysmn1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedysmn2


<div class="example-container" id="datedysmn2_container">
<div id="datedysmn2_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAYS_IN_MONTH(<span class="hljs-string">&quot;2020-09-01&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">30</span>
]</pre>
</div>
</div>

  @endDocuBlock datedysmn2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedysmn3


<div class="example-container" id="datedysmn3_container">
<div id="datedysmn3_long">
<strong>Query:</strong>
<pre>
  RETURN DATE_DAYS_IN_MONTH(<span class="hljs-string">&quot;2020-02-01&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">29</span>
]</pre>
</div>
</div>

  @endDocuBlock datedysmn3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
  @startDocuBlockInline datedysmn4


<div class="example-container" id="datedysmn4_container">
<div id="datedysmn4_long">
<strong>Query:</strong>
<pre>
RETURN DATE_DAYS_IN_MONTH(<span class="hljs-string">&quot;2021-02-01&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">28</span>
]</pre>
</div>
</div>

  @endDocuBlock datedysmn4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
    @startDocuBlockInline dateTruncGroup


<div class="example-container" id="dateTruncGroup_container">
<div id="dateTruncGroup_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN MERGE(
    FOR doc IN @data
      COLLECT q = DATE_TRUNC(doc.date, <span class="hljs-string">&quot;year&quot;</span>) INTO bucket
      RETURN { [DATE_YEAR(q)]: bucket[*].doc.value }
  )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;data&quot;</span>: [
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2018-03-05&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Spring&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2018-07-11&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Summer&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2018-10-26&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Autumn&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-01-09&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Winter&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-04-02&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Spring&quot;</span>
    }
  ]
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;2018&quot;</span>: [
      <span class="hljs-string">&quot;Spring&quot;</span>,
      <span class="hljs-string">&quot;Summer&quot;</span>,
      <span class="hljs-string">&quot;Autumn&quot;</span>
    ],
    <span class="hljs-string">&quot;2019&quot;</span>: [
      <span class="hljs-string">&quot;Winter&quot;</span>,
      <span class="hljs-string">&quot;Spring&quot;</span>
    ]
  }
]</pre>
<div id="dateTruncGroup_container_collapse" onclick="$('#dateTruncGroup_long').hide(); $('#dateTruncGroup_short').show(); window.location.hash='dateTruncGroup_container';" class="example_show_button">Hide query result</div></div>
<div id="dateTruncGroup_short" onclick="$('#dateTruncGroup_short').hide(); $('#dateTruncGroup_long').show();">
<strong>Query:</strong>
<pre>
  RETURN MERGE(
    FOR doc IN @data
      COLLECT q = DATE_TRUNC(doc.date, <span class="hljs-string">&quot;year&quot;</span>) INTO bucket
      RETURN { [DATE_YEAR(q)]: bucket[*].doc.value }
  )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;data&quot;</span>: [
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2018-03-05&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Spring&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2018-07-11&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Summer&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2018-10-26&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Autumn&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-01-09&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Winter&quot;</span>
    },
    {
      <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-04-02&quot;</span>,
      <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-string">&quot;Spring&quot;</span>
    }
  ]
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock dateTruncGroup


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
    @startDocuBlockInline dateRoundAggregate


<div class="example-container" id="dateRoundAggregate_container">
<div id="dateRoundAggregate_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR doc IN @sensorData
    COLLECT
      date = DATE_ROUND(doc.timestamp, <span class="hljs-number">5</span>, <span class="hljs-string">&quot;minutes&quot;</span>)
    AGGREGATE
      count = COUNT(<span class="hljs-number">1</span>),
      avg = AVG(doc.temp),
      min = MIN(doc.temp),
      max = MAX(doc.temp)
    RETURN { date, count, avg, min, max }
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;sensorData&quot;</span>: [
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:17:52.583Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">20.6</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:19:53.516Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">20.2</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:21:53.610Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.9</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:23:52.522Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.8</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:25:52.988Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.8</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:27:54.005Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.7</span>
    }
  ]
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:15:00.000Z&quot;</span>,
    <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;avg&quot;</span>: <span class="hljs-number">20.4</span>,
    <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">20.2</span>,
    <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">20.6</span>
  },
  {
    <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:20:00.000Z&quot;</span>,
    <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;avg&quot;</span>: <span class="hljs-number">19.85</span>,
    <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">19.8</span>,
    <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">19.9</span>
  },
  {
    <span class="hljs-string">&quot;date&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:25:00.000Z&quot;</span>,
    <span class="hljs-string">&quot;count&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;avg&quot;</span>: <span class="hljs-number">19.75</span>,
    <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">19.7</span>,
    <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">19.8</span>
  }
]</pre>
<div id="dateRoundAggregate_container_collapse" onclick="$('#dateRoundAggregate_long').hide(); $('#dateRoundAggregate_short').show(); window.location.hash='dateRoundAggregate_container';" class="example_show_button">Hide query result</div></div>
<div id="dateRoundAggregate_short" onclick="$('#dateRoundAggregate_short').hide(); $('#dateRoundAggregate_long').show();">
<strong>Query:</strong>
<pre>
  FOR doc IN @sensorData
    COLLECT
      date = DATE_ROUND(doc.timestamp, <span class="hljs-number">5</span>, <span class="hljs-string">&quot;minutes&quot;</span>)
    AGGREGATE
      count = COUNT(<span class="hljs-number">1</span>),
      avg = AVG(doc.temp),
      min = MIN(doc.temp),
      max = MAX(doc.temp)
    RETURN { date, count, avg, min, max }
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;sensorData&quot;</span>: [
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:17:52.583Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">20.6</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:19:53.516Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">20.2</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:21:53.610Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.9</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:23:52.522Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.8</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:25:52.988Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.8</span>
    },
    {
      <span class="hljs-string">&quot;timestamp&quot;</span>: <span class="hljs-string">&quot;2019-12-04T21:27:54.005Z&quot;</span>,
      <span class="hljs-string">&quot;temp&quot;</span>: <span class="hljs-number">19.7</span>
    }
  ]
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock dateRoundAggregate


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
    @startDocuBlockInline working_with_date_time


<div class="example-container" id="working_with_date_time_container">
<div id="working_with_date_time_long" style="display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;exampleTime&quot;</span>);
[ArangoCollection <span class="hljs-number">89818</span>, <span class="hljs-string">&quot;exampleTime&quot;</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; <span class="hljs-keyword">var</span> timestamps = [<span class="hljs-string">&quot;2014-05-07T14:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-07T21:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-08T04:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-08T11:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-08T18:19:09.522&quot;</span>];
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.exampleTime.save({<span class="hljs-attr">value</span>:i, <span class="hljs-attr">ts</span>: timestamps[i]})
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR d IN exampleTime FILTER d.ts &gt; &#x27;2014-05-07T14:19:09.522&#x27; and d.ts &lt; &#x27;2014-05-08T18:19:09.522&#x27; RETURN d&quot;</span>).toArray()
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89825&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;exampleTime/89825&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfVq---&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;ts&quot;</span> : <span class="hljs-string">&quot;2014-05-07T21:19:09.522&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89827&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;exampleTime/89827&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfVu---&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;ts&quot;</span> : <span class="hljs-string">&quot;2014-05-08T04:19:09.522&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;89829&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;exampleTime/89829&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylfVy---&quot;</span>, 
    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;ts&quot;</span> : <span class="hljs-string">&quot;2014-05-08T11:19:09.522&quot;</span> 
  } 
]
</pre>
<div id="working_with_date_time_container_collapse" onclick="$('#working_with_date_time_long').hide(); $('#working_with_date_time_short').show(); window.location.hash='working_with_date_time_container';" class="example_show_button">Hide execution results</div></div>
<div id="working_with_date_time_short" onclick="$('#working_with_date_time_short').hide(); $('#working_with_date_time_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">&quot;exampleTime&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> timestamps = [<span class="hljs-string">&quot;2014-05-07T14:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-07T21:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-08T04:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-08T11:19:09.522&quot;</span>,<span class="hljs-string">&quot;2014-05-08T18:19:09.522&quot;</span>];
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.exampleTime.save({<span class="hljs-attr">value</span>:i, <span class="hljs-attr">ts</span>: timestamps[i]})
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR d IN exampleTime FILTER d.ts &gt; &#x27;2014-05-07T14:19:09.522&#x27; and d.ts &lt; &#x27;2014-05-08T18:19:09.522&#x27; RETURN d&quot;</span>).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock working_with_date_time


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-query-profiler.md -->
@startDocuBlockInline 01_workWithAQL_profileQuerySimple


<div class="example-container" id="01_workWithAQL_profileQuerySimple_container">
<div id="01_workWithAQL_profileQuerySimple_long" style="display: none;">
<pre>
arangosh&gt; db._profileQuery(<span class="hljs-string">`
........&gt; FOR doc IN acollection
........&gt;  FILTER doc.value &lt; 10
........&gt;  RETURN doc`</span>, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>}
........&gt; );
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">58</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">false</span>):
 FOR doc IN acollection
  FILTER doc.value &lt; <span class="hljs-number">10</span>
  RETURN doc

Execution plan:
 Id   NodeType                  Calls   Items   Runtime [s]   Comment
  <span class="hljs-number">1</span>   SingletonNode                 <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">0.00001</span>   * ROOT
  <span class="hljs-number">2</span>   EnumerateCollectionNode       <span class="hljs-number">1</span>      <span class="hljs-number">10</span>       <span class="hljs-number">0.00763</span>     - FOR doc IN acollection   <span class="hljs-comment">/* full collection scan */</span>   FILTER (doc.<span class="hljs-string">`value`</span> &lt; <span class="hljs-number">10</span>)   <span class="hljs-comment">/* early pruning */</span>
  <span class="hljs-number">5</span>   ReturnNode                    <span class="hljs-number">1</span>      <span class="hljs-number">10</span>       <span class="hljs-number">0.00001</span>       - RETURN doc

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   move-filters-into-enumerate

Query Statistics:
 Writes Exec   Writes Ign   Scan Full   Scan Index   Filtered   Exec Time [s]
           <span class="hljs-number">0</span>            <span class="hljs-number">0</span>       <span class="hljs-number">10000</span>            <span class="hljs-number">0</span>       <span class="hljs-number">9990</span>         <span class="hljs-number">0.00827</span>

Query Profile:
 Query Stage           Duration [s]
 initializing               <span class="hljs-number">0.00001</span>
 parsing                    <span class="hljs-number">0.00009</span>
 optimizing ast             <span class="hljs-number">0.00001</span>
 loading collections        <span class="hljs-number">0.00001</span>
 instantiating plan         <span class="hljs-number">0.00003</span>
 optimizing plan            <span class="hljs-number">0.00031</span>
 executing                  <span class="hljs-number">0.00768</span>
 finalizing                 <span class="hljs-number">0.00012</span>


</pre>
<div id="01_workWithAQL_profileQuerySimple_container_collapse" onclick="$('#01_workWithAQL_profileQuerySimple_long').hide(); $('#01_workWithAQL_profileQuerySimple_short').show(); window.location.hash='01_workWithAQL_profileQuerySimple_container';" class="example_show_button">Hide execution results</div></div>
<div id="01_workWithAQL_profileQuerySimple_short" onclick="$('#01_workWithAQL_profileQuerySimple_short').hide(); $('#01_workWithAQL_profileQuerySimple_long').show();">
<pre>
arangosh&gt; db._profileQuery(<span class="hljs-string">`
........&gt; FOR doc IN acollection
........&gt;  FILTER doc.value &lt; 10
........&gt;  RETURN doc`</span>, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>}
........&gt; );
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

@endDocuBlock 01_workWithAQL_profileQuerySimple


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-query-profiler.md -->
@startDocuBlockInline 02_workWithAQL_profileQuerySimpleIndex


<div class="example-container" id="02_workWithAQL_profileQuerySimpleIndex_container">
<div id="02_workWithAQL_profileQuerySimpleIndex_long" style="display: none;">
<pre>
arangosh&gt; db._profileQuery(<span class="hljs-string">`
........&gt; FOR doc IN acollection
........&gt;  FILTER doc.value &lt; 10
........&gt;  RETURN doc`</span>, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>}
........&gt; );
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">58</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">false</span>):
 FOR doc IN acollection
  FILTER doc.value &lt; <span class="hljs-number">10</span>
  RETURN doc

Execution plan:
 Id   NodeType        Calls   Items   Runtime [s]   Comment
  <span class="hljs-number">1</span>   SingletonNode       <span class="hljs-number">1</span>       <span class="hljs-number">1</span>       <span class="hljs-number">0.00001</span>   * ROOT
  <span class="hljs-number">6</span>   IndexNode           <span class="hljs-number">1</span>      <span class="hljs-number">10</span>       <span class="hljs-number">0.00013</span>     - FOR doc IN acollection   <span class="hljs-comment">/* skiplist index scan */</span>    
  <span class="hljs-number">5</span>   ReturnNode          <span class="hljs-number">1</span>      <span class="hljs-number">10</span>       <span class="hljs-number">0.00001</span>       - RETURN doc

Indexes used:
 By   Name                      Type       Collection    Unique   Sparse   Selectivity   Fields        Ranges
  <span class="hljs-number">6</span>   idx_1728769174252027904   skiplist   acollection   <span class="hljs-literal">false</span>    <span class="hljs-literal">false</span>       <span class="hljs-number">100.00</span> %   [ <span class="hljs-string">`value`</span> ]   (doc.<span class="hljs-string">`value`</span> &lt; <span class="hljs-number">10</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   use-indexes
  <span class="hljs-number">2</span>   remove-filter-covered-by-index
  <span class="hljs-number">3</span>   remove-unnecessary-calculations-<span class="hljs-number">2</span>

Query Statistics:
 Writes Exec   Writes Ign   Scan Full   Scan Index   Filtered   Exec Time [s]
           <span class="hljs-number">0</span>            <span class="hljs-number">0</span>           <span class="hljs-number">0</span>           <span class="hljs-number">10</span>          <span class="hljs-number">0</span>         <span class="hljs-number">0.00071</span>

Query Profile:
 Query Stage           Duration [s]
 initializing               <span class="hljs-number">0.00001</span>
 parsing                    <span class="hljs-number">0.00006</span>
 optimizing ast             <span class="hljs-number">0.00001</span>
 loading collections        <span class="hljs-number">0.00000</span>
 instantiating plan         <span class="hljs-number">0.00005</span>
 optimizing plan            <span class="hljs-number">0.00024</span>
 executing                  <span class="hljs-number">0.00016</span>
 finalizing                 <span class="hljs-number">0.00016</span>


</pre>
<div id="02_workWithAQL_profileQuerySimpleIndex_container_collapse" onclick="$('#02_workWithAQL_profileQuerySimpleIndex_long').hide(); $('#02_workWithAQL_profileQuerySimpleIndex_short').show(); window.location.hash='02_workWithAQL_profileQuerySimpleIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="02_workWithAQL_profileQuerySimpleIndex_short" onclick="$('#02_workWithAQL_profileQuerySimpleIndex_short').hide(); $('#02_workWithAQL_profileQuerySimpleIndex_long').show();">
<pre>
arangosh&gt; db._profileQuery(<span class="hljs-string">`
........&gt; FOR doc IN acollection
........&gt;  FILTER doc.value &lt; 10
........&gt;  RETURN doc`</span>, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>}
........&gt; );
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

@endDocuBlock 02_workWithAQL_profileQuerySimpleIndex


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-query-profiler.md -->
@startDocuBlockInline 03_workWithAQL_profileQuerySubquery


<div class="example-container" id="03_workWithAQL_profileQuerySubquery_container">
<div id="03_workWithAQL_profileQuerySubquery_long" style="display: none;">
<pre>
arangosh&gt; db._profileQuery(`
........&gt; LET list = (FOR doc in acollection FILTER doc.value &gt; 90 RETURN doc)
........&gt; FOR a IN list 
........&gt;  FILTER a.value &lt; 91 
........&gt;  RETURN a`, {}, {colors: false, optimizer:{rules:[&quot;-all&quot;]}}
........&gt; );
Query String (116 chars, cacheable: false):
 LET list = (FOR doc in acollection FILTER doc.value &gt; 90 RETURN doc)
 FOR a IN list 
  FILTER a.value &lt; 91 
  RETURN a

Execution plan:
 Id   NodeType                  Calls   Items   Runtime [s]   Comment
  1   SingletonNode                 1       1       0.00001   * ROOT
  7   SubqueryNode                  1       1       0.01918     - LET list = ...   /* const subquery */
  2   SingletonNode                 1       1       0.00001       * ROOT
  3   EnumerateCollectionNode      10   10000       0.00691         - FOR doc IN acollection   /* full collection scan */
  4   CalculationNode              10   10000       0.00461           - LET #5 = (doc.`value` &gt; 90)   /* simple expression */   /* collections used: doc : acollection */
  5   FilterNode                   10    9909       0.00523           - FILTER #5
  6   ReturnNode                   10    9909       0.00235           - RETURN doc
  8   EnumerateListNode            10    9909       0.00275     - FOR a IN list   /* list iteration */
  9   CalculationNode              10    9909       0.00373       - LET #7 = (a.`value` &lt; 91)   /* simple expression */
 10   FilterNode                    1       0       0.00140       - FILTER #7
 11   ReturnNode                    1       0       0.00001       - RETURN a

Indexes used:
 none

Optimization rules applied:
 none

Query Statistics:
 Writes Exec   Writes Ign   Scan Full   Scan Index   Filtered   Exec Time [s]
           0            0       10000            0      10000         0.02774

Query Profile:
 Query Stage           Duration [s]
 initializing               0.00001
 parsing                    0.00010
 optimizing ast             0.00002
 loading collections        0.00001
 instantiating plan         0.00006
 optimizing plan            0.00026
 executing                  0.02711
 finalizing                 0.00018


</pre>
<div id="03_workWithAQL_profileQuerySubquery_container_collapse" onclick="$('#03_workWithAQL_profileQuerySubquery_long').hide(); $('#03_workWithAQL_profileQuerySubquery_short').show(); window.location.hash='03_workWithAQL_profileQuerySubquery_container';" class="example_show_button">Hide execution results</div></div>
<div id="03_workWithAQL_profileQuerySubquery_short" onclick="$('#03_workWithAQL_profileQuerySubquery_short').hide(); $('#03_workWithAQL_profileQuerySubquery_long').show();">
<pre>
arangosh&gt; db._profileQuery(`
........&gt; LET list = (FOR doc in acollection FILTER doc.value &gt; 90 RETURN doc)
........&gt; FOR a IN list 
........&gt;  FILTER a.value &lt; 91 
........&gt;  RETURN a`, {}, {colors: false, optimizer:{rules:[&quot;-all&quot;]}}
........&gt; );
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

@endDocuBlock 03_workWithAQL_profileQuerySubquery


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-query-profiler.md -->
@startDocuBlockInline 04_workWithAQL_profileQueryAggregation


<div class="example-container" id="04_workWithAQL_profileQueryAggregation_container">
<div id="04_workWithAQL_profileQueryAggregation_long" style="display: none;">
<pre>
arangosh&gt; db._profileQuery(`
........&gt; FOR u IN myusers
........&gt;  COLLECT ageGroup = FLOOR(u.age / 10) * 10
........&gt;  AGGREGATE minAge = MIN(u.age), maxAge = MAX(u.age), len = LENGTH(u)
........&gt;  RETURN {
........&gt;    ageGroup, 
........&gt;    minAge, 
........&gt;    maxAge,
........&gt;    len
........&gt;  }`, {}, {colors: false}
........&gt; );
Query String (186 chars, cacheable: false):
 FOR u IN myusers
  COLLECT ageGroup = FLOOR(u.age / 10) * 10
  AGGREGATE minAge = MIN(u.age), maxAge = MAX(u.age), len = LENGTH(u)
  RETURN {
    ageGroup, 
    minAge, 
    maxAge,
    len
  }

Execution plan:
 Id   NodeType                  Calls   Items   Runtime [s]   Comment
  1   SingletonNode                 1       1       0.00001   * ROOT
  2   EnumerateCollectionNode       1      20       0.00005     - FOR u IN myusers   /* full collection scan */
  3   CalculationNode               1      20       0.00003       - LET #5 = (FLOOR((u.`age` / 10)) * 10)   /* simple expression */   /* collections used: u : myusers */
  4   CalculationNode               1      20       0.00002       - LET #7 = u.`age`   /* attribute expression */   /* collections used: u : myusers */
  6   CollectNode                   1       7       0.00005       - COLLECT ageGroup = #5 AGGREGATE minAge = MIN(#7), maxAge = MAX(#7), len = LENGTH(u)   /* hash */
  9   SortNode                      1       7       0.00003       - SORT ageGroup ASC   /* sorting strategy: standard */
  7   CalculationNode               1       7       0.00003       - LET #11 = { &quot;ageGroup&quot; : ageGroup, &quot;minAge&quot; : minAge, &quot;maxAge&quot; : maxAge, &quot;len&quot; : len }   /* simple expression */
  8   ReturnNode                    1       7       0.00001       - RETURN #11

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   remove-redundant-calculations
  3   remove-unnecessary-calculations
  4   move-calculations-up-2
  5   move-calculations-down

Query Statistics:
 Writes Exec   Writes Ign   Scan Full   Scan Index   Filtered   Exec Time [s]
           0            0          20            0          0         0.00126

Query Profile:
 Query Stage           Duration [s]
 initializing               0.00000
 parsing                    0.00019
 optimizing ast             0.00002
 loading collections        0.00001
 instantiating plan         0.00006
 optimizing plan            0.00052
 executing                  0.00023
 finalizing                 0.00023


</pre>
<div id="04_workWithAQL_profileQueryAggregation_container_collapse" onclick="$('#04_workWithAQL_profileQueryAggregation_long').hide(); $('#04_workWithAQL_profileQueryAggregation_short').show(); window.location.hash='04_workWithAQL_profileQueryAggregation_container';" class="example_show_button">Hide execution results</div></div>
<div id="04_workWithAQL_profileQueryAggregation_short" onclick="$('#04_workWithAQL_profileQueryAggregation_short').hide(); $('#04_workWithAQL_profileQueryAggregation_long').show();">
<pre>
arangosh&gt; db._profileQuery(`
........&gt; FOR u IN myusers
........&gt;  COLLECT ageGroup = FLOOR(u.age / 10) * 10
........&gt;  AGGREGATE minAge = MIN(u.age), maxAge = MAX(u.age), len = LENGTH(u)
........&gt;  RETURN {
........&gt;    ageGroup, 
........&gt;    minAge, 
........&gt;    maxAge,
........&gt;    len
........&gt;  }`, {}, {colors: false}
........&gt; );
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

@endDocuBlock 04_workWithAQL_profileQueryAggregation


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_01_create_graph


<div class="example-container" id="GRAPHSP_01_create_graph_container">
<div id="GRAPHSP_01_create_graph_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
arangosh&gt; db.circles.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/A&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl5q---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;1&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl5u---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;2&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl5y---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;3&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/D&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl5y--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;4&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;E&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/E&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl52---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;5&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;F&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/F&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl56---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;6&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;G&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6----&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;7&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;H&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/H&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6---A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;8&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;I&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/I&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6C---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;9&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;J&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/J&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6G---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;10&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;K&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;circles/K&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6G--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;11&quot;</span> 
  } 
]
arangosh&gt; db.edges.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67042&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67042&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6K---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_bar&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67044&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67044&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/C&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6O---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_blarg&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67046&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67046&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/C&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/D&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6O--A&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_blorg&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67048&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67048&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/B&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/E&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6S---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_blub&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67050&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67050&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/E&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/F&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6W---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;left_schubi&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67052&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67052&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/A&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6a---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_foo&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67054&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67054&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/H&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6e---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_blob&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67056&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67056&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/H&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/I&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6e--A&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_blub&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67058&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67058&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/G&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/J&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6i---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_zip&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;67060&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/67060&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;circles/J&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;circles/K&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykl6m---&quot;</span>, 
    <span class="hljs-string">&quot;theFalse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;theTruth&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;right_zup&quot;</span> 
  } 
]
</pre>
<div id="GRAPHSP_01_create_graph_container_collapse" onclick="$('#GRAPHSP_01_create_graph_long').hide(); $('#GRAPHSP_01_create_graph_short').show(); window.location.hash='GRAPHSP_01_create_graph_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHSP_01_create_graph_short" onclick="$('#GRAPHSP_01_create_graph_short').hide(); $('#GRAPHSP_01_create_graph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
arangosh&gt; db.circles.toArray();
arangosh&gt; db.edges.toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHSP_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_02_A_to_D


<div class="example-container" id="GRAPHSP_02_A_to_D_container">
<div id="GRAPHSP_02_A_to_D_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR v, e IN OUTBOUND SHORTEST_PATH &#x27;circles/A&#x27; TO &#x27;circles/D&#x27; GRAPH &#x27;traversalGraph&#x27; RETURN [v._key, e._key]&quot;</span>);
[ 
  [ 
    <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;67042&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;67044&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;67046&quot;</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR v, e IN OUTBOUND SHORTEST_PATH &#x27;circles/A&#x27; TO &#x27;circles/D&#x27; edges RETURN [v._key, e._key]&quot;</span>);
[ 
  [ 
    <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;67042&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;67044&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;67046&quot;</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHSP_02_A_to_D_container_collapse" onclick="$('#GRAPHSP_02_A_to_D_long').hide(); $('#GRAPHSP_02_A_to_D_short').show(); window.location.hash='GRAPHSP_02_A_to_D_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHSP_02_A_to_D_short" onclick="$('#GRAPHSP_02_A_to_D_short').hide(); $('#GRAPHSP_02_A_to_D_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR v, e IN OUTBOUND SHORTEST_PATH &#x27;circles/A&#x27; TO &#x27;circles/D&#x27; GRAPH &#x27;traversalGraph&#x27; RETURN [v._key, e._key]&quot;</span>);
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR v, e IN OUTBOUND SHORTEST_PATH &#x27;circles/A&#x27; TO &#x27;circles/D&#x27; edges RETURN [v._key, e._key]&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHSP_02_A_to_D


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_03_A_to_D


<div class="example-container" id="GRAPHSP_03_A_to_D_container">
<div id="GRAPHSP_03_A_to_D_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR a IN circles FILTER a._key == &#x27;A&#x27; FOR d IN circles FILTER d._key == &#x27;D&#x27; FOR v, e IN OUTBOUND SHORTEST_PATH a TO d GRAPH &#x27;traversalGraph&#x27; RETURN [v._key, e._key]&quot;</span>);
[ 
  [ 
    <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;67042&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;67044&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;67046&quot;</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR a IN circles FILTER a._key == &#x27;A&#x27; FOR d IN circles FILTER d._key == &#x27;D&#x27; FOR v, e IN OUTBOUND SHORTEST_PATH a TO d edges RETURN [v._key, e._key]&quot;</span>);
[ 
  [ 
    <span class="hljs-string">&quot;A&quot;</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;B&quot;</span>, 
    <span class="hljs-string">&quot;67042&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;C&quot;</span>, 
    <span class="hljs-string">&quot;67044&quot;</span> 
  ], 
  [ 
    <span class="hljs-string">&quot;D&quot;</span>, 
    <span class="hljs-string">&quot;67046&quot;</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHSP_03_A_to_D_container_collapse" onclick="$('#GRAPHSP_03_A_to_D_long').hide(); $('#GRAPHSP_03_A_to_D_short').show(); window.location.hash='GRAPHSP_03_A_to_D_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHSP_03_A_to_D_short" onclick="$('#GRAPHSP_03_A_to_D_short').hide(); $('#GRAPHSP_03_A_to_D_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR a IN circles FILTER a._key == &#x27;A&#x27; FOR d IN circles FILTER d._key == &#x27;D&#x27; FOR v, e IN OUTBOUND SHORTEST_PATH a TO d GRAPH &#x27;traversalGraph&#x27; RETURN [v._key, e._key]&quot;</span>);
arangosh&gt; db._query(<span class="hljs-string">&quot;FOR a IN circles FILTER a._key == &#x27;A&#x27; FOR d IN circles FILTER d._key == &#x27;D&#x27; FOR v, e IN OUTBOUND SHORTEST_PATH a TO d edges RETURN [v._key, e._key]&quot;</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHSP_03_A_to_D


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_99_drop_graph


<div class="example-container" id="GRAPHSP_99_drop_graph_container">
<div id="GRAPHSP_99_drop_graph_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock GRAPHSP_99_drop_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphPruneEdges


<div class="example-container" id="GRAPHTRAV_graphPruneEdges_container">
<div id="GRAPHTRAV_graphPruneEdges_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      PRUNE e.theTruth == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphPruneEdges_container_collapse" onclick="$('#GRAPHTRAV_graphPruneEdges_long').hide(); $('#GRAPHTRAV_graphPruneEdges_short').show(); window.location.hash='GRAPHTRAV_graphPruneEdges_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphPruneEdges_short" onclick="$('#GRAPHTRAV_graphPruneEdges_short').hide(); $('#GRAPHTRAV_graphPruneEdges_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      PRUNE e.theTruth == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphPruneEdges


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphPruneVertices


<div class="example-container" id="GRAPHTRAV_graphPruneVertices_container">
<div id="GRAPHTRAV_graphPruneVertices_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      PRUNE v._key == <span class="hljs-string">&#x27;G&#x27;</span>
      FILTER v._key == <span class="hljs-string">&#x27;G&#x27;</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphPruneVertices_container_collapse" onclick="$('#GRAPHTRAV_graphPruneVertices_long').hide(); $('#GRAPHTRAV_graphPruneVertices_short').show(); window.location.hash='GRAPHTRAV_graphPruneVertices_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphPruneVertices_short" onclick="$('#GRAPHTRAV_graphPruneVertices_short').hide(); $('#GRAPHTRAV_graphPruneVertices_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      PRUNE v._key == <span class="hljs-string">&#x27;G&#x27;</span>
      FILTER v._key == <span class="hljs-string">&#x27;G&#x27;</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphPruneVertices


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphPruneCollection


<div class="example-container" id="GRAPHTRAV_graphPruneCollection_container">
<div id="GRAPHTRAV_graphPruneCollection_long">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      PRUNE IS_SAME_COLLECTION(<span class="hljs-string">&#x27;circles&#x27;</span>, v)
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphPruneCollection


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphFilterEdges


<div class="example-container" id="GRAPHTRAV_graphFilterEdges_container">
<div id="GRAPHTRAV_graphFilterEdges_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].theTruth == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;C&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blarg&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;C&quot;</span>,
      <span class="hljs-string">&quot;D&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blarg&quot;</span>,
      <span class="hljs-string">&quot;left_blorg&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;E&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;E&quot;</span>,
      <span class="hljs-string">&quot;F&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blub&quot;</span>,
      <span class="hljs-string">&quot;left_schubi&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>,
      <span class="hljs-string">&quot;I&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>,
      <span class="hljs-string">&quot;right_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>,
      <span class="hljs-string">&quot;K&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>,
      <span class="hljs-string">&quot;right_zup&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphFilterEdges_container_collapse" onclick="$('#GRAPHTRAV_graphFilterEdges_long').hide(); $('#GRAPHTRAV_graphFilterEdges_short').show(); window.location.hash='GRAPHTRAV_graphFilterEdges_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphFilterEdges_short" onclick="$('#GRAPHTRAV_graphFilterEdges_short').hide(); $('#GRAPHTRAV_graphFilterEdges_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].theTruth == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphFilterEdges


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphFilterVertices


<div class="example-container" id="GRAPHTRAV_graphFilterVertices_container">
<div id="GRAPHTRAV_graphFilterVertices_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key == <span class="hljs-string">&quot;G&quot;</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>,
      <span class="hljs-string">&quot;I&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>,
      <span class="hljs-string">&quot;right_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>,
      <span class="hljs-string">&quot;K&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>,
      <span class="hljs-string">&quot;right_zup&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphFilterVertices_container_collapse" onclick="$('#GRAPHTRAV_graphFilterVertices_long').hide(); $('#GRAPHTRAV_graphFilterVertices_short').show(); window.location.hash='GRAPHTRAV_graphFilterVertices_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphFilterVertices_short" onclick="$('#GRAPHTRAV_graphFilterVertices_short').hide(); $('#GRAPHTRAV_graphFilterVertices_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key == <span class="hljs-string">&quot;G&quot;</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphFilterVertices


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphFilterCombine


<div class="example-container" id="GRAPHTRAV_graphFilterCombine_container">
<div id="GRAPHTRAV_graphFilterCombine_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].theTruth == <span class="hljs-literal">true</span>
         AND p.edges[<span class="hljs-number">1</span>].theFalse == <span class="hljs-literal">false</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key == <span class="hljs-string">&quot;G&quot;</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>,
      <span class="hljs-string">&quot;I&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>,
      <span class="hljs-string">&quot;right_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>,
      <span class="hljs-string">&quot;K&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>,
      <span class="hljs-string">&quot;right_zup&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphFilterCombine_container_collapse" onclick="$('#GRAPHTRAV_graphFilterCombine_long').hide(); $('#GRAPHTRAV_graphFilterCombine_short').show(); window.location.hash='GRAPHTRAV_graphFilterCombine_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphFilterCombine_short" onclick="$('#GRAPHTRAV_graphFilterCombine_short').hide(); $('#GRAPHTRAV_graphFilterCombine_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].theTruth == <span class="hljs-literal">true</span>
         AND p.edges[<span class="hljs-number">1</span>].theFalse == <span class="hljs-literal">false</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key == <span class="hljs-string">&quot;G&quot;</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphFilterCombine


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphFilterEntirePath


<div class="example-container" id="GRAPHTRAV_graphFilterEntirePath_container">
<div id="GRAPHTRAV_graphFilterEntirePath_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[*].theTruth ALL == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;C&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blarg&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;C&quot;</span>,
      <span class="hljs-string">&quot;D&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blarg&quot;</span>,
      <span class="hljs-string">&quot;left_blorg&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;E&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;E&quot;</span>,
      <span class="hljs-string">&quot;F&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blub&quot;</span>,
      <span class="hljs-string">&quot;left_schubi&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>,
      <span class="hljs-string">&quot;I&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>,
      <span class="hljs-string">&quot;right_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>,
      <span class="hljs-string">&quot;K&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>,
      <span class="hljs-string">&quot;right_zup&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphFilterEntirePath_container_collapse" onclick="$('#GRAPHTRAV_graphFilterEntirePath_long').hide(); $('#GRAPHTRAV_graphFilterEntirePath_short').show(); window.location.hash='GRAPHTRAV_graphFilterEntirePath_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphFilterEntirePath_short" onclick="$('#GRAPHTRAV_graphFilterEntirePath_short').hide(); $('#GRAPHTRAV_graphFilterEntirePath_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[*].theTruth ALL == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphFilterEntirePath


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphFilterPathEdges


<div class="example-container" id="GRAPHTRAV_graphFilterPathEdges_container">
<div id="GRAPHTRAV_graphFilterPathEdges_long">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[*].theTruth NONE == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphFilterPathEdges


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_graphFilterPathAnyEdge


<div class="example-container" id="GRAPHTRAV_graphFilterPathAnyEdge_container">
<div id="GRAPHTRAV_graphFilterPathAnyEdge_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[*].theTruth ANY == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;C&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blarg&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;C&quot;</span>,
      <span class="hljs-string">&quot;D&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blarg&quot;</span>,
      <span class="hljs-string">&quot;left_blorg&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;E&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;B&quot;</span>,
      <span class="hljs-string">&quot;E&quot;</span>,
      <span class="hljs-string">&quot;F&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;left_bar&quot;</span>,
      <span class="hljs-string">&quot;left_blub&quot;</span>,
      <span class="hljs-string">&quot;left_schubi&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;H&quot;</span>,
      <span class="hljs-string">&quot;I&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_blob&quot;</span>,
      <span class="hljs-string">&quot;right_blub&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;vertices&quot;</span>: [
      <span class="hljs-string">&quot;A&quot;</span>,
      <span class="hljs-string">&quot;G&quot;</span>,
      <span class="hljs-string">&quot;J&quot;</span>,
      <span class="hljs-string">&quot;K&quot;</span>
    ],
    <span class="hljs-string">&quot;edges&quot;</span>: [
      <span class="hljs-string">&quot;right_foo&quot;</span>,
      <span class="hljs-string">&quot;right_zip&quot;</span>,
      <span class="hljs-string">&quot;right_zup&quot;</span>
    ]
  }
]</pre>
<div id="GRAPHTRAV_graphFilterPathAnyEdge_container_collapse" onclick="$('#GRAPHTRAV_graphFilterPathAnyEdge_long').hide(); $('#GRAPHTRAV_graphFilterPathAnyEdge_short').show(); window.location.hash='GRAPHTRAV_graphFilterPathAnyEdge_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_graphFilterPathAnyEdge_short" onclick="$('#GRAPHTRAV_graphFilterPathAnyEdge_short').hide(); $('#GRAPHTRAV_graphFilterPathAnyEdge_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.5</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[*].theTruth ANY == <span class="hljs-literal">true</span>
      RETURN { <span class="hljs-attr">vertices</span>: p.vertices[*]._key, <span class="hljs-attr">edges</span>: p.edges[*].label }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_graphFilterPathAnyEdge


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_01_create_graph


<div class="example-container" id="GRAPHTRAV_01_create_graph_container">
<div id="GRAPHTRAV_01_create_graph_long" style="display: none;">
<pre>
arangosh&gt; var examples = require(&quot;@arangodb/graph-examples/example-graph.js&quot;);
arangosh&gt; var graph = examples.loadGraph(&quot;traversalGraph&quot;);
arangosh&gt; db.circles.toArray();
[ 
  { 
    &quot;_key&quot; : &quot;A&quot;, 
    &quot;_id&quot; : &quot;circles/A&quot;, 
    &quot;_rev&quot; : &quot;_d7ykl92---&quot;, 
    &quot;label&quot; : &quot;1&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;B&quot;, 
    &quot;_id&quot; : &quot;circles/B&quot;, 
    &quot;_rev&quot; : &quot;_d7ykl96---&quot;, 
    &quot;label&quot; : &quot;2&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;C&quot;, 
    &quot;_id&quot; : &quot;circles/C&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-----&quot;, 
    &quot;label&quot; : &quot;3&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;D&quot;, 
    &quot;_id&quot; : &quot;circles/D&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-C---&quot;, 
    &quot;label&quot; : &quot;4&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;E&quot;, 
    &quot;_id&quot; : &quot;circles/E&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-G---&quot;, 
    &quot;label&quot; : &quot;5&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;F&quot;, 
    &quot;_id&quot; : &quot;circles/F&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-K---&quot;, 
    &quot;label&quot; : &quot;6&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;G&quot;, 
    &quot;_id&quot; : &quot;circles/G&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-K--A&quot;, 
    &quot;label&quot; : &quot;7&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;H&quot;, 
    &quot;_id&quot; : &quot;circles/H&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-O---&quot;, 
    &quot;label&quot; : &quot;8&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;I&quot;, 
    &quot;_id&quot; : &quot;circles/I&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-S---&quot;, 
    &quot;label&quot; : &quot;9&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;J&quot;, 
    &quot;_id&quot; : &quot;circles/J&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-S--A&quot;, 
    &quot;label&quot; : &quot;10&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;K&quot;, 
    &quot;_id&quot; : &quot;circles/K&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-W---&quot;, 
    &quot;label&quot; : &quot;11&quot; 
  } 
]
arangosh&gt; db.edges.toArray();
[ 
  { 
    &quot;_key&quot; : &quot;67126&quot;, 
    &quot;_id&quot; : &quot;edges/67126&quot;, 
    &quot;_from&quot; : &quot;circles/A&quot;, 
    &quot;_to&quot; : &quot;circles/B&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-a---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;left_bar&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67128&quot;, 
    &quot;_id&quot; : &quot;edges/67128&quot;, 
    &quot;_from&quot; : &quot;circles/B&quot;, 
    &quot;_to&quot; : &quot;circles/C&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-e---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;left_blarg&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67130&quot;, 
    &quot;_id&quot; : &quot;edges/67130&quot;, 
    &quot;_from&quot; : &quot;circles/C&quot;, 
    &quot;_to&quot; : &quot;circles/D&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-e--A&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;left_blorg&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67132&quot;, 
    &quot;_id&quot; : &quot;edges/67132&quot;, 
    &quot;_from&quot; : &quot;circles/B&quot;, 
    &quot;_to&quot; : &quot;circles/E&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-i---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;left_blub&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67134&quot;, 
    &quot;_id&quot; : &quot;edges/67134&quot;, 
    &quot;_from&quot; : &quot;circles/E&quot;, 
    &quot;_to&quot; : &quot;circles/F&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-m---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;left_schubi&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67136&quot;, 
    &quot;_id&quot; : &quot;edges/67136&quot;, 
    &quot;_from&quot; : &quot;circles/A&quot;, 
    &quot;_to&quot; : &quot;circles/G&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-q---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;right_foo&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67138&quot;, 
    &quot;_id&quot; : &quot;edges/67138&quot;, 
    &quot;_from&quot; : &quot;circles/G&quot;, 
    &quot;_to&quot; : &quot;circles/H&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-q--A&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;right_blob&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67140&quot;, 
    &quot;_id&quot; : &quot;edges/67140&quot;, 
    &quot;_from&quot; : &quot;circles/H&quot;, 
    &quot;_to&quot; : &quot;circles/I&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-u---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;right_blub&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67142&quot;, 
    &quot;_id&quot; : &quot;edges/67142&quot;, 
    &quot;_from&quot; : &quot;circles/G&quot;, 
    &quot;_to&quot; : &quot;circles/J&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-y---&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;right_zip&quot; 
  }, 
  { 
    &quot;_key&quot; : &quot;67144&quot;, 
    &quot;_id&quot; : &quot;edges/67144&quot;, 
    &quot;_from&quot; : &quot;circles/J&quot;, 
    &quot;_to&quot; : &quot;circles/K&quot;, 
    &quot;_rev&quot; : &quot;_d7ykm-y--A&quot;, 
    &quot;theFalse&quot; : false, 
    &quot;theTruth&quot; : true, 
    &quot;label&quot; : &quot;right_zup&quot; 
  } 
]
arangosh&gt; print(&quot;once you don&#x27;t need them anymore, clean them up:&quot;);
once you don&#x27;t need them anymore, clean them up:
arangosh&gt; examples.dropGraph(&quot;traversalGraph&quot;);
</pre>
<div id="GRAPHTRAV_01_create_graph_container_collapse" onclick="$('#GRAPHTRAV_01_create_graph_long').hide(); $('#GRAPHTRAV_01_create_graph_short').show(); window.location.hash='GRAPHTRAV_01_create_graph_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_01_create_graph_short" onclick="$('#GRAPHTRAV_01_create_graph_short').hide(); $('#GRAPHTRAV_01_create_graph_long').show();">
<pre>
arangosh&gt; var examples = require(&quot;@arangodb/graph-examples/example-graph.js&quot;);
arangosh&gt; var graph = examples.loadGraph(&quot;traversalGraph&quot;);
arangosh&gt; db.circles.toArray();
arangosh&gt; db.edges.toArray();
arangosh&gt; print(&quot;once you don&#x27;t need them anymore, clean them up:&quot;);
arangosh&gt; examples.dropGraph(&quot;traversalGraph&quot;);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_02_traverse_all_a


<div class="example-container" id="GRAPHTRAV_02_traverse_all_a_container">
<div id="GRAPHTRAV_02_traverse_all_a_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
    RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>,
  <span class="hljs-string">&quot;E&quot;</span>,
  <span class="hljs-string">&quot;F&quot;</span>,
  <span class="hljs-string">&quot;G&quot;</span>,
  <span class="hljs-string">&quot;H&quot;</span>,
  <span class="hljs-string">&quot;I&quot;</span>,
  <span class="hljs-string">&quot;J&quot;</span>,
  <span class="hljs-string">&quot;K&quot;</span>
]</pre>
<div id="GRAPHTRAV_02_traverse_all_a_container_collapse" onclick="$('#GRAPHTRAV_02_traverse_all_a_long').hide(); $('#GRAPHTRAV_02_traverse_all_a_short').show(); window.location.hash='GRAPHTRAV_02_traverse_all_a_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_02_traverse_all_a_short" onclick="$('#GRAPHTRAV_02_traverse_all_a_short').hide(); $('#GRAPHTRAV_02_traverse_all_a_long').show();">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
    RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_02_traverse_all_a


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_02_traverse_all_b


<div class="example-container" id="GRAPHTRAV_02_traverse_all_b_container">
<div id="GRAPHTRAV_02_traverse_all_b_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> edges RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>,
  <span class="hljs-string">&quot;E&quot;</span>,
  <span class="hljs-string">&quot;F&quot;</span>,
  <span class="hljs-string">&quot;G&quot;</span>,
  <span class="hljs-string">&quot;H&quot;</span>,
  <span class="hljs-string">&quot;I&quot;</span>,
  <span class="hljs-string">&quot;J&quot;</span>,
  <span class="hljs-string">&quot;K&quot;</span>
]</pre>
<div id="GRAPHTRAV_02_traverse_all_b_container_collapse" onclick="$('#GRAPHTRAV_02_traverse_all_b_long').hide(); $('#GRAPHTRAV_02_traverse_all_b_short').show(); window.location.hash='GRAPHTRAV_02_traverse_all_b_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_02_traverse_all_b_short" onclick="$('#GRAPHTRAV_02_traverse_all_b_short').hide(); $('#GRAPHTRAV_02_traverse_all_b_long').show();">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> edges RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_02_traverse_all_b


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_03_traverse_3a


<div class="example-container" id="GRAPHTRAV_03_traverse_3a_container">
<div id="GRAPHTRAV_03_traverse_3a_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">2.</span><span class="hljs-number">.2</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
    RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;E&quot;</span>,
  <span class="hljs-string">&quot;H&quot;</span>,
  <span class="hljs-string">&quot;J&quot;</span>
]</pre>
<div id="GRAPHTRAV_03_traverse_3a_container_collapse" onclick="$('#GRAPHTRAV_03_traverse_3a_long').hide(); $('#GRAPHTRAV_03_traverse_3a_short').show(); window.location.hash='GRAPHTRAV_03_traverse_3a_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_03_traverse_3a_short" onclick="$('#GRAPHTRAV_03_traverse_3a_short').hide(); $('#GRAPHTRAV_03_traverse_3a_long').show();">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">2.</span><span class="hljs-number">.2</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
    RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_03_traverse_3a


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_03_traverse_3b


<div class="example-container" id="GRAPHTRAV_03_traverse_3b_container">
<div id="GRAPHTRAV_03_traverse_3b_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">2</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
    RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;E&quot;</span>,
  <span class="hljs-string">&quot;H&quot;</span>,
  <span class="hljs-string">&quot;J&quot;</span>
]</pre>
<div id="GRAPHTRAV_03_traverse_3b_container_collapse" onclick="$('#GRAPHTRAV_03_traverse_3b_long').hide(); $('#GRAPHTRAV_03_traverse_3b_short').show(); window.location.hash='GRAPHTRAV_03_traverse_3b_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_03_traverse_3b_short" onclick="$('#GRAPHTRAV_03_traverse_3b_short').hide(); $('#GRAPHTRAV_03_traverse_3b_long').show();">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">2</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
    RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_03_traverse_3b


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_04_traverse_4a


<div class="example-container" id="GRAPHTRAV_04_traverse_4a_container">
<div id="GRAPHTRAV_04_traverse_4a_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key != <span class="hljs-string">&#x27;G&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>,
  <span class="hljs-string">&quot;E&quot;</span>,
  <span class="hljs-string">&quot;F&quot;</span>
]</pre>
<div id="GRAPHTRAV_04_traverse_4a_container_collapse" onclick="$('#GRAPHTRAV_04_traverse_4a_long').hide(); $('#GRAPHTRAV_04_traverse_4a_short').show(); window.location.hash='GRAPHTRAV_04_traverse_4a_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_04_traverse_4a_short" onclick="$('#GRAPHTRAV_04_traverse_4a_short').hide(); $('#GRAPHTRAV_04_traverse_4a_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key != <span class="hljs-string">&#x27;G&#x27;</span>
      RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_04_traverse_4a


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_04_traverse_4b


<div class="example-container" id="GRAPHTRAV_04_traverse_4b_container">
<div id="GRAPHTRAV_04_traverse_4b_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].label != <span class="hljs-string">&#x27;right_foo&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>,
  <span class="hljs-string">&quot;E&quot;</span>,
  <span class="hljs-string">&quot;F&quot;</span>
]</pre>
<div id="GRAPHTRAV_04_traverse_4b_container_collapse" onclick="$('#GRAPHTRAV_04_traverse_4b_long').hide(); $('#GRAPHTRAV_04_traverse_4b_short').show(); window.location.hash='GRAPHTRAV_04_traverse_4b_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_04_traverse_4b_short" onclick="$('#GRAPHTRAV_04_traverse_4b_short').hide(); $('#GRAPHTRAV_04_traverse_4b_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].label != <span class="hljs-string">&#x27;right_foo&#x27;</span>
      RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_04_traverse_4b


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_05_traverse_5a


<div class="example-container" id="GRAPHTRAV_05_traverse_5a_container">
<div id="GRAPHTRAV_05_traverse_5a_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key != <span class="hljs-string">&#x27;G&#x27;</span>
      FILTER p.edges[<span class="hljs-number">1</span>].label != <span class="hljs-string">&#x27;left_blub&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>
]</pre>
<div id="GRAPHTRAV_05_traverse_5a_container_collapse" onclick="$('#GRAPHTRAV_05_traverse_5a_long').hide(); $('#GRAPHTRAV_05_traverse_5a_short').show(); window.location.hash='GRAPHTRAV_05_traverse_5a_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_05_traverse_5a_short" onclick="$('#GRAPHTRAV_05_traverse_5a_short').hide(); $('#GRAPHTRAV_05_traverse_5a_long').show();">
<strong>Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key != <span class="hljs-string">&#x27;G&#x27;</span>
      FILTER p.edges[<span class="hljs-number">1</span>].label != <span class="hljs-string">&#x27;left_blub&#x27;</span>
      RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_05_traverse_5a


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_05_traverse_5b


<div class="example-container" id="GRAPHTRAV_05_traverse_5b_container">
<div id="GRAPHTRAV_05_traverse_5b_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key != <span class="hljs-string">&#x27;G&#x27;</span> AND p.edges[<span class="hljs-number">1</span>].label != <span class="hljs-string">&#x27;left_blub&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>
]</pre>
<div id="GRAPHTRAV_05_traverse_5b_container_collapse" onclick="$('#GRAPHTRAV_05_traverse_5b_long').hide(); $('#GRAPHTRAV_05_traverse_5b_short').show(); window.location.hash='GRAPHTRAV_05_traverse_5b_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_05_traverse_5b_short" onclick="$('#GRAPHTRAV_05_traverse_5b_short').hide(); $('#GRAPHTRAV_05_traverse_5b_long').show();">
<strong>Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.vertices[<span class="hljs-number">1</span>]._key != <span class="hljs-string">&#x27;G&#x27;</span> AND p.edges[<span class="hljs-number">1</span>].label != <span class="hljs-string">&#x27;left_blub&#x27;</span>
      RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_05_traverse_5b


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_06_traverse_6a


<div class="example-container" id="GRAPHTRAV_06_traverse_6a_container">
<div id="GRAPHTRAV_06_traverse_6a_long">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/E&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;F&quot;</span>
]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_06_traverse_6a


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_06_traverse_6b


<div class="example-container" id="GRAPHTRAV_06_traverse_6b_container">
<div id="GRAPHTRAV_06_traverse_6b_long">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> INBOUND <span class="hljs-string">&#x27;circles/E&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;A&quot;</span>
]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_06_traverse_6b


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_06_traverse_6c


<div class="example-container" id="GRAPHTRAV_06_traverse_6c_container">
<div id="GRAPHTRAV_06_traverse_6c_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> ANY <span class="hljs-string">&#x27;circles/E&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      RETURN v._key

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;F&quot;</span>,
  <span class="hljs-string">&quot;B&quot;</span>,
  <span class="hljs-string">&quot;C&quot;</span>,
  <span class="hljs-string">&quot;D&quot;</span>,
  <span class="hljs-string">&quot;A&quot;</span>,
  <span class="hljs-string">&quot;G&quot;</span>
]</pre>
<div id="GRAPHTRAV_06_traverse_6c_container_collapse" onclick="$('#GRAPHTRAV_06_traverse_6c_long').hide(); $('#GRAPHTRAV_06_traverse_6c_short').show(); window.location.hash='GRAPHTRAV_06_traverse_6c_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHTRAV_06_traverse_6c_short" onclick="$('#GRAPHTRAV_06_traverse_6c_short').hide(); $('#GRAPHTRAV_06_traverse_6c_long').show();">
<strong>Query:</strong>
<pre>
  FOR v IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> ANY <span class="hljs-string">&#x27;circles/E&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      RETURN v._key

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_06_traverse_6c


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_07_traverse_7


<div class="example-container" id="GRAPHTRAV_07_traverse_7_container">
<div id="GRAPHTRAV_07_traverse_7_long" style="display: none;">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      LET localScopeVar = RAND() &gt; <span class="hljs-number">0.5</span>
      FILTER p.edges[<span class="hljs-number">0</span>].theTruth != localScopeVar
      RETURN v._key

</pre>
<strong>Explain output:</strong>
<pre>
Query String (173 chars, cacheable: false):
   FOR v,e,p IN 1..3 OUTBOUND &#x27;circles/A&#x27; GRAPH &#x27;traversalGraph&#x27;
       LET localScopeVar = RAND() &gt; 0.5
       FILTER p.edges[0].theTruth != localScopeVar
       RETURN v._key
 

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  2   TraversalNode        1     - FOR v  /* vertex */, p  /* paths */ IN 1..3  /* min..maxPathDepth */ OUTBOUND &#x27;circles/A&#x27; /* startnode */  GRAPH &#x27;traversalGraph&#x27;
  3   CalculationNode      1       - LET localScopeVar = (RAND() &gt; 0.5)   /* simple expression */
  4   CalculationNode      1       - LET #6 = (p.`edges`[0].`theTruth` != localScopeVar)   /* simple expression */
  5   FilterNode           1       - FILTER #6
  6   CalculationNode      1       - LET #8 = v.`_key`   /* attribute expression */
  7   ReturnNode           1       - RETURN #8

Indexes used:
 By   Name   Type   Collection   Unique   Sparse   Selectivity   Fields        Ranges
  2   edge   edge   edges        false    false       100.00 %   [ `_from` ]   base OUTBOUND

Functions used:
 Name   Deterministic   Cacheable   Uses V8
 RAND   false           false       false  

Traversals on graphs:
 Id  Depth  Vertex collections  Edge collections  Options                                  Filter / Prune Conditions
 2   1..3   circles             edges             uniqueVertices: none, uniqueEdges: path                           

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   optimize-traversals
  3   move-calculations-down

</pre>
<div id="GRAPHTRAV_07_traverse_7_container_collapse" onclick="$('#GRAPHTRAV_07_traverse_7_long').hide(); $('#GRAPHTRAV_07_traverse_7_short').show(); window.location.hash='GRAPHTRAV_07_traverse_7_container';" class="example_show_button">Hide explain output</div></div>
<div id="GRAPHTRAV_07_traverse_7_short" onclick="$('#GRAPHTRAV_07_traverse_7_short').hide(); $('#GRAPHTRAV_07_traverse_7_long').show();">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      LET localScopeVar = RAND() &gt; <span class="hljs-number">0.5</span>
      FILTER p.edges[<span class="hljs-number">0</span>].theTruth != localScopeVar
      RETURN v._key

</pre><div class="example_show_button">Show explain output</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_07_traverse_7


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_07_traverse_8


<div class="example-container" id="GRAPHTRAV_07_traverse_8_container">
<div id="GRAPHTRAV_07_traverse_8_long" style="display: none;">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].label == <span class="hljs-string">&#x27;right_foo&#x27;</span>
      RETURN v._key

</pre>
<strong>Explain output:</strong>
<pre>
Query String (129 chars, cacheable: true):
   FOR v,e,p IN 1..3 OUTBOUND &#x27;circles/A&#x27; GRAPH &#x27;traversalGraph&#x27;
       FILTER p.edges[0].label == &#x27;right_foo&#x27;
       RETURN v._key
 

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  2   TraversalNode        1     - FOR v  /* vertex */ IN 1..3  /* min..maxPathDepth */ OUTBOUND &#x27;circles/A&#x27; /* startnode */  GRAPH &#x27;traversalGraph&#x27;
  5   CalculationNode      1       - LET #7 = v.`_key`   /* attribute expression */
  6   ReturnNode           1       - RETURN #7

Indexes used:
 By   Name   Type   Collection   Unique   Sparse   Selectivity   Fields        Ranges
  2   edge   edge   edges        false    false       100.00 %   [ `_from` ]   base OUTBOUND
  2   edge   edge   edges        false    false       100.00 %   [ `_from` ]   level 0 OUTBOUND

Traversals on graphs:
 Id  Depth  Vertex collections  Edge collections  Options                                  Filter / Prune Conditions                   
 2   1..3   circles             edges             uniqueVertices: none, uniqueEdges: path  FILTER (p.`edges`[0].`label` == &quot;right_foo&quot;)

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   move-filters-up
  3   move-calculations-up-2
  4   move-filters-up-2
  5   optimize-traversals
  6   remove-filter-covered-by-traversal
  7   remove-unnecessary-calculations-2
  8   remove-redundant-path-var

</pre>
<div id="GRAPHTRAV_07_traverse_8_container_collapse" onclick="$('#GRAPHTRAV_07_traverse_8_long').hide(); $('#GRAPHTRAV_07_traverse_8_short').show(); window.location.hash='GRAPHTRAV_07_traverse_8_container';" class="example_show_button">Hide explain output</div></div>
<div id="GRAPHTRAV_07_traverse_8_short" onclick="$('#GRAPHTRAV_07_traverse_8_short').hide(); $('#GRAPHTRAV_07_traverse_8_long').show();">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;circles/A&#x27;</span> GRAPH <span class="hljs-string">&#x27;traversalGraph&#x27;</span>
      FILTER p.edges[<span class="hljs-number">0</span>].label == <span class="hljs-string">&#x27;right_foo&#x27;</span>
      RETURN v._key

</pre><div class="example_show_button">Show explain output</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_07_traverse_8


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_99_drop_graph


<div class="example-container" id="GRAPHTRAV_99_drop_graph_container">
<div id="GRAPHTRAV_99_drop_graph_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;traversalGraph&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_99_drop_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_1


<div class="example-container" id="FUNCTION_DOCUMENT_1_container">
<div id="FUNCTION_DOCUMENT_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, <span class="hljs-string">&quot;persons/alice&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklVG---&quot;</span>,
    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
  }
]</pre>
<div id="FUNCTION_DOCUMENT_1_container_collapse" onclick="$('#FUNCTION_DOCUMENT_1_long').hide(); $('#FUNCTION_DOCUMENT_1_short').show(); window.location.hash='FUNCTION_DOCUMENT_1_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_1_short" onclick="$('#FUNCTION_DOCUMENT_1_short').hide(); $('#FUNCTION_DOCUMENT_1_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, <span class="hljs-string">&quot;persons/alice&quot;</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_2


<div class="example-container" id="FUNCTION_DOCUMENT_2_container">
<div id="FUNCTION_DOCUMENT_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, <span class="hljs-string">&quot;alice&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklZi---&quot;</span>,
    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
  }
]</pre>
<div id="FUNCTION_DOCUMENT_2_container_collapse" onclick="$('#FUNCTION_DOCUMENT_2_long').hide(); $('#FUNCTION_DOCUMENT_2_short').show(); window.location.hash='FUNCTION_DOCUMENT_2_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_2_short" onclick="$('#FUNCTION_DOCUMENT_2_short').hide(); $('#FUNCTION_DOCUMENT_2_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, <span class="hljs-string">&quot;alice&quot;</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_3


<div class="example-container" id="FUNCTION_DOCUMENT_3_container">
<div id="FUNCTION_DOCUMENT_3_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, [ <span class="hljs-string">&quot;persons/alice&quot;</span>, <span class="hljs-string">&quot;persons/bob&quot;</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7ykla6---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
    },
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/bob&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7ykla6--A&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Bob&quot;</span>
    }
  ]
]</pre>
<div id="FUNCTION_DOCUMENT_3_container_collapse" onclick="$('#FUNCTION_DOCUMENT_3_long').hide(); $('#FUNCTION_DOCUMENT_3_short').show(); window.location.hash='FUNCTION_DOCUMENT_3_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_3_short" onclick="$('#FUNCTION_DOCUMENT_3_short').hide(); $('#FUNCTION_DOCUMENT_3_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, [ <span class="hljs-string">&quot;persons/alice&quot;</span>, <span class="hljs-string">&quot;persons/bob&quot;</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_4


<div class="example-container" id="FUNCTION_DOCUMENT_4_container">
<div id="FUNCTION_DOCUMENT_4_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, [ <span class="hljs-string">&quot;alice&quot;</span>, <span class="hljs-string">&quot;bob&quot;</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklcS---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
    },
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/bob&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklcS--A&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Bob&quot;</span>
    }
  ]
]</pre>
<div id="FUNCTION_DOCUMENT_4_container_collapse" onclick="$('#FUNCTION_DOCUMENT_4_long').hide(); $('#FUNCTION_DOCUMENT_4_short').show(); window.location.hash='FUNCTION_DOCUMENT_4_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_4_short" onclick="$('#FUNCTION_DOCUMENT_4_short').hide(); $('#FUNCTION_DOCUMENT_4_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( persons, [ <span class="hljs-string">&quot;alice&quot;</span>, <span class="hljs-string">&quot;bob&quot;</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_5


<div class="example-container" id="FUNCTION_DOCUMENT_5_container">
<div id="FUNCTION_DOCUMENT_5_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( @@coll, @key ) 
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;@coll&quot;</span>: <span class="hljs-string">&quot;persons&quot;</span>,
  <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7ykldq---&quot;</span>,
    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
  }
]</pre>
<div id="FUNCTION_DOCUMENT_5_container_collapse" onclick="$('#FUNCTION_DOCUMENT_5_long').hide(); $('#FUNCTION_DOCUMENT_5_short').show(); window.location.hash='FUNCTION_DOCUMENT_5_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_5_short" onclick="$('#FUNCTION_DOCUMENT_5_short').hide(); $('#FUNCTION_DOCUMENT_5_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( @@coll, @key ) 
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;@coll&quot;</span>: <span class="hljs-string">&quot;persons&quot;</span>,
  <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_6


<div class="example-container" id="FUNCTION_DOCUMENT_6_container">
<div id="FUNCTION_DOCUMENT_6_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( @@coll, @keys )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;@coll&quot;</span>: <span class="hljs-string">&quot;persons&quot;</span>,
  <span class="hljs-string">&quot;keys&quot;</span>: [
    <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;bob&quot;</span>
  ]
}
</pre>
<strong>Query results:</strong>
<pre>
[
  [
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklfK---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
    },
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/bob&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklfO---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Bob&quot;</span>
    }
  ]
]</pre>
<div id="FUNCTION_DOCUMENT_6_container_collapse" onclick="$('#FUNCTION_DOCUMENT_6_long').hide(); $('#FUNCTION_DOCUMENT_6_short').show(); window.location.hash='FUNCTION_DOCUMENT_6_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_6_short" onclick="$('#FUNCTION_DOCUMENT_6_short').hide(); $('#FUNCTION_DOCUMENT_6_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( @@coll, @keys )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;@coll&quot;</span>: <span class="hljs-string">&quot;persons&quot;</span>,
  <span class="hljs-string">&quot;keys&quot;</span>: [
    <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;bob&quot;</span>
  ]
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_6


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_7


<div class="example-container" id="FUNCTION_DOCUMENT_7_container">
<div id="FUNCTION_DOCUMENT_7_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT(<span class="hljs-string">&quot;persons/alice&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklgy---&quot;</span>,
    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
  }
]</pre>
<div id="FUNCTION_DOCUMENT_7_container_collapse" onclick="$('#FUNCTION_DOCUMENT_7_long').hide(); $('#FUNCTION_DOCUMENT_7_short').show(); window.location.hash='FUNCTION_DOCUMENT_7_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_7_short" onclick="$('#FUNCTION_DOCUMENT_7_short').hide(); $('#FUNCTION_DOCUMENT_7_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT(<span class="hljs-string">&quot;persons/alice&quot;</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_7


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_8


<div class="example-container" id="FUNCTION_DOCUMENT_8_container">
<div id="FUNCTION_DOCUMENT_8_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( [ <span class="hljs-string">&quot;persons/alice&quot;</span>, <span class="hljs-string">&quot;persons/bob&quot;</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7ykliO---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
    },
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/bob&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7ykliS---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Bob&quot;</span>
    }
  ]
]</pre>
<div id="FUNCTION_DOCUMENT_8_container_collapse" onclick="$('#FUNCTION_DOCUMENT_8_long').hide(); $('#FUNCTION_DOCUMENT_8_short').show(); window.location.hash='FUNCTION_DOCUMENT_8_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_8_short" onclick="$('#FUNCTION_DOCUMENT_8_short').hide(); $('#FUNCTION_DOCUMENT_8_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( [ <span class="hljs-string">&quot;persons/alice&quot;</span>, <span class="hljs-string">&quot;persons/bob&quot;</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_8


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_9


<div class="example-container" id="FUNCTION_DOCUMENT_9_container">
<div id="FUNCTION_DOCUMENT_9_long" style="display: none;">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( @key )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7ykljy---&quot;</span>,
    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
  }
]</pre>
<div id="FUNCTION_DOCUMENT_9_container_collapse" onclick="$('#FUNCTION_DOCUMENT_9_long').hide(); $('#FUNCTION_DOCUMENT_9_short').show(); window.location.hash='FUNCTION_DOCUMENT_9_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_9_short" onclick="$('#FUNCTION_DOCUMENT_9_short').hide(); $('#FUNCTION_DOCUMENT_9_long').show();">
<strong>Query:</strong>
<pre>
  RETURN DOCUMENT( @key )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_9


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_10


<div class="example-container" id="FUNCTION_DOCUMENT_10_container">
<div id="FUNCTION_DOCUMENT_10_long" style="display: none;">
<strong>Query:</strong>
<pre>
   RETURN DOCUMENT( @keys )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;keys&quot;</span>: [
    <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;persons/bob&quot;</span>
  ]
}
</pre>
<strong>Query results:</strong>
<pre>
[
  [
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;alice&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/alice&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklWm---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Alice&quot;</span>
    },
    {
      <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>,
      <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/bob&quot;</span>,
      <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklWq---&quot;</span>,
      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Bob&quot;</span>
    }
  ]
]</pre>
<div id="FUNCTION_DOCUMENT_10_container_collapse" onclick="$('#FUNCTION_DOCUMENT_10_long').hide(); $('#FUNCTION_DOCUMENT_10_short').show(); window.location.hash='FUNCTION_DOCUMENT_10_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_10_short" onclick="$('#FUNCTION_DOCUMENT_10_short').hide(); $('#FUNCTION_DOCUMENT_10_long').show();">
<strong>Query:</strong>
<pre>
   RETURN DOCUMENT( @keys )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;keys&quot;</span>: [
    <span class="hljs-string">&quot;persons/alice&quot;</span>,
    <span class="hljs-string">&quot;persons/bob&quot;</span>
  ]
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_10


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
  @startDocuBlockInline FUNCTION_DOCUMENT_11


<div class="example-container" id="FUNCTION_DOCUMENT_11_container">
<div id="FUNCTION_DOCUMENT_11_long" style="display: none;">
<strong>Query:</strong>
<pre>
   RETURN DOCUMENT( CONCAT(<span class="hljs-string">&quot;persons/&quot;</span>, @key) )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;_key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>,
    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;persons/bob&quot;</span>,
    <span class="hljs-string">&quot;_rev&quot;</span>: <span class="hljs-string">&quot;_d7yklYK--A&quot;</span>,
    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Bob&quot;</span>
  }
]</pre>
<div id="FUNCTION_DOCUMENT_11_container_collapse" onclick="$('#FUNCTION_DOCUMENT_11_long').hide(); $('#FUNCTION_DOCUMENT_11_short').show(); window.location.hash='FUNCTION_DOCUMENT_11_container';" class="example_show_button">Hide query result</div></div>
<div id="FUNCTION_DOCUMENT_11_short" onclick="$('#FUNCTION_DOCUMENT_11_short').hide(); $('#FUNCTION_DOCUMENT_11_long').show();">
<strong>Query:</strong>
<pre>
   RETURN DOCUMENT( CONCAT(<span class="hljs-string">&quot;persons/&quot;</span>, @key) )
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;bob&quot;</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

  @endDocuBlock FUNCTION_DOCUMENT_11


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
    @startDocuBlockInline aqlMiscInRange_1


<div class="example-container" id="aqlMiscInRange_1_container">
<div id="aqlMiscInRange_1_long">
<strong>Query:</strong>
<pre>
  LET value = <span class="hljs-number">4</span>
  RETURN IN_RANGE(value, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>)
  <span class="hljs-comment">/* same as:
     RETURN value &gt;= 3 AND value &lt;= 5
  */</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">true</span>
]</pre>
</div>
</div>

    @endDocuBlock aqlMiscInRange_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
    @startDocuBlockInline aqlMiscInRange_2


<div class="example-container" id="aqlMiscInRange_2_container">
<div id="aqlMiscInRange_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR value IN <span class="hljs-number">2.</span><span class="hljs-number">.6</span>
    RETURN { value, <span class="hljs-attr">in_range</span>: IN_RANGE(value, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>) }
    <span class="hljs-comment">/* same as:
       RETURN { value, in_range: value &gt; 3 AND value &lt;= 5 }
    */</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;in_range&quot;</span>: <span class="hljs-literal">false</span>
  },
  {
    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">3</span>,
    <span class="hljs-string">&quot;in_range&quot;</span>: <span class="hljs-literal">false</span>
  },
  {
    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">4</span>,
    <span class="hljs-string">&quot;in_range&quot;</span>: <span class="hljs-literal">true</span>
  },
  {
    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">5</span>,
    <span class="hljs-string">&quot;in_range&quot;</span>: <span class="hljs-literal">true</span>
  },
  {
    <span class="hljs-string">&quot;value&quot;</span>: <span class="hljs-number">6</span>,
    <span class="hljs-string">&quot;in_range&quot;</span>: <span class="hljs-literal">false</span>
  }
]</pre>
<div id="aqlMiscInRange_2_container_collapse" onclick="$('#aqlMiscInRange_2_long').hide(); $('#aqlMiscInRange_2_short').show(); window.location.hash='aqlMiscInRange_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlMiscInRange_2_short" onclick="$('#aqlMiscInRange_2_short').hide(); $('#aqlMiscInRange_2_long').show();">
<strong>Query:</strong>
<pre>
  FOR value IN <span class="hljs-number">2.</span><span class="hljs-number">.6</span>
    RETURN { value, <span class="hljs-attr">in_range</span>: IN_RANGE(value, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>) }
    <span class="hljs-comment">/* same as:
       RETURN { value, in_range: value &gt; 3 AND value &lt;= 5 }
    */</span>

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock aqlMiscInRange_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-miscellaneous.md -->
    @startDocuBlockInline aqlMiscInRange_3


<div class="example-container" id="aqlMiscInRange_3_container">
<div id="aqlMiscInRange_3_long" style="display: none;">
<strong>Query:</strong>
<pre>
  LET coll = [
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;fennel&quot;</span> },
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;fox grape&quot;</span> },
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;forest strawberry&quot;</span> },
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;fungus&quot;</span> }
  ]
  FOR doc IN coll
    FILTER IN_RANGE(doc.text,<span class="hljs-string">&quot;fo&quot;</span>, <span class="hljs-string">&quot;fp&quot;</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">false</span>) <span class="hljs-comment">// values with prefix &quot;fo&quot;</span>
    <span class="hljs-comment">/* same as:
       FILTER doc.text &gt;= &quot;fo&quot; AND doc.text &lt; &quot;fp&quot;
    */</span>
    RETURN doc

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;fox grape&quot;</span>
  },
  {
    <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;forest strawberry&quot;</span>
  }
]</pre>
<div id="aqlMiscInRange_3_container_collapse" onclick="$('#aqlMiscInRange_3_long').hide(); $('#aqlMiscInRange_3_short').show(); window.location.hash='aqlMiscInRange_3_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlMiscInRange_3_short" onclick="$('#aqlMiscInRange_3_short').hide(); $('#aqlMiscInRange_3_long').show();">
<strong>Query:</strong>
<pre>
  LET coll = [
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;fennel&quot;</span> },
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;fox grape&quot;</span> },
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;forest strawberry&quot;</span> },
    { <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;fungus&quot;</span> }
  ]
  FOR doc IN coll
    FILTER IN_RANGE(doc.text,<span class="hljs-string">&quot;fo&quot;</span>, <span class="hljs-string">&quot;fp&quot;</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">false</span>) <span class="hljs-comment">// values with prefix &quot;fo&quot;</span>
    <span class="hljs-comment">/* same as:
       FILTER doc.text &gt;= &quot;fo&quot; AND doc.text &lt; &quot;fp&quot;
    */</span>
    RETURN doc

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock aqlMiscInRange_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 01_workWithAQL_databaseExplain


<div class="example-container" id="01_workWithAQL_databaseExplain_container">
<div id="01_workWithAQL_databaseExplain_long" style="display: none;">
<pre>
arangosh&gt; db._explain(&quot;LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1&quot;, {}, {colors: false});
Query String (47 chars, cacheable: false):
 LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  4   CalculationNode      1     - LET #2 = 1   /* json expression */   /* const assignment */
  2   CalculationNode      1     - LET s = SLEEP(0.25)   /* simple expression */
  3   CalculationNode      1     - LET t = SLEEP(0.5)   /* simple expression */
  5   ReturnNode           1     - RETURN #2

Indexes used:
 none

Functions used:
 Name    Deterministic   Cacheable   Uses V8
 SLEEP   false           false       false  

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up


</pre>
<div id="01_workWithAQL_databaseExplain_container_collapse" onclick="$('#01_workWithAQL_databaseExplain_long').hide(); $('#01_workWithAQL_databaseExplain_short').show(); window.location.hash='01_workWithAQL_databaseExplain_container';" class="example_show_button">Hide execution results</div></div>
<div id="01_workWithAQL_databaseExplain_short" onclick="$('#01_workWithAQL_databaseExplain_short').hide(); $('#01_workWithAQL_databaseExplain_long').show();">
<pre>
arangosh&gt; db._explain(&quot;LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1&quot;, {}, {colors: false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 01_workWithAQL_databaseExplain


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 01_workWithAQL_databaseProfileQuery


<div class="example-container" id="01_workWithAQL_databaseProfileQuery_container">
<div id="01_workWithAQL_databaseProfileQuery_long" style="display: none;">
<pre>
arangosh&gt; db._profileQuery(&quot;LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1&quot;, {}, {colors: false});
Query String (47 chars, cacheable: false):
 LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1

Execution plan:
 Id   NodeType          Calls   Items   Runtime [s]   Comment
  1   SingletonNode         1       1       0.00001   * ROOT
  4   CalculationNode       1       1       0.00001     - LET #2 = 1   /* json expression */   /* const assignment */
  2   CalculationNode       1       1       0.25220     - LET s = SLEEP(0.25)   /* simple expression */
  3   CalculationNode       1       1       0.50437     - LET t = SLEEP(0.5)   /* simple expression */
  5   ReturnNode            1       1       0.00001     - RETURN #2

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up

Query Statistics:
 Writes Exec   Writes Ign   Scan Full   Scan Index   Filtered   Exec Time [s]
           0            0           0            0          0         0.75695

Query Profile:
 Query Stage           Duration [s]
 initializing               0.00000
 parsing                    0.00004
 optimizing ast             0.00001
 loading collections        0.00000
 instantiating plan         0.00002
 optimizing plan            0.00012
 executing                  0.75662
 finalizing                 0.00013


</pre>
<div id="01_workWithAQL_databaseProfileQuery_container_collapse" onclick="$('#01_workWithAQL_databaseProfileQuery_long').hide(); $('#01_workWithAQL_databaseProfileQuery_short').show(); window.location.hash='01_workWithAQL_databaseProfileQuery_container';" class="example_show_button">Hide execution results</div></div>
<div id="01_workWithAQL_databaseProfileQuery_short" onclick="$('#01_workWithAQL_databaseProfileQuery_short').hide(); $('#01_workWithAQL_databaseProfileQuery_long').show();">
<pre>
arangosh&gt; db._profileQuery(&quot;LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1&quot;, {}, {colors: false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 01_workWithAQL_databaseProfileQuery


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 07_workWithAQL_statementsExplain


<div class="example-container" id="07_workWithAQL_statementsExplain_container">
<div id="07_workWithAQL_statementsExplain_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">&quot;FOR user IN _users RETURN user&quot;</span>);
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateCollectionNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;random&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexHint&quot;</span> : { 
          <span class="hljs-string">&quot;forced&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">4</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="07_workWithAQL_statementsExplain_container_collapse" onclick="$('#07_workWithAQL_statementsExplain_long').hide(); $('#07_workWithAQL_statementsExplain_short').show(); window.location.hash='07_workWithAQL_statementsExplain_container';" class="example_show_button">Hide execution results</div></div>
<div id="07_workWithAQL_statementsExplain_short" onclick="$('#07_workWithAQL_statementsExplain_short').hide(); $('#07_workWithAQL_statementsExplain_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">&quot;FOR user IN _users RETURN user&quot;</span>);
arangosh&gt; stmt.explain();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 07_workWithAQL_statementsExplain


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 08_workWithAQL_statementsPlans


<div class="example-container" id="08_workWithAQL_statementsPlans_container">
<div id="08_workWithAQL_statementsPlans_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> formatPlan = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">plan</span>) </span>{
........&gt;    <span class="hljs-keyword">return</span> { <span class="hljs-attr">estimatedCost</span>: plan.estimatedCost,
........&gt;        nodes: plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>) </span>{
........&gt; <span class="hljs-keyword">return</span> node.type; }) }; };
arangosh&gt; formatPlan(stmt.explain().plan);
{ 
  <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;nodes&quot;</span> : [ 
    <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
    <span class="hljs-string">&quot;EnumerateCollectionNode&quot;</span>, 
    <span class="hljs-string">&quot;ReturnNode&quot;</span> 
  ] 
}
</pre>
<div id="08_workWithAQL_statementsPlans_container_collapse" onclick="$('#08_workWithAQL_statementsPlans_long').hide(); $('#08_workWithAQL_statementsPlans_short').show(); window.location.hash='08_workWithAQL_statementsPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="08_workWithAQL_statementsPlans_short" onclick="$('#08_workWithAQL_statementsPlans_short').hide(); $('#08_workWithAQL_statementsPlans_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> formatPlan = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">plan</span>) </span>{
........&gt;    <span class="hljs-keyword">return</span> { <span class="hljs-attr">estimatedCost</span>: plan.estimatedCost,
........&gt;        nodes: plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>) </span>{
........&gt; <span class="hljs-keyword">return</span> node.type; }) }; };
arangosh&gt; formatPlan(stmt.explain().plan);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 08_workWithAQL_statementsPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 09_workWithAQL_statementsPlansBind


<div class="example-container" id="09_workWithAQL_statementsPlansBind_container">
<div id="09_workWithAQL_statementsPlansBind_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">`FOR doc IN @@collection FILTER doc.user == @user RETURN doc`</span>
........&gt; );
arangosh&gt; stmt.bind({ <span class="hljs-string">&quot;@collection&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span> });
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">2.04475</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
        <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexes&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;46&quot;</span>, 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769166160166912&quot;</span>, 
            <span class="hljs-string">&quot;fields&quot;</span> : [ 
              <span class="hljs-string">&quot;user&quot;</span> 
            ], 
            <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;condition&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
                  <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
                      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                        { 
                          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
                          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
                      <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;string&quot;</span>, 
                      <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">4</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3.04475</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;use-indexes&quot;</span>, 
      <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3.04475</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="09_workWithAQL_statementsPlansBind_container_collapse" onclick="$('#09_workWithAQL_statementsPlansBind_long').hide(); $('#09_workWithAQL_statementsPlansBind_short').show(); window.location.hash='09_workWithAQL_statementsPlansBind_container';" class="example_show_button">Hide execution results</div></div>
<div id="09_workWithAQL_statementsPlansBind_short" onclick="$('#09_workWithAQL_statementsPlansBind_short').hide(); $('#09_workWithAQL_statementsPlansBind_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">`FOR doc IN @@collection FILTER doc.user == @user RETURN doc`</span>
........&gt; );
arangosh&gt; stmt.bind({ <span class="hljs-string">&quot;@collection&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span> });
arangosh&gt; stmt.explain();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 09_workWithAQL_statementsPlansBind


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer0


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer0_container">
<div id="10_workWithAQL_statementsPlansOptimizer0_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">&quot;FOR user IN _users FILTER user.user == &#x27;root&#x27; RETURN user&quot;</span>);
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> }).plans.length;
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer0


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer1


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer1_container">
<div id="10_workWithAQL_statementsPlansOptimizer1_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> }).plans.map(
........&gt; <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">plan</span>) </span>{ <span class="hljs-keyword">return</span> formatPlan(plan); });
[ 
  { 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3.04475</span>, 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
      <span class="hljs-string">&quot;IndexNode&quot;</span>, 
      <span class="hljs-string">&quot;ReturnNode&quot;</span> 
    ] 
  } 
]
</pre>
<div id="10_workWithAQL_statementsPlansOptimizer1_container_collapse" onclick="$('#10_workWithAQL_statementsPlansOptimizer1_long').hide(); $('#10_workWithAQL_statementsPlansOptimizer1_short').show(); window.location.hash='10_workWithAQL_statementsPlansOptimizer1_container';" class="example_show_button">Hide execution results</div></div>
<div id="10_workWithAQL_statementsPlansOptimizer1_short" onclick="$('#10_workWithAQL_statementsPlansOptimizer1_short').hide(); $('#10_workWithAQL_statementsPlansOptimizer1_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> }).plans.map(
........&gt; <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">plan</span>) </span>{ <span class="hljs-keyword">return</span> formatPlan(plan); });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer2


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer2_container">
<div id="10_workWithAQL_statementsPlansOptimizer2_long" style="display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: {
........&gt; rules: [ <span class="hljs-string">&quot;-all&quot;</span>, <span class="hljs-string">&quot;+remove-redundant-calculations&quot;</span> ] } });
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateCollectionNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;random&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexHint&quot;</span> : { 
          <span class="hljs-string">&quot;forced&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
          <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
                  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;string&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">4</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;FilterNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        } 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">6</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">38</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="10_workWithAQL_statementsPlansOptimizer2_container_collapse" onclick="$('#10_workWithAQL_statementsPlansOptimizer2_long').hide(); $('#10_workWithAQL_statementsPlansOptimizer2_short').show(); window.location.hash='10_workWithAQL_statementsPlansOptimizer2_container';" class="example_show_button">Hide execution results</div></div>
<div id="10_workWithAQL_statementsPlansOptimizer2_short" onclick="$('#10_workWithAQL_statementsPlansOptimizer2_short').hide(); $('#10_workWithAQL_statementsPlansOptimizer2_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: {
........&gt; rules: [ <span class="hljs-string">&quot;-all&quot;</span>, <span class="hljs-string">&quot;+remove-redundant-calculations&quot;</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer3


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer3_container">
<div id="10_workWithAQL_statementsPlansOptimizer3_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc&quot;</span>;
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).explain(query, {<span class="hljs-attr">colors</span>:<span class="hljs-literal">false</span>});
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">56</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">true</span>):
 FOR doc IN mycollection FILTER doc.value &gt; <span class="hljs-number">42</span> RETURN doc

Execution plan:
 Id   NodeType                  Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode                <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">2</span>   EnumerateCollectionNode    <span class="hljs-number">302</span>     - FOR doc IN mycollection   <span class="hljs-comment">/* full collection scan */</span>   FILTER (doc.<span class="hljs-string">`value`</span> &gt; <span class="hljs-number">42</span>)   <span class="hljs-comment">/* early pruning */</span>
  <span class="hljs-number">5</span>   ReturnNode                 <span class="hljs-number">302</span>       - RETURN doc

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   move-filters-into-enumerate


</pre>
<div id="10_workWithAQL_statementsPlansOptimizer3_container_collapse" onclick="$('#10_workWithAQL_statementsPlansOptimizer3_long').hide(); $('#10_workWithAQL_statementsPlansOptimizer3_short').show(); window.location.hash='10_workWithAQL_statementsPlansOptimizer3_container';" class="example_show_button">Hide execution results</div></div>
<div id="10_workWithAQL_statementsPlansOptimizer3_short" onclick="$('#10_workWithAQL_statementsPlansOptimizer3_short').hide(); $('#10_workWithAQL_statementsPlansOptimizer3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc&quot;</span>;
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).explain(query, {<span class="hljs-attr">colors</span>:<span class="hljs-literal">false</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_debugging1


<div class="example-container" id="10_workWithAQL_debugging1_container">
<div id="10_workWithAQL_debugging1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc&quot;</span>;
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).debugDump(<span class="hljs-string">&quot;/tmp/query-debug-info&quot;</span>, query);
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_debugging1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_debugging2


<div class="example-container" id="10_workWithAQL_debugging2_container">
<div id="10_workWithAQL_debugging2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc IN @@collection FILTER doc.value &gt; @value RETURN doc&quot;</span>;
arangosh&gt; <span class="hljs-keyword">var</span> bind = { <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>, <span class="hljs-string">&quot;@collection&quot;</span>: <span class="hljs-string">&quot;mycollection&quot;</span> };
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).debugDump(<span class="hljs-string">&quot;/tmp/query-debug-info&quot;</span>, query, bind);
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_debugging2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_debugging3


<div class="example-container" id="10_workWithAQL_debugging3_container">
<div id="10_workWithAQL_debugging3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">&quot;FOR doc IN @@collection FILTER doc.value &gt; @value RETURN doc&quot;</span>;
arangosh&gt; <span class="hljs-keyword">var</span> bind = { <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>, <span class="hljs-string">&quot;@collection&quot;</span>: <span class="hljs-string">&quot;mycollection&quot;</span> };
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">examples</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">anonymize</span>: <span class="hljs-literal">true</span> };
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).debugDump(<span class="hljs-string">&quot;/tmp/query-debug-info&quot;</span>, query, bind, options);
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_debugging3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_01_create_graph


<div class="example-container" id="COMBINING_GRAPH_01_create_graph_container">
<div id="COMBINING_GRAPH_01_create_graph_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_02_show_geo


<div class="example-container" id="COMBINING_GRAPH_02_show_geo_container">
<div id="COMBINING_GRAPH_02_show_geo_long">
<strong>Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      RETURN startCity._key
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;Cologne&quot;</span>,
  <span class="hljs-string">&quot;Hamburg&quot;</span>
]</pre>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_02_show_geo


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_03_explain_geo


<div class="example-container" id="COMBINING_GRAPH_03_explain_geo_container">
<div id="COMBINING_GRAPH_03_explain_geo_long" style="display: none;">
<strong>Explain Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      RETURN startCity._key
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre>
<strong>Explain output:</strong>
<pre>
Query String (119 chars, cacheable: true):
   FOR startCity IN germanCity
     FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
       RETURN startCity._key
 

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  7   IndexNode            3     - FOR startCity IN germanCity   /* geo index scan, projections: `_key` */    
  5   CalculationNode      3       - LET #3 = startCity.`_key`   /* attribute expression */   /* collections used: startCity : germanCity */
  6   ReturnNode           3       - RETURN #3

Indexes used:
 By   Name                      Type   Collection   Unique   Sparse   Selectivity   Fields           Ranges
  7   idx_1728769183746883584   geo    germanCity   false    true             n/a   [ `geometry` ]   (GEO_DISTANCE([ 7.0998, 50.734 ], startCity.`geometry`) &lt; 400000)

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   move-filters-up
  3   move-calculations-up-2
  4   move-filters-up-2
  5   geo-index-optimizer
  6   remove-unnecessary-calculations-2
  7   reduce-extraction-to-projection

</pre>
<div id="COMBINING_GRAPH_03_explain_geo_container_collapse" onclick="$('#COMBINING_GRAPH_03_explain_geo_long').hide(); $('#COMBINING_GRAPH_03_explain_geo_short').show(); window.location.hash='COMBINING_GRAPH_03_explain_geo_container';" class="example_show_button">Hide explain output</div></div>
<div id="COMBINING_GRAPH_03_explain_geo_short" onclick="$('#COMBINING_GRAPH_03_explain_geo_short').hide(); $('#COMBINING_GRAPH_03_explain_geo_long').show();">
<strong>Explain Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      RETURN startCity._key
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre><div class="example_show_button">Show explain output</div>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_03_explain_geo


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_04_combine


<div class="example-container" id="COMBINING_GRAPH_04_combine_container">
<div id="COMBINING_GRAPH_04_combine_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> OUTBOUND startCity
        GRAPH <span class="hljs-string">&#x27;routeplanner&#x27;</span>
      RETURN {<span class="hljs-attr">startcity</span>: startCity._key, <span class="hljs-attr">traversedCity</span>: v._key}
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;startcity&quot;</span>: <span class="hljs-string">&quot;Cologne&quot;</span>,
    <span class="hljs-string">&quot;traversedCity&quot;</span>: <span class="hljs-string">&quot;Lyon&quot;</span>
  },
  {
    <span class="hljs-string">&quot;startcity&quot;</span>: <span class="hljs-string">&quot;Cologne&quot;</span>,
    <span class="hljs-string">&quot;traversedCity&quot;</span>: <span class="hljs-string">&quot;Paris&quot;</span>
  },
  {
    <span class="hljs-string">&quot;startcity&quot;</span>: <span class="hljs-string">&quot;Hamburg&quot;</span>,
    <span class="hljs-string">&quot;traversedCity&quot;</span>: <span class="hljs-string">&quot;Cologne&quot;</span>
  },
  {
    <span class="hljs-string">&quot;startcity&quot;</span>: <span class="hljs-string">&quot;Hamburg&quot;</span>,
    <span class="hljs-string">&quot;traversedCity&quot;</span>: <span class="hljs-string">&quot;Paris&quot;</span>
  },
  {
    <span class="hljs-string">&quot;startcity&quot;</span>: <span class="hljs-string">&quot;Hamburg&quot;</span>,
    <span class="hljs-string">&quot;traversedCity&quot;</span>: <span class="hljs-string">&quot;Lyon&quot;</span>
  }
]</pre>
<div id="COMBINING_GRAPH_04_combine_container_collapse" onclick="$('#COMBINING_GRAPH_04_combine_long').hide(); $('#COMBINING_GRAPH_04_combine_short').show(); window.location.hash='COMBINING_GRAPH_04_combine_container';" class="example_show_button">Hide query result</div></div>
<div id="COMBINING_GRAPH_04_combine_short" onclick="$('#COMBINING_GRAPH_04_combine_short').hide(); $('#COMBINING_GRAPH_04_combine_long').show();">
<strong>Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> OUTBOUND startCity
        GRAPH <span class="hljs-string">&#x27;routeplanner&#x27;</span>
      RETURN {<span class="hljs-attr">startcity</span>: startCity._key, <span class="hljs-attr">traversedCity</span>: v._key}
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_04_combine


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_05_combine_let


<div class="example-container" id="COMBINING_GRAPH_05_combine_let_container">
<div id="COMBINING_GRAPH_05_combine_let_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      LET oneCity = (
        FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> OUTBOUND startCity
          GRAPH <span class="hljs-string">&#x27;routeplanner&#x27;</span> RETURN v._key
      )
        RETURN {<span class="hljs-attr">startCity</span>: startCity._key, <span class="hljs-attr">connectedCities</span>: oneCity}
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;startCity&quot;</span>: <span class="hljs-string">&quot;Cologne&quot;</span>,
    <span class="hljs-string">&quot;connectedCities&quot;</span>: [
      <span class="hljs-string">&quot;Lyon&quot;</span>,
      <span class="hljs-string">&quot;Paris&quot;</span>
    ]
  },
  {
    <span class="hljs-string">&quot;startCity&quot;</span>: <span class="hljs-string">&quot;Hamburg&quot;</span>,
    <span class="hljs-string">&quot;connectedCities&quot;</span>: [
      <span class="hljs-string">&quot;Cologne&quot;</span>,
      <span class="hljs-string">&quot;Paris&quot;</span>,
      <span class="hljs-string">&quot;Lyon&quot;</span>
    ]
  }
]</pre>
<div id="COMBINING_GRAPH_05_combine_let_container_collapse" onclick="$('#COMBINING_GRAPH_05_combine_let_long').hide(); $('#COMBINING_GRAPH_05_combine_let_short').show(); window.location.hash='COMBINING_GRAPH_05_combine_let_container';" class="example_show_button">Hide query result</div></div>
<div id="COMBINING_GRAPH_05_combine_let_short" onclick="$('#COMBINING_GRAPH_05_combine_let_short').hide(); $('#COMBINING_GRAPH_05_combine_let_long').show();">
<strong>Query:</strong>
<pre>
  FOR startCity IN germanCity
    FILTER GEO_DISTANCE(@bonn, startCity.geometry) &lt; @radius
      LET oneCity = (
        FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.1</span> OUTBOUND startCity
          GRAPH <span class="hljs-string">&#x27;routeplanner&#x27;</span> RETURN v._key
      )
        RETURN {<span class="hljs-attr">startCity</span>: startCity._key, <span class="hljs-attr">connectedCities</span>: oneCity}
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">&quot;bonn&quot;</span>: [
    <span class="hljs-number">7.0998</span>,
    <span class="hljs-number">50.734</span>
  ],
  <span class="hljs-string">&quot;radius&quot;</span>: <span class="hljs-number">400000</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_05_combine_let


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_06_cleanup


<div class="example-container" id="COMBINING_GRAPH_06_cleanup_container">
<div id="COMBINING_GRAPH_06_cleanup_long">
<pre>
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;routeplanner&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_06_cleanup


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoLineString_1


<div class="example-container" id="aqlGeoLineString_1_container">
<div id="aqlGeoLineString_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_LINESTRING([
  [<span class="hljs-number">35</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">45</span>]
])

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;LineString&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      [
        <span class="hljs-number">35</span>,
        <span class="hljs-number">10</span>
      ],
      [
        <span class="hljs-number">45</span>,
        <span class="hljs-number">45</span>
      ]
    ]
  }
]</pre>
<div id="aqlGeoLineString_1_container_collapse" onclick="$('#aqlGeoLineString_1_long').hide(); $('#aqlGeoLineString_1_short').show(); window.location.hash='aqlGeoLineString_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoLineString_1_short" onclick="$('#aqlGeoLineString_1_short').hide(); $('#aqlGeoLineString_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_LINESTRING([
  [<span class="hljs-number">35</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">45</span>]
])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoLineString_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoMultiLineString_1


<div class="example-container" id="aqlGeoMultiLineString_1_container">
<div id="aqlGeoMultiLineString_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_MULTILINESTRING([
  [[<span class="hljs-number">100.0</span>, <span class="hljs-number">0.0</span>], [<span class="hljs-number">101.0</span>, <span class="hljs-number">1.0</span>]],
  [[<span class="hljs-number">102.0</span>, <span class="hljs-number">2.0</span>], [<span class="hljs-number">101.0</span>, <span class="hljs-number">2.3</span>]]
])

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;MultiLineString&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      [
        [
          <span class="hljs-number">100</span>,
          <span class="hljs-number">0</span>
        ],
        [
          <span class="hljs-number">101</span>,
          <span class="hljs-number">1</span>
        ]
      ],
      [
        [
          <span class="hljs-number">102</span>,
          <span class="hljs-number">2</span>
        ],
        [
          <span class="hljs-number">101</span>,
          <span class="hljs-number">2.3</span>
        ]
      ]
    ]
  }
]</pre>
<div id="aqlGeoMultiLineString_1_container_collapse" onclick="$('#aqlGeoMultiLineString_1_long').hide(); $('#aqlGeoMultiLineString_1_short').show(); window.location.hash='aqlGeoMultiLineString_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoMultiLineString_1_short" onclick="$('#aqlGeoMultiLineString_1_short').hide(); $('#aqlGeoMultiLineString_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_MULTILINESTRING([
  [[<span class="hljs-number">100.0</span>, <span class="hljs-number">0.0</span>], [<span class="hljs-number">101.0</span>, <span class="hljs-number">1.0</span>]],
  [[<span class="hljs-number">102.0</span>, <span class="hljs-number">2.0</span>], [<span class="hljs-number">101.0</span>, <span class="hljs-number">2.3</span>]]
])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoMultiLineString_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoMultiPoint_1


<div class="example-container" id="aqlGeoMultiPoint_1_container">
<div id="aqlGeoMultiPoint_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_MULTIPOINT([
  [<span class="hljs-number">35</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">45</span>]
])

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;MultiPoint&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      [
        <span class="hljs-number">35</span>,
        <span class="hljs-number">10</span>
      ],
      [
        <span class="hljs-number">45</span>,
        <span class="hljs-number">45</span>
      ]
    ]
  }
]</pre>
<div id="aqlGeoMultiPoint_1_container_collapse" onclick="$('#aqlGeoMultiPoint_1_long').hide(); $('#aqlGeoMultiPoint_1_short').show(); window.location.hash='aqlGeoMultiPoint_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoMultiPoint_1_short" onclick="$('#aqlGeoMultiPoint_1_short').hide(); $('#aqlGeoMultiPoint_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_MULTIPOINT([
  [<span class="hljs-number">35</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">45</span>]
])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoMultiPoint_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoPoint_1


<div class="example-container" id="aqlGeoPoint_1_container">
<div id="aqlGeoPoint_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_POINT(<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;Point&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      <span class="hljs-number">1</span>,
      <span class="hljs-number">2</span>
    ]
  }
]</pre>
<div id="aqlGeoPoint_1_container_collapse" onclick="$('#aqlGeoPoint_1_long').hide(); $('#aqlGeoPoint_1_short').show(); window.location.hash='aqlGeoPoint_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoPoint_1_short" onclick="$('#aqlGeoPoint_1_short').hide(); $('#aqlGeoPoint_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_POINT(<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoPoint_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoPolygon_1


<div class="example-container" id="aqlGeoPolygon_1_container">
<div id="aqlGeoPolygon_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_POLYGON([
  [<span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>], [<span class="hljs-number">7.5</span>, <span class="hljs-number">2.5</span>], [<span class="hljs-number">0.0</span>, <span class="hljs-number">5.0</span>]
])

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;Polygon&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      [
        [
          <span class="hljs-number">0</span>,
          <span class="hljs-number">0</span>
        ],
        [
          <span class="hljs-number">7.5</span>,
          <span class="hljs-number">2.5</span>
        ],
        [
          <span class="hljs-number">0</span>,
          <span class="hljs-number">5</span>
        ]
      ]
    ]
  }
]</pre>
<div id="aqlGeoPolygon_1_container_collapse" onclick="$('#aqlGeoPolygon_1_long').hide(); $('#aqlGeoPolygon_1_short').show(); window.location.hash='aqlGeoPolygon_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoPolygon_1_short" onclick="$('#aqlGeoPolygon_1_short').hide(); $('#aqlGeoPolygon_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_POLYGON([
  [<span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>], [<span class="hljs-number">7.5</span>, <span class="hljs-number">2.5</span>], [<span class="hljs-number">0.0</span>, <span class="hljs-number">5.0</span>]
])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoPolygon_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoPolygon_2


<div class="example-container" id="aqlGeoPolygon_2_container">
<div id="aqlGeoPolygon_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_POLYGON([
  [[<span class="hljs-number">35</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">45</span>], [<span class="hljs-number">15</span>, <span class="hljs-number">40</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">35</span>, <span class="hljs-number">10</span>]],
  [[<span class="hljs-number">20</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">30</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">35</span>, <span class="hljs-number">35</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">30</span>]]
])

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;Polygon&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      [
        [
          <span class="hljs-number">35</span>,
          <span class="hljs-number">10</span>
        ],
        [
          <span class="hljs-number">45</span>,
          <span class="hljs-number">45</span>
        ],
        [
          <span class="hljs-number">15</span>,
          <span class="hljs-number">40</span>
        ],
        [
          <span class="hljs-number">10</span>,
          <span class="hljs-number">20</span>
        ],
        [
          <span class="hljs-number">35</span>,
          <span class="hljs-number">10</span>
        ]
      ],
      [
        [
          <span class="hljs-number">20</span>,
          <span class="hljs-number">30</span>
        ],
        [
          <span class="hljs-number">30</span>,
          <span class="hljs-number">20</span>
        ],
        [
          <span class="hljs-number">35</span>,
          <span class="hljs-number">35</span>
        ],
        [
          <span class="hljs-number">20</span>,
          <span class="hljs-number">30</span>
        ]
      ]
    ]
  }
]</pre>
<div id="aqlGeoPolygon_2_container_collapse" onclick="$('#aqlGeoPolygon_2_long').hide(); $('#aqlGeoPolygon_2_short').show(); window.location.hash='aqlGeoPolygon_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoPolygon_2_short" onclick="$('#aqlGeoPolygon_2_short').hide(); $('#aqlGeoPolygon_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_POLYGON([
  [[<span class="hljs-number">35</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">45</span>], [<span class="hljs-number">15</span>, <span class="hljs-number">40</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">35</span>, <span class="hljs-number">10</span>]],
  [[<span class="hljs-number">20</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">30</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">35</span>, <span class="hljs-number">35</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">30</span>]]
])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoPolygon_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-geo.md -->
@startDocuBlockInline aqlGeoMultiPolygon_1


<div class="example-container" id="aqlGeoMultiPolygon_1_container">
<div id="aqlGeoMultiPolygon_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN GEO_MULTIPOLYGON([
  [
      [[<span class="hljs-number">40</span>, <span class="hljs-number">40</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">45</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">40</span>, <span class="hljs-number">40</span>]]
  ],
  [
      [[<span class="hljs-number">20</span>, <span class="hljs-number">35</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">30</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">35</span>]],
      [[<span class="hljs-number">30</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">15</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">25</span>], [<span class="hljs-number">30</span>, <span class="hljs-number">20</span>]]
  ]
])

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;MultiPolygon&quot;</span>,
    <span class="hljs-string">&quot;coordinates&quot;</span>: [
      [
        [
          [
            <span class="hljs-number">40</span>,
            <span class="hljs-number">40</span>
          ],
          [
            <span class="hljs-number">20</span>,
            <span class="hljs-number">45</span>
          ],
          [
            <span class="hljs-number">45</span>,
            <span class="hljs-number">30</span>
          ],
          [
            <span class="hljs-number">40</span>,
            <span class="hljs-number">40</span>
          ]
        ]
      ],
      [
        [
          [
            <span class="hljs-number">20</span>,
            <span class="hljs-number">35</span>
          ],
          [
            <span class="hljs-number">10</span>,
            <span class="hljs-number">30</span>
          ],
          [
            <span class="hljs-number">10</span>,
            <span class="hljs-number">10</span>
          ],
          [
            <span class="hljs-number">30</span>,
            <span class="hljs-number">5</span>
          ],
          [
            <span class="hljs-number">45</span>,
            <span class="hljs-number">20</span>
          ],
          [
            <span class="hljs-number">20</span>,
            <span class="hljs-number">35</span>
          ]
        ],
        [
          [
            <span class="hljs-number">30</span>,
            <span class="hljs-number">20</span>
          ],
          [
            <span class="hljs-number">20</span>,
            <span class="hljs-number">15</span>
          ],
          [
            <span class="hljs-number">20</span>,
            <span class="hljs-number">25</span>
          ],
          [
            <span class="hljs-number">30</span>,
            <span class="hljs-number">20</span>
          ]
        ]
      ]
    ]
  }
]</pre>
<div id="aqlGeoMultiPolygon_1_container_collapse" onclick="$('#aqlGeoMultiPolygon_1_long').hide(); $('#aqlGeoMultiPolygon_1_short').show(); window.location.hash='aqlGeoMultiPolygon_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlGeoMultiPolygon_1_short" onclick="$('#aqlGeoMultiPolygon_1_short').hide(); $('#aqlGeoMultiPolygon_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN GEO_MULTIPOLYGON([
  [
      [[<span class="hljs-number">40</span>, <span class="hljs-number">40</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">45</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">40</span>, <span class="hljs-number">40</span>]]
  ],
  [
      [[<span class="hljs-number">20</span>, <span class="hljs-number">35</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">30</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">10</span>], [<span class="hljs-number">30</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">45</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">35</span>]],
      [[<span class="hljs-number">30</span>, <span class="hljs-number">20</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">15</span>], [<span class="hljs-number">20</span>, <span class="hljs-number">25</span>], [<span class="hljs-number">30</span>, <span class="hljs-number">20</span>]]
  ]
])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlGeoMultiPolygon_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayAppend_1


<div class="example-container" id="aqlArrayAppend_1_container">
<div id="aqlArrayAppend_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN APPEND([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], [ <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span> ])

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">5</span>,
    <span class="hljs-number">6</span>,
    <span class="hljs-number">9</span>
  ]
]</pre>
<div id="aqlArrayAppend_1_container_collapse" onclick="$('#aqlArrayAppend_1_long').hide(); $('#aqlArrayAppend_1_short').show(); window.location.hash='aqlArrayAppend_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayAppend_1_short" onclick="$('#aqlArrayAppend_1_short').hide(); $('#aqlArrayAppend_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN APPEND([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], [ <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span> ])

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayAppend_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayAppend_2


<div class="example-container" id="aqlArrayAppend_2_container">
<div id="aqlArrayAppend_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN APPEND([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">9</span> ], <span class="hljs-literal">true</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">5</span>,
    <span class="hljs-number">9</span>
  ]
]</pre>
<div id="aqlArrayAppend_2_container_collapse" onclick="$('#aqlArrayAppend_2_long').hide(); $('#aqlArrayAppend_2_short').show(); window.location.hash='aqlArrayAppend_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayAppend_2_short" onclick="$('#aqlArrayAppend_2_short').hide(); $('#aqlArrayAppend_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN APPEND([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">9</span> ], <span class="hljs-literal">true</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayAppend_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayCountDistinct_1


<div class="example-container" id="aqlArrayCountDistinct_1_container">
<div id="aqlArrayCountDistinct_1_long">
<strong>Query:</strong>
<pre>
RETURN COUNT_DISTINCT([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ])

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">3</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayCountDistinct_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayCountDistinct_2


<div class="example-container" id="aqlArrayCountDistinct_2_container">
<div id="aqlArrayCountDistinct_2_long">
<strong>Query:</strong>
<pre>
RETURN COUNT_DISTINCT([ <span class="hljs-string">&quot;yes&quot;</span>, <span class="hljs-string">&quot;no&quot;</span>, <span class="hljs-string">&quot;yes&quot;</span>, <span class="hljs-string">&quot;sauron&quot;</span>, <span class="hljs-string">&quot;no&quot;</span>, <span class="hljs-string">&quot;yes&quot;</span> ])

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">3</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayCountDistinct_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayFirst_1


<div class="example-container" id="aqlArrayFirst_1_container">
<div id="aqlArrayFirst_1_long">
<strong>Query:</strong>
<pre>
RETURN FIRST([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ])

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayFirst_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayFirst_2


<div class="example-container" id="aqlArrayFirst_2_container">
<div id="aqlArrayFirst_2_long">
<strong>Query:</strong>
<pre>
RETURN FIRST([])

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">null</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayFirst_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayFlatten_1


<div class="example-container" id="aqlArrayFlatten_1_container">
<div id="aqlArrayFlatten_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN FLATTEN( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ], <span class="hljs-number">5</span>, [ <span class="hljs-number">6</span>, <span class="hljs-number">7</span> ], [ <span class="hljs-number">8</span>, [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span> ] ] ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">5</span>,
    <span class="hljs-number">6</span>,
    <span class="hljs-number">7</span>,
    <span class="hljs-number">8</span>,
    [
      <span class="hljs-number">9</span>,
      <span class="hljs-number">10</span>
    ]
  ]
]</pre>
<div id="aqlArrayFlatten_1_container_collapse" onclick="$('#aqlArrayFlatten_1_long').hide(); $('#aqlArrayFlatten_1_short').show(); window.location.hash='aqlArrayFlatten_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayFlatten_1_short" onclick="$('#aqlArrayFlatten_1_short').hide(); $('#aqlArrayFlatten_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN FLATTEN( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ], <span class="hljs-number">5</span>, [ <span class="hljs-number">6</span>, <span class="hljs-number">7</span> ], [ <span class="hljs-number">8</span>, [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span> ] ] ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayFlatten_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayFlatten_2


<div class="example-container" id="aqlArrayFlatten_2_container">
<div id="aqlArrayFlatten_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN FLATTEN( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ], <span class="hljs-number">5</span>, [ <span class="hljs-number">6</span>, <span class="hljs-number">7</span> ], [ <span class="hljs-number">8</span>, [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span> ] ] ], <span class="hljs-number">2</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">5</span>,
    <span class="hljs-number">6</span>,
    <span class="hljs-number">7</span>,
    <span class="hljs-number">8</span>,
    <span class="hljs-number">9</span>,
    <span class="hljs-number">10</span>
  ]
]</pre>
<div id="aqlArrayFlatten_2_container_collapse" onclick="$('#aqlArrayFlatten_2_long').hide(); $('#aqlArrayFlatten_2_short').show(); window.location.hash='aqlArrayFlatten_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayFlatten_2_short" onclick="$('#aqlArrayFlatten_2_short').hide(); $('#aqlArrayFlatten_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN FLATTEN( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ], <span class="hljs-number">5</span>, [ <span class="hljs-number">6</span>, <span class="hljs-number">7</span> ], [ <span class="hljs-number">8</span>, [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span> ] ] ], <span class="hljs-number">2</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayFlatten_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayInterleave_1


<div class="example-container" id="aqlArrayInterleave_1_container">
<div id="aqlArrayInterleave_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN INTERLEAVE( [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayInterleave_1_container_collapse" onclick="$('#aqlArrayInterleave_1_long').hide(); $('#aqlArrayInterleave_1_short').show(); window.location.hash='aqlArrayInterleave_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayInterleave_1_short" onclick="$('#aqlArrayInterleave_1_short').hide(); $('#aqlArrayInterleave_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN INTERLEAVE( [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayInterleave_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayInterleave_2


<div class="example-container" id="aqlArrayInterleave_2_container">
<div id="aqlArrayInterleave_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN INTERLEAVE( [ <span class="hljs-number">1</span> ], [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayInterleave_2_container_collapse" onclick="$('#aqlArrayInterleave_2_long').hide(); $('#aqlArrayInterleave_2_short').show(); window.location.hash='aqlArrayInterleave_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayInterleave_2_short" onclick="$('#aqlArrayInterleave_2_short').hide(); $('#aqlArrayInterleave_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN INTERLEAVE( [ <span class="hljs-number">1</span> ], [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayInterleave_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayInterleave_3


<div class="example-container" id="aqlArrayInterleave_3_container">
<div id="aqlArrayInterleave_3_long" style="display: none;">
<strong>Query:</strong>
<pre>
FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;places/Toronto&#x27;</span> GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
RETURN INTERLEAVE(p.vertices[*]._id, p.edges[*]._id)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;places/Toronto&quot;</span>,
    <span class="hljs-string">&quot;connections/75784&quot;</span>,
    <span class="hljs-string">&quot;places/Winnipeg&quot;</span>
  ],
  [
    <span class="hljs-string">&quot;places/Toronto&quot;</span>,
    <span class="hljs-string">&quot;connections/75784&quot;</span>,
    <span class="hljs-string">&quot;places/Winnipeg&quot;</span>,
    <span class="hljs-string">&quot;connections/75786&quot;</span>,
    <span class="hljs-string">&quot;places/Toronto&quot;</span>
  ],
  [
    <span class="hljs-string">&quot;places/Toronto&quot;</span>,
    <span class="hljs-string">&quot;connections/75784&quot;</span>,
    <span class="hljs-string">&quot;places/Winnipeg&quot;</span>,
    <span class="hljs-string">&quot;connections/75788&quot;</span>,
    <span class="hljs-string">&quot;places/Saskatoon&quot;</span>
  ],
  [
    <span class="hljs-string">&quot;places/Toronto&quot;</span>,
    <span class="hljs-string">&quot;connections/75784&quot;</span>,
    <span class="hljs-string">&quot;places/Winnipeg&quot;</span>,
    <span class="hljs-string">&quot;connections/75788&quot;</span>,
    <span class="hljs-string">&quot;places/Saskatoon&quot;</span>,
    <span class="hljs-string">&quot;connections/75790&quot;</span>,
    <span class="hljs-string">&quot;places/Winnipeg&quot;</span>
  ],
  [
    <span class="hljs-string">&quot;places/Toronto&quot;</span>,
    <span class="hljs-string">&quot;connections/75784&quot;</span>,
    <span class="hljs-string">&quot;places/Winnipeg&quot;</span>,
    <span class="hljs-string">&quot;connections/75788&quot;</span>,
    <span class="hljs-string">&quot;places/Saskatoon&quot;</span>,
    <span class="hljs-string">&quot;connections/75792&quot;</span>,
    <span class="hljs-string">&quot;places/Edmonton&quot;</span>
  ]
]</pre>
<div id="aqlArrayInterleave_3_container_collapse" onclick="$('#aqlArrayInterleave_3_long').hide(); $('#aqlArrayInterleave_3_short').show(); window.location.hash='aqlArrayInterleave_3_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayInterleave_3_short" onclick="$('#aqlArrayInterleave_3_short').hide(); $('#aqlArrayInterleave_3_long').show();">
<strong>Query:</strong>
<pre>
FOR v, e, p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">&#x27;places/Toronto&#x27;</span> GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
RETURN INTERLEAVE(p.vertices[*]._id, p.edges[*]._id)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayInterleave_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayIntersection_1


<div class="example-container" id="aqlArrayIntersection_1_container">
<div id="aqlArrayIntersection_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN INTERSECTION( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>], [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">5</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayIntersection_1_container_collapse" onclick="$('#aqlArrayIntersection_1_long').hide(); $('#aqlArrayIntersection_1_short').show(); window.location.hash='aqlArrayIntersection_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayIntersection_1_short" onclick="$('#aqlArrayIntersection_1_short').hide(); $('#aqlArrayIntersection_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN INTERSECTION( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>], [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayIntersection_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayIntersection_2


<div class="example-container" id="aqlArrayIntersection_2_container">
<div id="aqlArrayIntersection_2_long">
<strong>Query:</strong>
<pre>
RETURN INTERSECTION( [<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>], [<span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">12</span>], [<span class="hljs-number">14</span>,<span class="hljs-number">16</span>,<span class="hljs-number">18</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  []
]</pre>
</div>
</div>

@endDocuBlock aqlArrayIntersection_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayJaccard_1


<div class="example-container" id="aqlArrayJaccard_1_container">
<div id="aqlArrayJaccard_1_long">
<strong>Query:</strong>
<pre>
RETURN JACCARD( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">0.3333333333333333</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayJaccard_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayJaccard_2


<div class="example-container" id="aqlArrayJaccard_2_container">
<div id="aqlArrayJaccard_2_long">
<strong>Query:</strong>
<pre>
RETURN JACCARD( [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>], [<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">0.5</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayJaccard_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayJaccard_3


<div class="example-container" id="aqlArrayJaccard_3_container">
<div id="aqlArrayJaccard_3_long">
<strong>Query:</strong>
<pre>
RETURN JACCARD( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>], [] )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">0</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayJaccard_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayJaccard_4


<div class="example-container" id="aqlArrayJaccard_4_container">
<div id="aqlArrayJaccard_4_long">
<strong>Query:</strong>
<pre>
RETURN JACCARD( [], [] )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayJaccard_4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayLast_1


<div class="example-container" id="aqlArrayLast_1_container">
<div id="aqlArrayLast_1_long">
<strong>Query:</strong>
<pre>
RETURN LAST( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">5</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayLast_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayLength_1


<div class="example-container" id="aqlArrayLength_1_container">
<div id="aqlArrayLength_1_long">
<strong>Query:</strong>
<pre>
RETURN LENGTH( <span class="hljs-string">&quot;🥑&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayLength_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayLength_2


<div class="example-container" id="aqlArrayLength_2_container">
<div id="aqlArrayLength_2_long">
<strong>Query:</strong>
<pre>
RETURN LENGTH( <span class="hljs-number">1234</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">4</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayLength_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayLength_3


<div class="example-container" id="aqlArrayLength_3_container">
<div id="aqlArrayLength_3_long">
<strong>Query:</strong>
<pre>
RETURN LENGTH( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">7</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayLength_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayLength_4


<div class="example-container" id="aqlArrayLength_4_container">
<div id="aqlArrayLength_4_long">
<strong>Query:</strong>
<pre>
RETURN LENGTH( <span class="hljs-literal">false</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">0</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayLength_4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayLength_5


<div class="example-container" id="aqlArrayLength_5_container">
<div id="aqlArrayLength_5_long">
<strong>Query:</strong>
<pre>
RETURN LENGTH( {<span class="hljs-attr">a</span>:<span class="hljs-number">1</span>, <span class="hljs-attr">b</span>:<span class="hljs-number">2</span>, <span class="hljs-attr">c</span>:<span class="hljs-number">3</span>, <span class="hljs-attr">d</span>:<span class="hljs-number">4</span>, <span class="hljs-attr">e</span>:{<span class="hljs-attr">f</span>:<span class="hljs-number">5</span>,<span class="hljs-attr">g</span>:<span class="hljs-number">6</span>}} )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">5</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayLength_5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayMinus_1


<div class="example-container" id="aqlArrayMinus_1_container">
<div id="aqlArrayMinus_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN MINUS( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>], [<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">2</span>,
    <span class="hljs-number">1</span>
  ]
]</pre>
<div id="aqlArrayMinus_1_container_collapse" onclick="$('#aqlArrayMinus_1_long').hide(); $('#aqlArrayMinus_1_short').show(); window.location.hash='aqlArrayMinus_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayMinus_1_short" onclick="$('#aqlArrayMinus_1_short').hide(); $('#aqlArrayMinus_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN MINUS( [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>], [<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayMinus_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayNth_1


<div class="example-container" id="aqlArrayNth_1_container">
<div id="aqlArrayNth_1_long">
<strong>Query:</strong>
<pre>
RETURN NTH( [ <span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-string">&quot;bar&quot;</span>, <span class="hljs-string">&quot;baz&quot;</span> ], <span class="hljs-number">2</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;baz&quot;</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayNth_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayNth_2


<div class="example-container" id="aqlArrayNth_2_container">
<div id="aqlArrayNth_2_long">
<strong>Query:</strong>
<pre>
RETURN NTH( [ <span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-string">&quot;bar&quot;</span>, <span class="hljs-string">&quot;baz&quot;</span> ], <span class="hljs-number">3</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">null</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayNth_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayNth_3


<div class="example-container" id="aqlArrayNth_3_container">
<div id="aqlArrayNth_3_long">
<strong>Query:</strong>
<pre>
RETURN NTH( [ <span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-string">&quot;bar&quot;</span>, <span class="hljs-string">&quot;baz&quot;</span> ], -<span class="hljs-number">1</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">null</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayNth_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayOutersection_1


<div class="example-container" id="aqlArrayOutersection_1_container">
<div id="aqlArrayOutersection_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN OUTERSECTION( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], [ <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ], [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">5</span>,
    <span class="hljs-number">1</span>
  ]
]</pre>
<div id="aqlArrayOutersection_1_container_collapse" onclick="$('#aqlArrayOutersection_1_long').hide(); $('#aqlArrayOutersection_1_short').show(); window.location.hash='aqlArrayOutersection_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayOutersection_1_short" onclick="$('#aqlArrayOutersection_1_short').hide(); $('#aqlArrayOutersection_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN OUTERSECTION( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], [ <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ], [ <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayOutersection_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayPop_1


<div class="example-container" id="aqlArrayPop_1_container">
<div id="aqlArrayPop_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN POP( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayPop_1_container_collapse" onclick="$('#aqlArrayPop_1_long').hide(); $('#aqlArrayPop_1_short').show(); window.location.hash='aqlArrayPop_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayPop_1_short" onclick="$('#aqlArrayPop_1_short').hide(); $('#aqlArrayPop_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN POP( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayPop_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayPop_2


<div class="example-container" id="aqlArrayPop_2_container">
<div id="aqlArrayPop_2_long">
<strong>Query:</strong>
<pre>
RETURN POP( [ <span class="hljs-number">1</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  []
]</pre>
</div>
</div>

@endDocuBlock aqlArrayPop_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayPosition_1


<div class="example-container" id="aqlArrayPosition_1_container">
<div id="aqlArrayPosition_1_long">
<strong>Query:</strong>
<pre>
RETURN POSITION( [<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>], <span class="hljs-number">4</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-literal">true</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayPosition_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayPosition_2


<div class="example-container" id="aqlArrayPosition_2_container">
<div id="aqlArrayPosition_2_long">
<strong>Query:</strong>
<pre>
RETURN POSITION( [<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>], <span class="hljs-number">4</span>, <span class="hljs-literal">true</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">1</span>
]</pre>
</div>
</div>

@endDocuBlock aqlArrayPosition_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayPush_1


<div class="example-container" id="aqlArrayPush_1_container">
<div id="aqlArrayPush_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN PUSH([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">4</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>
  ]
]</pre>
<div id="aqlArrayPush_1_container_collapse" onclick="$('#aqlArrayPush_1_long').hide(); $('#aqlArrayPush_1_short').show(); window.location.hash='aqlArrayPush_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayPush_1_short" onclick="$('#aqlArrayPush_1_short').hide(); $('#aqlArrayPush_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN PUSH([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">4</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayPush_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayPush_2


<div class="example-container" id="aqlArrayPush_2_container">
<div id="aqlArrayPush_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN PUSH([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">2</span>, <span class="hljs-literal">true</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayPush_2_container_collapse" onclick="$('#aqlArrayPush_2_long').hide(); $('#aqlArrayPush_2_short').show(); window.location.hash='aqlArrayPush_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayPush_2_short" onclick="$('#aqlArrayPush_2_short').hide(); $('#aqlArrayPush_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN PUSH([ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">2</span>, <span class="hljs-literal">true</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayPush_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayRemoveNth_1


<div class="example-container" id="aqlArrayRemoveNth_1_container">
<div id="aqlArrayRemoveNth_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REMOVE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span> ], <span class="hljs-number">1</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>,
    <span class="hljs-string">&quot;d&quot;</span>,
    <span class="hljs-string">&quot;e&quot;</span>
  ]
]</pre>
<div id="aqlArrayRemoveNth_1_container_collapse" onclick="$('#aqlArrayRemoveNth_1_long').hide(); $('#aqlArrayRemoveNth_1_short').show(); window.location.hash='aqlArrayRemoveNth_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayRemoveNth_1_short" onclick="$('#aqlArrayRemoveNth_1_short').hide(); $('#aqlArrayRemoveNth_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN REMOVE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span> ], <span class="hljs-number">1</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayRemoveNth_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayRemoveNth_2


<div class="example-container" id="aqlArrayRemoveNth_2_container">
<div id="aqlArrayRemoveNth_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REMOVE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span> ], -<span class="hljs-number">2</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>,
    <span class="hljs-string">&quot;e&quot;</span>
  ]
]</pre>
<div id="aqlArrayRemoveNth_2_container_collapse" onclick="$('#aqlArrayRemoveNth_2_long').hide(); $('#aqlArrayRemoveNth_2_short').show(); window.location.hash='aqlArrayRemoveNth_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayRemoveNth_2_short" onclick="$('#aqlArrayRemoveNth_2_short').hide(); $('#aqlArrayRemoveNth_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN REMOVE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span> ], -<span class="hljs-number">2</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayRemoveNth_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayReplaceNth_1


<div class="example-container" id="aqlArrayReplaceNth_1_container">
<div id="aqlArrayReplaceNth_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-number">1</span> , <span class="hljs-string">&quot;z&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;z&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>
  ]
]</pre>
<div id="aqlArrayReplaceNth_1_container_collapse" onclick="$('#aqlArrayReplaceNth_1_long').hide(); $('#aqlArrayReplaceNth_1_short').show(); window.location.hash='aqlArrayReplaceNth_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayReplaceNth_1_short" onclick="$('#aqlArrayReplaceNth_1_short').hide(); $('#aqlArrayReplaceNth_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-number">1</span> , <span class="hljs-string">&quot;z&quot;</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayReplaceNth_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayReplaceNth_2


<div class="example-container" id="aqlArrayReplaceNth_2_container">
<div id="aqlArrayReplaceNth_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-number">3</span> , <span class="hljs-string">&quot;z&quot;</span>)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>,
    <span class="hljs-string">&quot;z&quot;</span>
  ]
]</pre>
<div id="aqlArrayReplaceNth_2_container_collapse" onclick="$('#aqlArrayReplaceNth_2_long').hide(); $('#aqlArrayReplaceNth_2_short').show(); window.location.hash='aqlArrayReplaceNth_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayReplaceNth_2_short" onclick="$('#aqlArrayReplaceNth_2_short').hide(); $('#aqlArrayReplaceNth_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-number">3</span> , <span class="hljs-string">&quot;z&quot;</span>)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayReplaceNth_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayReplaceNth_4


<div class="example-container" id="aqlArrayReplaceNth_4_container">
<div id="aqlArrayReplaceNth_4_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-number">6</span>, <span class="hljs-string">&quot;z&quot;</span>, <span class="hljs-string">&quot;y&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>,
    <span class="hljs-string">&quot;y&quot;</span>,
    <span class="hljs-string">&quot;y&quot;</span>,
    <span class="hljs-string">&quot;y&quot;</span>,
    <span class="hljs-string">&quot;z&quot;</span>
  ]
]</pre>
<div id="aqlArrayReplaceNth_4_container_collapse" onclick="$('#aqlArrayReplaceNth_4_long').hide(); $('#aqlArrayReplaceNth_4_short').show(); window.location.hash='aqlArrayReplaceNth_4_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayReplaceNth_4_short" onclick="$('#aqlArrayReplaceNth_4_short').hide(); $('#aqlArrayReplaceNth_4_long').show();">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-number">6</span>, <span class="hljs-string">&quot;z&quot;</span>, <span class="hljs-string">&quot;y&quot;</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayReplaceNth_4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayReplaceNth_5


<div class="example-container" id="aqlArrayReplaceNth_5_container">
<div id="aqlArrayReplaceNth_5_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], -<span class="hljs-number">1</span>, <span class="hljs-string">&quot;z&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;z&quot;</span>
  ]
]</pre>
<div id="aqlArrayReplaceNth_5_container_collapse" onclick="$('#aqlArrayReplaceNth_5_long').hide(); $('#aqlArrayReplaceNth_5_short').show(); window.location.hash='aqlArrayReplaceNth_5_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayReplaceNth_5_short" onclick="$('#aqlArrayReplaceNth_5_short').hide(); $('#aqlArrayReplaceNth_5_long').show();">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], -<span class="hljs-number">1</span>, <span class="hljs-string">&quot;z&quot;</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayReplaceNth_5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayReplaceNth_6


<div class="example-container" id="aqlArrayReplaceNth_6_container">
<div id="aqlArrayReplaceNth_6_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], -<span class="hljs-number">9</span>, <span class="hljs-string">&quot;z&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;z&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>
  ]
]</pre>
<div id="aqlArrayReplaceNth_6_container_collapse" onclick="$('#aqlArrayReplaceNth_6_long').hide(); $('#aqlArrayReplaceNth_6_short').show(); window.location.hash='aqlArrayReplaceNth_6_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayReplaceNth_6_short" onclick="$('#aqlArrayReplaceNth_6_short').hide(); $('#aqlArrayReplaceNth_6_long').show();">
<strong>Query:</strong>
<pre>
RETURN REPLACE_NTH( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], -<span class="hljs-number">9</span>, <span class="hljs-string">&quot;z&quot;</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayReplaceNth_6


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
    @startDocuBlockInline aqlArrayReplaceNth_3


<div class="example-container" id="aqlArrayReplaceNth_3_container">
<div id="aqlArrayReplaceNth_3_long">
<pre>
arangosh&gt; db._query(<span class="hljs-string">&#x27;RETURN REPLACE_NTH( [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ], 6 , &quot;z&quot;)&#x27;</span>);
[ArangoError <span class="hljs-number">1542</span>: AQL: invalid argument type <span class="hljs-keyword">in</span> call to <span class="hljs-function"><span class="hljs-keyword">function</span> &#x27;<span class="hljs-title">REPLACE_NTH</span>(<span class="hljs-params"></span>)&#x27; (<span class="hljs-params"><span class="hljs-keyword">while</span> optimizing ast</span>)]
</span></pre>
</div>
</div>

    @endDocuBlock aqlArrayReplaceNth_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayRemoveValue_1


<div class="example-container" id="aqlArrayRemoveValue_1_container">
<div id="aqlArrayRemoveValue_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REMOVE_VALUE( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-string">&quot;a&quot;</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>
  ]
]</pre>
<div id="aqlArrayRemoveValue_1_container_collapse" onclick="$('#aqlArrayRemoveValue_1_long').hide(); $('#aqlArrayRemoveValue_1_short').show(); window.location.hash='aqlArrayRemoveValue_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayRemoveValue_1_short" onclick="$('#aqlArrayRemoveValue_1_short').hide(); $('#aqlArrayRemoveValue_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN REMOVE_VALUE( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-string">&quot;a&quot;</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayRemoveValue_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayRemoveValue_2


<div class="example-container" id="aqlArrayRemoveValue_2_container">
<div id="aqlArrayRemoveValue_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REMOVE_VALUE( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-number">1</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;a&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>
  ]
]</pre>
<div id="aqlArrayRemoveValue_2_container_collapse" onclick="$('#aqlArrayRemoveValue_2_long').hide(); $('#aqlArrayRemoveValue_2_short').show(); window.location.hash='aqlArrayRemoveValue_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayRemoveValue_2_short" onclick="$('#aqlArrayRemoveValue_2_short').hide(); $('#aqlArrayRemoveValue_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN REMOVE_VALUE( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> ], <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-number">1</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayRemoveValue_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayRemoveValues_1


<div class="example-container" id="aqlArrayRemoveValues_1_container">
<div id="aqlArrayRemoveValues_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REMOVE_VALUES( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;f&quot;</span> ], [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;d&quot;</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-string">&quot;b&quot;</span>,
    <span class="hljs-string">&quot;c&quot;</span>,
    <span class="hljs-string">&quot;e&quot;</span>
  ]
]</pre>
<div id="aqlArrayRemoveValues_1_container_collapse" onclick="$('#aqlArrayRemoveValues_1_long').hide(); $('#aqlArrayRemoveValues_1_short').show(); window.location.hash='aqlArrayRemoveValues_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayRemoveValues_1_short" onclick="$('#aqlArrayRemoveValues_1_short').hide(); $('#aqlArrayRemoveValues_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN REMOVE_VALUES( [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;f&quot;</span> ], [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;d&quot;</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayRemoveValues_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayReverse_1


<div class="example-container" id="aqlArrayReverse_1_container">
<div id="aqlArrayReverse_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN REVERSE ( [<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">10</span>,
    <span class="hljs-number">8</span>,
    <span class="hljs-number">6</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">2</span>
  ]
]</pre>
<div id="aqlArrayReverse_1_container_collapse" onclick="$('#aqlArrayReverse_1_long').hide(); $('#aqlArrayReverse_1_short').show(); window.location.hash='aqlArrayReverse_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayReverse_1_short" onclick="$('#aqlArrayReverse_1_short').hide(); $('#aqlArrayReverse_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN REVERSE ( [<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayReverse_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayShift_1


<div class="example-container" id="aqlArrayShift_1_container">
<div id="aqlArrayShift_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SHIFT( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>
  ]
]</pre>
<div id="aqlArrayShift_1_container_collapse" onclick="$('#aqlArrayShift_1_long').hide(); $('#aqlArrayShift_1_short').show(); window.location.hash='aqlArrayShift_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayShift_1_short" onclick="$('#aqlArrayShift_1_short').hide(); $('#aqlArrayShift_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN SHIFT( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayShift_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayShift_2


<div class="example-container" id="aqlArrayShift_2_container">
<div id="aqlArrayShift_2_long">
<strong>Query:</strong>
<pre>
RETURN SHIFT( [ <span class="hljs-number">1</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  []
]</pre>
</div>
</div>

@endDocuBlock aqlArrayShift_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySlice_1


<div class="example-container" id="aqlArraySlice_1_container">
<div id="aqlArraySlice_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">0</span>, <span class="hljs-number">1</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>
  ]
]</pre>
<div id="aqlArraySlice_1_container_collapse" onclick="$('#aqlArraySlice_1_long').hide(); $('#aqlArraySlice_1_short').show(); window.location.hash='aqlArraySlice_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySlice_1_short" onclick="$('#aqlArraySlice_1_short').hide(); $('#aqlArraySlice_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">0</span>, <span class="hljs-number">1</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySlice_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySlice_2


<div class="example-container" id="aqlArraySlice_2_container">
<div id="aqlArraySlice_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">1</span>, <span class="hljs-number">2</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArraySlice_2_container_collapse" onclick="$('#aqlArraySlice_2_long').hide(); $('#aqlArraySlice_2_short').show(); window.location.hash='aqlArraySlice_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySlice_2_short" onclick="$('#aqlArraySlice_2_short').hide(); $('#aqlArraySlice_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">1</span>, <span class="hljs-number">2</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySlice_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySlice_3


<div class="example-container" id="aqlArraySlice_3_container">
<div id="aqlArraySlice_3_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">3</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">4</span>,
    <span class="hljs-number">5</span>
  ]
]</pre>
<div id="aqlArraySlice_3_container_collapse" onclick="$('#aqlArraySlice_3_long').hide(); $('#aqlArraySlice_3_short').show(); window.location.hash='aqlArraySlice_3_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySlice_3_short" onclick="$('#aqlArraySlice_3_short').hide(); $('#aqlArraySlice_3_long').show();">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">3</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySlice_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySlice_4


<div class="example-container" id="aqlArraySlice_4_container">
<div id="aqlArraySlice_4_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">1</span>, -<span class="hljs-number">1</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>
  ]
]</pre>
<div id="aqlArraySlice_4_container_collapse" onclick="$('#aqlArraySlice_4_long').hide(); $('#aqlArraySlice_4_short').show(); window.location.hash='aqlArraySlice_4_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySlice_4_short" onclick="$('#aqlArraySlice_4_short').hide(); $('#aqlArraySlice_4_long').show();">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">1</span>, -<span class="hljs-number">1</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySlice_4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySlice_5


<div class="example-container" id="aqlArraySlice_5_container">
<div id="aqlArraySlice_5_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">0</span>, -<span class="hljs-number">2</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArraySlice_5_container_collapse" onclick="$('#aqlArraySlice_5_long').hide(); $('#aqlArraySlice_5_short').show(); window.location.hash='aqlArraySlice_5_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySlice_5_short" onclick="$('#aqlArraySlice_5_short').hide(); $('#aqlArraySlice_5_long').show();">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], <span class="hljs-number">0</span>, -<span class="hljs-number">2</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySlice_5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySlice_6


<div class="example-container" id="aqlArraySlice_6_container">
<div id="aqlArraySlice_6_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], -<span class="hljs-number">3</span>, <span class="hljs-number">2</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>
  ]
]</pre>
<div id="aqlArraySlice_6_container_collapse" onclick="$('#aqlArraySlice_6_long').hide(); $('#aqlArraySlice_6_short').show(); window.location.hash='aqlArraySlice_6_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySlice_6_short" onclick="$('#aqlArraySlice_6_short').hide(); $('#aqlArraySlice_6_long').show();">
<strong>Query:</strong>
<pre>
RETURN SLICE( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> ], -<span class="hljs-number">3</span>, <span class="hljs-number">2</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySlice_6


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySorted_1


<div class="example-container" id="aqlArraySorted_1_container">
<div id="aqlArraySorted_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SORTED( [ <span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">2</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">6</span>,
    <span class="hljs-number">8</span>,
    <span class="hljs-number">10</span>
  ]
]</pre>
<div id="aqlArraySorted_1_container_collapse" onclick="$('#aqlArraySorted_1_long').hide(); $('#aqlArraySorted_1_short').show(); window.location.hash='aqlArraySorted_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySorted_1_short" onclick="$('#aqlArraySorted_1_short').hide(); $('#aqlArraySorted_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN SORTED( [ <span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySorted_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArraySortedUnique_1


<div class="example-container" id="aqlArraySortedUnique_1_container">
<div id="aqlArraySortedUnique_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN SORTED_UNIQUE( [ <span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">2</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">6</span>,
    <span class="hljs-number">8</span>,
    <span class="hljs-number">10</span>
  ]
]</pre>
<div id="aqlArraySortedUnique_1_container_collapse" onclick="$('#aqlArraySortedUnique_1_long').hide(); $('#aqlArraySortedUnique_1_short').show(); window.location.hash='aqlArraySortedUnique_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArraySortedUnique_1_short" onclick="$('#aqlArraySortedUnique_1_short').hide(); $('#aqlArraySortedUnique_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN SORTED_UNIQUE( [ <span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArraySortedUnique_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayUnion_1


<div class="example-container" id="aqlArrayUnion_1_container">
<div id="aqlArrayUnion_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN UNION(
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ],
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ]
)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>
  ]
]</pre>
<div id="aqlArrayUnion_1_container_collapse" onclick="$('#aqlArrayUnion_1_long').hide(); $('#aqlArrayUnion_1_short').show(); window.location.hash='aqlArrayUnion_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayUnion_1_short" onclick="$('#aqlArrayUnion_1_short').hide(); $('#aqlArrayUnion_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN UNION(
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ],
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ]
)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayUnion_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayUnion_2


<div class="example-container" id="aqlArrayUnion_2_container">
<div id="aqlArrayUnion_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN UNIQUE(
  UNION(
      [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ],
      [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ]
  )
)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayUnion_2_container_collapse" onclick="$('#aqlArrayUnion_2_long').hide(); $('#aqlArrayUnion_2_short').show(); window.location.hash='aqlArrayUnion_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayUnion_2_short" onclick="$('#aqlArrayUnion_2_short').hide(); $('#aqlArrayUnion_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN UNIQUE(
  UNION(
      [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ],
      [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ]
  )
)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayUnion_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayUnionDistinct_1


<div class="example-container" id="aqlArrayUnionDistinct_1_container">
<div id="aqlArrayUnionDistinct_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN UNION_DISTINCT(
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ],
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ]
)

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">3</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">1</span>
  ]
]</pre>
<div id="aqlArrayUnionDistinct_1_container_collapse" onclick="$('#aqlArrayUnionDistinct_1_long').hide(); $('#aqlArrayUnionDistinct_1_short').show(); window.location.hash='aqlArrayUnionDistinct_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayUnionDistinct_1_short" onclick="$('#aqlArrayUnionDistinct_1_short').hide(); $('#aqlArrayUnionDistinct_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN UNION_DISTINCT(
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ],
  [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ]
)

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayUnionDistinct_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayUnique_1


<div class="example-container" id="aqlArrayUnique_1_container">
<div id="aqlArrayUnique_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN UNIQUE( [ <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span> ] )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>,
    <span class="hljs-number">4</span>,
    <span class="hljs-number">5</span>
  ]
]</pre>
<div id="aqlArrayUnique_1_container_collapse" onclick="$('#aqlArrayUnique_1_long').hide(); $('#aqlArrayUnique_1_short').show(); window.location.hash='aqlArrayUnique_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayUnique_1_short" onclick="$('#aqlArrayUnique_1_short').hide(); $('#aqlArrayUnique_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN UNIQUE( [ <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span> ] )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayUnique_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayUnshift_1


<div class="example-container" id="aqlArrayUnshift_1_container">
<div id="aqlArrayUnshift_1_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN UNSHIFT( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">4</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">4</span>,
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayUnshift_1_container_collapse" onclick="$('#aqlArrayUnshift_1_long').hide(); $('#aqlArrayUnshift_1_short').show(); window.location.hash='aqlArrayUnshift_1_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayUnshift_1_short" onclick="$('#aqlArrayUnshift_1_short').hide(); $('#aqlArrayUnshift_1_long').show();">
<strong>Query:</strong>
<pre>
RETURN UNSHIFT( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">4</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayUnshift_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-array.md -->
@startDocuBlockInline aqlArrayUnshift_2


<div class="example-container" id="aqlArrayUnshift_2_container">
<div id="aqlArrayUnshift_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
RETURN UNSHIFT( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">2</span>, <span class="hljs-literal">true</span> )

</pre>
<strong>Query results:</strong>
<pre>
[
  [
    <span class="hljs-number">1</span>,
    <span class="hljs-number">2</span>,
    <span class="hljs-number">3</span>
  ]
]</pre>
<div id="aqlArrayUnshift_2_container_collapse" onclick="$('#aqlArrayUnshift_2_long').hide(); $('#aqlArrayUnshift_2_short').show(); window.location.hash='aqlArrayUnshift_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlArrayUnshift_2_short" onclick="$('#aqlArrayUnshift_2_short').hide(); $('#aqlArrayUnshift_2_long').show();">
<strong>Query:</strong>
<pre>
RETURN UNSHIFT( [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ], <span class="hljs-number">2</span>, <span class="hljs-literal">true</span> )

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlArrayUnshift_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-queries-no-collections.md -->
@startDocuBlockInline aqlWithoutCollections_1


<div class="example-container" id="aqlWithoutCollections_1_container">
<div id="aqlWithoutCollections_1_long">
<strong>Query:</strong>
<pre>
RETURN <span class="hljs-string">&quot;this will be returned&quot;</span>

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;this will be returned&quot;</span>
]</pre>
</div>
</div>

@endDocuBlock aqlWithoutCollections_1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-queries-no-collections.md -->
@startDocuBlockInline aqlWithoutCollections_2


<div class="example-container" id="aqlWithoutCollections_2_container">
<div id="aqlWithoutCollections_2_long" style="display: none;">
<strong>Query:</strong>
<pre>
LET array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]
RETURN { array, <span class="hljs-attr">sum</span>: SUM(array) }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;array&quot;</span>: [
      <span class="hljs-number">1</span>,
      <span class="hljs-number">2</span>,
      <span class="hljs-number">3</span>,
      <span class="hljs-number">4</span>
    ],
    <span class="hljs-string">&quot;sum&quot;</span>: <span class="hljs-number">10</span>
  }
]</pre>
<div id="aqlWithoutCollections_2_container_collapse" onclick="$('#aqlWithoutCollections_2_long').hide(); $('#aqlWithoutCollections_2_short').show(); window.location.hash='aqlWithoutCollections_2_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlWithoutCollections_2_short" onclick="$('#aqlWithoutCollections_2_short').hide(); $('#aqlWithoutCollections_2_long').show();">
<strong>Query:</strong>
<pre>
LET array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]
RETURN { array, <span class="hljs-attr">sum</span>: SUM(array) }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlWithoutCollections_2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-queries-no-collections.md -->
@startDocuBlockInline aqlWithoutCollections_3


<div class="example-container" id="aqlWithoutCollections_3_container">
<div id="aqlWithoutCollections_3_long" style="display: none;">
<strong>Query:</strong>
<pre>
FOR year IN [ <span class="hljs-number">2011</span>, <span class="hljs-number">2012</span>, <span class="hljs-number">2013</span> ]
FOR quarter IN [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ]
  RETURN {
    year,
    quarter,
    <span class="hljs-attr">formatted</span>: CONCAT(quarter, <span class="hljs-string">&quot; / &quot;</span>, year)
  }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2011</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">1</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;1 / 2011&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2011</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;2 / 2011&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2011</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">3</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;3 / 2011&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2011</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">4</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;4 / 2011&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2012</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">1</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;1 / 2012&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2012</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;2 / 2012&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2012</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">3</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;3 / 2012&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2012</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">4</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;4 / 2012&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2013</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">1</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;1 / 2013&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2013</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">2</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;2 / 2013&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2013</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">3</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;3 / 2013&quot;</span>
  },
  {
    <span class="hljs-string">&quot;year&quot;</span>: <span class="hljs-number">2013</span>,
    <span class="hljs-string">&quot;quarter&quot;</span>: <span class="hljs-number">4</span>,
    <span class="hljs-string">&quot;formatted&quot;</span>: <span class="hljs-string">&quot;4 / 2013&quot;</span>
  }
]</pre>
<div id="aqlWithoutCollections_3_container_collapse" onclick="$('#aqlWithoutCollections_3_long').hide(); $('#aqlWithoutCollections_3_short').show(); window.location.hash='aqlWithoutCollections_3_container';" class="example_show_button">Hide query result</div></div>
<div id="aqlWithoutCollections_3_short" onclick="$('#aqlWithoutCollections_3_short').hide(); $('#aqlWithoutCollections_3_long').show();">
<strong>Query:</strong>
<pre>
FOR year IN [ <span class="hljs-number">2011</span>, <span class="hljs-number">2012</span>, <span class="hljs-number">2013</span> ]
FOR quarter IN [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span> ]
  RETURN {
    year,
    quarter,
    <span class="hljs-attr">formatted</span>: CONCAT(quarter, <span class="hljs-string">&quot; / &quot;</span>, year)
  }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

@endDocuBlock aqlWithoutCollections_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_01_create_graph


<div class="example-container" id="GRAPHKSP_01_create_graph_container">
<div id="GRAPHKSP_01_create_graph_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
arangosh&gt; db.places.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykloe---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Inverness&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykloi---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Aberdeen&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklom---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Leuchars&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklom--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;StAndrews&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykloq---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Edinburgh&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklou---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Glasgow&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;York&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklou--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;York&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykloy---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Carlisle&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklo2---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Birmingham&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;London&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklo2--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;London&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklo2--C&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Brussels&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklo6---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Cologne&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklo6--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Toronto&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklp----&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Winnipeg&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklp---A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Saskatoon&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpC---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Edmonton&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpC--A&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Jasper&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;places/Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpG---&quot;</span>, 
    <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;Vancouver&quot;</span> 
  } 
]
arangosh&gt; db.connections.toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66406&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66406&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpG--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66408&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66408&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Inverness&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpK---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66410&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66410&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpK--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66412&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66412&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Aberdeen&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpO---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66414&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66414&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpO--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66416&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66416&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpS---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66418&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66418&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpS--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66420&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66420&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpW---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66422&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66422&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpW--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66424&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66424&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edinburgh&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpa---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">4</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66426&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66426&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpe---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66428&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66428&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Glasgow&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpe--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66430&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66430&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpi---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66432&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66432&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpi--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66434&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66434&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpm---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66436&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66436&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Carlisle&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpm--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66438&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66438&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpq---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66440&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66440&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Birmingham&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpq--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66442&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66442&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpu---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">0.2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66444&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66444&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/StAndrews&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Leuchars&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpu--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">0.2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66446&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66446&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpy---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.8</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66448&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66448&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/York&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklpy--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66450&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66450&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklp2---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66452&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66452&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/London&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklp2--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">3.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66454&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66454&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklp6---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66456&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66456&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Cologne&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Brussels&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklq----&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">1.5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66458&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66458&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklq---A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">36</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66460&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66460&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Toronto&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqC---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">35</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66462&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66462&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqC--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">12</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66464&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66464&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Winnipeg&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqG---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66466&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66466&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqG--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">12</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66468&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66468&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Saskatoon&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqK---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">17</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66470&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66470&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqK--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">6</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66472&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66472&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Edmonton&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqO---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">5</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66474&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66474&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqS---&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">12</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;66476&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;connections/66476&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;places/Vancouver&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;places/Jasper&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yklqS--A&quot;</span>, 
    <span class="hljs-string">&quot;travelTime&quot;</span> : <span class="hljs-number">13</span> 
  } 
]
</pre>
<div id="GRAPHKSP_01_create_graph_container_collapse" onclick="$('#GRAPHKSP_01_create_graph_long').hide(); $('#GRAPHKSP_01_create_graph_short').show(); window.location.hash='GRAPHKSP_01_create_graph_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHKSP_01_create_graph_short" onclick="$('#GRAPHKSP_01_create_graph_short').hide(); $('#GRAPHKSP_01_create_graph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
arangosh&gt; db.places.toArray();
arangosh&gt; db.connections.toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHKSP_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_01_Aberdeen_to_London


<div class="example-container" id="GRAPHKSP_01_Aberdeen_to_London_container">
<div id="GRAPHKSP_01_Aberdeen_to_London_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR v, e IN OUTBOUND SHORTEST_PATH <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/London&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      RETURN { <span class="hljs-attr">place</span>: v.label, <span class="hljs-attr">travelTime</span>: e.travelTime }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;place&quot;</span>: <span class="hljs-string">&quot;Aberdeen&quot;</span>,
    <span class="hljs-string">&quot;travelTime&quot;</span>: <span class="hljs-literal">null</span>
  },
  {
    <span class="hljs-string">&quot;place&quot;</span>: <span class="hljs-string">&quot;Leuchars&quot;</span>,
    <span class="hljs-string">&quot;travelTime&quot;</span>: <span class="hljs-number">1.5</span>
  },
  {
    <span class="hljs-string">&quot;place&quot;</span>: <span class="hljs-string">&quot;Edinburgh&quot;</span>,
    <span class="hljs-string">&quot;travelTime&quot;</span>: <span class="hljs-number">1.5</span>
  },
  {
    <span class="hljs-string">&quot;place&quot;</span>: <span class="hljs-string">&quot;York&quot;</span>,
    <span class="hljs-string">&quot;travelTime&quot;</span>: <span class="hljs-number">3.5</span>
  },
  {
    <span class="hljs-string">&quot;place&quot;</span>: <span class="hljs-string">&quot;London&quot;</span>,
    <span class="hljs-string">&quot;travelTime&quot;</span>: <span class="hljs-number">1.8</span>
  }
]</pre>
<div id="GRAPHKSP_01_Aberdeen_to_London_container_collapse" onclick="$('#GRAPHKSP_01_Aberdeen_to_London_long').hide(); $('#GRAPHKSP_01_Aberdeen_to_London_short').show(); window.location.hash='GRAPHKSP_01_Aberdeen_to_London_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHKSP_01_Aberdeen_to_London_short" onclick="$('#GRAPHKSP_01_Aberdeen_to_London_short').hide(); $('#GRAPHKSP_01_Aberdeen_to_London_long').show();">
<strong>Query:</strong>
<pre>
  FOR v, e IN OUTBOUND SHORTEST_PATH <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/London&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      RETURN { <span class="hljs-attr">place</span>: v.label, <span class="hljs-attr">travelTime</span>: e.travelTime }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHKSP_01_Aberdeen_to_London


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_02_Aberdeen_to_London


<div class="example-container" id="GRAPHKSP_02_Aberdeen_to_London_container">
<div id="GRAPHKSP_02_Aberdeen_to_London_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/London&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      LIMIT <span class="hljs-number">1</span>
      RETURN { <span class="hljs-attr">places</span>: p.vertices[*].label, <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;Aberdeen&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;York&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">3.5</span>,
      <span class="hljs-number">1.8</span>
    ]
  }
]</pre>
<div id="GRAPHKSP_02_Aberdeen_to_London_container_collapse" onclick="$('#GRAPHKSP_02_Aberdeen_to_London_long').hide(); $('#GRAPHKSP_02_Aberdeen_to_London_short').show(); window.location.hash='GRAPHKSP_02_Aberdeen_to_London_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHKSP_02_Aberdeen_to_London_short" onclick="$('#GRAPHKSP_02_Aberdeen_to_London_short').hide(); $('#GRAPHKSP_02_Aberdeen_to_London_long').show();">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/London&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      LIMIT <span class="hljs-number">1</span>
      RETURN { <span class="hljs-attr">places</span>: p.vertices[*].label, <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHKSP_02_Aberdeen_to_London


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_03_Aberdeen_to_London


<div class="example-container" id="GRAPHKSP_03_Aberdeen_to_London_container">
<div id="GRAPHKSP_03_Aberdeen_to_London_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/London&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      LIMIT <span class="hljs-number">3</span>
      RETURN {
          <span class="hljs-attr">places</span>: p.vertices[*].label,
          <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime,
          <span class="hljs-attr">travelTimeTotal</span>: SUM(p.edges[*].travelTime)
      }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;Aberdeen&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;York&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">3.5</span>,
      <span class="hljs-number">1.8</span>
    ],
    <span class="hljs-string">&quot;travelTimeTotal&quot;</span>: <span class="hljs-number">8.3</span>
  },
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;Aberdeen&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;York&quot;</span>,
      <span class="hljs-string">&quot;Carlisle&quot;</span>,
      <span class="hljs-string">&quot;Birmingham&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">3.5</span>,
      <span class="hljs-number">3.5</span>,
      <span class="hljs-number">2</span>,
      <span class="hljs-number">1.5</span>
    ],
    <span class="hljs-string">&quot;travelTimeTotal&quot;</span>: <span class="hljs-number">13.5</span>
  },
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;Aberdeen&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;Glasgow&quot;</span>,
      <span class="hljs-string">&quot;Carlisle&quot;</span>,
      <span class="hljs-string">&quot;York&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1</span>,
      <span class="hljs-number">1</span>,
      <span class="hljs-number">2.5</span>,
      <span class="hljs-number">1.8</span>
    ],
    <span class="hljs-string">&quot;travelTimeTotal&quot;</span>: <span class="hljs-number">9.3</span>
  }
]</pre>
<div id="GRAPHKSP_03_Aberdeen_to_London_container_collapse" onclick="$('#GRAPHKSP_03_Aberdeen_to_London_long').hide(); $('#GRAPHKSP_03_Aberdeen_to_London_short').show(); window.location.hash='GRAPHKSP_03_Aberdeen_to_London_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHKSP_03_Aberdeen_to_London_short" onclick="$('#GRAPHKSP_03_Aberdeen_to_London_short').hide(); $('#GRAPHKSP_03_Aberdeen_to_London_long').show();">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/London&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      LIMIT <span class="hljs-number">3</span>
      RETURN {
          <span class="hljs-attr">places</span>: p.vertices[*].label,
          <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime,
          <span class="hljs-attr">travelTimeTotal</span>: SUM(p.edges[*].travelTime)
      }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHKSP_03_Aberdeen_to_London


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_04_Aberdeen_to_Toronto


<div class="example-container" id="GRAPHKSP_04_Aberdeen_to_Toronto_container">
<div id="GRAPHKSP_04_Aberdeen_to_Toronto_long">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/Aberdeen&#x27;</span> TO <span class="hljs-string">&#x27;places/Toronto&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
      LIMIT <span class="hljs-number">3</span>
      RETURN {
          <span class="hljs-attr">places</span>: p.vertices[*].label,
          <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime,
          <span class="hljs-attr">travelTimeTotal</span>: SUM(p.edges[*].travelTime)
      }

</pre>
<strong>Query results:</strong>
<pre>
[]</pre>
</div>
</div>

    @endDocuBlock GRAPHKSP_04_Aberdeen_to_Toronto


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_05_StAndrews_to_Cologne


<div class="example-container" id="GRAPHKSP_05_StAndrews_to_Cologne_container">
<div id="GRAPHKSP_05_StAndrews_to_Cologne_long" style="display: none;">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/StAndrews&#x27;</span> TO <span class="hljs-string">&#x27;places/Cologne&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
  OPTIONS {
      <span class="hljs-attr">weightAttribute</span>: <span class="hljs-string">&#x27;travelTime&#x27;</span>,
      <span class="hljs-attr">defaultWeight</span>: <span class="hljs-number">15</span>
  }
      LIMIT <span class="hljs-number">3</span>
      RETURN {
          <span class="hljs-attr">places</span>: p.vertices[*].label,
          <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime,
          <span class="hljs-attr">travelTimeTotal</span>: SUM(p.edges[*].travelTime)
      }

</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;StAndrews&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;York&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>,
      <span class="hljs-string">&quot;Brussels&quot;</span>,
      <span class="hljs-string">&quot;Cologne&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">0.2</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">3.5</span>,
      <span class="hljs-number">1.8</span>,
      <span class="hljs-number">2.5</span>,
      <span class="hljs-number">2</span>
    ],
    <span class="hljs-string">&quot;travelTimeTotal&quot;</span>: <span class="hljs-number">11.5</span>
  },
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;StAndrews&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;Glasgow&quot;</span>,
      <span class="hljs-string">&quot;Carlisle&quot;</span>,
      <span class="hljs-string">&quot;Birmingham&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>,
      <span class="hljs-string">&quot;Brussels&quot;</span>,
      <span class="hljs-string">&quot;Cologne&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">0.2</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1</span>,
      <span class="hljs-number">1</span>,
      <span class="hljs-number">2</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">2.5</span>,
      <span class="hljs-number">2</span>
    ],
    <span class="hljs-string">&quot;travelTimeTotal&quot;</span>: <span class="hljs-number">11.7</span>
  },
  {
    <span class="hljs-string">&quot;places&quot;</span>: [
      <span class="hljs-string">&quot;StAndrews&quot;</span>,
      <span class="hljs-string">&quot;Leuchars&quot;</span>,
      <span class="hljs-string">&quot;Edinburgh&quot;</span>,
      <span class="hljs-string">&quot;Glasgow&quot;</span>,
      <span class="hljs-string">&quot;Carlisle&quot;</span>,
      <span class="hljs-string">&quot;York&quot;</span>,
      <span class="hljs-string">&quot;London&quot;</span>,
      <span class="hljs-string">&quot;Brussels&quot;</span>,
      <span class="hljs-string">&quot;Cologne&quot;</span>
    ],
    <span class="hljs-string">&quot;travelTimes&quot;</span>: [
      <span class="hljs-number">0.2</span>,
      <span class="hljs-number">1.5</span>,
      <span class="hljs-number">1</span>,
      <span class="hljs-number">1</span>,
      <span class="hljs-number">2.5</span>,
      <span class="hljs-number">1.8</span>,
      <span class="hljs-number">2.5</span>,
      <span class="hljs-number">2</span>
    ],
    <span class="hljs-string">&quot;travelTimeTotal&quot;</span>: <span class="hljs-number">12.5</span>
  }
]</pre>
<div id="GRAPHKSP_05_StAndrews_to_Cologne_container_collapse" onclick="$('#GRAPHKSP_05_StAndrews_to_Cologne_long').hide(); $('#GRAPHKSP_05_StAndrews_to_Cologne_short').show(); window.location.hash='GRAPHKSP_05_StAndrews_to_Cologne_container';" class="example_show_button">Hide query result</div></div>
<div id="GRAPHKSP_05_StAndrews_to_Cologne_short" onclick="$('#GRAPHKSP_05_StAndrews_to_Cologne_short').hide(); $('#GRAPHKSP_05_StAndrews_to_Cologne_long').show();">
<strong>Query:</strong>
<pre>
  FOR p IN OUTBOUND K_SHORTEST_PATHS <span class="hljs-string">&#x27;places/StAndrews&#x27;</span> TO <span class="hljs-string">&#x27;places/Cologne&#x27;</span>
  GRAPH <span class="hljs-string">&#x27;kShortestPathsGraph&#x27;</span>
  OPTIONS {
      <span class="hljs-attr">weightAttribute</span>: <span class="hljs-string">&#x27;travelTime&#x27;</span>,
      <span class="hljs-attr">defaultWeight</span>: <span class="hljs-number">15</span>
  }
      LIMIT <span class="hljs-number">3</span>
      RETURN {
          <span class="hljs-attr">places</span>: p.vertices[*].label,
          <span class="hljs-attr">travelTimes</span>: p.edges[*].travelTime,
          <span class="hljs-attr">travelTimeTotal</span>: SUM(p.edges[*].travelTime)
      }

</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock GRAPHKSP_05_StAndrews_to_Cologne


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-kshortest-paths.md -->
    @startDocuBlockInline GRAPHKSP_99_drop_graph


<div class="example-container" id="GRAPHKSP_99_drop_graph_container">
<div id="GRAPHKSP_99_drop_graph_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/graph-examples/example-graph.js&quot;</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">&quot;kShortestPathsGraph&quot;</span>);
</pre>
</div>
</div>

    @endDocuBlock GRAPHKSP_99_drop_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-query-statistics.md -->
    @startDocuBlockInline 06_workWithAQL_statementsExtra


<div class="example-container" id="06_workWithAQL_statementsExtra_container">
<div id="06_workWithAQL_statementsExtra_long" style="display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`
........&gt;   FOR i IN 1..@count INSERT
........&gt;     { _key: CONCAT(&#x27;anothertest&#x27;, TO_STRING(i)) }
........&gt;     INTO mycollection`</span>,
........&gt;  {<span class="hljs-attr">count</span>: <span class="hljs-number">100</span>},
........&gt;  {},
........&gt;  {<span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; ).getExtra();
{ 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0039992183446884155</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">44304</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
}
arangosh&gt; db._query({
........&gt;  <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">`FOR i IN 200..@count INSERT
........&gt;              { _key: CONCAT(&#x27;anothertest&#x27;, TO_STRING(i)) }
........&gt;              INTO mycollection`</span>,
........&gt;  <span class="hljs-string">&quot;bindVars&quot;</span>: {<span class="hljs-attr">count</span>: <span class="hljs-number">300</span>},
........&gt;  <span class="hljs-string">&quot;options&quot;</span>: { <span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; }).getExtra();
{ 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">101</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.003959335386753082</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">44467</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
}
</pre>
<div id="06_workWithAQL_statementsExtra_container_collapse" onclick="$('#06_workWithAQL_statementsExtra_long').hide(); $('#06_workWithAQL_statementsExtra_short').show(); window.location.hash='06_workWithAQL_statementsExtra_container';" class="example_show_button">Hide execution results</div></div>
<div id="06_workWithAQL_statementsExtra_short" onclick="$('#06_workWithAQL_statementsExtra_short').hide(); $('#06_workWithAQL_statementsExtra_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`
........&gt;   FOR i IN 1..@count INSERT
........&gt;     { _key: CONCAT(&#x27;anothertest&#x27;, TO_STRING(i)) }
........&gt;     INTO mycollection`</span>,
........&gt;  {<span class="hljs-attr">count</span>: <span class="hljs-number">100</span>},
........&gt;  {},
........&gt;  {<span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; ).getExtra();
arangosh&gt; db._query({
........&gt;  <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">`FOR i IN 200..@count INSERT
........&gt;              { _key: CONCAT(&#x27;anothertest&#x27;, TO_STRING(i)) }
........&gt;              INTO mycollection`</span>,
........&gt;  <span class="hljs-string">&quot;bindVars&quot;</span>: {<span class="hljs-attr">count</span>: <span class="hljs-number">300</span>},
........&gt;  <span class="hljs-string">&quot;options&quot;</span>: { <span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; }).getExtra();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statementsExtra


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-parsing-queries.md -->
    @startDocuBlockInline 11_workWithAQL_parseQueries


<div class="example-container" id="11_workWithAQL_parseQueries_container">
<div id="11_workWithAQL_parseQueries_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">&quot;FOR doc IN @@collection FILTER doc.foo == @bar RETURN doc&quot;</span>);
arangosh&gt; stmt.parse();
{ 
  <span class="hljs-string">&quot;bindVars&quot;</span> : [ 
    <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;@collection&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collections&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ast&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;for&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;variable&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;datasource parameter&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;@collection&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;no-op&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;filter&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
              <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
                      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                    } 
                  ] 
                }, 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;parameter&quot;</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span> 
                } 
              ] 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;return&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;doc&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        } 
      ] 
    } 
  ] 
}
</pre>
<div id="11_workWithAQL_parseQueries_container_collapse" onclick="$('#11_workWithAQL_parseQueries_long').hide(); $('#11_workWithAQL_parseQueries_short').show(); window.location.hash='11_workWithAQL_parseQueries_container';" class="example_show_button">Hide execution results</div></div>
<div id="11_workWithAQL_parseQueries_short" onclick="$('#11_workWithAQL_parseQueries_short').hide(); $('#11_workWithAQL_parseQueries_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">&quot;FOR doc IN @@collection FILTER doc.foo == @bar RETURN doc&quot;</span>);
arangosh&gt; stmt.parse();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 11_workWithAQL_parseQueries


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-multiple-paths.md -->
    @startDocuBlockInline GRAPHTRAV_multiplePathSearch


<div class="example-container" id="GRAPHTRAV_multiplePathSearch_container">
<div id="GRAPHTRAV_multiplePathSearch_long">
<strong>Query:</strong>
<pre>
  RETURN LENGTH(
    FOR v IN OUTBOUND
      SHORTEST_PATH <span class="hljs-string">&quot;mps_verts/A&quot;</span> TO <span class="hljs-string">&quot;mps_verts/C&quot;</span> mps_edges
        RETURN v
  )   

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-number">3</span>
]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_multiplePathSearch


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-multiple-paths.md -->
    @startDocuBlockInline GRAPHTRAV_multiplePathSearch2


<div class="example-container" id="GRAPHTRAV_multiplePathSearch2_container">
<div id="GRAPHTRAV_multiplePathSearch2_long">
<strong>Query:</strong>
<pre>
  FOR v, e, p IN <span class="hljs-number">2.</span><span class="hljs-number">.2</span> OUTBOUND <span class="hljs-string">&quot;mps_verts/A&quot;</span> mps_edges
     FILTER v._id == <span class="hljs-string">&quot;mps_verts/C&quot;</span>
       RETURN CONCAT_SEPARATOR(<span class="hljs-string">&quot; -&gt; &quot;</span>, p.vertices[*]._key)

</pre>
<strong>Query results:</strong>
<pre>
[
  <span class="hljs-string">&quot;A -&gt; B -&gt; C&quot;</span>,
  <span class="hljs-string">&quot;A -&gt; D -&gt; C&quot;</span>
]</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_multiplePathSearch2


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionProperties.md -->
@startDocuBlock collectionProperties

@brief gets or sets the properties of a collection
`collection.properties()`

Returns an object containing all collection properties.

* *waitForSync*: If *true* creating a document will only return
  after the data was synced to disk.

* *journalSize* : The size of the journal in bytes.
  This option is meaningful for the MMFiles storage engine only.

* *isVolatile*: If *true* then the collection data will be
  kept in memory only and ArangoDB will not write or sync the data
  to disk.
  This option is meaningful for the MMFiles storage engine only.

* *keyOptions* (optional) additional options for key generation. This is
  a JSON array containing the following attributes (note: some of the
  attributes are optional):
  * *type*: the type of the key generator used for the collection.
  * *allowUserKeys*: if set to *true*, then it is allowed to supply
    own key values in the *_key* attribute of a document. If set to
    *false*, then the key generator will solely be responsible for
    generating keys and supplying own key values in the *_key* attribute
    of documents is considered an error.
  * *increment*: increment value for *autoincrement* key generator.
    Not used for other key generator types.
  * *offset*: initial offset value for *autoincrement* key generator.
    Not used for other key generator types.

* *schema* (optional, default is *null*): 
  Object that specifies the collection level document schema for documents.
  The attribute keys `rule`, `level` and `message` must follow the rules
  documented in [Document Schema Validation](https://www.arangodb.com/docs/devel/document-schema-validation.html)

In a cluster setup, the result will also contain the following attributes:

* *numberOfShards*: the number of shards of the collection.

* *shardKeys*: contains the names of document attributes that are used to
  determine the target shard for documents.

* *replicationFactor*: determines how many copies of each shard are kept
  on different DB-Servers. Has to be in the range of 1-10 or the string
  `"satellite"` for a SatelliteCollection (Enterprise Edition only).
  _(cluster only)_

* *writeConcern*: determines how many copies of each shard are required to be
  in sync on the different DB-Servers. If there are less then these many copies
  in the cluster a shard will refuse to write. Writes to shards with enough
  up-to-date copies will succeed at the same time however. The value of
  *writeConcern* can not be larger than *replicationFactor*. _(cluster only)_

* *shardingStrategy*: the sharding strategy selected for the collection.
  This attribute will only be populated in cluster mode and is not populated
  in single-server mode. _(cluster only)_

`collection.properties(properties)`

Changes the collection properties. *properties* must be an object with
one or more of the following attribute(s):

* *waitForSync*: If *true* creating a document will only return
  after the data was synced to disk.

* *journalSize*: The size of the journal in bytes.
  This option is meaningful for the MMFiles storage engine only.

* *replicationFactor*: Change the number of shard copies kept on
  different DB-Servers. Valid values are integer numbers in the range of 1-10
  or the string `"satellite"` for a SatelliteCollection (Enterprise Edition only).
  _(cluster only)_

* *writeConcern*: change how many copies of each shard are required to be
  in sync on the different DB-Servers. If there are less then these many copies
  in the cluster a shard will refuse to write. Writes to shards with enough
  up-to-date copies will succeed at the same time however. The value of
  *writeConcern* can not be larger than *replicationFactor*. _(cluster only)_

**Note**: some other collection properties, such as *type*, *isVolatile*,
*keyOptions*, *numberOfShards* or *shardingStrategy* cannot be changed once 
the collection is created.

@EXAMPLES

Read all properties


<div class="example-container" id="collectionProperties_container">
<div id="collectionProperties_long" style="display: none;">
<pre>
arangosh&gt; db.example.properties();
{ 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span> 
}
</pre>
<div id="collectionProperties_container_collapse" onclick="$('#collectionProperties_long').hide(); $('#collectionProperties_short').show(); window.location.hash='collectionProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionProperties_short" onclick="$('#collectionProperties_short').hide(); $('#collectionProperties_long').show();">
<pre>
arangosh&gt; db.example.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


Change a property


<div class="example-container" id="collectionProperty_container">
<div id="collectionProperty_long" style="display: none;">
<pre>
arangosh&gt; db.example.properties({ <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span> 
}
</pre>
<div id="collectionProperty_container_collapse" onclick="$('#collectionProperty_long').hide(); $('#collectionProperty_short').show(); window.location.hash='collectionProperty_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionProperty_short" onclick="$('#collectionProperty_short').hide(); $('#collectionProperty_long').show();">
<pre>
arangosh&gt; db.example.properties({ <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/foxxQueuesPollInterval.md -->
@startDocuBlock foxxQueuesPollInterval

@brief poll interval for Foxx queues
`--foxx.queues-poll-interval value`

The poll interval for the Foxx queues manager. The value is specified in
seconds. Lower values will mean more immediate and more frequent Foxx
queue job execution, but will make the queue thread wake up and query the
queues more often. When set to a low value, the queue thread might cause
CPU load.

The default is *1* second. If Foxx queues are not used much, then this
value may be increased to make the queues thread wake up less.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/general_graph_example_description.md -->
@startDocuBlock general_graph_example_description


For many of the following functions *examples* can be passed in as a parameter.
*Examples* are used to filter the result set for objects that match the conditions.
These *examples* can have the following values:

* *null*, there is no matching executed all found results are valid.
* A *string*, only results are returned, which *_id* equal the value of the string
* An example *object*, defining a set of attributes.
    Only results having these attributes are matched.
* A *list* containing example *objects* and/or *strings*.
    All results matching at least one of the elements in the list are returned.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionGeo.md -->
@startDocuBlock collectionGeo

@brief constructs a geo index selection
`collection.geo(location-attribute)`

Looks up a geo index defined on attribute *location_attribute*.

Returns a geo index object if an index was found. The `near` or
`within` operators can then be used to execute a geo-spatial query on
this particular index.

This is useful for collections with multiple defined geo indexes.

`collection.geo(location_attribute, true)`

Looks up a geo index on a compound attribute *location_attribute*.

Returns a geo index object if an index was found. The `near` or
`within` operators can then be used to execute a geo-spatial query on
this particular index.

`collection.geo(latitude_attribute, longitude_attribute)`

Looks up a geo index defined on the two attributes *latitude_attribute*
and *longitude-attribute*.

Returns a geo index object if an index was found. The `near` or
`within` operators can then be used to execute a geo-spatial query on
this particular index.

**Note**: this method is not yet supported by the RocksDB storage engine.

Note: the *geo* simple query helper function is **deprecated** as of ArangoDB
2.6. The function may be removed in future versions of ArangoDB. The preferred
way for running geo queries is to use their AQL equivalents.

@EXAMPLES

Assume you have a location stored as list in the attribute *home*
and a destination stored in the attribute *work*. Then you can use the
`geo` operator to select which geo-spatial attributes (and thus which
index) to use in a `near` query.


<div class="example-container" id="geoIndexSimpleQuery_container">
<div id="geoIndexSimpleQuery_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.complex.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
[ArangoError <span class="hljs-number">1570</span>: no suitable geo index found <span class="hljs-keyword">for</span> geo restriction on <span class="hljs-string">&#x27;complex&#x27;</span>]
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;home&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;home&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;complex/86979&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769244388130816&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86308&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86308&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldb----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/170&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86310&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86310&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldb---A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/180&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">180</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86382&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86382&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldcC---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/170&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      -<span class="hljs-number">170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86234&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86234&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldZ6---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-10/170&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      -<span class="hljs-number">170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86238&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86238&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylda----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/-180&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">180</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ] 
  } 
]
arangosh&gt; db.complex.geo(<span class="hljs-string">&quot;work&quot;</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
[ArangoError <span class="hljs-number">1570</span>: no suitable geo index found <span class="hljs-keyword">for</span> geo restriction on <span class="hljs-string">&#x27;complex&#x27;</span>]
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;work&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;work&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;complex/86989&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769244400713728&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.complex.geo(<span class="hljs-string">&quot;work&quot;</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86308&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86308&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldb----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/170&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86310&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86310&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldb---A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/180&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">180</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86382&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86382&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldcC---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/170&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      -<span class="hljs-number">170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86234&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86234&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yldZ6---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-10/170&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      -<span class="hljs-number">170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;86238&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;complex/86238&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylda----&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/-180&quot;</span>, 
    <span class="hljs-string">&quot;home&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">180</span> 
    ], 
    <span class="hljs-string">&quot;work&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ] 
  } 
]
</pre>
<div id="geoIndexSimpleQuery_container_collapse" onclick="$('#geoIndexSimpleQuery_long').hide(); $('#geoIndexSimpleQuery_short').show(); window.location.hash='geoIndexSimpleQuery_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexSimpleQuery_short" onclick="$('#geoIndexSimpleQuery_short').hide(); $('#geoIndexSimpleQuery_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = -<span class="hljs-number">180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.complex.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;home&quot;</span> ] });
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
arangosh&gt; db.complex.geo(<span class="hljs-string">&quot;work&quot;</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;work&quot;</span> ] });
arangosh&gt; db.complex.geo(<span class="hljs-string">&quot;work&quot;</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/databaseForceSyncProperties.md -->
@startDocuBlock databaseForceSyncProperties

@brief force syncing of collection properties to disk
`--database.force-sync-properties boolean`

Force syncing of collection properties to disk after creating a collection
or updating its properties.

If turned off, no fsync will happen for the collection and database
properties stored in `parameter.json` files in the file system. Turning
off this option will speed up workloads that create and drop a lot of
collections (e.g. test suites).

The default is *true*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/databaseMaximalJournalSize.md -->
@startDocuBlock databaseMaximalJournalSize


`--database.maximal-journal-size size`

Maximal size of journal in bytes. Can be overwritten when creating a new
collection. Note that this also limits the maximal size of a single
document.

The default is *32MB*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/foxxStartup.md -->
@startDocuBlock foxxStartup

@brief enable or disable the Foxx service propagation on startup
`--foxx.force-update-on-startup flag`

if *true*, all Foxx services in all databases will be synchronized between
multiple coordinators during the boot sequence. This ensures that all Foxx
services are up-to-date when a coordinator reports itself as ready.

In case the option is set to `false` (i.e. no waiting), the coordinator 
will complete the boot sequence faster, and the Foxx services will be 
propagated lazily. Until the initialization procedure has completed for
the local Foxx apps, any request to a Foxx app will be responded to with
an HTTP 500 error and message 

    waiting for initialization of Foxx services in this database 

This can cause an unavailability window for Foxx services on coordinator
startup for the initial requests to Foxx apps until the app propagation 
has completed.
  
When not using Foxx, this option should be set to *false* to benefit from a 
faster coordinator startup.
Deployments relying on Foxx apps being available as soon as a coordinator 
is integrated or responding should set this option to *true* (which is 
the default value).

The option only has an effect for cluster setups. On single servers and in 
active failover mode, all Foxx apps will be available from the very beginning.

Note: ArangoDB 3.8 changes the default value to *false* for this option.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionNear.md -->
@startDocuBlock collectionNear

@brief constructs a near query for a collection
`collection.near(latitude, longitude)`

The returned list is sorted according to the distance, with the nearest
document to the coordinate (*latitude*, *longitude*) coming first.
If there are near documents of equal distance, documents are chosen randomly
from this set until the limit is reached. It is possible to change the limit
using the *limit* operator.

In order to use the *near* operator, a geo index must be defined for the
collection. This index also defines which attribute holds the coordinates
for the document.  If you have more then one geo-spatial index, you can use
the *geo* operator to select a particular index.

*Note*: `near` does not support negative skips.
//     However, you can still use `limit` followed to skip.

`collection.near(latitude, longitude).limit(limit)`

Limits the result to limit documents instead of the default 100.

*Note*: Unlike with multiple explicit limits, `limit` will raise
the implicit default limit imposed by `within`.

`collection.near(latitude, longitude).distance()`

This will add an attribute `distance` to all documents returned, which
contains the distance between the given point and the document in meters.

`collection.near(latitude, longitude).distance(name)`

This will add an attribute *name* to all documents returned, which
contains the distance between the given point and the document in meters.

**Note**: this method is not yet supported by the RocksDB storage engine.

Note: the *near* simple query function is **deprecated** as of ArangoDB 2.6.
The function may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to use the AQL *NEAR* function in an AQL query as follows:

```js
FOR doc IN NEAR(@@collection, @latitude, @longitude, @limit)
    RETURN doc
```

@EXAMPLES

To get the nearest two locations:


<div class="example-container" id="007_collectionNear_container">
<div id="007_collectionNear_long" style="display: none;">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;loc&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;loc&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;geo/234&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769168040263680&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;   <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;        name : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;        loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;940&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/940&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWoG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/0&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1014&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/1014&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykWpG--A&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/0&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">0</span> 
    ] 
  } 
]
</pre>
<div id="007_collectionNear_container_collapse" onclick="$('#007_collectionNear_long').hide(); $('#007_collectionNear_short').show(); window.location.hash='007_collectionNear_container';" class="example_show_button">Hide execution results</div></div>
<div id="007_collectionNear_short" onclick="$('#007_collectionNear_short').hide(); $('#007_collectionNear_long').show();">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;loc&quot;</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;   <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;        name : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;        loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


If you need the distance as well, then you can use the `distance`
operator:


<div class="example-container" id="008_collectionNearDistance_container">
<div id="008_collectionNearDistance_long" style="display: none;">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;loc&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;loc&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;geo/1656&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769168403070976&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;         name : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;         loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).distance().limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/2362&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2362&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykW9u--A&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/0&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/2436&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2436&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykX-u--A&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/0&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1111949.2664455872</span> 
  } 
]
</pre>
<div id="008_collectionNearDistance_container_collapse" onclick="$('#008_collectionNearDistance_long').hide(); $('#008_collectionNearDistance_short').show(); window.location.hash='008_collectionNearDistance_container';" class="example_show_button">Hide execution results</div></div>
<div id="008_collectionNearDistance_short" onclick="$('#008_collectionNearDistance_short').hide(); $('#008_collectionNearDistance_long').show();">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;geo&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;loc&quot;</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;         name : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j,
........&gt;         loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).distance().limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/documentRevision.md -->
@startDocuBlock documentRevision


Every document in ArangoDB has a revision, stored in the system attribute
`_rev`. It is fully managed by the server and read-only for the user.

Its value should be treated as opaque, no guarantees regarding its format
and properties are given except that it will be different after a
document update. More specifically, `_rev` values are unique across all
documents and all collections in a single server setup. In a cluster setup,
within one shard it is guaranteed that two different document revisions
have a different `_rev` string, even if they are written in the same
millisecond.

The `_rev` attribute can be used as a pre-condition for queries, to avoid
_lost update_ situations. That is, if a client fetches a document from the server,
modifies it locally (but with the `_rev` attribute untouched) and sends it back
to the server to update the document, but meanwhile the document was changed by
another operation, then the revisions do not match anymore and the operation
is cancelled by the server. Without this mechanism, the client would
accidentally overwrite changes made to the document without knowing about it.

When an existing document is updated or replaced, ArangoDB will write a new
version of this document to the write-ahead logfile (regardless of the
storage engine). When the new version of the document has been written, the
old version(s) will still be present, at least on disk. The same is true when
an existing document (version) gets removed: the old version of the document
plus the removal operation will be on disk for some time.

On disk it is therefore possible that multiple revisions of the same document
(as identified by the same `_key` value) exist at the same time. However,
stale revisions **are not accessible**. Once a document was updated or removed
successfully, no query or other data retrieval operation done by the user
will be able to see it any more. Furthermore, after some time, old revisions
will be removed internally. This is to avoid ever-growing disk usage.

{% hint 'warning' %}
From a **user perspective**, there is just **one single document revision
present per different `_key`** at every point in time. There is no built-in
system to automatically keep a history of all changes done to a document
and old versions of a document can not be restored via the `_rev` value.
{% endhint %}

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/server_authentication.md -->
@startDocuBlock server_authentication

`--server.authentication`

Setting this option to *false* will turn off authentication on the server side
so all clients can execute any action without authorization and privilege
checks.

The default value is *true*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/databaseWaitForSync.md -->
@startDocuBlock databaseWaitForSync

@brief default wait for sync behavior
`--database.wait-for-sync boolean`

Default wait-for-sync value. Can be overwritten when creating a new
collection.

The default is *false*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/foxxQueues.md -->
@startDocuBlock foxxQueues

@brief enable or disable the Foxx queues feature
`--foxx.queues flag`

If *true*, the Foxx queues will be available and jobs in the queues will
be executed asynchronously.

The default is *true*.
When set to `false` the queue manager will be disabled and any jobs
are prevented from being processed, which may reduce CPU load a bit.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionWithin.md -->
@startDocuBlock collectionWithin

@brief constructs a within query for a collection
`collection.within(latitude, longitude, radius)`

This will find all documents within a given radius around the coordinate
(*latitude*, *longitude*). The returned array is sorted by distance,
beginning with the nearest document.

In order to use the *within* operator, a geo index must be defined for the
collection. This index also defines which attribute holds the coordinates
for the document.  If you have more then one geo-spatial index, you can use
the `geo` operator to select a particular index.


`collection.within(latitude, longitude, radius).distance()`

This will add an attribute `_distance` to all documents returned, which
contains the distance between the given point and the document in meters.

`collection.within(latitude, longitude, radius).distance(name)`

This will add an attribute *name* to all documents returned, which
contains the distance between the given point and the document in meters.

**Note**: this method is not yet supported by the RocksDB storage engine.

Note: the *within* simple query function is **deprecated** as of ArangoDB 2.6.
The function may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the within operator  is
to use the AQL *WITHIN* function in an AQL query as follows:

```
FOR doc IN WITHIN(@@collection, @latitude, @longitude, @radius, @distanceAttributeName)
    RETURN doc
```

@EXAMPLES

To find all documents within a radius of 2000 km use:


<div class="example-container" id="009_collectionWithin_container">
<div id="009_collectionWithin_long" style="display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt; db.geo.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j, <span class="hljs-attr">loc</span>: [ i, j ] }); } }
arangosh&gt; db.geo.within(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2000</span> * <span class="hljs-number">1000</span>).distance().toArray();
[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3784&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3784&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXTK---&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/0&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3858&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3858&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXUG---&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/0&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1111949.2664455872</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3786&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3786&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXTK--A&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/10&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1111949.2664455872</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3710&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3710&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXSK---&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-10/0&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1111949.2664455872</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3782&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3782&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXTG--C&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">0</span>, 
      -<span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0/-10&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1111949.2664455872</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3708&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3708&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXSG--C&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      -<span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-10/-10&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1568520.556798576</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3860&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3860&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXUG--A&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/10&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1568520.556798576</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3856&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3856&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXUC--C&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      <span class="hljs-number">10</span>, 
      -<span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/10/-10&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1568520.556798576</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;geo/3712&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;3712&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykXSK--A&quot;</span>, 
    <span class="hljs-string">&quot;loc&quot;</span> : [ 
      -<span class="hljs-number">10</span>, 
      <span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-10/10&quot;</span>, 
    <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">1568520.556798576</span> 
  } 
]
</pre>
<div id="009_collectionWithin_container_collapse" onclick="$('#009_collectionWithin_long').hide(); $('#009_collectionWithin_short').show(); window.location.hash='009_collectionWithin_container';" class="example_show_button">Hide execution results</div></div>
<div id="009_collectionWithin_short" onclick="$('#009_collectionWithin_short').hide(); $('#009_collectionWithin_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = -<span class="hljs-number">90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = -<span class="hljs-number">180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt; db.geo.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">&quot;Name/&quot;</span> + i + <span class="hljs-string">&quot;/&quot;</span> + j, <span class="hljs-attr">loc</span>: [ i, j ] }); } }
arangosh&gt; db.geo.within(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2000</span> * <span class="hljs-number">1000</span>).distance().toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/serverAuthenticateSystemOnly.md -->
@startDocuBlock serverAuthenticateSystemOnly

`--server.authentication-system-only boolean`

Controls whether incoming requests need authentication only if they are
directed to the ArangoDB's internal APIs and features, located at
*/_api/*,
*/_admin/* etc.

If the flag is set to *true*, then HTTP authentication is only
required for requests going to URLs starting with */_*, but not for other
URLs. The flag can thus be used to expose a user-made API without HTTP
authentication to the outside world, but to prevent the outside world from
using the ArangoDB API and the admin interface without authentication.
Note that checking the URL is performed after any database name prefix
has been removed. That means when the actual URL called is
*/_db/_system/myapp/myaction*, the URL */myapp/myaction* will be used for
*authentication-system-only* check.

The default is *true*.

Note that authentication still needs to be enabled for the server regularly 
in order for HTTP authentication to be forced for the ArangoDB API and the
web interface.  Setting only this flag is not enough.

You can control ArangoDB's general authentication feature with the
*--server.authentication* flag.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_uninstall.md -->
@startDocuBlock api_foxx_service_uninstall

@brief uninstall service

@RESTHEADER{DELETE /_api/foxx/service, Uninstall service}

@RESTDESCRIPTION
Removes the service at the given mount path from the database and file system.

Returns an empty response on success.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{teardown,boolean,optional}
Set to `false` to not run the service's teardown script.

@RESTRETURNCODES

@RESTRETURNCODE{204}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_details.md -->
@startDocuBlock api_foxx_service_details

@brief service metadata

@RESTHEADER{GET /_api/foxx/service, Service description}

@RESTDESCRIPTION
Fetches detailed information for the service at the given mount path.

Returns an object with the following attributes:

- *mount*: the mount path of the service
- *path*: the local file system path of the service
- *development*: *true* if the service is running in development mode
- *legacy*: *true* if the service is running in 2.8 legacy compatibility mode
- *manifest*: the normalized JSON manifest of the service

Additionally the object may contain the following attributes if they have been set on the manifest:

- *name*: a string identifying the service type
- *version*: a semver-compatible version string

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@RESTRETURNCODE{400}
Returned if the mount path is unknown.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_commit.md -->
@startDocuBlock api_foxx_commit

@brief commit local service state

@RESTHEADER{POST /_api/foxx/commit, Commit local service state}

@RESTDESCRIPTION
Commits the local service state of the Coordinator to the database.

This can be used to resolve service conflicts between Coordinators that can not be fixed automatically due to missing data.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{replace,boolean,optional}
Overwrite existing service files in database even if they already exist.

@RESTRETURNCODE{204}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_configuration_replace.md -->
@startDocuBlock api_foxx_configuration_replace

@brief replace configuration options

@RESTHEADER{PUT /_api/foxx/configuration, Replace configuration options}

@RESTDESCRIPTION
Replaces the given service's configuration completely.

Returns an object mapping all configuration option names to their new values.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping configuration option names to their new values.
Any omitted options will be reset to their default values or marked as unconfigured.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_configuration_get.md -->
@startDocuBlock api_foxx_configuration_get

@brief get configuration options

@RESTHEADER{GET /_api/foxx/configuration, Get configuration options}

@RESTDESCRIPTION
Fetches the current configuration for the service at the given mount path.

Returns an object mapping the configuration option names to their definitions
including a human-friendly *title* and the *current* value (if any).

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_dependencies_update.md -->
@startDocuBlock api_foxx_dependencies_update

@brief update dependencies options

@RESTHEADER{PATCH /_api/foxx/dependencies, Update dependencies options}

@RESTDESCRIPTION
Replaces the given service's dependencies.

Returns an object mapping all dependency names to their new mount paths.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping dependency names to their new mount paths.
Any omitted dependencies will be ignored.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_development_disable.md -->
@startDocuBlock api_foxx_development_disable

@brief disable development mode

@RESTHEADER{DELETE /_api/foxx/development, Disable development mode}

@RESTDESCRIPTION
Puts the service at the given mount path into production mode.

When running ArangoDB in a cluster with multiple Coordinators this will
replace the service on all other Coordinators with the version on this
Coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_scripts_run.md -->
@startDocuBlock api_foxx_scripts_run

@brief run service script

@RESTHEADER{POST /_api/foxx/scripts/{name}, Run service script}

@RESTALLBODYPARAM{data,json,optional}
An arbitrary JSON value that will be parsed and passed to the
script as its first argument.

@RESTURLPARAMETERS

@RESTURLPARAM{name,string,required}
Name of the script to run.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTDESCRIPTION
Runs the given script for the service at the given mount path.

Returns the exports of the script, if any.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_bundle.md -->
@startDocuBlock api_foxx_bundle

@brief download service bundle

@RESTHEADER{POST /_api/foxx/download, Download service bundle}

@RESTDESCRIPTION
Downloads a zip bundle of the service directory.

When development mode is enabled, this always creates a new bundle.

Otherwise the bundle will represent the version of a service that
is installed on that ArangoDB instance.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@RESTRETURNCODE{400}
Returned if the mount path is unknown.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_swagger.md -->
@startDocuBlock api_foxx_swagger

@brief swagger description

@RESTHEADER{GET /_api/foxx/swagger, Swagger description}

@RESTDESCRIPTION
Fetches the Swagger API description for the service at the given mount path.

The response body will be an OpenAPI 2.0 compatible JSON description of the service API.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_tests_run.md -->
@startDocuBlock api_foxx_tests_run

@brief run service tests

@RESTHEADER{POST /_api/foxx/tests, Run service tests}

@RESTDESCRIPTION
Runs the tests for the service at the given mount path and returns the results.

Supported test reporters are:

- *default*: a simple list of test cases
- *suite*: an object of test cases nested in suites
- *stream*: a raw stream of test results
- *xunit*: an XUnit/JUnit compatible structure
- *tap*: a raw TAP compatible stream

The *Accept* request header can be used to further control the response format:

When using the *stream* reporter `application/x-ldjson` will result
in the response body being formatted as a newline-delimited JSON stream.

When using the *tap* reporter `text/plain` or `text/*` will result
in the response body being formatted as a plain text TAP report.

When using the *xunit* reporter `application/xml` or `text/xml` will result
in the response body being formatted as XML instead of JSONML.

Otherwise the response body will be formatted as non-prettyprinted JSON.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{reporter,string,optional}
Test reporter to use.

@RESTQUERYPARAM{idiomatic,boolean,optional}
Use the matching format for the reporter, regardless of the *Accept* header.

@RESTQUERYPARAM{filter,string,optional}
Only run tests where the full name (including full test suites and test case)
matches this string.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_replace.md -->
@startDocuBlock api_foxx_service_replace

@brief replace a service

@RESTHEADER{PUT /_api/foxx/service, Replace service}

@RESTDESCRIPTION
Removes the service at the given mount path from the database and file system.
Then installs the given new service at the same mount path.

This is a slightly safer equivalent to performing an uninstall of the old service
followed by installing the new service. The new service's main and script files
(if any) will be checked for basic syntax errors before the old service is removed.

The request body can be any of the following formats:

- `application/zip`: a raw zip bundle containing a service
- `application/javascript`: a standalone JavaScript file
- `application/json`: a service definition as JSON
- `multipart/form-data`: a service definition as a multipart form

A service definition is an object or form with the following properties or fields:

- *configuration*: a JSON object describing configuration values
- *dependencies*: a JSON object describing dependency settings
- *source*: a fully qualified URL or an absolute path on the server's file system

When using multipart data, the *source* field can also alternatively be a file field
containing either a zip bundle or a standalone JavaScript file.

When using a standalone JavaScript file the given file will be executed
to define our service's HTTP endpoints. It is the same which would be defined
in the field `main` of the service manifest.

If *source* is a URL, the URL must be reachable from the server.
If *source* is a file system path, the path will be resolved on the server.
In either case the path or URL is expected to resolve to a zip bundle,
JavaScript file or (in case of a file system path) directory.

Note that when using file system paths in a cluster with multiple Coordinators
the file system path must resolve to equivalent files on every Coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{teardown,boolean,optional}
Set to `false` to not run the old service's teardown script.

@RESTQUERYPARAM{setup,boolean,optional}
Set to `false` to not run the new service's setup script.

@RESTQUERYPARAM{legacy,boolean,optional}
Set to `true` to install the new service in 2.8 legacy compatibility mode.

@RESTQUERYPARAM{force,boolean,optional}
Set to `true` to force service install even if no service is installed under given mount.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_list.md -->
@startDocuBlock api_foxx_service_list

@brief list installed services

@RESTHEADER{GET /_api/foxx, List installed services}

@RESTDESCRIPTION
Fetches a list of services installed in the current database.

Returns a list of objects with the following attributes:

- *mount*: the mount path of the service
- *development*: *true* if the service is running in development mode
- *legacy*: *true* if the service is running in 2.8 legacy compatibility mode
- *provides*: the service manifest's *provides* value or an empty object

Additionally the object may contain the following attributes if they have been set on the manifest:

- *name*: a string identifying the service type
- *version*: a semver-compatible version string

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{excludeSystem,boolean,optional}
Whether or not system services should be excluded from the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_development_enable.md -->
@startDocuBlock api_foxx_development_enable

@brief enable development mode

@RESTHEADER{POST /_api/foxx/development, Enable development mode}

@RESTDESCRIPTION
Puts the service into development mode.

While the service is running in development mode the service will be reloaded
from the filesystem and its setup script (if any) will be re-executed every
time the service handles a request.

When running ArangoDB in a cluster with multiple Coordinators note that changes
to the filesystem on one Coordinator will not be reflected across the other
Coordinators. This means you should treat your Coordinators as inconsistent
as long as any service is running in development mode.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_dependencies_replace.md -->
@startDocuBlock api_foxx_dependencies_replace

@brief replace dependencies options

@RESTHEADER{PUT /_api/foxx/dependencies, Replace dependencies options}

@RESTDESCRIPTION
Replaces the given service's dependencies completely.

Returns an object mapping all dependency names to their new mount paths.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping dependency names to their new mount paths.
Any omitted dependencies will be disabled.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_upgrade.md -->
@startDocuBlock api_foxx_service_upgrade

@brief upgrade a service

@RESTHEADER{PATCH /_api/foxx/service, Upgrade service}

@RESTDESCRIPTION
Installs the given new service on top of the service currently installed at the given mount path.
This is only recommended for switching between different versions of the same service.

Unlike replacing a service, upgrading a service retains the old service's configuration
and dependencies (if any) and should therefore only be used to migrate an existing service
to a newer or equivalent service.

The request body can be any of the following formats:

- `application/zip`: a raw zip bundle containing a service
- `application/javascript`: a standalone JavaScript file
- `application/json`: a service definition as JSON
- `multipart/form-data`: a service definition as a multipart form

A service definition is an object or form with the following properties or fields:

- *configuration*: a JSON object describing configuration values
- *dependencies*: a JSON object describing dependency settings
- *source*: a fully qualified URL or an absolute path on the server's file system

When using multipart data, the *source* field can also alternatively be a file field
containing either a zip bundle or a standalone JavaScript file.

When using a standalone JavaScript file the given file will be executed
to define our service's HTTP endpoints. It is the same which would be defined
in the field `main` of the service manifest.

If *source* is a URL, the URL must be reachable from the server.
If *source* is a file system path, the path will be resolved on the server.
In either case the path or URL is expected to resolve to a zip bundle,
JavaScript file or (in case of a file system path) directory.

Note that when using file system paths in a cluster with multiple Coordinators
the file system path must resolve to equivalent files on every Coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{teardown,boolean,optional}
Set to `true` to run the old service's teardown script.

@RESTQUERYPARAM{setup,boolean,optional}
Set to `false` to not run the new service's setup script.

@RESTQUERYPARAM{legacy,boolean,optional}
Set to `true` to install the new service in 2.8 legacy compatibility mode.

@RESTQUERYPARAM{force,boolean,optional}
Set to `true` to force service install even if no service is installed under given mount.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_dependencies_get.md -->
@startDocuBlock api_foxx_dependencies_get

@brief get dependency options

@RESTHEADER{GET /_api/foxx/dependencies, Get dependency options}

@RESTDESCRIPTION
Fetches the current dependencies for service at the given mount path.

Returns an object mapping the dependency names to their definitions
including a human-friendly *title* and the *current* mount path (if any).

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_readme.md -->
@startDocuBlock api_foxx_readme

@brief service README

@RESTHEADER{GET /_api/foxx/readme, Service README}

@RESTDESCRIPTION
Fetches the service's README or README.md file's contents if any.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@RESTRETURNCODE{204}
Returned if no README file was found.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_scripts_list.md -->
@startDocuBlock api_foxx_scripts_list

@brief list service scripts

@RESTHEADER{GET /_api/foxx/scripts, List service scripts}

@RESTDESCRIPTION
Fetches a list of the scripts defined by the service.

Returns an object mapping the raw script names to human-friendly names.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_install.md -->
@startDocuBlock api_foxx_service_install

@brief install new service

@RESTHEADER{POST /_api/foxx, Install new service}

@RESTDESCRIPTION
Installs the given new service at the given mount path.

The request body can be any of the following formats:

- `application/zip`: a raw zip bundle containing a service
- `application/javascript`: a standalone JavaScript file
- `application/json`: a service definition as JSON
- `multipart/form-data`: a service definition as a multipart form

A service definition is an object or form with the following properties or fields:

- *configuration*: a JSON object describing configuration values
- *dependencies*: a JSON object describing dependency settings
- *source*: a fully qualified URL or an absolute path on the server's file system

When using multipart data, the *source* field can also alternatively be a file field
containing either a zip bundle or a standalone JavaScript file.

When using a standalone JavaScript file the given file will be executed
to define our service's HTTP endpoints. It is the same which would be defined
in the field `main` of the service manifest.

If *source* is a URL, the URL must be reachable from the server.
If *source* is a file system path, the path will be resolved on the server.
In either case the path or URL is expected to resolve to a zip bundle,
JavaScript file or (in case of a file system path) directory.

Note that when using file system paths in a cluster with multiple Coordinators
the file system path must resolve to equivalent files on every Coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path the service should be installed at.

@RESTQUERYPARAM{development,boolean,optional}
Set to `true` to enable development mode.

@RESTQUERYPARAM{setup,boolean,optional}
Set to `false` to not run the service's setup script.

@RESTQUERYPARAM{legacy,boolean,optional}
Set to `true` to install the service in 2.8 legacy compatibility mode.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_configuration_update.md -->
@startDocuBlock api_foxx_configuration_update

@brief update configuration options

@RESTHEADER{PATCH /_api/foxx/configuration, Update configuration options}

@RESTDESCRIPTION
Replaces the given service's configuration.

Returns an object mapping all configuration option names to their new values.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping configuration option names to their new values.
Any omitted options will be ignored.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph Traversal/HTTP_API_TRAVERSAL.md -->
@startDocuBlock HTTP_API_TRAVERSAL

@brief execute a server-side traversal

@RESTHEADER{POST /_api/traversal,executes a traversal}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
It is considered as deprecated from version 3.4.0 on.
It is superseded by AQL graph traversal.
{% endhint %}

@RESTDESCRIPTION
Starts a traversal starting from a given vertex and following.
edges contained in a given edgeCollection. The request must
contain the following attributes.

@RESTBODYPARAM{startVertex,string,required,string}
id of the startVertex, e.g. *"users/foo"*.

@RESTBODYPARAM{edgeCollection,string,optional, string}
name of the collection that contains the edges.

@RESTBODYPARAM{graphName,string,optional,string}
name of the graph that contains the edges.
Either *edgeCollection* or *graphName* has to be given.
In case both values are set the *graphName* is preferred.

@RESTBODYPARAM{filter,string,optional,string}
default is to include all nodes:
body (JavaScript code) of custom filter function
function signature: *(config, vertex, path) -> mixed*
can return four different string values:
- *"exclude"* -> this vertex will not be visited.
- *"prune"* -> the edges of this vertex will not be followed.
- *""* or *undefined* -> visit the vertex and follow its edges.
- *Array* -> containing any combination of the above.
  If there is at least one *"exclude"* or *"prune"* respectively
  is contained, it's effect will occur.

@RESTBODYPARAM{minDepth,string,optional,string}
ANDed with any existing filters):
visits only nodes in at least the given depth

@RESTBODYPARAM{maxDepth,string,optional,string}
ANDed with any existing filters visits only nodes in at most the given depth

@RESTBODYPARAM{visitor,string,optional,string}
body (JavaScript) code of custom visitor function
function signature: *(config, result, vertex, path, connected) -> void*
The visitor function can do anything, but its return value is ignored. To
populate a result, use the *result* variable by reference. Note that the
*connected* argument is only populated when the *order* attribute is set
to *"preorder-expander"*.

@RESTBODYPARAM{direction,string,optional,string}
direction for traversal
- *if set*, must be either *"outbound"*, *"inbound"*, or *"any"*
- *if not set*, the *expander* attribute must be specified

@RESTBODYPARAM{init,string,optional,string}
body (JavaScript) code of custom result initialization function
function signature: *(config, result) -> void*
initialize any values in result with what is required

@RESTBODYPARAM{expander,string,optional,string}
body (JavaScript) code of custom expander function
*must* be set if *direction* attribute is **not** set
function signature: *(config, vertex, path) -> array*
expander must return an array of the connections for *vertex*
each connection is an object with the attributes *edge* and *vertex*

@RESTBODYPARAM{sort,string,optional,string}
body (JavaScript) code of a custom comparison function
for the edges. The signature of this function is
*(l, r) -> integer* (where l and r are edges) and must
return -1 if l is smaller than, +1 if l is greater than,
and 0 if l and r are equal. The reason for this is the
following: The order of edges returned for a certain
vertex is undefined. This is because there is no natural
order of edges for a vertex with multiple connected edges.
To explicitly define the order in which edges on the
vertex are followed, you can specify an edge comparator
function with this attribute. Note that the value here has
to be a string to conform to the JSON standard, which in
turn is parsed as function body on the server side. Furthermore
note that this attribute is only used for the standard
expanders. If you use your custom expander you have to
do the sorting yourself within the expander code.

@RESTBODYPARAM{strategy,string,optional,string}
traversal strategy can be *"depthfirst"* or *"breadthfirst"*

@RESTBODYPARAM{order,string,optional,string}
traversal order can be *"preorder"*, *"postorder"* or *"preorder-expander"*

@RESTBODYPARAM{itemOrder,string,optional,string}
item iteration order can be *"forward"* or *"backward"*

@RESTBODYPARAM{uniqueness,string,optional,string}
specifies uniqueness for vertices and edges visited.
If set, must be an object like this:<br>
`"uniqueness": {"vertices": "none"|"global"|"path", "edges": "none"|"global"|"path"}`

@RESTBODYPARAM{maxIterations,string,optional,string}
Maximum number of iterations in each traversal. This number can be
set to prevent endless loops in traversal of cyclic graphs. When a traversal performs
as many iterations as the *maxIterations* value, the traversal will abort with an
error. If *maxIterations* is not set, a server-defined value may be used.

@RESTDESCRIPTION

If the Traversal is successfully executed *HTTP 200* will be returned.
Additionally the *result* object will be returned by the traversal.

For successful traversals, the returned JSON object has the
following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: the return value of the traversal

If the traversal specification is either missing or malformed, the server
will respond with *HTTP 400*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the traversal is fully executed
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the traversal specification is either missing or malformed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
The server will responded with *HTTP 404* if the specified edge collection
does not exist, or the specified start vertex cannot be found.

@RESTRETURNCODE{500}
The server will responded with *HTTP 500* when an error occurs inside the
traversal or if a traversal performs more than *maxIterations* iterations.

@EXAMPLES

In the following examples the underlying graph will contain five persons
*Alice*, *Bob*, *Charlie*, *Dave* and *Eve*.
We will have the following directed relations:

- *Alice* knows *Bob*
- *Bob* knows *Charlie*
- *Bob* knows *Dave*
- *Eve* knows *Alice*
- *Eve* knows *Bob*

The starting vertex will always be Alice.

Follow only outbound edges


<div class="example-container" id="RestTraversalOutbound_container">
<div id="RestTraversalOutbound_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1722</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqG---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqK---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqO---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqO--A&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73756&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73756&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73756&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73756&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73758&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73758&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqa---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73756&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73756&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73760&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73760&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVqO--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalOutbound_container_collapse" onclick="$('#RestTraversalOutbound_long').hide(); $('#RestTraversalOutbound_short').show(); window.location.hash='RestTraversalOutbound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalOutbound_short" onclick="$('#RestTraversalOutbound_short').hide(); $('#RestTraversalOutbound_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1722</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Follow only inbound edges


<div class="example-container" id="RestTraversalInbound_container">
<div id="RestTraversalInbound_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;inbound&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">603</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVeC---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVeS---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVeC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73501&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73501&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVee---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVeC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVeS---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalInbound_container_collapse" onclick="$('#RestTraversalInbound_long').hide(); $('#RestTraversalInbound_short').show(); window.location.hash='RestTraversalInbound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalInbound_short" onclick="$('#RestTraversalInbound_short').hide(); $('#RestTraversalInbound_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;inbound&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">603</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Follow any direction of edges


<div class="example-container" id="RestTraversalAny_container">
<div id="RestTraversalAny_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;uniqueness&quot;</span> : { 
    <span class="hljs-string">&quot;vertices&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;edges&quot;</span> : <span class="hljs-string">&quot;global&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">3002</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi--A&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJm---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJq---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73027&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73027&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73027&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73027&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73029&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73029&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJy---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73027&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73027&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73031&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73031&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJ2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73027&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73027&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73035&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73035&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJ6--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73027&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73027&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73035&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73035&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJ6--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73033&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73033&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJ6---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJi---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVJe---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalAny_container_collapse" onclick="$('#RestTraversalAny_long').hide(); $('#RestTraversalAny_short').show(); window.location.hash='RestTraversalAny_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalAny_short" onclick="$('#RestTraversalAny_short').hide(); $('#RestTraversalAny_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;uniqueness&quot;</span> : { 
    <span class="hljs-string">&quot;vertices&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;edges&quot;</span> : <span class="hljs-string">&quot;global&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">3002</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Excluding *Charlie* and *Bob*


<div class="example-container" id="RestTraversalFilterExclude_container">
<div id="RestTraversalFilterExclude_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;filter&quot;</span> : <span class="hljs-string">&quot;if (vertex.name === \&quot;Bob\&quot; ||     vertex.name === \&quot;Charlie\&quot;) {  return \&quot;exclude\&quot;;}return;&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">796</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZC---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZO---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73375&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73375&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73379&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73379&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVZO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalFilterExclude_container_collapse" onclick="$('#RestTraversalFilterExclude_long').hide(); $('#RestTraversalFilterExclude_short').show(); window.location.hash='RestTraversalFilterExclude_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalFilterExclude_short" onclick="$('#RestTraversalFilterExclude_short').hide(); $('#RestTraversalFilterExclude_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;filter&quot;</span> : <span class="hljs-string">&quot;if (vertex.name === \&quot;Bob\&quot; ||     vertex.name === \&quot;Charlie\&quot;) {  return \&quot;exclude\&quot;;}return;&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">796</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Do not follow edges from *Bob*


<div class="example-container" id="RestTraversalFilterPrune_container">
<div id="RestTraversalFilterPrune_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;filter&quot;</span> : <span class="hljs-string">&quot;if (vertex.name === \&quot;Bob\&quot;) {return \&quot;prune\&quot;;}return;&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">605</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVbm---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVbq---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVbm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73439&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73439&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVb2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVbm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVbq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalFilterPrune_container_collapse" onclick="$('#RestTraversalFilterPrune_long').hide(); $('#RestTraversalFilterPrune_short').show(); window.location.hash='RestTraversalFilterPrune_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalFilterPrune_short" onclick="$('#RestTraversalFilterPrune_short').hide(); $('#RestTraversalFilterPrune_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;filter&quot;</span> : <span class="hljs-string">&quot;if (vertex.name === \&quot;Bob\&quot;) {return \&quot;prune\&quot;;}return;&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">605</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Visit only nodes in a depth of at least 2


<div class="example-container" id="RestTraversalMinDepth_container">
<div id="RestTraversalMinDepth_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;minDepth&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1189</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVnm---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVnq---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73692&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73692&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVnu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73694&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73694&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVny---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVne---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVni---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVnm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73692&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73692&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVnu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73696&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73696&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVn2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVne---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVni---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVnq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalMinDepth_container_collapse" onclick="$('#RestTraversalMinDepth_long').hide(); $('#RestTraversalMinDepth_short').show(); window.location.hash='RestTraversalMinDepth_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalMinDepth_short" onclick="$('#RestTraversalMinDepth_short').hide(); $('#RestTraversalMinDepth_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;minDepth&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1189</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Visit only nodes in a depth of at most 1


<div class="example-container" id="RestTraversalMaxDepth_container">
<div id="RestTraversalMaxDepth_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;maxDepth&quot;</span> : <span class="hljs-number">1</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">605</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVge---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVgi---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVge---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73553&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73553&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVgu---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVge---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVgi---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalMaxDepth_container_collapse" onclick="$('#RestTraversalMaxDepth_long').hide(); $('#RestTraversalMaxDepth_short').show(); window.location.hash='RestTraversalMaxDepth_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalMaxDepth_short" onclick="$('#RestTraversalMaxDepth_short').hide(); $('#RestTraversalMaxDepth_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;maxDepth&quot;</span> : <span class="hljs-number">1</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">605</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Using a visitor function to return vertex ids only


<div class="example-container" id="RestTraversalVisitorFunc_container">
<div id="RestTraversalVisitorFunc_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;visitor&quot;</span> : <span class="hljs-string">&quot;result.visited.vertices.push(vertex._id);&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">136</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        <span class="hljs-string">&quot;persons/alice&quot;</span>, 
        <span class="hljs-string">&quot;persons/bob&quot;</span>, 
        <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
        <span class="hljs-string">&quot;persons/dave&quot;</span> 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalVisitorFunc_container_collapse" onclick="$('#RestTraversalVisitorFunc_long').hide(); $('#RestTraversalVisitorFunc_short').show(); window.location.hash='RestTraversalVisitorFunc_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalVisitorFunc_short" onclick="$('#RestTraversalVisitorFunc_short').hide(); $('#RestTraversalVisitorFunc_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;visitor&quot;</span> : <span class="hljs-string">&quot;result.visited.vertices.push(vertex._id);&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">136</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Count all visited nodes and return a list of nodes only


<div class="example-container" id="RestTraversalVisitorCountAndList_container">
<div id="RestTraversalVisitorCountAndList_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;init&quot;</span> : <span class="hljs-string">&quot;result.visited = 0; result.myVertices = [ ];&quot;</span>, 
  <span class="hljs-string">&quot;visitor&quot;</span> : <span class="hljs-string">&quot;result.visited++; result.myVertices.push(vertex);&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">361</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : <span class="hljs-number">4</span>, 
    <span class="hljs-string">&quot;myVertices&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVwa---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVwe---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVwi---&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
        <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
        <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVwi--A&quot;</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
      } 
    ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalVisitorCountAndList_container_collapse" onclick="$('#RestTraversalVisitorCountAndList_long').hide(); $('#RestTraversalVisitorCountAndList_short').show(); window.location.hash='RestTraversalVisitorCountAndList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalVisitorCountAndList_short" onclick="$('#RestTraversalVisitorCountAndList_short').hide(); $('#RestTraversalVisitorCountAndList_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;outbound&quot;</span>, 
  <span class="hljs-string">&quot;init&quot;</span> : <span class="hljs-string">&quot;result.visited = 0; result.myVertices = [ ];&quot;</span>, 
  <span class="hljs-string">&quot;visitor&quot;</span> : <span class="hljs-string">&quot;result.visited++; result.myVertices.push(vertex);&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">361</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Expand only inbound edges of *Alice* and outbound edges of *Eve*


<div class="example-container" id="RestTraversalVisitorExpander_container">
<div id="RestTraversalVisitorExpander_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;expander&quot;</span> : <span class="hljs-string">&quot;var connections = [ ];if (vertex.name === \&quot;Alice\&quot;) {config.datasource.getInEdges(vertex).forEach(function (e) {connections.push({ vertex: require(\&quot;internal\&quot;).db._document(e._from), edge: e});});}if (vertex.name === \&quot;Eve\&quot;) {config.datasource.getOutEdges(vertex).forEach(function (e) {connections.push({vertex: require(\&quot;internal\&quot;).db._document(e._to), edge: e});});}return connections;&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1142</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVym---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVy2---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVyq---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVym---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73987&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73987&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVzC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVym---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVy2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73987&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73987&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVzC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73989&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73989&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVzG---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVym---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVy2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVyq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalVisitorExpander_container_collapse" onclick="$('#RestTraversalVisitorExpander_long').hide(); $('#RestTraversalVisitorExpander_short').show(); window.location.hash='RestTraversalVisitorExpander_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalVisitorExpander_short" onclick="$('#RestTraversalVisitorExpander_short').hide(); $('#RestTraversalVisitorExpander_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;expander&quot;</span> : <span class="hljs-string">&quot;var connections = [ ];if (vertex.name === \&quot;Alice\&quot;) {config.datasource.getInEdges(vertex).forEach(function (e) {connections.push({ vertex: require(\&quot;internal\&quot;).db._document(e._from), edge: e});});}if (vertex.name === \&quot;Eve\&quot;) {config.datasource.getOutEdges(vertex).forEach(function (e) {connections.push({vertex: require(\&quot;internal\&quot;).db._document(e._to), edge: e});});}return connections;&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1142</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Follow the *depthfirst* strategy


<div class="example-container" id="RestTraversalDepthFirst_container">
<div id="RestTraversalDepthFirst_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;strategy&quot;</span> : <span class="hljs-string">&quot;depthfirst&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">6116</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRS---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRW---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRS---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRW---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73201&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73201&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73201&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73201&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73203&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73203&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRi---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRS---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73201&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73201&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73205&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73205&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRi--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRW---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73201&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73201&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73209&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73209&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRq---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73201&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73201&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73209&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73209&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRq---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73207&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73207&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRm---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73207&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73207&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRm---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73207&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73207&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRm---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73209&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73209&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRq---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73207&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73207&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRm---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73209&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73209&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRq---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73203&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73203&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRi---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRS---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73207&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73207&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRm---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73209&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73209&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRq---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73205&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73205&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRi--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRW---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73207&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73207&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRm---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73209&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73209&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRq---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73201&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73201&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRa---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVRK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalDepthFirst_container_collapse" onclick="$('#RestTraversalDepthFirst_long').hide(); $('#RestTraversalDepthFirst_short').show(); window.location.hash='RestTraversalDepthFirst_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalDepthFirst_short" onclick="$('#RestTraversalDepthFirst_short').hide(); $('#RestTraversalDepthFirst_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;strategy&quot;</span> : <span class="hljs-string">&quot;depthfirst&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">6116</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Using *postorder* ordering


<div class="example-container" id="RestTraversalPostorder_container">
<div id="RestTraversalPostorder_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;order&quot;</span> : <span class="hljs-string">&quot;postorder&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">6116</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsu---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsu---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73820&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73820&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73822&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73822&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs6---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsu---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73820&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73820&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73824&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73824&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt----&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73820&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73820&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73828&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73828&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVtC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73826&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73826&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt---A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73820&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73820&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73828&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73828&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVtC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73820&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73820&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73826&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73826&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt---A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73828&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73828&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVtC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73822&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73822&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs6---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsu---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73826&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73826&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt---A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73828&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73828&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVtC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73824&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73824&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt----&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73826&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73826&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt---A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73828&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73828&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVtC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73820&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73820&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVs2---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73826&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73826&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt---A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73828&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73828&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVtC---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsq---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73826&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73826&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVt---A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsy--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVsm---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalPostorder_container_collapse" onclick="$('#RestTraversalPostorder_long').hide(); $('#RestTraversalPostorder_short').show(); window.location.hash='RestTraversalPostorder_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalPostorder_short" onclick="$('#RestTraversalPostorder_short').hide(); $('#RestTraversalPostorder_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;order&quot;</span> : <span class="hljs-string">&quot;postorder&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">6116</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Using *backward* item-ordering:


<div class="example-container" id="RestTraversalBackwardItemOrder_container">
<div id="RestTraversalBackwardItemOrder_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;itemOrder&quot;</span> : <span class="hljs-string">&quot;backward&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">6116</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNK---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNG---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNK---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNG---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73110&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73110&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73110&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73110&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73112&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73112&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73110&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73110&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73112&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73112&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73104&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73104&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73110&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73110&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73112&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73112&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73108&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73108&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73110&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73110&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73112&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73112&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73106&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73106&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73104&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73104&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73104&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73104&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73112&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73112&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73104&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73104&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73112&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73112&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNe---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73110&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73110&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa--A&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNO---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73104&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73104&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73108&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73108&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNa---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNK---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73104&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73104&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73106&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73106&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNC--A&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVNG---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalBackwardItemOrder_container_collapse" onclick="$('#RestTraversalBackwardItemOrder_long').hide(); $('#RestTraversalBackwardItemOrder_short').show(); window.location.hash='RestTraversalBackwardItemOrder_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalBackwardItemOrder_short" onclick="$('#RestTraversalBackwardItemOrder_short').hide(); $('#RestTraversalBackwardItemOrder_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;itemOrder&quot;</span> : <span class="hljs-string">&quot;backward&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">6116</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Edges should only be included once globally,
but nodes are included every time they are visited


<div class="example-container" id="RestTraversalEdgeUniqueness_container">
<div id="RestTraversalEdgeUniqueness_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;uniqueness&quot;</span> : { 
    <span class="hljs-string">&quot;vertices&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;edges&quot;</span> : <span class="hljs-string">&quot;global&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">3002</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;visited&quot;</span> : { 
      <span class="hljs-string">&quot;vertices&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV2---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV6---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVW----&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWC---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
          <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
          <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;paths&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73298&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73298&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWG---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73298&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73298&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWG---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73300&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73300&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWK---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;charlie&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/charlie&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV6---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Charlie&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73298&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73298&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWG---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73302&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73302&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWO---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;dave&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/dave&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVW----&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Dave&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73298&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73298&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWG---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73306&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73306&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;edges&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73298&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73298&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWG---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73306&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73306&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWW---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;73304&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;knows/73304&quot;</span>, 
              <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWS---&quot;</span>, 
              <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span> 
            } 
          ], 
          <span class="hljs-string">&quot;vertices&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/bob&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVV2---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bob&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;eve&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/eve&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVWC---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Eve&quot;</span> 
            }, 
            { 
              <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
              <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
              <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylVVy---&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalEdgeUniqueness_container_collapse" onclick="$('#RestTraversalEdgeUniqueness_long').hide(); $('#RestTraversalEdgeUniqueness_short').show(); window.location.hash='RestTraversalEdgeUniqueness_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalEdgeUniqueness_short" onclick="$('#RestTraversalEdgeUniqueness_short').hide(); $('#RestTraversalEdgeUniqueness_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;uniqueness&quot;</span> : { 
    <span class="hljs-string">&quot;vertices&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;edges&quot;</span> : <span class="hljs-string">&quot;global&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">3002</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




If the underlying graph is cyclic, *maxIterations* should be set

The underlying graph has two vertices *Alice* and *Bob*.
With the directed edges:

- *Alice* knows *Bob*
- *Bob* knows *Alice*


<div class="example-container" id="RestTraversalMaxIterations_container">
<div id="RestTraversalMaxIterations_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;uniqueness&quot;</span> : { 
    <span class="hljs-string">&quot;vertices&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;edges&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
  }, 
  <span class="hljs-string">&quot;maxIterations&quot;</span> : <span class="hljs-number">5</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">124</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">500</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1909</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;too many iterations - try increasing the value of &#x27;maxIterations&#x27;&quot;</span> 
}
</pre>
<div id="RestTraversalMaxIterations_container_collapse" onclick="$('#RestTraversalMaxIterations_long').hide(); $('#RestTraversalMaxIterations_short').show(); window.location.hash='RestTraversalMaxIterations_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalMaxIterations_short" onclick="$('#RestTraversalMaxIterations_short').hide(); $('#RestTraversalMaxIterations_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/traversal</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;startVertex&quot;</span> : <span class="hljs-string">&quot;persons/alice&quot;</span>, 
  <span class="hljs-string">&quot;graphName&quot;</span> : <span class="hljs-string">&quot;knows_graph&quot;</span>, 
  <span class="hljs-string">&quot;direction&quot;</span> : <span class="hljs-string">&quot;any&quot;</span>, 
  <span class="hljs-string">&quot;uniqueness&quot;</span> : { 
    <span class="hljs-string">&quot;vertices&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;edges&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
  }, 
  <span class="hljs-string">&quot;maxIterations&quot;</span> : <span class="hljs-number">5</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">124</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/job_getStatusById.md -->
@startDocuBlock job_getStatusById

@brief Returns the status of a specific job

@RESTHEADER{GET /_api/job/{job-id}, Returns async job, getJobById}

@RESTURLPARAMETERS

@RESTURLPARAM{job-id,string,required}
The async job id.

@RESTDESCRIPTION
Returns the processing status of the specified job. The processing status
can be
determined by peeking into the HTTP response code of the response.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the job requested via job-id has been executed
and its result is ready to fetch.

@RESTRETURNCODE{204}
is returned if the job requested via job-id is still in the queue of pending
(or not yet finished) jobs.

@RESTRETURNCODE{404}
is returned if the job was not found or already deleted or fetched from the
job result list.

@EXAMPLES

Querying the status of a done job:


<div class="example-container" id="job_getStatusById_01_container">
<div id="job_getStatusById_01_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89510
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89510</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">61</span>
server: ArangoDB
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">89510</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;server&quot;</span> : <span class="hljs-string">&quot;arango&quot;</span>, 
  <span class="hljs-string">&quot;license&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
  <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span> 
}
</pre>
<div id="job_getStatusById_01_container_collapse" onclick="$('#job_getStatusById_01_long').hide(); $('#job_getStatusById_01_short').show(); window.location.hash='job_getStatusById_01_container';" class="example_show_button">Hide response body</div></div>
<div id="job_getStatusById_01_short" onclick="$('#job_getStatusById_01_short').hide(); $('#job_getStatusById_01_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89510
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89510</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">61</span>
server: ArangoDB
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">89510</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Querying the status of a pending job:
(therefore we create a long runnging job...)


<div class="example-container" id="job_getStatusById_02_container">
<div id="job_getStatusById_02_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : [ 
      <span class="hljs-string">&quot;_aqlfunctions&quot;</span> 
    ] 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () {require(&#x27;internal&#x27;).sleep(15.0);}&quot;</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89512
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89512</span>

HTTP/1.1 204 No Content
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-content-type-options: nosniff

</pre>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/job_cancel.md -->
@startDocuBlock job_cancel

@brief cancels an async job

@RESTHEADER{PUT /_api/job/{job-id}/cancel, Cancel async job, putJobMethod:cancel}

@RESTURLPARAMETERS

@RESTURLPARAM{job-id,string,required}
The async job id.

@RESTDESCRIPTION
Cancels the currently running job identified by job-id. Note that it still
might take some time to actually cancel the running async job.

@RESTRETURNCODES

@RESTRETURNCODE{200}
cancel has been initiated.

@RESTRETURNCODE{400}
is returned if no job-id was specified in the request. In this case,
no x-arango-async-id HTTP header will be returned.

@RESTRETURNCODE{404}
is returned if the job was not found or already deleted or fetched from
the job result list. In this case, no x-arango-async-id HTTP header will
be returned.

@EXAMPLES


<div class="example-container" id="job_cancel_container">
<div id="job_cancel_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..10 FOR j IN 1..10 LET x = sleep(1.0) FILTER i == 5 &amp;&amp; j == 5 RETURN 42&quot;</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89486
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/pending</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">9</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  <span class="hljs-string">&quot;89486&quot;</span> 
]
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89486/cancel</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">15</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/pending</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">9</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  <span class="hljs-string">&quot;89486&quot;</span> 
]
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/job_getByType.md -->
@startDocuBlock job_getByType

@brief Returns the ids of job results with a specific status

@RESTHEADER{GET /_api/job/{type}#by-type, Returns list of async jobs, getJob}

@RESTURLPARAMETERS

@RESTURLPARAM{type,string,required}
The type of jobs to return. The type can be either done or pending. Setting
the type to done will make the method return the ids of already completed
async
jobs for which results can be fetched. Setting the type to pending will
return
the ids of not yet finished async jobs.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{count,number,optional}

The maximum number of ids to return per call. If not specified, a
server-defined maximum value will be used.

@RESTDESCRIPTION
Returns the list of ids of async jobs with a specific status (either done or
pending).
The list can be used by the client to get an overview of the job system
status and
to retrieve completed job results later.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the list can be compiled successfully. Note: the list might
be empty.

@RESTRETURNCODE{400}
is returned if type is not specified or has an invalid value.

@EXAMPLES

Fetching the list of done jobs:


<div class="example-container" id="job_getByType_01_container">
<div id="job_getByType_01_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89503
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/<span class="hljs-keyword">done</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">9</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  <span class="hljs-string">&quot;89503&quot;</span> 
]
</pre>
</div>
</div>




Fetching the list of pending jobs:


<div class="example-container" id="job_getByType_02_container">
<div id="job_getByType_02_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89505
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/pending</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2</span>
server: ArangoDB
x-content-type-options: nosniff

[ ]
</pre>
</div>
</div>




Querying the status of a pending job:
(we create a sleep job therefore...)


<div class="example-container" id="job_getByType_03_container">
<div id="job_getByType_03_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : [ 
      <span class="hljs-string">&quot;_frontend&quot;</span> 
    ] 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () {require(&#x27;internal&#x27;).sleep(15.0);}&quot;</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89507
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/pending</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">9</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  <span class="hljs-string">&quot;89507&quot;</span> 
]
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89507</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">15</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/job_fetch_result.md -->
@startDocuBlock job_fetch_result

@brief fetches a job result and removes it from the queue

@RESTHEADER{PUT /_api/job/{job-id}, Return result of an async job, getJobResult}

@RESTURLPARAMETERS

@RESTURLPARAM{job-id,string,required}
The async job id.

@RESTDESCRIPTION
Returns the result of an async job identified by job-id. If the async job
result is present on the server, the result will be removed from the list of
result. That means this method can be called for each job-id once.
The method will return the original job result's headers and body, plus the
additional HTTP header x-arango-async-job-id. If this header is present,
then
the job was found and the response contains the original job's result. If
the header is not present, the job was not found and the response contains
status information from the job manager.

@RESTRETURNCODES

@RESTRETURNCODE{204}
is returned if the job requested via job-id is still in the queue of pending
(or not yet finished) jobs. In this case, no x-arango-async-id HTTP header
will be returned.

@RESTRETURNCODE{400}
is returned if no job-id was specified in the request. In this case,
no x-arango-async-id HTTP header will be returned.

@RESTRETURNCODE{404}
is returned if the job was not found or already deleted or fetched from
the job result list. In this case, no x-arango-async-id HTTP header will
be returned.

@EXAMPLES
Not providing a job-id:


<div class="example-container" id="job_fetch_result_01_container">
<div id="job_fetch_result_01_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">71</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;bad parameter&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="job_fetch_result_01_container_collapse" onclick="$('#job_fetch_result_01_long').hide(); $('#job_fetch_result_01_short').show(); window.location.hash='job_fetch_result_01_container';" class="example_show_button">Hide response body</div></div>
<div id="job_fetch_result_01_short" onclick="$('#job_fetch_result_01_short').hide(); $('#job_fetch_result_01_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">71</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Providing a job-id for a non-existing job:


<div class="example-container" id="job_fetch_result_02_container">
<div id="job_fetch_result_02_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/notthere</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">67</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">404</span> 
}
</pre>
<div id="job_fetch_result_02_container_collapse" onclick="$('#job_fetch_result_02_long').hide(); $('#job_fetch_result_02_short').show(); window.location.hash='job_fetch_result_02_container';" class="example_show_button">Hide response body</div></div>
<div id="job_fetch_result_02_short" onclick="$('#job_fetch_result_02_short').hide(); $('#job_fetch_result_02_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/notthere</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">67</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Fetching the result of an HTTP GET job:


<div class="example-container" id="job_fetch_result_03_container">
<div id="job_fetch_result_03_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89499
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89499</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">61</span>
server: ArangoDB
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">89499</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;server&quot;</span> : <span class="hljs-string">&quot;arango&quot;</span>, 
  <span class="hljs-string">&quot;license&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
  <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span> 
}
</pre>
<div id="job_fetch_result_03_container_collapse" onclick="$('#job_fetch_result_03_long').hide(); $('#job_fetch_result_03_short').show(); window.location.hash='job_fetch_result_03_container';" class="example_show_button">Hide response body</div></div>
<div id="job_fetch_result_03_short" onclick="$('#job_fetch_result_03_short').hide(); $('#job_fetch_result_03_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89499
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89499</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">61</span>
server: ArangoDB
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">89499</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Fetching the result of an HTTP POST job that failed:


<div class="example-container" id="job_fetch_result_04_container">
<div id="job_fetch_result_04_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot; this name is invalid &quot;</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89501
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89501</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">114</span>
server: ArangoDB
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">89501</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;expected PUT /_api/collection/&lt;collection-name&gt;/&lt;action&gt;&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="job_fetch_result_04_container_collapse" onclick="$('#job_fetch_result_04_long').hide(); $('#job_fetch_result_04_short').show(); window.location.hash='job_fetch_result_04_container';" class="example_show_button">Hide response body</div></div>
<div id="job_fetch_result_04_short" onclick="$('#job_fetch_result_04_short').hide(); $('#job_fetch_result_04_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot; this name is invalid &quot;</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89501
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89501</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">114</span>
server: ArangoDB
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">89501</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/job_delete.md -->
@startDocuBlock job_delete

@brief deletes an async job result

@RESTHEADER{DELETE /_api/job/{type}#by-type, Deletes async job, deleteJob:byType}

@RESTURLPARAMETERS

@RESTURLPARAM{type,string,required}
The type of jobs to delete. type can be:
* *all*: Deletes all jobs results. Currently executing or queued async
  jobs will not be stopped by this call.
* *expired*: Deletes expired results. To determine the expiration status of a
  result, pass the stamp query parameter. stamp needs to be a UNIX timestamp,
  and all async job results created at a lower timestamp will be deleted.
* *an actual job-id*: In this case, the call will remove the result of the
  specified async job. If the job is currently executing or queued, it will
  not be aborted.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{stamp,number,optional}
A UNIX timestamp specifying the expiration threshold when type is expired.

@RESTDESCRIPTION
Deletes either all job results, expired job results, or the result of a
specific job.
Clients can use this method to perform an eventual garbage collection of job
results.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the deletion operation was carried out successfully.
This code will also be returned if no results were deleted.

@RESTRETURNCODE{400}
is returned if type is not specified or has an invalid value.

@RESTRETURNCODE{404}
is returned if type is a job-id but no async job with the specified id was
found.

@EXAMPLES

Deleting all jobs:


<div class="example-container" id="job_delete_01_container">
<div id="job_delete_01_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89490
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/all</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">15</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>




Deleting expired jobs:


<div class="example-container" id="job_delete_02_container">
<div id="job_delete_02_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89492
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/time</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">55</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-number">1648682828.3319268</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/expired?stamp=1648682828.3319268</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">15</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/pending</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2</span>
server: ArangoDB
x-content-type-options: nosniff

[ ]
</pre>
<div id="job_delete_02_container_collapse" onclick="$('#job_delete_02_long').hide(); $('#job_delete_02_short').show(); window.location.hash='job_delete_02_container';" class="example_show_button">Hide response body</div></div>
<div id="job_delete_02_short" onclick="$('#job_delete_02_short').hide(); $('#job_delete_02_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89492
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/time</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">55</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/expired?stamp=1648682828.3319268</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">15</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/pending</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2</span>
server: ArangoDB
x-content-type-options: nosniff

[ ]
</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Deleting the result of a specific job:


<div class="example-container" id="job_delete_03_container">
<div id="job_delete_03_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;x-arango-async: store&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/1.1 202 Accepted
content-type: text/plain
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-async-id: 89494
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/89494</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">15</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>




Deleting the result of a non-existing job:


<div class="example-container" id="job_delete_04_container">
<div id="job_delete_04_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/AreYouThere</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">67</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">404</span> 
}
</pre>
<div id="job_delete_04_container_collapse" onclick="$('#job_delete_04_long').hide(); $('#job_delete_04_short').show(); window.location.hash='job_delete_04_container';" class="example_show_button">Hide response body</div></div>
<div id="job_delete_04_short" onclick="$('#job_delete_04_short').hide(); $('#job_delete_04_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/job/AreYouThere</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">67</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/patch_update_document.md -->
@startDocuBlock patch_update_document

@brief updates a document

@RESTHEADER{PATCH /_api/document/{collection}/{key},Update document,updateDocument}

@RESTALLBODYPARAM{document,json,required}
A JSON representation of a document update as an object.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* in which the document is to be updated.

@RESTURLPARAM{key,string,required}
The document key.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{keepNull,boolean,optional}
If the intention is to delete existing attributes with the patch
command, the URL query parameter *keepNull* can be used with a value
of *false*. This will modify the behavior of the patch command to
remove any attributes from the existing document that are contained
in the patch document with an attribute value of *null*.

@RESTQUERYPARAM{mergeObjects,boolean,optional}
Controls whether objects (not arrays) will be merged if present in
both the existing and the patch document. If set to *false*, the
value in the patch document will overwrite the existing document's
value. If set to *true*, objects will be merged. The default is
*true*.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in
the given document is ignored. If this is set to *false*, then
the *_rev* attribute given in the body document is taken as a
precondition. The document is only updated if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed
document under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data
will be returned for the updated document. This option can be used to
save some network traffic.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-Match,string,optional}
You can conditionally update a document based on a target revision id by
using the *if-match* HTTP header.

@RESTDESCRIPTION
Partially updates the document identified by *document-id*.
The body of the request must contain a JSON document with the
attributes to patch (the patch document). All attributes from the
patch document will be added to the existing document if they do not
yet exist, and overwritten in the existing document if they do exist
there.

The value of the `_key` attribute as well as attributes
used as sharding keys may not be changed.

Setting an attribute value to *null* in the patch document will cause a
value of *null* to be saved for the attribute by default.

If the *If-Match* header is specified and the revision of the
document in the database is unequal to the given revision, the
precondition is violated.

If *If-Match* is not given and *ignoreRevs* is *false* and there
is a *_rev* attribute in the body and its value does not match
the revision of the document in the database, the precondition is
violated.

If a precondition is violated, an *HTTP 412* is returned.

If the document exists and can be updated, then an *HTTP 201* or
an *HTTP 202* is returned (depending on *waitForSync*, see below),
the *Etag* header field contains the new revision of the document
(in double quotes) and the *Location* header contains a complete URL
under which the document can be queried.

Cluster only: The patch document _may_ contain
values for the collection's pre-defined shard keys. Values for the shard keys
are treated as hints to improve performance. Should the shard keys
values be incorrect ArangoDB may answer with a *not found* error

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the updated document operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

If *silent* is not set to *true*, the body of the response contains a JSON
object with the information about the identifier and the revision. The attribute
*_id* contains the known *document-id* of the updated document, *_key*
contains the key which uniquely identifies a document in a given collection,
and the attribute *_rev* contains the new document revision.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then
the complete new document is returned under
the *new* attribute in the result.

If the document does not exist, then a *HTTP 404* is returned and the
body of the response contains an error document.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the document was updated successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the document was updated successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of a document. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection or the document was not found.

@RESTRETURNCODE{412}
is returned if the precondition was violated. The response will
also contain the found documents' current revisions in the *_rev*
attributes. Additionally, the attributes *_id* and *_key* will be
returned.

@EXAMPLES

Patches an existing document with new content.


<div class="example-container" id="RestDocumentHandlerPatchDocument_container">
<div id="RestDocumentHandlerPatchDocument_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71511</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-string">&quot;world&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPw----&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71511</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71511&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71511&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPw----&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylPv6---&quot;</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71511</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;numbers&quot;</span> : { 
    <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;two&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;three&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-literal">null</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPwS---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71511</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71511&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71511&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPwS---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylPw----&quot;</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71511</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">141</span>
etag: <span class="hljs-string">&quot;_d7ylPwS---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71511&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71511&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPwS---&quot;</span>, 
  <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-string">&quot;world&quot;</span>, 
  <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-string">&quot;world&quot;</span>, 
  <span class="hljs-string">&quot;numbers&quot;</span> : { 
    <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;two&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;three&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-literal">null</span> 
  } 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71511?keepNull=<span class="hljs-literal">false</span></span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;numbers&quot;</span> : { 
    <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPw2---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71511</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71511&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71511&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPw2---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylPwS---&quot;</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71511</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">134</span>
etag: <span class="hljs-string">&quot;_d7ylPw2---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71511&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71511&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPw2---&quot;</span>, 
  <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-string">&quot;world&quot;</span>, 
  <span class="hljs-string">&quot;numbers&quot;</span> : { 
    <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;three&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;two&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> 
  } 
}
</pre>
<div id="RestDocumentHandlerPatchDocument_container_collapse" onclick="$('#RestDocumentHandlerPatchDocument_long').hide(); $('#RestDocumentHandlerPatchDocument_short').show(); window.location.hash='RestDocumentHandlerPatchDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPatchDocument_short" onclick="$('#RestDocumentHandlerPatchDocument_short').hide(); $('#RestDocumentHandlerPatchDocument_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71511</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-string">&quot;world&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPw----&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71511</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71511</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;numbers&quot;</span> : { 
    <span class="hljs-string">&quot;one&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;two&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;three&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-literal">null</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPwS---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71511</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71511</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">141</span>
etag: <span class="hljs-string">&quot;_d7ylPwS---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71511?keepNull=<span class="hljs-literal">false</span></span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;numbers&quot;</span> : { 
    <span class="hljs-string">&quot;four&quot;</span> : <span class="hljs-number">4</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPw2---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71511</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71511</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">134</span>
etag: <span class="hljs-string">&quot;_d7ylPw2---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Merging attributes of an object using `mergeObjects`:


<div class="example-container" id="RestDocumentHandlerPatchDocumentMerge_container">
<div id="RestDocumentHandlerPatchDocumentMerge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71525</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">130</span>
etag: <span class="hljs-string">&quot;_d7ylPxu---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71525&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPxu---&quot;</span>, 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;china&quot;</span> : <span class="hljs-number">1366980000</span>, 
    <span class="hljs-string">&quot;india&quot;</span> : <span class="hljs-number">1263590000</span>, 
    <span class="hljs-string">&quot;usa&quot;</span> : <span class="hljs-number">319220000</span> 
  } 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71525?mergeObjects=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;indonesia&quot;</span> : <span class="hljs-number">252164800</span>, 
    <span class="hljs-string">&quot;brazil&quot;</span> : <span class="hljs-number">203553000</span> 
  } 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71525</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">171</span>
etag: <span class="hljs-string">&quot;_d7ylPyC---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71525&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPyC---&quot;</span>, 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;china&quot;</span> : <span class="hljs-number">1366980000</span>, 
    <span class="hljs-string">&quot;india&quot;</span> : <span class="hljs-number">1263590000</span>, 
    <span class="hljs-string">&quot;usa&quot;</span> : <span class="hljs-number">319220000</span>, 
    <span class="hljs-string">&quot;indonesia&quot;</span> : <span class="hljs-number">252164800</span>, 
    <span class="hljs-string">&quot;brazil&quot;</span> : <span class="hljs-number">203553000</span> 
  } 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71525?mergeObjects=<span class="hljs-literal">false</span></span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;pakistan&quot;</span> : <span class="hljs-number">188346000</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPym---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71525</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71525&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPym---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylPyC---&quot;</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71525</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
etag: <span class="hljs-string">&quot;_d7ylPym---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71525&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71525&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPym---&quot;</span>, 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;pakistan&quot;</span> : <span class="hljs-number">188346000</span> 
  } 
}
</pre>
<div id="RestDocumentHandlerPatchDocumentMerge_container_collapse" onclick="$('#RestDocumentHandlerPatchDocumentMerge_long').hide(); $('#RestDocumentHandlerPatchDocumentMerge_short').show(); window.location.hash='RestDocumentHandlerPatchDocumentMerge_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPatchDocumentMerge_short" onclick="$('#RestDocumentHandlerPatchDocumentMerge_short').hide(); $('#RestDocumentHandlerPatchDocumentMerge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71525</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">130</span>
etag: <span class="hljs-string">&quot;_d7ylPxu---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71525?mergeObjects=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;indonesia&quot;</span> : <span class="hljs-number">252164800</span>, 
    <span class="hljs-string">&quot;brazil&quot;</span> : <span class="hljs-number">203553000</span> 
  } 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71525</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">171</span>
etag: <span class="hljs-string">&quot;_d7ylPyC---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71525?mergeObjects=<span class="hljs-literal">false</span></span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;inhabitants&quot;</span> : { 
    <span class="hljs-string">&quot;pakistan&quot;</span> : <span class="hljs-number">188346000</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylPym---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71525</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71525</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
etag: <span class="hljs-string">&quot;_d7ylPym---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/patch_update_multiple_documents.md -->
@startDocuBlock patch_update_document_MULTI

@brief updates multiple documents

@RESTHEADER{PATCH /_api/document/{collection},Update documents,updateDocuments}

@RESTALLBODYPARAM{documents,json,required}
A JSON representation of an array of document updates as objects.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* in which the documents are to be updated.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{keepNull,boolean,optional}
If the intention is to delete existing attributes with the patch
command, the URL query parameter *keepNull* can be used with a value
of *false*. This will modify the behavior of the patch command to
remove any attributes from the existing document that are contained
in the patch document with an attribute value of *null*.

@RESTQUERYPARAM{mergeObjects,boolean,optional}
Controls whether objects (not arrays) will be merged if present in
both the existing and the patch document. If set to *false*, the
value in the patch document will overwrite the existing document's
value. If set to *true*, objects will be merged. The default is
*true*.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until the new documents have been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in
the given documents are ignored. If this is set to *false*, then
any *_rev* attribute given in a body document is taken as a
precondition. The document is only updated if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed
documents under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new documents under the attribute *new*
in the result.

@RESTDESCRIPTION
Partially updates documents, the documents to update are specified
by the *_key* attributes in the body objects. The body of the
request must contain a JSON array of document updates with the
attributes to patch (the patch documents). All attributes from the
patch documents will be added to the existing documents if they do
not yet exist, and overwritten in the existing documents if they do
exist there.

The value of the `_key` attribute as well as attributes
used as sharding keys may not be changed.

Setting an attribute value to *null* in the patch documents will cause a
value of *null* to be saved for the attribute by default.

If *ignoreRevs* is *false* and there is a *_rev* attribute in a
document in the body and its value does not match the revision of
the corresponding document in the database, the precondition is
violated.

Cluster only: The patch document _may_ contain
values for the collection's pre-defined shard keys. Values for the shard keys
are treated as hints to improve performance. Should the shard keys
values be incorrect ArangoDB may answer with a *not found* error

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document replacement operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

The body of the response contains a JSON array of the same length
as the input array with the information about the identifier and the
revision of the updated documents. In each entry, the attribute
*_id* contains the known *document-id* of each updated document,
*_key* contains the key which uniquely identifies a document in a
given collection, and the attribute *_rev* contains the new document
revision. In case of an error or violated precondition, an error
object with the attribute *error* set to *true* and the attribute
*errorCode* set to the error code is built.

If the query parameter *returnOld* is *true*, then, for each
generated document, the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

Note that if any precondition is violated or an error occurred with
some of the documents, the return code is still 201 or 202, but
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1200:17,1205:10* which means that in 17
cases the error 1200 "revision conflict" and in 10 cases the error
1205 "illegal document handle" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if *waitForSync* was *true* and operations were processed.

@RESTRETURNCODE{202}
is returned if *waitForSync* was *false* and operations were processed.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection was not found.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/put_replace_multiple_documents.md -->
@startDocuBlock put_replace_document_MULTI

@brief replaces multiple documents

@RESTHEADER{PUT /_api/document/{collection},Replace documents,replaceDocuments}

@RESTALLBODYPARAM{documents,json,required}
A JSON representation of an array of documents.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
This URL parameter is the name of the collection in which the
documents are replaced.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until the new documents have been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in
the given documents are ignored. If this is set to *false*, then
any *_rev* attribute given in a body document is taken as a
precondition. The document is only replaced if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed
documents under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new documents under the attribute *new*
in the result.

@RESTDESCRIPTION
Replaces multiple documents in the specified collection with the
ones in the body, the replaced documents are specified by the *_key*
attributes in the body documents.

The value of the `_key` attribute as well as attributes
used as sharding keys may not be changed.

If *ignoreRevs* is *false* and there is a *_rev* attribute in a
document in the body and its value does not match the revision of
the corresponding document in the database, the precondition is
violated.

Cluster only: The replace documents _may_ contain
values for the collection's pre-defined shard keys. Values for the shard keys
are treated as hints to improve performance. Should the shard keys
values be incorrect ArangoDB may answer with a *not found* error.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document replacement operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

The body of the response contains a JSON array of the same length
as the input array with the information about the identifier and the
revision of the replaced documents. In each entry, the attribute
*_id* contains the known *document-id* of each updated document,
*_key* contains the key which uniquely identifies a document in a
given collection, and the attribute *_rev* contains the new document
revision. In case of an error or violated precondition, an error
object with the attribute *error* set to *true* and the attribute
*errorCode* set to the error code is built.

If the query parameter *returnOld* is *true*, then, for each
generated document, the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

Note that if any precondition is violated or an error occurred with
some of the documents, the return code is still 201 or 202, but
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1200:17,1205:10* which means that in 17
cases the error 1200 "revision conflict" and in 10 cases the error
1205 "illegal document handle" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if *waitForSync* was *true* and operations were processed.

@RESTRETURNCODE{202}
is returned if *waitForSync* was *false* and operations were processed.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection was not found.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/post_create_document.md -->
@startDocuBlock post_create_document

@brief creates documents

@RESTHEADER{POST /_api/document/{collection},Create document,insertDocument}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* in which the document is to be created.

@RESTALLBODYPARAM{data,json,required}
A JSON representation of a single document.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,optional}
The name of the collection. This is only for backward compatibility.
In ArangoDB versions < 3.0, the URL path was */_api/document* and
this query parameter was required. This combination still works, but
the recommended way is to specify the collection in the URL path.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{returnNew,boolean,optional}
Additionally return the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{returnOld,boolean,optional}
Additionally return the complete old document under the attribute *old*
in the result. Only available if the overwrite option is used.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data
will be returned for the created document. This option can be used to
save some network traffic.

@RESTQUERYPARAM{overwrite,boolean,optional}
If set to *true*, the insert becomes a replace-insert. If a document with the
same *_key* already exists the new document is not rejected with unique
constraint violated but will replace the old document. Note that operations
with `overwrite` parameter require a `_key` attribute in the request payload,
therefore they can only be performed on collections sharded by `_key`.

@RESTQUERYPARAM{overwriteMode,string,optional}
This option supersedes *overwrite* and offers the following modes:
- `"ignore"`: if a document with the specified *_key* value exists already,
  nothing will be done and no write operation will be carried out. The
  insert operation will return success in this case. This mode does not
  support returning the old document version using `RETURN OLD`. When using
  `RETURN NEW`, *null* will be returned in case the document already existed.
- `"replace"`: if a document with the specified *_key* value exists already,
  it will be overwritten with the specified document value. This mode will
  also be used when no overwrite mode is specified but the *overwrite*
  flag is set to *true*.
- `"update"`: if a document with the specified *_key* value exists already,
  it will be patched (partially updated) with the specified document value.
  The overwrite mode can be further controlled via the *keepNull* and
  *mergeObjects* parameters.
- `"conflict"`: if a document with the specified *_key* value exists already,
  return a unique constraint violation error so that the insert operation
  fails. This is also the default behavior in case the overwrite mode is
  not set, and the *overwrite* flag is *false* or not set either.

@RESTQUERYPARAM{keepNull,boolean,optional}
If the intention is to delete existing attributes with the update-insert
command, the URL query parameter *keepNull* can be used with a value of
*false*. This will modify the behavior of the patch command to remove any
attributes from the existing document that are contained in the patch document
with an attribute value of *null*.
This option controls the update-insert behavior only.

@RESTQUERYPARAM{mergeObjects,boolean,optional}
Controls whether objects (not arrays) will be merged if present in both the
existing and the update-insert document. If set to *false*, the value in the
patch document will overwrite the existing document's value. If set to *true*,
objects will be merged. The default is *true*.
This option controls the update-insert behavior only.

@RESTDESCRIPTION
Creates a new document from the document given in the body, unless there
is already a document with the *_key* given. If no *_key* is given, a new
unique *_key* is generated automatically.

Possibly given *_id* and *_rev* attributes in the body are always ignored,
the URL part or the query parameter collection respectively counts.

If the document was created successfully, then the *Location* header
contains the path to the newly created document. The *Etag* header field
contains the revision of the document. Both are only set in the single
document case.

If *silent* is not set to *true*, the body of the response contains a
JSON object with the following attributes:

  - *_id* contains the document identifier of the newly created document
  - *_key* contains the document key
  - *_rev* contains the document revision

If the collection parameter *waitForSync* is *false*, then the call
returns as soon as the document has been accepted. It will not wait
until the documents have been synced to disk.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document creation operation to disk even in
case that the *waitForSync* flag had been disabled for the entire
collection. Thus, the *waitForSync* query parameter can be used to
force synchronization of just this specific operations. To use this,
set the *waitForSync* parameter to *true*. If the *waitForSync*
parameter is not specified or set to *false*, then the collection's
default *waitForSync* behavior is applied. The *waitForSync* query
parameter cannot be used to disable synchronization for collections
that have a default *waitForSync* value of *true*.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the documents were created successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the documents were created successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of one document. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.
The response body contains an error document in this case.

@RESTRETURNCODE{409}
is returned in the single document case if a document with the
same qualifiers in an indexed attribute conflicts with an already
existing document and thus violates that unique constraint. The
response body contains an error document in this case.

@EXAMPLES

Create a document in a collection named *products*. Note that the
revision identifier might or might not by equal to the auto-generated
key.


<div class="example-container" id="RestDocumentHandlerPostCreate1_container">
<div id="RestDocumentHandlerPostCreate1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylP1i---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71563</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71563&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71563&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP1i---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerPostCreate1_container_collapse" onclick="$('#RestDocumentHandlerPostCreate1_long').hide(); $('#RestDocumentHandlerPostCreate1_short').show(); window.location.hash='RestDocumentHandlerPostCreate1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostCreate1_short" onclick="$('#RestDocumentHandlerPostCreate1_short').hide(); $('#RestDocumentHandlerPostCreate1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylP1i---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71563</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Create a document in a collection named *products* with a collection-level
*waitForSync* value of *false*.


<div class="example-container" id="RestDocumentHandlerPostAccept1_container">
<div id="RestDocumentHandlerPostAccept1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylPzi---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71539</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71539&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71539&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPzi---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerPostAccept1_container_collapse" onclick="$('#RestDocumentHandlerPostAccept1_long').hide(); $('#RestDocumentHandlerPostAccept1_short').show(); window.location.hash='RestDocumentHandlerPostAccept1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostAccept1_short" onclick="$('#RestDocumentHandlerPostAccept1_short').hide(); $('#RestDocumentHandlerPostAccept1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylPzi---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71539</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Create a document in a collection with a collection-level *waitForSync*
value of *false*, but using the *waitForSync* query parameter.


<div class="example-container" id="RestDocumentHandlerPostWait1_container">
<div id="RestDocumentHandlerPostWait1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?waitForSync=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylP7m---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71614</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71614&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71614&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP7m---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerPostWait1_container_collapse" onclick="$('#RestDocumentHandlerPostWait1_long').hide(); $('#RestDocumentHandlerPostWait1_short').show(); window.location.hash='RestDocumentHandlerPostWait1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostWait1_short" onclick="$('#RestDocumentHandlerPostWait1_short').hide(); $('#RestDocumentHandlerPostWait1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?waitForSync=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylP7m---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71614</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown collection name


<div class="example-container" id="RestDocumentHandlerPostUnknownCollection1_container">
<div id="RestDocumentHandlerPostUnknownCollection1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found: products&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestDocumentHandlerPostUnknownCollection1_container_collapse" onclick="$('#RestDocumentHandlerPostUnknownCollection1_long').hide(); $('#RestDocumentHandlerPostUnknownCollection1_short').show(); window.location.hash='RestDocumentHandlerPostUnknownCollection1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostUnknownCollection1_short" onclick="$('#RestDocumentHandlerPostUnknownCollection1_short').hide(); $('#RestDocumentHandlerPostUnknownCollection1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Illegal document


<div class="example-container" id="RestDocumentHandlerPostBadJson1_container">
<div id="RestDocumentHandlerPostBadJson1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ 1: "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;VPackError error: Expecting &#x27;\&quot;&#x27; or &#x27;}&#x27;&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">600</span> 
}
</pre>
<div id="RestDocumentHandlerPostBadJson1_container_collapse" onclick="$('#RestDocumentHandlerPostBadJson1_long').hide(); $('#RestDocumentHandlerPostBadJson1_short').show(); window.location.hash='RestDocumentHandlerPostBadJson1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostBadJson1_short" onclick="$('#RestDocumentHandlerPostBadJson1_short').hide(); $('#RestDocumentHandlerPostBadJson1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ 1: "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Use of returnNew:


<div class="example-container" id="RestDocumentHandlerPostReturnNew_container">
<div id="RestDocumentHandlerPostReturnNew_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?returnNew=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{"Hello":"World"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">143</span>
etag: <span class="hljs-string">&quot;_d7ylP6e---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71603</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71603&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71603&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP6e---&quot;</span>, 
  <span class="hljs-string">&quot;new&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71603&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71603&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP6e---&quot;</span>, 
    <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;World&quot;</span> 
  } 
}
</pre>
<div id="RestDocumentHandlerPostReturnNew_container_collapse" onclick="$('#RestDocumentHandlerPostReturnNew_long').hide(); $('#RestDocumentHandlerPostReturnNew_short').show(); window.location.hash='RestDocumentHandlerPostReturnNew_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostReturnNew_short" onclick="$('#RestDocumentHandlerPostReturnNew_short').hide(); $('#RestDocumentHandlerPostReturnNew_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?returnNew=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{"Hello":"World"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">143</span>
etag: <span class="hljs-string">&quot;_d7ylP6e---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71603</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







<div class="example-container" id="RestDocumentHandlerPostOverwrite_container">
<div id="RestDocumentHandlerPostOverwrite_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World", "_key" : "lock" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">58</span>
etag: <span class="hljs-string">&quot;_d7ylP4q---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/lock
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/lock&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;lock&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP4q---&quot;</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?overwrite=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "Hello": "Universe", "_key" : "lock" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">82</span>
etag: <span class="hljs-string">&quot;_d7ylP5W---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/lock
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/lock&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;lock&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP5W---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylP4q---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerPostOverwrite_container_collapse" onclick="$('#RestDocumentHandlerPostOverwrite_long').hide(); $('#RestDocumentHandlerPostOverwrite_short').show(); window.location.hash='RestDocumentHandlerPostOverwrite_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostOverwrite_short" onclick="$('#RestDocumentHandlerPostOverwrite_short').hide(); $('#RestDocumentHandlerPostOverwrite_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
{ "Hello": "World", "_key" : "lock" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">58</span>
etag: <span class="hljs-string">&quot;_d7ylP4q---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/lock
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?overwrite=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "Hello": "Universe", "_key" : "lock" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">82</span>
etag: <span class="hljs-string">&quot;_d7ylP5W---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/lock
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/post_create_multiple_document.md -->
@startDocuBlock post_create_document_MULTI

@brief creates multiple documents

@RESTHEADER{POST /_api/document/{collection}#multiple,Create multiple documents,insertDocuments}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* in which the documents are to be created.

@RESTALLBODYPARAM{data,json,required}
An array of documents to create.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,optional}
The name of the collection. This is only for backward compatibility.
In ArangoDB versions < 3.0, the URL path was */_api/document* and
this query parameter was required. This combination still works, but
the recommended way is to specify the collection in the URL path.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{returnNew,boolean,optional}
Additionally return the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{returnOld,boolean,optional}
Additionally return the complete old document under the attribute *old*
in the result. Only available if the overwrite option is used.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data
will be returned for the created document. This option can be used to
save some network traffic.

@RESTQUERYPARAM{overwrite,boolean,optional}
If set to *true*, the insert becomes a replace-insert. If a document with the
same *_key* already exists the new document is not rejected with unique
constraint violated but will replace the old document. Note that operations
with `overwrite` parameter require a `_key` attribute in the request payload,
therefore they can only be performed on collections sharded by `_key`.

@RESTQUERYPARAM{overwriteMode,string,optional}
This option supersedes *overwrite* and offers the following modes:
- `"ignore"`: if a document with the specified *_key* value exists already,
  nothing will be done and no write operation will be carried out. The
  insert operation will return success in this case. This mode does not
  support returning the old document version using `RETURN OLD`. When using
  `RETURN NEW`, *null* will be returned in case the document already existed.
- `"replace"`: if a document with the specified *_key* value exists already,
  it will be overwritten with the specified document value. This mode will
  also be used when no overwrite mode is specified but the *overwrite*
  flag is set to *true*.
- `"update"`: if a document with the specified *_key* value exists already,
  it will be patched (partially updated) with the specified document value.
  The overwrite mode can be further controlled via the *keepNull* and
  *mergeObjects* parameters.
- `"conflict"`: if a document with the specified *_key* value exists already,
  return a unique constraint violation error so that the insert operation
  fails. This is also the default behavior in case the overwrite mode is
  not set, and the *overwrite* flag is *false* or not set either.

@RESTQUERYPARAM{keepNull,boolean,optional}
If the intention is to delete existing attributes with the update-insert
command, the URL query parameter *keepNull* can be used with a value of
*false*. This will modify the behavior of the patch command to remove any
attributes from the existing document that are contained in the patch document
with an attribute value of *null*.
This option controls the update-insert behavior only.

@RESTQUERYPARAM{mergeObjects,boolean,optional}
Controls whether objects (not arrays) will be merged if present in both the
existing and the update-insert document. If set to *false*, the value in the
patch document will overwrite the existing document's value. If set to *true*,
objects will be merged. The default is *true*.
This option controls the update-insert behavior only.

@RESTDESCRIPTION
Creates new documents from the documents given in the body, unless there
is already a document with the *_key* given. If no *_key* is given, a new
unique *_key* is generated automatically.

The result body will contain a JSON array of the
same length as the input array, and each entry contains the result
of the operation for the corresponding input. In case of an error
the entry is a document with attributes *error* set to *true* and
errorCode set to the error code that has happened.

Possibly given *_id* and *_rev* attributes in the body are always ignored,
the URL part or the query parameter collection respectively counts.

If *silent* is not set to *true*, the body of the response contains an
array of JSON objects with the following attributes:

  - *_id* contains the document identifier of the newly created document
  - *_key* contains the document key
  - *_rev* contains the document revision

If the collection parameter *waitForSync* is *false*, then the call
returns as soon as the documents have been accepted. It will not wait
until the documents have been synced to disk.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document creation operation to disk even in
case that the *waitForSync* flag had been disabled for the entire
collection. Thus, the *waitForSync* query parameter can be used to
force synchronization of just this specific operations. To use this,
set the *waitForSync* parameter to *true*. If the *waitForSync*
parameter is not specified or set to *false*, then the collection's
default *waitForSync* behavior is applied. The *waitForSync* query
parameter cannot be used to disable synchronization for collections
that have a default *waitForSync* value of *true*.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

Should an error have occurred with some of the documents
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1205:10,1210:17* which means that in 10
cases the error 1205 "illegal document handle" and in 17 cases the
error 1210 "unique constraint violated" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if *waitForSync* was *true* and operations were processed.

@RESTRETURNCODE{202}
is returned if *waitForSync* was *false* and operations were processed.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.
The response body contains an error document in this case.

@EXAMPLES

Insert multiple documents:


<div class="example-container" id="RestDocumentHandlerPostMulti1_container">
<div id="RestDocumentHandlerPostMulti1_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
[{"Hello":"Earth"}, {"Hello":"Venus"}, {"Hello":"Mars"}]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">184</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71572&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71572&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3G---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71573&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71573&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3G--A&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71574&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71574&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3G--C&quot;</span> 
  } 
]
</pre>
</div>
</div>






Use of returnNew:


<div class="example-container" id="RestDocumentHandlerPostMulti2_container">
<div id="RestDocumentHandlerPostMulti2_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?returnNew=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[{"Hello":"Earth"}, {"Hello":"Venus"}, {"Hello":"Mars"}]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">432</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71583&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71583&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3y---&quot;</span>, 
    <span class="hljs-string">&quot;new&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71583&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71583&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3y---&quot;</span>, 
      <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;Earth&quot;</span> 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71584&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71584&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3y--A&quot;</span>, 
    <span class="hljs-string">&quot;new&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71584&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71584&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3y--A&quot;</span>, 
      <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;Venus&quot;</span> 
    } 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71585&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71585&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3y--C&quot;</span>, 
    <span class="hljs-string">&quot;new&quot;</span> : { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71585&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71585&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP3y--C&quot;</span>, 
      <span class="hljs-string">&quot;Hello&quot;</span> : <span class="hljs-string">&quot;Mars&quot;</span> 
    } 
  } 
]
</pre>
</div>
</div>






Partially illegal documents:


<div class="example-container" id="RestDocumentHandlerPostBadJsonMulti_container">
<div id="RestDocumentHandlerPostBadJsonMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
[{ "_key": 111 }, {"_key":"abc"}]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">127</span>
server: ArangoDB
x-arango-error-codes: {<span class="hljs-string">&quot;1221&quot;</span>:<span class="hljs-number">1</span>}
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1221</span>, 
    <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;illegal document key&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/abc&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;abc&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP02---&quot;</span> 
  } 
]
</pre>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/get_read_multiple_documents.md -->
@startDocuBlock get_read_document_MULTI

@brief reads a single document

@RESTHEADER{PUT /_api/document/{collection}#get,Read multiple documents,readDocuments}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* from which the documents are to be read.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{onlyget,boolean,required}
This parameter is required to be **true**, otherwise a replace
operation is executed!

@RESTQUERYPARAM{ignoreRevs,string,optional}
Should the value be *true* (the default):
If a search document contains a value for the *_rev* field,
then the document is only returned if it has the same revision value.
Otherwise a precondition failed error is returned.

@RESTDESCRIPTION
Returns the documents identified by their *_key* in the body objects.
The body of the request _must_ contain a JSON array of either
strings (the *_key* values to lookup) or search documents.

A search document _must_ contain at least a value for the *_key* field.
A value for `_rev` _may_ be specified to verify whether the document
has the same revision value, unless _ignoreRevs_ is set to false.

Cluster only: The search document _may_ contain
values for the collection's pre-defined shard keys. Values for the shard keys
are treated as hints to improve performance. Should the shard keys
values be incorrect ArangoDB may answer with a *not found* error.

The returned array of documents contain three special attributes: *_id* containing the document
identifier, *_key* containing key which uniquely identifies a document
in a given collection and *_rev* containing the revision.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if no error happened

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection was not found.

@EXAMPLES

Reading multiple documents identifier:


<div class="example-container" id="RestDocumentHandlerReadMultiDocument_container">
<div id="RestDocumentHandlerReadMultiDocument_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?onlyget=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
["doc1", {"_key":"doc2"}]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">153</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;doc1&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/doc1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQBe---&quot;</span>, 
    <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-string">&quot;world&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;doc2&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/doc2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQBi--_&quot;</span>, 
    <span class="hljs-string">&quot;say&quot;</span> : <span class="hljs-string">&quot;hi to mom&quot;</span> 
  } 
]
</pre>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/put_replace_document.md -->
@startDocuBlock put_replace_document

@brief replaces a document

@RESTHEADER{PUT /_api/document/{collection}/{key},Replace document,replaceDocument}

@RESTALLBODYPARAM{document,json,required}
A JSON representation of a single document.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* in which the document is to be replaced.

@RESTURLPARAM{key,string,required}
The document key.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in
the given document is ignored. If this is set to *false*, then
the *_rev* attribute given in the body document is taken as a
precondition. The document is only replaced if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed
document under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data
will be returned for the replaced document. This option can be used to
save some network traffic.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-Match,string,optional}
You can conditionally replace a document based on a target revision id by
using the *if-match* HTTP header.

@RESTDESCRIPTION
Replaces the specified document with the one in the body, provided there is
such a document and no precondition is violated.

The value of the `_key` attribute as well as attributes
used as sharding keys may not be changed.

If the *If-Match* header is specified and the revision of the
document in the database is unequal to the given revision, the
precondition is violated.

If *If-Match* is not given and *ignoreRevs* is *false* and there
is a *_rev* attribute in the body and its value does not match
the revision of the document in the database, the precondition is
violated.

If a precondition is violated, an *HTTP 412* is returned.

If the document exists and can be updated, then an *HTTP 201* or
an *HTTP 202* is returned (depending on *waitForSync*, see below),
the *Etag* header field contains the new revision of the document
and the *Location* header contains a complete URL under which the
document can be queried.

Cluster only: The replace documents _may_ contain
values for the collection's pre-defined shard keys. Values for the shard keys
are treated as hints to improve performance. Should the shard keys
values be incorrect ArangoDB may answer with a *not found* error.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document replacement operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

If *silent* is not set to *true*, the body of the response contains a JSON
object with the information about the identifier and the revision. The attribute
*_id* contains the known *document-id* of the updated document, *_key*
contains the key which uniquely identifies a document in a given collection,
and the attribute *_rev* contains the new document revision.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then
the complete new document is returned under
the *new* attribute in the result.

If the document does not exist, then a *HTTP 404* is returned and the
body of the response contains an error document.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the document was replaced successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the document was replaced successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of a document. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection or the document was not found.

@RESTRETURNCODE{412}
is returned if the precondition was violated. The response will
also contain the found documents' current revisions in the *_rev*
attributes. Additionally, the attributes *_id* and *_key* will be
returned.

@EXAMPLES

Using a document identifier


<div class="example-container" id="RestDocumentHandlerUpdateDocument_container">
<div id="RestDocumentHandlerUpdateDocument_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71696</span> &lt;&lt;EOF
{"Hello": "you"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylQCe---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71696</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71696&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71696&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQCe---&quot;</span>, 
  <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ylQCa---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerUpdateDocument_container_collapse" onclick="$('#RestDocumentHandlerUpdateDocument_long').hide(); $('#RestDocumentHandlerUpdateDocument_short').show(); window.location.hash='RestDocumentHandlerUpdateDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerUpdateDocument_short" onclick="$('#RestDocumentHandlerUpdateDocument_short').hide(); $('#RestDocumentHandlerUpdateDocument_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71696</span> &lt;&lt;EOF
{"Hello": "you"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">84</span>
etag: <span class="hljs-string">&quot;_d7ylQCe---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71696</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown document identifier


<div class="example-container" id="RestDocumentHandlerUpdateDocumentUnknownHandle_container">
<div id="RestDocumentHandlerUpdateDocumentUnknownHandle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71719</span> &lt;&lt;EOF
{}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">77</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;document not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestDocumentHandlerUpdateDocumentUnknownHandle_container_collapse" onclick="$('#RestDocumentHandlerUpdateDocumentUnknownHandle_long').hide(); $('#RestDocumentHandlerUpdateDocumentUnknownHandle_short').show(); window.location.hash='RestDocumentHandlerUpdateDocumentUnknownHandle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerUpdateDocumentUnknownHandle_short" onclick="$('#RestDocumentHandlerUpdateDocumentUnknownHandle_short').hide(); $('#RestDocumentHandlerUpdateDocumentUnknownHandle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71719</span> &lt;&lt;EOF
{}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">77</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Produce a revision conflict


<div class="example-container" id="RestDocumentHandlerUpdateDocumentIfMatchOther_container">
<div id="RestDocumentHandlerUpdateDocumentIfMatchOther_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;If-Match: &quot;_d7ylQDG--A&quot;&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71706</span> &lt;&lt;EOF
{"other":"content"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">126</span>
etag: <span class="hljs-string">&quot;_d7ylQDG---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">412</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1200</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;conflict&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71706&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71706&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQDG---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerUpdateDocumentIfMatchOther_container_collapse" onclick="$('#RestDocumentHandlerUpdateDocumentIfMatchOther_long').hide(); $('#RestDocumentHandlerUpdateDocumentIfMatchOther_short').show(); window.location.hash='RestDocumentHandlerUpdateDocumentIfMatchOther_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerUpdateDocumentIfMatchOther_short" onclick="$('#RestDocumentHandlerUpdateDocumentIfMatchOther_short').hide(); $('#RestDocumentHandlerUpdateDocumentIfMatchOther_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;If-Match: &quot;_d7ylQDG--A&quot;&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products/71706</span> &lt;&lt;EOF
{"other":"content"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">126</span>
etag: <span class="hljs-string">&quot;_d7ylQDG---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/get_read_document.md -->
@startDocuBlock get_read_document

@brief reads a single document

@RESTHEADER{GET /_api/document/{collection}/{key},Read document,readDocument}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* from which the document is to be read.

@RESTURLPARAM{key,string,required}
The document key.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-None-Match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has a different revision than the
given Etag. Otherwise an *HTTP 304* is returned.

@RESTHEADERPARAM{If-Match,string,optional}
If the "If-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has the same revision as the
given Etag. Otherwise a *HTTP 412* is returned.

@RESTDESCRIPTION
Returns the document identified by *document-id*. The returned
document contains three special attributes: *_id* containing the document
identifier, *_key* containing key which uniquely identifies a document
in a given collection and *_rev* containing the revision.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was found

@RESTRETURNCODE{304}
is returned if the "If-None-Match" header is given and the document has
the same version

@RESTRETURNCODE{404}
is returned if the document or collection was not found

@RESTRETURNCODE{412}
is returned if an "If-Match" header is given and the found
document has a different version. The response will also contain the found
document's current revision in the *_rev* attribute. Additionally, the
attributes *_id* and *_key* will be returned.

@EXAMPLES

Use a document identifier:


<div class="example-container" id="RestDocumentHandlerReadDocument_container">
<div id="RestDocumentHandlerReadDocument_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71623</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">76</span>
etag: <span class="hljs-string">&quot;_d7ylP8y---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71623&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71623&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylP8y---&quot;</span>, 
  <span class="hljs-string">&quot;hello&quot;</span> : <span class="hljs-string">&quot;world&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocument_container_collapse" onclick="$('#RestDocumentHandlerReadDocument_long').hide(); $('#RestDocumentHandlerReadDocument_short').show(); window.location.hash='RestDocumentHandlerReadDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocument_short" onclick="$('#RestDocumentHandlerReadDocument_short').hide(); $('#RestDocumentHandlerReadDocument_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71623</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">76</span>
etag: <span class="hljs-string">&quot;_d7ylP8y---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Use a document identifier and an Etag:


<div class="example-container" id="RestDocumentHandlerReadDocumentIfNoneMatch_container">
<div id="RestDocumentHandlerReadDocumentIfNoneMatch_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;If-None-Match: &quot;_d7ylQAm---&quot;&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71674</span>

</pre>
</div>
</div>





Unknown document identifier:


<div class="example-container" id="RestDocumentHandlerReadDocumentUnknownHandle_container">
<div id="RestDocumentHandlerReadDocumentUnknownHandle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/unknown-identifier</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found: products&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentUnknownHandle_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentUnknownHandle_long').hide(); $('#RestDocumentHandlerReadDocumentUnknownHandle_short').show(); window.location.hash='RestDocumentHandlerReadDocumentUnknownHandle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentUnknownHandle_short" onclick="$('#RestDocumentHandlerReadDocumentUnknownHandle_short').hide(); $('#RestDocumentHandlerReadDocumentUnknownHandle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/unknown-identifier</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/delete_mutliple_documents.md -->
@startDocuBlock delete_remove_document_MULTI

@brief removes multiple document

@RESTHEADER{DELETE /_api/document/{collection},Removes multiple documents,removeDocuments}

@RESTALLBODYPARAM{array,json,required}
A JSON array of strings or documents.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Collection from which documents are removed.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until deletion operation has been synced to disk.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed
document under the attribute *old* in the result.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
If set to *true*, ignore any *_rev* attribute in the selectors. No
revision check is performed. If set to *false* then revisions are checked.
The default is *true*.

@RESTDESCRIPTION
The body of the request is an array consisting of selectors for
documents. A selector can either be a string with a key or a string
with a document identifier or an object with a *_key* attribute. This
API call removes all specified documents from *collection*.
If the *ignoreRevs* query parameter is *false* and the
selector is an object and has a *_rev* attribute, it is a
precondition that the actual revision of the removed document in the
collection is the specified one.

The body of the response is an array of the same length as the input
array. For each input selector, the output contains a JSON object
with the information about the outcome of the operation. If no error
occurred, an object is built in which the attribute *_id* contains
the known *document-id* of the removed document, *_key* contains
the key which uniquely identifies a document in a given collection,
and the attribute *_rev* contains the document revision. In case of
an error, an object with the attribute *error* set to *true* and
*errorCode* set to the error code is built.

If the *waitForSync* parameter is not specified or set to *false*,
then the collection's default *waitForSync* behavior is applied.
The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync*
value of *true*.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

Note that if any precondition is violated or an error occurred with
some of the documents, the return code is still 200 or 202, but
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1200:17,1205:10* which means that in 17
cases the error 1200 "revision conflict" and in 10 cases the error
1205 "illegal document handle" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if *waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if *waitForSync* was *false*.

@RESTRETURNCODE{404}
is returned if the collection was not found.
The response body contains an error document in this case.

@EXAMPLES

Using document keys:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentKeyMulti_container">
<div id="RestDocumentHandlerDeleteDocumentKeyMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
[ 
  <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;2&quot;</span> 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">107</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/1&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPk----&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/2&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPk---A&quot;</span> 
  } 
]
</pre>
</div>
</div>







Using document identifiers:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentIdentifierMulti_container">
<div id="RestDocumentHandlerDeleteDocumentIdentifierMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
[ 
  <span class="hljs-string">&quot;products/1&quot;</span>, 
  <span class="hljs-string">&quot;products/2&quot;</span> 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">107</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/1&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPhS---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/2&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPhS--A&quot;</span> 
  } 
]
</pre>
</div>
</div>







Using objects with document keys:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentObjectMulti_container">
<div id="RestDocumentHandlerDeleteDocumentObjectMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">107</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/1&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPlu---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/2&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPlu--A&quot;</span> 
  } 
]
</pre>
</div>
</div>







Unknown documents:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentUnknownMulti_container">
<div id="RestDocumentHandlerDeleteDocumentUnknownMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products</span> &lt;&lt;EOF
[ 
  <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;other/2&quot;</span> 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">135</span>
server: ArangoDB
x-arango-error-codes: {<span class="hljs-string">&quot;1202&quot;</span>:<span class="hljs-number">2</span>}
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1202</span>, 
    <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;document not found&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1202</span>, 
    <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;document not found&quot;</span> 
  } 
]
</pre>
</div>
</div>







Check revisions:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentRevMulti_container">
<div id="RestDocumentHandlerDeleteDocumentRevMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?ignoreRevs=<span class="hljs-literal">false</span></span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPpC---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPpC--A&quot;</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">107</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/1&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPpC---&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/2&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPpC--A&quot;</span> 
  } 
]
</pre>
</div>
</div>







Revision conflict:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentRevConflictMulti_container">
<div id="RestDocumentHandlerDeleteDocumentRevConflictMulti_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/document/products?ignoreRevs=<span class="hljs-literal">false</span></span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;non-matching revision&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;non-matching revision&quot;</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">115</span>
server: ArangoDB
x-arango-error-codes: {<span class="hljs-string">&quot;1200&quot;</span>:<span class="hljs-number">2</span>}
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1200</span>, 
    <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;conflict&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1200</span>, 
    <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;conflict&quot;</span> 
  } 
]
</pre>
</div>
</div>







@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/head_read_document_header.md -->
@startDocuBlock head_read_document_header

@brief reads a single document head

@RESTHEADER{HEAD /_api/document/{collection}/{key},Read document header,checkDocument}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* from which the document is to be read.

@RESTURLPARAM{key,string,required}
The document key.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-None-Match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one
Etag. If the current document revision is not equal to the specified Etag,
an *HTTP 200* response is returned. If the current document revision is
identical to the specified Etag, then an *HTTP 304* is returned.

@RESTHEADERPARAM{If-Match,string,optional}
If the "If-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has the same revision as the
given Etag. Otherwise a *HTTP 412* is returned.

@RESTDESCRIPTION
Like *GET*, but only returns the header fields and not the body. You
can use this call to get the current revision of a document or check if
the document was deleted.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was found

@RESTRETURNCODE{304}
is returned if the "If-None-Match" header is given and the document has
the same version

@RESTRETURNCODE{404}
is returned if the document or collection was not found

@RESTRETURNCODE{412}
is returned if an "If-Match" header is given and the found
document has a different version. The response will also contain the found
document's current revision in the *Etag* header.

@EXAMPLES


<div class="example-container" id="RestDocumentHandlerReadDocumentHead_container">
<div id="RestDocumentHandlerReadDocumentHead_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X HEAD --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71664</span>

</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/delete_remove_document.md -->
@startDocuBlock delete_remove_document

@brief removes a document

@RESTHEADER{DELETE /_api/document/{collection}/{key},Removes a document,removeDocument}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Name of the *collection* in which the document is to be deleted.

@RESTURLPARAM{key,string,required}
The document key.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until deletion operation has been synced to disk.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed
document under the attribute *old* in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data
will be returned for the removed document. This option can be used to
save some network traffic.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-Match,string,optional}
You can conditionally remove a document based on a target revision id by
using the *if-match* HTTP header.

@RESTDESCRIPTION
If *silent* is not set to *true*, the body of the response contains a JSON
object with the information about the identifier and the revision. The attribute
*_id* contains the known *document-id* of the removed document, *_key*
contains the key which uniquely identifies a document in a given collection,
and the attribute *_rev* contains the document revision.

If the *waitForSync* parameter is not specified or set to *false*,
then the collection's default *waitForSync* behavior is applied.
The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync*
value of *true*.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was removed successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the document was removed successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{404}
is returned if the collection or the document was not found.
The response body contains an error document in this case.

@RESTRETURNCODE{412}
is returned if a "If-Match" header or *rev* is given and the found
document has a different version. The response will also contain the found
document's current revision in the *_rev* attribute. Additionally, the
attributes *_id* and *_key* will be returned.

@EXAMPLES

Using document identifier:


<div class="example-container" id="RestDocumentHandlerDeleteDocument_container">
<div id="RestDocumentHandlerDeleteDocument_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71415</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylPfS---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71415</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71415&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71415&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPfS---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocument_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocument_long').hide(); $('#RestDocumentHandlerDeleteDocument_short').show(); window.location.hash='RestDocumentHandlerDeleteDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocument_short" onclick="$('#RestDocumentHandlerDeleteDocument_short').hide(); $('#RestDocumentHandlerDeleteDocument_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71415</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">60</span>
etag: <span class="hljs-string">&quot;_d7ylPfS---&quot;</span>
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">71415</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown document identifier:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentUnknownHandle_container">
<div id="RestDocumentHandlerDeleteDocumentUnknownHandle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71483</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">77</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;document not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentUnknownHandle_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentUnknownHandle_long').hide(); $('#RestDocumentHandlerDeleteDocumentUnknownHandle_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentUnknownHandle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentUnknownHandle_short" onclick="$('#RestDocumentHandlerDeleteDocumentUnknownHandle_short').hide(); $('#RestDocumentHandlerDeleteDocumentUnknownHandle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71483</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">77</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Revision conflict:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentIfMatchOther_container">
<div id="RestDocumentHandlerDeleteDocumentIfMatchOther_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;If-Match: &quot;_d7ylPjG---&quot;&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71434</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">126</span>
etag: <span class="hljs-string">&quot;_d7ylPjC---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">412</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1200</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;conflict&quot;</span>, 
  <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71434&quot;</span>, 
  <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71434&quot;</span>, 
  <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPjC---&quot;</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentIfMatchOther_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentIfMatchOther_long').hide(); $('#RestDocumentHandlerDeleteDocumentIfMatchOther_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentIfMatchOther_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentIfMatchOther_short" onclick="$('#RestDocumentHandlerDeleteDocumentIfMatchOther_short').hide(); $('#RestDocumentHandlerDeleteDocumentIfMatchOther_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;If-Match: &quot;_d7ylPjG---&quot;&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/products/71434</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">126</span>
etag: <span class="hljs-string">&quot;_d7ylPjC---&quot;</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/put_cluster_maintenance.md -->
@startDocuBlock put_cluster_maintenance

@brief Enable or disable the cluster supervision (Agency) maintenance mode

@RESTHEADER{PUT /_admin/cluster/maintenance, Enable or disable the supervision maintenance mode}

@RESTDESCRIPTION
This API allows you to temporarily enable the supervision maintenance mode. Be aware that no
automatic failovers of any kind will take place while the maintenance mode is enabled.
The _cluster_ supervision reactivates itself automatically _60 minutes_ after disabling it.

To enable the maintenance mode the request body must contain the string `"on"`. To disable it, send the string
`"off"` (Please note it _must_ be lowercase as well as include the quotes).

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@RESTRETURNCODE{400} if the request contained an invalid body

@RESTRETURNCODE{501} if the request was sent to a node other than a Coordinator or single-server

@RESTRETURNCODE{504} if the request timed out while enabling the maintenance mode

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/get_cluster_health.md -->
@startDocuBlock get_cluster_health

@brief Returns the health of the cluster as assessed by the supervision (Agency)

@RESTHEADER{GET /_admin/cluster/health, Queries the health of cluster for monitoring}

@RESTDESCRIPTION
Queries the health of the cluster for monitoring purposes. The response is a JSON object, containing the standard `code`, `error`, `errorNum`, and `errorMessage` fields as appropriate. The endpoint-specific fields are as follows:

- `ClusterId`: A UUID string identifying the cluster
- `Health`: An object containing a descriptive sub-object for each node in the cluster.
  - `<nodeID>`: Each entry in `Health` will be keyed by the node ID and contain the following attributes:
    - `Endpoint`: A string representing the network endpoint of the server.
    - `Role`: The role the server plays. Possible values are `"AGENT"`, `"COORDINATOR"`, and `"DBSERVER"`.
    - `CanBeDeleted`: Boolean representing whether the node can safely be removed from the cluster.
    - `Version`: Version String of ArangoDB used by that node.
    - `Engine`: Storage Engine used by that node.
    - `Status`: A string indicating the health of the node as assessed by the supervision (Agency). This should be considered primary source of truth for Coordinator and DB-Servers node health. If the node is responding normally to requests, it is `"GOOD"`. If it has missed one heartbeat, it is `"BAD"`. If it has been declared failed by the supervision, which occurs after missing heartbeats for about 15 seconds, it will be marked `"FAILED"`.

    Additionally it will also have the following attributes for:

    **Coordinators** and **DB-Servers**
    - `SyncStatus`: The last sync status reported by the node. This value is primarily used to determine the value of `Status`. Possible values include `"UNKNOWN"`, `"UNDEFINED"`, `"STARTUP"`, `"STOPPING"`, `"STOPPED"`, `"SERVING"`, `"SHUTDOWN"`.
    - `LastAckedTime`: ISO 8601 timestamp specifying the last heartbeat received.
    - `ShortName`: A string representing the shortname of the server, e.g. `"Coordinator0001"`.
    - `Timestamp`: ISO 8601 timestamp specifying the last heartbeat received. (deprecated)
    - `Host`: An optional string, specifying the host machine if known.

    **Coordinators** only
    - `AdvertisedEndpoint`: A string representing the advertised endpoint, if set. (e.g. external IP address or load balancer, optional)

    **Agents**
    - `Leader`: ID of the Agent this node regards as leader.
    - `Leading`: Whether this Agent is the leader (true) or not (false).
    - `LastAckedTime`: Time since last `acked` in seconds.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/get_cluster_statistics.md -->
@startDocuBlock get_cluster_statistics

@brief allows to query the statistics of a DB-Server in the cluster

@RESTHEADER{GET /_admin/clusterStatistics, Queries statistics of a DB-Server}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{DBserver,string,required}

@RESTDESCRIPTION
Queries the statistics of the given DB-Server

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@RESTRETURNCODE{400} the parameter DBserver was not given or is not the
ID of a DB-Server

@RESTRETURNCODE{403} server is not a Coordinator.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/delete_api_transaction.md -->
@startDocuBlock delete_api_transaction

@brief abort a server-side transaction

@RESTHEADER{DELETE /_api/transaction/{transaction-id}, Abort transaction, executeAbort:transaction}

@RESTURLPARAMETERS

@RESTURLPARAM{transaction-id,string,required}
The transaction identifier,

@RESTDESCRIPTION
Abort a running server-side transaction. Aborting is an idempotent operation.
It is not an error to abort a transaction more than once.

If the transaction can be aborted, *HTTP 200* will be returned.
The returned JSON object has the following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: result containing
    - *id*: the identifier of the transaction
    - *status*: containing the string 'aborted'

If the transaction cannot be found, aborting is not allowed or the
transaction was already committed, the server
will respond with *HTTP 400*, *HTTP 404* or *HTTP 409*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the transaction was aborted,
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the transaction cannot be aborted, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the transaction was not found, the server
will respond with *HTTP 404*.

@RESTRETURNCODE{409}
If the transaction was already committed, the server
will respond with *HTTP 409*.

@EXAMPLES

Aborting a transaction:


<div class="example-container" id="RestTransactionBeginCommit_container">
<div id="RestTransactionBeginCommit_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction/72943</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">69</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72943&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;aborted&quot;</span> 
  } 
}
</pre>
<div id="RestTransactionBeginCommit_container_collapse" onclick="$('#RestTransactionBeginCommit_long').hide(); $('#RestTransactionBeginCommit_short').show(); window.location.hash='RestTransactionBeginCommit_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionBeginCommit_short" onclick="$('#RestTransactionBeginCommit_short').hide(); $('#RestTransactionBeginCommit_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction/72943</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">69</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/get_api_transaction.md -->
@startDocuBlock get_api_transaction

@brief Fetch status of a server-side transaction

@RESTHEADER{GET /_api/transaction/{transaction-id}, Get transaction status, executeGetState:transaction}

@RESTURLPARAMETERS

@RESTURLPARAM{transaction-id,string,required}
The transaction identifier.

@RESTDESCRIPTION
The result is an object describing the status of the transaction.
It has at least the following attributes:

- *id*: the identifier of the transaction

- *status*: the status of the transaction. One of "running", "committed" or "aborted".

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the transaction is fully executed and committed on the server,
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the transaction identifier specified is either missing or malformed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the transaction was not found with the specified identifier, the server
will respond with *HTTP 404*.

@EXAMPLES

Get transaction status


<div class="example-container" id="RestTransactionGet_container">
<div id="RestTransactionGet_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction/72961</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">69</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72961&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;running&quot;</span> 
  } 
}
</pre>
<div id="RestTransactionGet_container_collapse" onclick="$('#RestTransactionGet_long').hide(); $('#RestTransactionGet_short').show(); window.location.hash='RestTransactionGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionGet_short" onclick="$('#RestTransactionGet_short').hide(); $('#RestTransactionGet_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction/72961</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">69</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/post_api_transaction.md -->
@startDocuBlock post_api_transaction

@brief execute a server-side transaction

@RESTHEADER{POST /_api/transaction, Execute transaction, executeCommit}

@RESTBODYPARAM{collections,string,required,string}
*collections* must be a JSON object that can have one or all sub-attributes
*read*, *write* or *exclusive*, each being an array of collection names or a
single collection name as string. Collections that will be written to in the
transaction must be declared with the *write* or *exclusive* attribute or it
will fail, whereas non-declared collections from which is solely read will be
added lazily. The optional sub-attribute *allowImplicit* can be set to *false*
to let transactions fail in case of undeclared collections for reading.
Collections for reading should be fully declared if possible, to avoid
deadlocks.

@RESTBODYPARAM{action,string,required,string}
the actual transaction operations to be executed, in the
form of stringified JavaScript code. The code will be executed on server
side, with late binding. It is thus critical that the code specified in
*action* properly sets up all the variables it needs.
If the code specified in *action* ends with a return statement, the
value returned will also be returned by the REST API in the *result*
attribute if the transaction committed successfully.

@RESTBODYPARAM{waitForSync,boolean,optional,}
an optional boolean flag that, if set, will force the
transaction to write all data to disk before returning.

@RESTBODYPARAM{allowImplicit,boolean,optional,}
Allow reading from undeclared collections.

@RESTBODYPARAM{lockTimeout,integer,optional,int64}
an optional numeric value that can be used to set a
timeout for waiting on collection locks. If not specified, a default
value will be used. Setting *lockTimeout* to *0* will make ArangoDB
not time out waiting for a lock.

@RESTBODYPARAM{params,string,optional,string}
optional arguments passed to *action*.

@RESTBODYPARAM{maxTransactionSize,integer,optional,int64}
Transaction size limit in bytes. Honored by the RocksDB storage engine only.

@RESTDESCRIPTION
The transaction description must be passed in the body of the POST request.

If the transaction is fully executed and committed on the server,
*HTTP 200* will be returned. Additionally, the return value of the
code defined in *action* will be returned in the *result* attribute.

For successfully committed transactions, the returned JSON object has the
following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: the return value of the transaction

If the transaction specification is either missing or malformed, the server
will respond with *HTTP 400*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

If a transaction fails to commit, either by an exception thrown in the
*action* code, or by an internal error, the server will respond with
an error.
Any other errors will be returned with any of the return codes
*HTTP 400*, *HTTP 409*, or *HTTP 500*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the transaction is fully executed and committed on the server,
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the transaction specification is either missing or malformed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the transaction specification contains an unknown collection, the server
will respond with *HTTP 404*.

@RESTRETURNCODE{500}
Exceptions thrown by users will make the server respond with a return code of
*HTTP 500*

@EXAMPLES

Executing a transaction on a single collection


<div class="example-container" id="RestTransactionSingle_container">
<div id="RestTransactionSingle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () { var db = require(&#x27;@arangodb&#x27;).db; db.products.save({});  return db.products.count(); }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">37</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="RestTransactionSingle_container_collapse" onclick="$('#RestTransactionSingle_long').hide(); $('#RestTransactionSingle_short').show(); window.location.hash='RestTransactionSingle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionSingle_short" onclick="$('#RestTransactionSingle_short').hide(); $('#RestTransactionSingle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () { var db = require(&#x27;@arangodb&#x27;).db; db.products.save({});  return db.products.count(); }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">37</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Executing a transaction using multiple collections


<div class="example-container" id="RestTransactionMulti_container">
<div id="RestTransactionMulti_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : [ 
      <span class="hljs-string">&quot;products&quot;</span>, 
      <span class="hljs-string">&quot;materials&quot;</span> 
    ] 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () {var db = require(&#x27;@arangodb&#x27;).db;db.products.save({});db.materials.save({});return &#x27;worked!&#x27;;}&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">45</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-string">&quot;worked!&quot;</span> 
}
</pre>
<div id="RestTransactionMulti_container_collapse" onclick="$('#RestTransactionMulti_long').hide(); $('#RestTransactionMulti_short').show(); window.location.hash='RestTransactionMulti_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionMulti_short" onclick="$('#RestTransactionMulti_short').hide(); $('#RestTransactionMulti_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : [ 
      <span class="hljs-string">&quot;products&quot;</span>, 
      <span class="hljs-string">&quot;materials&quot;</span> 
    ] 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () {var db = require(&#x27;@arangodb&#x27;).db;db.products.save({});db.materials.save({});return &#x27;worked!&#x27;;}&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">45</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Aborting a transaction due to an internal error


<div class="example-container" id="RestTransactionAbortInternal_container">
<div id="RestTransactionAbortInternal_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () {var db = require(&#x27;@arangodb&#x27;).db;db.products.save({ _key: &#x27;abc&#x27;});db.products.save({ _key: &#x27;abc&#x27;});}&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">154</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">409</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;unique constraint violated - in index primary of type primary over &#x27;_key&#x27;; conflicting key: abc&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1210</span> 
}
</pre>
<div id="RestTransactionAbortInternal_container_collapse" onclick="$('#RestTransactionAbortInternal_long').hide(); $('#RestTransactionAbortInternal_short').show(); window.location.hash='RestTransactionAbortInternal_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionAbortInternal_short" onclick="$('#RestTransactionAbortInternal_short').hide(); $('#RestTransactionAbortInternal_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () {var db = require(&#x27;@arangodb&#x27;).db;db.products.save({ _key: &#x27;abc&#x27;});db.products.save({ _key: &#x27;abc&#x27;});}&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">154</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Aborting a transaction by explicitly throwing an exception


<div class="example-container" id="RestTransactionAbort_container">
<div id="RestTransactionAbort_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () { throw &#x27;doh!&#x27;; }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">63</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">500</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;doh!&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1650</span> 
}
</pre>
<div id="RestTransactionAbort_container_collapse" onclick="$('#RestTransactionAbort_long').hide(); $('#RestTransactionAbort_short').show(); window.location.hash='RestTransactionAbort_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionAbort_short" onclick="$('#RestTransactionAbort_short').hide(); $('#RestTransactionAbort_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () { throw &#x27;doh!&#x27;; }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">63</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Referring to a non-existing collection


<div class="example-container" id="RestTransactionNonExisting_container">
<div id="RestTransactionNonExisting_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () { return true; }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found: products&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestTransactionNonExisting_container_collapse" onclick="$('#RestTransactionNonExisting_long').hide(); $('#RestTransactionNonExisting_short').show(); window.location.hash='RestTransactionNonExisting_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionNonExisting_short" onclick="$('#RestTransactionNonExisting_short').hide(); $('#RestTransactionNonExisting_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  }, 
  <span class="hljs-string">&quot;action&quot;</span> : <span class="hljs-string">&quot;function () { return true; }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/put_api_transaction.md -->
@startDocuBlock put_api_transaction

@brief commit a server-side transaction

@RESTHEADER{PUT /_api/transaction/{transaction-id}, Commit transaction, executeCommit:Transaction}

@RESTURLPARAMETERS

@RESTURLPARAM{transaction-id,string,required}
The transaction identifier,

@RESTDESCRIPTION
Commit a running server-side transaction. Committing is an idempotent operation.
It is not an error to commit a transaction more than once.

If the transaction can be committed, *HTTP 200* will be returned.
The returned JSON object has the following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: result containing
    - *id*: the identifier of the transaction
    - *status*: containing the string 'committed'

If the transaction cannot be found, committing is not allowed or the
transaction was aborted, the server
will respond with *HTTP 400*, *HTTP 404* or *HTTP 409*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the transaction was committed,
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the transaction cannot be committed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the transaction was not found, the server
will respond with *HTTP 404*.

@RESTRETURNCODE{409}
If the transaction was already aborted, the server
will respond with *HTTP 409*.

@EXAMPLES

Committing a transaction:


<div class="example-container" id="RestTransactionBeginAbort_container">
<div id="RestTransactionBeginAbort_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction/72935</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">71</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72935&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;committed&quot;</span> 
  } 
}
</pre>
<div id="RestTransactionBeginAbort_container_collapse" onclick="$('#RestTransactionBeginAbort_long').hide(); $('#RestTransactionBeginAbort_short').show(); window.location.hash='RestTransactionBeginAbort_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionBeginAbort_short" onclick="$('#RestTransactionBeginAbort_short').hide(); $('#RestTransactionBeginAbort_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction/72935</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">71</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/get_api_transactions.md -->
@startDocuBlock get_api_transactions

@brief Return the currently running server-side transactions

@RESTHEADER{GET /_api/transaction, Get currently running transactions, executeGetState:transactions}

@RESTDESCRIPTION
The result is an object with the attribute *transactions*, which contains
an array of transactions.
In a cluster the array will contain the transactions from all Coordinators.

Each array entry contains an object with the following attributes:

- *id*: the transaction's id
- *state*: the transaction's status

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the list of transactions can be retrieved successfully, *HTTP 200* will be returned.

@EXAMPLES

Get currently running transactions


<div class="example-container" id="RestTransactionsGet_container">
<div id="RestTransactionsGet_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">51</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;transactions&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;73000&quot;</span>, 
      <span class="hljs-string">&quot;state&quot;</span> : <span class="hljs-string">&quot;running&quot;</span> 
    } 
  ] 
}
</pre>
<div id="RestTransactionsGet_container_collapse" onclick="$('#RestTransactionsGet_long').hide(); $('#RestTransactionsGet_short').show(); window.location.hash='RestTransactionsGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionsGet_short" onclick="$('#RestTransactionsGet_short').hide(); $('#RestTransactionsGet_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/transaction</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">51</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/post_api_transaction_begin.md -->
@startDocuBlock post_api_transaction_begin

@brief begin a server-side transaction

@RESTHEADER{POST /_api/transaction/begin, Begin transaction, executeBegin}

@RESTBODYPARAM{collections,string,required,string}
*collections* must be a JSON object that can have one or all sub-attributes
*read*, *write* or *exclusive*, each being an array of collection names or a
single collection name as string. Collections that will be written to in the
transaction must be declared with the *write* or *exclusive* attribute or it
will fail, whereas non-declared collections from which is solely read will be
added lazily.

@RESTBODYPARAM{waitForSync,boolean,optional,}
an optional boolean flag that, if set, will force the
transaction to write all data to disk before returning.

@RESTBODYPARAM{allowImplicit,boolean,optional,}
Allow reading from undeclared collections. 

@RESTBODYPARAM{lockTimeout,integer,optional,int64}
an optional numeric value that can be used to set a
timeout for waiting on collection locks. If not specified, a default
value will be used. Setting *lockTimeout* to *0* will make ArangoDB
not time out waiting for a lock.

@RESTBODYPARAM{maxTransactionSize,integer,optional,int64}
Transaction size limit in bytes. Honored by the RocksDB storage engine only.

@RESTDESCRIPTION
The transaction description must be passed in the body of the POST request.
If the transaction can be started on the server, *HTTP 201* will be returned.

For successfully started transactions, the returned JSON object has the
following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: result containing
    - *id*: the identifier of the transaction
    - *status*: containing the string 'running'

If the transaction specification is either missing or malformed, the server
will respond with *HTTP 400* or *HTTP 404*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{201}
If the transaction is running on the server,
*HTTP 201* will be returned.

@RESTRETURNCODE{400}
If the transaction specification is either missing or malformed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the transaction specification contains an unknown collection, the server
will respond with *HTTP 404*.

@EXAMPLES

Executing a transaction on a single collection


<div class="example-container" id="RestTransactionBeginSingle_container">
<div id="RestTransactionBeginSingle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction/begin</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">69</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72953&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;running&quot;</span> 
  } 
}
</pre>
<div id="RestTransactionBeginSingle_container_collapse" onclick="$('#RestTransactionBeginSingle_long').hide(); $('#RestTransactionBeginSingle_short').show(); window.location.hash='RestTransactionBeginSingle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionBeginSingle_short" onclick="$('#RestTransactionBeginSingle_short').hide(); $('#RestTransactionBeginSingle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction/begin</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">69</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Referring to a non-existing collection


<div class="example-container" id="RestTransactionBeginNonExisting_container">
<div id="RestTransactionBeginNonExisting_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction/begin</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found: products&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestTransactionBeginNonExisting_container_collapse" onclick="$('#RestTransactionBeginNonExisting_long').hide(); $('#RestTransactionBeginNonExisting_short').show(); window.location.hash='RestTransactionBeginNonExisting_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionBeginNonExisting_short" onclick="$('#RestTransactionBeginNonExisting_short').hide(); $('#RestTransactionBeginNonExisting_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/transaction/begin</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collections&quot;</span> : { 
    <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Analyzers/delete_api_analyzer.md -->
@startDocuBlock delete_api_analyzer

@brief removes an Analyzer configuration

@RESTHEADER{DELETE /_api/analyzer/{analyzer-name}, Remove an Analyzer, RestAnalyzerHandler:Delete}

@RESTURLPARAMETERS

@RESTURLPARAM{analyzer-name,string,required}
The name of the Analyzer to remove.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{force,boolean,optional}
The Analyzer configuration should be removed even if it is in-use.
The default value is *false*.

@RESTDESCRIPTION
Removes an Analyzer configuration identified by *analyzer-name*.

If the Analyzer definition was successfully dropped, an object is returned with
the following attributes:
- *error*: *false*
- *name*: The name of the removed Analyzer

@RESTRETURNCODES

@RESTRETURNCODE{200}
The Analyzer configuration was removed successfully.

@RESTRETURNCODE{400}
The *analyzer-name* was not supplied or another request parameter was not
valid.

@RESTRETURNCODE{403}
The user does not have permission to remove this Analyzer configuration.

@RESTRETURNCODE{404}
Such an Analyzer configuration does not exist.

@RESTRETURNCODE{409}
The specified Analyzer configuration is still in use and *force* was omitted or
*false* specified.

@EXAMPLES

Removing without *force*:


<div class="example-container" id="RestAnalyzerDelete_container">
<div id="RestAnalyzerDelete_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">57</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::testAnalyzer&quot;</span> 
}
</pre>
<div id="RestAnalyzerDelete_container_collapse" onclick="$('#RestAnalyzerDelete_long').hide(); $('#RestAnalyzerDelete_short').show(); window.location.hash='RestAnalyzerDelete_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAnalyzerDelete_short" onclick="$('#RestAnalyzerDelete_short').hide(); $('#RestAnalyzerDelete_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">57</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Removing with *force*:


<div class="example-container" id="RestAnalyzerDeleteForce_container">
<div id="RestAnalyzerDeleteForce_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollection&quot;</span> 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testView&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
    <span class="hljs-string">&quot;testCollection&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;testAnalyzer&quot;</span> 
      ] 
    } 
  } 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer?force=<span class="hljs-literal">false</span></span>

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer?force=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">57</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::testAnalyzer&quot;</span> 
}
</pre>
<div id="RestAnalyzerDeleteForce_container_collapse" onclick="$('#RestAnalyzerDeleteForce_long').hide(); $('#RestAnalyzerDeleteForce_short').show(); window.location.hash='RestAnalyzerDeleteForce_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAnalyzerDeleteForce_short" onclick="$('#RestAnalyzerDeleteForce_short').hide(); $('#RestAnalyzerDeleteForce_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollection&quot;</span> 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testView&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
    <span class="hljs-string">&quot;testCollection&quot;</span> : { 
      <span class="hljs-string">&quot;analyzers&quot;</span> : [ 
        <span class="hljs-string">&quot;testAnalyzer&quot;</span> 
      ] 
    } 
  } 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer?force=<span class="hljs-literal">false</span></span>

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer?force=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">57</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Analyzers/get_api_analyzer.md -->
@startDocuBlock get_api_analyzer

@brief returns an Analyzer definition

@RESTHEADER{GET /_api/analyzer/{analyzer-name}, Return the Analyzer definition, RestAnalyzerHandler:GetDefinition}

@RESTURLPARAMETERS

@RESTURLPARAM{analyzer-name,string,required}
The name of the Analyzer to retrieve.

@RESTDESCRIPTION
Retrieves the full definition for the specified Analyzer name.
The resulting object contains the following attributes:
- *name*: the Analyzer name
- *type*: the Analyzer type
- *properties*: the properties used to configure the specified type
- *features*: the set of features to set on the Analyzer generated fields

@RESTRETURNCODES

@RESTRETURNCODE{200}
The Analyzer definition was retrieved successfully.

@RESTRETURNCODE{404}
Such an Analyzer configuration does not exist.

@EXAMPLES

Retrieve an Analyzer definition:


<div class="example-container" id="RestAnalyzerGet_container">
<div id="RestAnalyzerGet_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">105</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;identity&quot;</span>, 
  <span class="hljs-string">&quot;properties&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;features&quot;</span> : [ ], 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::testAnalyzer&quot;</span> 
}
</pre>
<div id="RestAnalyzerGet_container_collapse" onclick="$('#RestAnalyzerGet_long').hide(); $('#RestAnalyzerGet_short').show(); window.location.hash='RestAnalyzerGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAnalyzerGet_short" onclick="$('#RestAnalyzerGet_short').hide(); $('#RestAnalyzerGet_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer/testAnalyzer</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">105</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Analyzers/post_api_analyzer.md -->
@startDocuBlock post_api_analyzer

@brief creates a new Analyzer based on the provided definition

@RESTHEADER{POST /_api/analyzer, Create an Analyzer with the supplied definition, RestAnalyzerHandler:Create}

@RESTBODYPARAM{name,string,required,string}
The Analyzer name.

@RESTBODYPARAM{type,string,required,string}
The Analyzer type.

@RESTBODYPARAM{properties,object,optional,}
The properties used to configure the specified Analyzer type.

@RESTBODYPARAM{features,array,optional,string}
The set of features to set on the Analyzer generated fields.
The default value is an empty array.

@RESTDESCRIPTION
Creates a new Analyzer based on the provided configuration.

@RESTRETURNCODES

@RESTRETURNCODE{200}
An Analyzer with a matching name and definition already exists.

@RESTRETURNCODE{201}
A new Analyzer definition was successfully created.

@RESTRETURNCODE{400}
One or more of the required parameters is missing or one or more of the parameters
is not valid.

@RESTRETURNCODE{403}
The user does not have permission to create and Analyzer with this configuration.

@EXAMPLES


<div class="example-container" id="RestAnalyzerPost_container">
<div id="RestAnalyzerPost_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/analyzer</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testAnalyzer&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;identity&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">80</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system::testAnalyzer&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;identity&quot;</span>, 
  <span class="hljs-string">&quot;properties&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;features&quot;</span> : [ ] 
}
</pre>
<div id="RestAnalyzerPost_container_collapse" onclick="$('#RestAnalyzerPost_long').hide(); $('#RestAnalyzerPost_short').show(); window.location.hash='RestAnalyzerPost_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAnalyzerPost_short" onclick="$('#RestAnalyzerPost_short').hide(); $('#RestAnalyzerPost_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/analyzer</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testAnalyzer&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;identity&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">80</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Analyzers/get_api_analyzers.md -->
@startDocuBlock get_api_analyzers

@brief returns a listing of available Analyzer definitions

@RESTHEADER{GET /_api/analyzer, List all Analyzers, RestAnalyzerHandler:List}

@RESTDESCRIPTION
Retrieves a an array of all Analyzer definitions.
The resulting array contains objects with the following attributes:
- *name*: the Analyzer name
- *type*: the Analyzer type
- *properties*: the properties used to configure the specified type
- *features*: the set of features to set on the Analyzer generated fields

@RESTRETURNCODES

@RESTRETURNCODE{200}
The Analyzer definitions was retrieved successfully.

@EXAMPLES

Retrieve all Analyzer definitions:


<div class="example-container" id="RestAnalyzersGet_container">
<div id="RestAnalyzersGet_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2187</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_zh&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;zh.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_sv&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;sv.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_es&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;es.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_en&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;identity&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;identity&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_ru&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;ru.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_de&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;de.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_fi&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;fi.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_no&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;no.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_fr&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;fr.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_nl&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;nl.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_it&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;it.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;text_pt&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
      <span class="hljs-string">&quot;properties&quot;</span> : { 
        <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;pt.utf-8&quot;</span>, 
        <span class="hljs-string">&quot;case&quot;</span> : <span class="hljs-string">&quot;lower&quot;</span>, 
        <span class="hljs-string">&quot;stopwords&quot;</span> : [ ], 
        <span class="hljs-string">&quot;accent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;stemming&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;features&quot;</span> : [ 
        <span class="hljs-string">&quot;position&quot;</span>, 
        <span class="hljs-string">&quot;norm&quot;</span>, 
        <span class="hljs-string">&quot;frequency&quot;</span> 
      ] 
    } 
  ] 
}
</pre>
<div id="RestAnalyzersGet_container_collapse" onclick="$('#RestAnalyzersGet_long').hide(); $('#RestAnalyzersGet_short').show(); window.location.hash='RestAnalyzersGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAnalyzersGet_short" onclick="$('#RestAnalyzersGet_short').hide(); $('#RestAnalyzersGet_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/analyzer</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2187</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph Edges/get_read_in_out_edges.md -->
@startDocuBlock get_read_in_out_edges

@brief get edges

@RESTHEADER{GET /_api/edges/{collection-id}, Read in- or outbound edges}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-id,string,required}
The id of the collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{vertex,string,required}
The id of the start vertex.

@RESTQUERYPARAM{direction,string,optional}
Selects *in* or *out* direction for edges. If not set, any edges are
returned.

@RESTDESCRIPTION
Returns an array of edges starting or ending in the vertex identified by
*vertex*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the edge collection was found and edges were retrieved.

@RESTRETURNCODE{400}
is returned if the request contains invalid parameters.

@RESTRETURNCODE{404}
is returned if the edge collection was not found.

@EXAMPLES

Any direction


<div class="example-container" id="RestEdgesReadEdgesAny_container">
<div id="RestEdgesReadEdgesAny_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">537</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;edges&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/5&quot;</span>, 
      <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertices/1&quot;</span>, 
      <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertices/3&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQEq---&quot;</span>, 
      <span class="hljs-string">&quot;$label&quot;</span> : <span class="hljs-string">&quot;v1 -&gt; v3&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;6&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/6&quot;</span>, 
      <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertices/2&quot;</span>, 
      <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertices/1&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQEq--A&quot;</span>, 
      <span class="hljs-string">&quot;$label&quot;</span> : <span class="hljs-string">&quot;v2 -&gt; v1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;7&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/7&quot;</span>, 
      <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertices/4&quot;</span>, 
      <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertices/1&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQEu---&quot;</span>, 
      <span class="hljs-string">&quot;$label&quot;</span> : <span class="hljs-string">&quot;v4 -&gt; v1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0005792267620563507</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">43681</span> 
  } 
}
</pre>
<div id="RestEdgesReadEdgesAny_container_collapse" onclick="$('#RestEdgesReadEdgesAny_long').hide(); $('#RestEdgesReadEdgesAny_short').show(); window.location.hash='RestEdgesReadEdgesAny_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEdgesReadEdgesAny_short" onclick="$('#RestEdgesReadEdgesAny_short').hide(); $('#RestEdgesReadEdgesAny_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">537</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







In edges


<div class="example-container" id="RestEdgesReadEdgesIn_container">
<div id="RestEdgesReadEdgesIn_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&amp;direction=<span class="hljs-keyword">in</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">427</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;edges&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;6&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/6&quot;</span>, 
      <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertices/2&quot;</span>, 
      <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertices/1&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQGK---&quot;</span>, 
      <span class="hljs-string">&quot;$label&quot;</span> : <span class="hljs-string">&quot;v2 -&gt; v1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;7&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/7&quot;</span>, 
      <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertices/4&quot;</span>, 
      <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertices/1&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQGO---&quot;</span>, 
      <span class="hljs-string">&quot;$label&quot;</span> : <span class="hljs-string">&quot;v4 -&gt; v1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0004759151488542557</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">23382</span> 
  } 
}
</pre>
<div id="RestEdgesReadEdgesIn_container_collapse" onclick="$('#RestEdgesReadEdgesIn_long').hide(); $('#RestEdgesReadEdgesIn_short').show(); window.location.hash='RestEdgesReadEdgesIn_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEdgesReadEdgesIn_short" onclick="$('#RestEdgesReadEdgesIn_short').hide(); $('#RestEdgesReadEdgesIn_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&amp;direction=<span class="hljs-keyword">in</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">427</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Out edges


<div class="example-container" id="RestEdgesReadEdgesOut_container">
<div id="RestEdgesReadEdgesOut_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&amp;direction=out</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">317</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;edges&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;edges/5&quot;</span>, 
      <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;vertices/1&quot;</span>, 
      <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;vertices/3&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylQHe---&quot;</span>, 
      <span class="hljs-string">&quot;$label&quot;</span> : <span class="hljs-string">&quot;v1 -&gt; v3&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0003871088847517967</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">23307</span> 
  } 
}
</pre>
<div id="RestEdgesReadEdgesOut_container_collapse" onclick="$('#RestEdgesReadEdgesOut_long').hide(); $('#RestEdgesReadEdgesOut_short').show(); window.location.hash='RestEdgesReadEdgesOut_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEdgesReadEdgesOut_short" onclick="$('#RestEdgesReadEdgesOut_short').hide(); $('#RestEdgesReadEdgesOut_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&amp;direction=out</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">317</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_getResponsibleShard.md -->
@startDocuBlock get_api_collection_getResponsibleShard

@brief Return the responsible shard for a document

@RESTHEADER{PUT /_api/collection/{collection-name}/responsibleShard, Return responsible shard for a document, getResponsibleShard:Collection}

@RESTALLBODYPARAM{document,json,required}
The body must consist of a JSON object with at least the shard key
attributes set to some values.

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Returns the ID of the shard that is responsible for the given document
(if the document exists) or that would be responsible if such document
existed.

The request must body must contain a JSON document with at least the
collection's shard key attributes set to some values.

The response is a JSON object with a *shardId* attribute, which will
contain the ID of the responsible shard.

**Note** : This method is only available in a cluster Coordinator.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returns the ID of the responsible shard.

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.
Additionally, if not all of the collection's shard key
attributes are present in the input document, then a
*HTTP 400* is returned as well.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then an *HTTP 404*
is returned.

@RESTRETURNCODE{501}
*HTTP 501* is returned if the method is called on a single server.

@EXAMPLES


<div class="example-container" id="RestGetResponsibleShardExample_cluster_container">
<div id="RestGetResponsibleShardExample_cluster_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection/testCollection/responsibleShard</span> &lt;&lt;EOF
{"_key":"testkey","value":23}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">47</span>
location: <span class="hljs-regexp">/_api/</span>collection/testCollection/responsibleShard
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;shardId&quot;</span> : <span class="hljs-string">&quot;s2010049&quot;</span> 
}
</pre>
<div id="RestGetResponsibleShardExample_cluster_container_collapse" onclick="$('#RestGetResponsibleShardExample_cluster_long').hide(); $('#RestGetResponsibleShardExample_cluster_short').show(); window.location.hash='RestGetResponsibleShardExample_cluster_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGetResponsibleShardExample_cluster_short" onclick="$('#RestGetResponsibleShardExample_cluster_short').hide(); $('#RestGetResponsibleShardExample_cluster_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection/testCollection/responsibleShard</span> &lt;&lt;EOF
{"_key":"testkey","value":23}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">47</span>
location: <span class="hljs-regexp">/_api/</span>collection/testCollection/responsibleShard
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_count.md -->
@startDocuBlock get_api_collection_count

@brief Counts the documents in a collection

@RESTHEADER{GET /_api/collection/{collection-name}/count, Return number of documents in a collection, handleCommandGet:getCollectionCount}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
In addition to the above, the result also contains the number of documents.
**Note** that this will always load the collection into memory.

- *count*: The number of documents inside the collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Requesting the number of documents:


<div class="example-container" id="RestCollectionGetCollectionCount_container">
<div id="RestCollectionGetCollectionCount_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/count</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">395</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/count
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70814&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;70813&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70814&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">71017</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
</pre>
<div id="RestCollectionGetCollectionCount_container_collapse" onclick="$('#RestCollectionGetCollectionCount_long').hide(); $('#RestCollectionGetCollectionCount_short').show(); window.location.hash='RestCollectionGetCollectionCount_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionCount_short" onclick="$('#RestCollectionGetCollectionCount_short').hide(); $('#RestCollectionGetCollectionCount_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/count</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">395</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/count
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/post_api_collection.md -->
@startDocuBlock post_api_collection

@brief creates a collection

@RESTHEADER{POST /_api/collection, Create collection, handleCommandPost:CreateCollection}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTDESCRIPTION
Creates a new collection with a given name. The request must contain an
object with the following attributes.

@RESTBODYPARAM{name,string,required,string}
The name of the collection.

@RESTBODYPARAM{waitForSync,boolean,optional,}
If `true` then the data is synchronized to disk before returning from a
document create, update, replace or removal operation. (default: false)

@RESTBODYPARAM{doCompact,boolean,optional,}
whether or not the collection will be compacted (default is *true*)
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{journalSize,integer,optional,int64}
The maximal size of a journal or datafile in bytes. The value
must be at least `1048576` (1 MiB). (The default is a configuration parameter)
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{isSystem,boolean,optional,}
If `true`, create a  system collection. In this case `collection-name`
should start with an underscore. End users should normally create non-system
collections only. API implementors may be required to create system
collections in very special occasions, but normally a regular collection will do.
(The default is `false`)

@RESTBODYPARAM{isVolatile,boolean,optional,}
If *true* then the collection data is kept in-memory only and not made persistent.
Unloading the collection will cause the collection data to be discarded. Stopping
or re-starting the server will also cause full loss of data in the
collection. Setting this option will make the resulting collection be
slightly faster than regular collections because ArangoDB does not
enforce any synchronization to disk and does not calculate any CRC
checksums for datafiles (as there are no datafiles). This option
should therefore be used for cache-type collections only, and not
for data that cannot be re-created otherwise.
(The default is *false*)
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{schema,object,optional,}
Optional object that specifies the collection level schema for
documents. The attribute keys `rule`, `level` and `message` must follow the
rules documented in [Document Schema Validation](https://www.arangodb.com/docs/devel/document-schema-validation.html)

@RESTBODYPARAM{keyOptions,object,optional,post_api_collection_opts}
additional options for key generation. If specified, then `keyOptions`
should be a JSON object containing the following attributes:

@RESTSTRUCT{type,post_api_collection_opts,string,required,string}
specifies the type of the key generator. The currently available generators are
`traditional`, `autoincrement`, `uuid` and `padded`.<br>
The `traditional` key generator generates numerical keys in ascending order.
The sequence of keys is not guaranteed to be gap-free.<br>
The `autoincrement` key generator generates numerical keys in ascending order,
the initial offset and the spacing can be configured (**note**: `autoincrement`
is currently only supported for non-sharded collections).
The sequence of generated keys is not guaranteed to be gap-free, because a new key
will be generated on every document insert attempt, not just for successful
inserts.<br>
The `padded` key generator generates keys of a fixed length (16 bytes) in
ascending lexicographical sort order. This is ideal for usage with the _RocksDB_
engine, which will slightly benefit keys that are inserted in lexicographically
ascending order. The key generator can be used in a single-server or cluster.
The sequence of generated keys is not guaranteed to be gap-free.<br>
The `uuid` key generator generates universally unique 128 bit keys, which
are stored in hexadecimal human-readable format. This key generator can be used
in a single-server or cluster to generate "seemingly random" keys. The keys
produced by this key generator are not lexicographically sorted.

@RESTSTRUCT{allowUserKeys,post_api_collection_opts,boolean,required,}
if set to `true`, then it is allowed to supply own key values in the
`_key` attribute of a document. If set to `false`, then the key generator
will solely be responsible for generating keys and supplying own key values
in the `_key` attribute of documents is considered an error.

@RESTSTRUCT{increment,post_api_collection_opts,integer,required,int64}
increment value for `autoincrement` key generator. Not used for other key
generator types.

@RESTSTRUCT{offset,post_api_collection_opts,integer,required,int64}
Initial offset value for `autoincrement` key generator.
Not used for other key generator types.

@RESTBODYPARAM{type,integer,optional,int64}
(The default is `2`): the type of the collection to create.
The following values for `type` are valid:<br>
 - `2`: document collection
 - `3`: edge collection

@RESTBODYPARAM{cacheEnabled,boolean,optional,}
Whether the in-memory hash cache for documents should be enabled for this
collection (default: `true`). Can be controlled globally with the `--cache.size`
startup option. The cache can speed up repeated reads of the same documents via
their document keys. If the same documents are not fetched often or are
modified frequently, then you may disable the cache to avoid the maintenance
costs.

@RESTBODYPARAM{numberOfShards,integer,optional,int64}
(The default is `1`): in a cluster, this value determines the
number of shards to create for the collection. In a single
server setup, this option is meaningless.

@RESTBODYPARAM{shardKeys,string,optional,string}
(The default is `[ "_key" ]`): in a cluster, this attribute determines
which document attributes are used to determine the target shard for documents.
Documents are sent to shards based on the values of their shard key attributes.
The values of all shard key attributes in a document are hashed,
and the hash value is used to determine the target shard.
**Note**: Values of shard key attributes cannot be changed once set.
  This option is meaningless in a single server setup.

@RESTBODYPARAM{replicationFactor,integer,optional,int64}
(The default is `1`): in a cluster, this attribute determines how many copies
of each shard are kept on different DB-Servers. The value 1 means that only one
copy (no synchronous replication) is kept. A value of k means that k-1 replicas
are kept. It can also be the string `"satellite"` for a SatelliteCollection,
where the replication factor is matched to the number of DB-Servers
(Enterprise Edition only).

Any two copies reside on different DB-Servers. Replication between them is
synchronous, that is, every write operation to the "leader" copy will be replicated
to all "follower" replicas, before the write operation is reported successful.

If a server fails, this is detected automatically and one of the servers holding
copies take over, usually without an error being reported.

@RESTBODYPARAM{writeConcern,integer,optional,int64}
Write concern for this collection (default: 1).
It determines how many copies of each shard are required to be
in sync on the different DB-Servers. If there are less then these many copies
in the cluster a shard will refuse to write. Writes to shards with enough
up-to-date copies will succeed at the same time however. The value of
`writeConcern` can not be larger than `replicationFactor`. _(cluster only)_

@RESTBODYPARAM{distributeShardsLike,string,optional,string}
(The default is `""`): in an Enterprise Edition cluster, this attribute binds
the specifics of sharding for the newly created collection to follow that of a
specified existing collection.
**Note**: Using this parameter has consequences for the prototype
collection. It can no longer be dropped, before the sharding-imitating
collections are dropped. Equally, backups and restores of imitating
collections alone will generate warnings (which can be overridden)
about missing sharding prototype.

@RESTBODYPARAM{shardingStrategy,string,optional,string}
This attribute specifies the name of the sharding strategy to use for
the collection. Since ArangoDB 3.4 there are different sharding strategies
to select from when creating a new collection. The selected `shardingStrategy`
value will remain fixed for the collection and cannot be changed afterwards.
This is important to make the collection keep its sharding settings and
always find documents already distributed to shards using the same
initial sharding algorithm.

The available sharding strategies are:
- `community-compat`: default sharding used by ArangoDB
  Community Edition before version 3.4
- `enterprise-compat`: default sharding used by ArangoDB
  Enterprise Edition before version 3.4
- `enterprise-smart-edge-compat`: default sharding used by smart edge
  collections in ArangoDB Enterprise Edition before version 3.4
- `hash`: default sharding used for new collections starting from version 3.4
  (excluding smart edge collections)
- `enterprise-hash-smart-edge`: default sharding used for new
  smart edge collections starting from version 3.4

If no sharding strategy is specified, the default will be `hash` for
all collections, and `enterprise-hash-smart-edge` for all smart edge
collections (requires the *Enterprise Edition* of ArangoDB).
Manually overriding the sharding strategy does not yet provide a
benefit, but it may later in case other sharding strategies are added.

@RESTBODYPARAM{smartJoinAttribute,string,optional,string}
In an *Enterprise Edition* cluster, this attribute determines an attribute
of the collection that must contain the shard key value of the referred-to
SmartJoin collection. Additionally, the shard key for a document in this
collection must contain the value of this attribute, followed by a colon,
followed by the actual primary key of the document.

This feature can only be used in the *Enterprise Edition* and requires the
`distributeShardsLike` attribute of the collection to be set to the name
of another collection. It also requires the `shardKeys` attribute of the
collection to be set to a single shard key attribute, with an additional ':'
at the end.
A further restriction is that whenever documents are stored or updated in the
collection, the value stored in the `smartJoinAttribute` must be a string.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSyncReplication,boolean,optional}
Default is `true` which means the server will only report success back to the
client if all replicas have created the collection. Set to `false` if you want
faster server responses and don't care about full replication.

@RESTQUERYPARAM{enforceReplicationFactor,boolean,optional}
Default is `true` which means the server will check if there are enough replicas
available at creation time and bail out otherwise. Set to `false` to disable
this extra check.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the `collection-name` is missing, then am *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the `collection-name` is unknown, then am *HTTP 404* is returned.

@RESTRETURNCODE{200}

@RESTREPLYBODY{,object,required,collection_info}

@EXAMPLES


<div class="example-container" id="RestCollectionCreateCollection_container">
<div id="RestCollectionCreateCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionBasics&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">392</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70751&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;70750&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70751&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionBasics&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionEdges&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">391</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70756&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;70755&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70756&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionEdges&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionCreateCollection_container_collapse" onclick="$('#RestCollectionCreateCollection_long').hide(); $('#RestCollectionCreateCollection_short').show(); window.location.hash='RestCollectionCreateCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionCreateCollection_short" onclick="$('#RestCollectionCreateCollection_short').hide(); $('#RestCollectionCreateCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionBasics&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">392</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionEdges&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">391</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>









<div class="example-container" id="RestCollectionCreateKeyopt_container">
<div id="RestCollectionCreateKeyopt_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionUsers&quot;</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;autoincrement&quot;</span>, 
    <span class="hljs-string">&quot;increment&quot;</span> : <span class="hljs-number">5</span>, 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">418</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70766&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;70765&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70766&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;autoincrement&quot;</span>, 
    <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;increment&quot;</span> : <span class="hljs-number">5</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionUsers&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionCreateKeyopt_container_collapse" onclick="$('#RestCollectionCreateKeyopt_long').hide(); $('#RestCollectionCreateKeyopt_short').show(); window.location.hash='RestCollectionCreateKeyopt_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionCreateKeyopt_short" onclick="$('#RestCollectionCreateKeyopt_short').hide(); $('#RestCollectionCreateKeyopt_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testCollectionUsers&quot;</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;autoincrement&quot;</span>, 
    <span class="hljs-string">&quot;increment&quot;</span> : <span class="hljs-number">5</span>, 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">418</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_revision.md -->
@startDocuBlock get_api_collection_revision

@brief Retrieve the collections revision id

@RESTHEADER{GET /_api/collection/{collection-name}/revision, Return collection revision id, handleCommandGet:collectionRevision}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
In addition to the above, the result will also contain the
collection's revision id. The revision id is a server-generated
string that clients can use to check whether data in a collection
has changed since the last revision check.

- *revision*: The collection revision id as a string.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Retrieving the revision of a collection


<div class="example-container" id="RestCollectionGetCollectionRevision_container">
<div id="RestCollectionGetCollectionRevision_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/revision</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">395</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/revision
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;revision&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71058&quot;</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;71057&quot;</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71058&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span> 
}
</pre>
<div id="RestCollectionGetCollectionRevision_container_collapse" onclick="$('#RestCollectionGetCollectionRevision_long').hide(); $('#RestCollectionGetCollectionRevision_short').show(); window.location.hash='RestCollectionGetCollectionRevision_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionRevision_short" onclick="$('#RestCollectionGetCollectionRevision_short').hide(); $('#RestCollectionGetCollectionRevision_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/revision</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">395</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/revision
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_properties.md -->
@startDocuBlock put_api_collection_properties

@brief changes a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/properties, Change properties of a collection, handleCommandPut:modifyProperties}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Changes the properties of a collection. Only the provided attributes are
updated. Collection properties **cannot be changed** once a collection is
created except for the listed properties, as well as the collection name via
the rename endpoint (but not in clusters).

@RESTBODYPARAM{waitForSync,boolean,optional,}
If *true* then the data is synchronized to disk before returning from a
document create, update, replace or removal operation. (default: false)

@RESTBODYPARAM{cacheEnabled,boolean,optional,}
Whether the in-memory hash cache for documents should be enabled for this
collection (default: *true*). Can be controlled globally with the `--cache.size`
startup option. The cache can speed up repeated reads of the same documents via
their document keys. If the same documents are not fetched often or are
modified frequently, then you may disable the cache to avoid the maintenance
costs.

@RESTBODYPARAM{schema,object,optional,}
Optional object that specifies the collection level schema for
documents. The attribute keys `rule`, `level` and `message` must follow the
rules documented in [Document Schema Validation](https://www.arangodb.com/docs/stable/document-schema-validation.html)

@RESTBODYPARAM{replicationFactor,integer,optional,int64}
(The default is *1*): in a cluster, this attribute determines how many copies
of each shard are kept on different DB-Servers. The value 1 means that only one
copy (no synchronous replication) is kept. A value of k means that k-1 replicas
are kept. It can also be the string `"satellite"` for a SatelliteCollection,
where the replication factor is matched to the number of DB-Servers
(Enterprise Edition only).

Any two copies reside on different DB-Servers. Replication between them is
synchronous, that is, every write operation to the "leader" copy will be replicated
to all "follower" replicas, before the write operation is reported successful.

If a server fails, this is detected automatically and one of the servers holding
copies take over, usually without an error being reported.

@RESTBODYPARAM{writeConcern,integer,optional,int64}
Write concern for this collection (default: 1).
It determines how many copies of each shard are required to be
in sync on the different DB-Servers. If there are less then these many copies
in the cluster a shard will refuse to write. Writes to shards with enough
up-to-date copies will succeed at the same time however. The value of
*writeConcern* can not be larger than *replicationFactor*. _(cluster only)_

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierPropertiesSync_container">
<div id="RestCollectionIdentifierPropertiesSync_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection/products/properties</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">379</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/properties
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71083&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;71082&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71083&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionIdentifierPropertiesSync_container_collapse" onclick="$('#RestCollectionIdentifierPropertiesSync_long').hide(); $('#RestCollectionIdentifierPropertiesSync_short').show(); window.location.hash='RestCollectionIdentifierPropertiesSync_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierPropertiesSync_short" onclick="$('#RestCollectionIdentifierPropertiesSync_short').hide(); $('#RestCollectionIdentifierPropertiesSync_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection/products/properties</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">379</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/properties
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_rename.md -->
@startDocuBlock put_api_collection_rename

@brief renames a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/rename, Rename collection, handleCommandPut:renameCollection}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection to rename.

@RESTDESCRIPTION
Renames a collection. Expects an object with the attribute(s)

- *name*: The new name.

It returns an object with the attributes

- *id*: The identifier of the collection.

- *name*: The new name of the collection.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

If renaming the collection succeeds, then the collection is also renamed in
all graph definitions inside the `_graphs` collection in the current database.

**Note**: this method is not available in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.
@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierRename_container">
<div id="RestCollectionIdentifierRename_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection/products1/rename</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;newname&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">134</span>
location: <span class="hljs-regexp">/_api/</span>collection/products1/rename
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71092&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71092&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;newname&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionIdentifierRename_container_collapse" onclick="$('#RestCollectionIdentifierRename_long').hide(); $('#RestCollectionIdentifierRename_short').show(); window.location.hash='RestCollectionIdentifierRename_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierRename_short" onclick="$('#RestCollectionIdentifierRename_short').hide(); $('#RestCollectionIdentifierRename_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/collection/products1/rename</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;newname&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">134</span>
location: <span class="hljs-regexp">/_api/</span>collection/products1/rename
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_unload.md -->
@startDocuBlock put_api_collection_unload

@brief unloads a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/unload, Unload collection, handleCommandPut:collectionUnload}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}

@RESTDESCRIPTION
Removes a collection from memory. This call does not delete any documents.
You can use the collection afterwards; in which case it will be loaded into
memory, again. On success an object with the following attributes is
returned:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierUnload_container">
<div id="RestCollectionIdentifierUnload_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/unload</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">135</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/unload
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71109&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71109&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">2</span> 
}
</pre>
<div id="RestCollectionIdentifierUnload_container_collapse" onclick="$('#RestCollectionIdentifierUnload_long').hide(); $('#RestCollectionIdentifierUnload_short').show(); window.location.hash='RestCollectionIdentifierUnload_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierUnload_short" onclick="$('#RestCollectionIdentifierUnload_short').hide(); $('#RestCollectionIdentifierUnload_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/unload</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">135</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/unload
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collections.md -->
@startDocuBlock get_api_collections

@brief returns all collections

@RESTHEADER{GET /_api/collection,reads all collections, handleCommandGet}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{excludeSystem,boolean,optional}
Whether or not system collections should be excluded from the result.

@RESTDESCRIPTION
Returns an object with an attribute *collections* containing an
array of all collection descriptions. The same information is also
available in the *names* as an object with the collection names
as keys.

By providing the optional query parameter *excludeSystem* with a value of
*true*, all system collections will be excluded from the response.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The list of collections

@EXAMPLES

Return information about all collections:


<div class="example-container" id="RestCollectionGetAllCollections_container">
<div id="RestCollectionGetAllCollections_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1618</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;104&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;animals&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/104&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;98&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;demo&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/98&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;43&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_fishbowl&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_fishbowl&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;40&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_modules&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_modules&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;37&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_frontend&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_frontend&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;34&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_appbundles&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_appbundles&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;10&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_statistics&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_statistics&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;7&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_graphs&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_graphs&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;13&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_statistics15&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_statistics15&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;31&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_apps&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_apps&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;4&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;16&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_statisticsRaw&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_statisticsRaw&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;19&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_analyzers&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_analyzers&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;22&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_aqlfunctions&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_aqlfunctions&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;25&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_queues&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_queues&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;28&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_jobs&quot;</span>, 
      <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;_jobs&quot;</span> 
    } 
  ] 
}
</pre>
<div id="RestCollectionGetAllCollections_container_collapse" onclick="$('#RestCollectionGetAllCollections_long').hide(); $('#RestCollectionGetAllCollections_short').show(); window.location.hash='RestCollectionGetAllCollections_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetAllCollections_short" onclick="$('#RestCollectionGetAllCollections_short').hide(); $('#RestCollectionGetAllCollections_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1618</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_load.md -->
@startDocuBlock put_api_collection_load

@brief loads a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/load, Load collection, handleCommandPut:loadCollection}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Loads a collection into memory. Returns the collection on success.

The request body object might optionally contain the following attribute:

- *count*: If set, this controls whether the return value should include
  the number of documents in the collection. Setting *count* to
  *false* may speed up loading a collection. The default value for
  *count* is *true*.

On success an object with the following attributes is returned:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *count*: The number of documents inside the collection. This is only
  returned if the *count* input parameters is set to *true* or has
  not been specified.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierLoad_container">
<div id="RestCollectionIdentifierLoad_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/load</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">145</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/load
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71066&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71066&quot;</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
</pre>
<div id="RestCollectionIdentifierLoad_container_collapse" onclick="$('#RestCollectionIdentifierLoad_long').hide(); $('#RestCollectionIdentifierLoad_short').show(); window.location.hash='RestCollectionIdentifierLoad_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierLoad_short" onclick="$('#RestCollectionIdentifierLoad_short').hide(); $('#RestCollectionIdentifierLoad_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/load</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">145</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/load
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/delete_api_collection.md -->
@startDocuBlock delete_api_collection

@brief drops a collection

@RESTHEADER{DELETE /_api/collection/{collection-name}, Drops a collection, handleCommandDelete:collection}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection to drop.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{isSystem,boolean,optional}
Whether or not the collection to drop is a system collection. This parameter
must be set to *true* in order to drop a system collection.

@RESTDESCRIPTION
Drops the collection identified by *collection-name*.

If the collection was successfully dropped, an object is returned with
the following attributes:

- *error*: *false*

- *id*: The identifier of the dropped collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestCollectionDeleteCollectionIdentifier_container">
<div id="RestCollectionDeleteCollectionIdentifier_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/70773</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70773&quot;</span> 
}
</pre>
<div id="RestCollectionDeleteCollectionIdentifier_container_collapse" onclick="$('#RestCollectionDeleteCollectionIdentifier_long').hide(); $('#RestCollectionDeleteCollectionIdentifier_short').show(); window.location.hash='RestCollectionDeleteCollectionIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionDeleteCollectionIdentifier_short" onclick="$('#RestCollectionDeleteCollectionIdentifier_short').hide(); $('#RestCollectionDeleteCollectionIdentifier_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/70773</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using a name:


<div class="example-container" id="RestCollectionDeleteCollectionName_container">
<div id="RestCollectionDeleteCollectionName_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products1</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70780&quot;</span> 
}
</pre>
<div id="RestCollectionDeleteCollectionName_container_collapse" onclick="$('#RestCollectionDeleteCollectionName_long').hide(); $('#RestCollectionDeleteCollectionName_short').show(); window.location.hash='RestCollectionDeleteCollectionName_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionDeleteCollectionName_short" onclick="$('#RestCollectionDeleteCollectionName_short').hide(); $('#RestCollectionDeleteCollectionName_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products1</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Dropping a system collection


<div class="example-container" id="RestCollectionDeleteCollectionSystem_container">
<div id="RestCollectionDeleteCollectionSystem_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/_example?isSystem=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70787&quot;</span> 
}
</pre>
<div id="RestCollectionDeleteCollectionSystem_container_collapse" onclick="$('#RestCollectionDeleteCollectionSystem_long').hide(); $('#RestCollectionDeleteCollectionSystem_short').show(); window.location.hash='RestCollectionDeleteCollectionSystem_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionDeleteCollectionSystem_short" onclick="$('#RestCollectionDeleteCollectionSystem_short').hide(); $('#RestCollectionDeleteCollectionSystem_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/_example?isSystem=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_shards.md -->
@startDocuBlock get_api_collection_shards

@brief Return the shard ids of a collection

@RESTHEADER{GET /_api/collection/{collection-name}/shards, Return the shard ids of a collection, shards:Collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{details,boolean,optional}
If set to true, the return value will also contain the responsible servers for the collections' shards.

@RESTDESCRIPTION
By default returns a JSON array with the shard IDs of the collection.

If the `details` parameter is set to `true`, it will return a JSON object with the
shard IDs as object attribute keys, and the responsible servers for each shard mapped to them.
In the detailed response, the leader shards will be first in the arrays.

**Note** : This method is only available in a cluster Coordinator.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returns the collection's shards.

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then an *HTTP 404*
is returned.

@RESTRETURNCODE{501}
*HTTP 501* is returned if the method is called on a single server.

@EXAMPLES

Retrieves the list of shards:


<div class="example-container" id="RestGetShards_cluster_container">
<div id="RestGetShards_cluster_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/testCollection/shards</span>

HTTP/1.1 200 OK
content-type: application/json
connection: Keep-Alive
content-length: 499
location: /_api/collection/testCollection/shards
server: ArangoDB
x-content-type-options: nosniff

"{\"error\":false,\"code\":200,\"shards\":[\"s2010055\",\"s2010056\",\"s2010057\"],\"writeConcern\":1,\"shardingStrategy\":\"hash\",\"shardKeys\":[\"_key\"],\"replicationFactor\":1,\"waitForSync\":false,\"numberOfShards\":3,\"statusString\":\"loaded\",\"status\":3,\"type\":2,\"schema\":null,\"globallyUniqueId\":\"c2010054/\",\"isSmartChild\":false,\"id\":\"2010054\",\"cacheEnabled\":false,\"minReplicationFactor\":1,\"name\":\"testCollection\",\"isDisjoint\":false,\"isSmart\":false,\"keyOptions\":{\"allowUserKeys\":true,\"type\":\"traditional\"},\"isSystem\":false}"
</pre>
</div>
</div>




Retrieves the list of shards with the responsible servers:


<div class="example-container" id="RestGetShardsWithDetails_cluster_container">
<div id="RestGetShardsWithDetails_cluster_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/testCollection/shards?details=<span class="hljs-literal">true</span></span>

HTTP/1.1 200 OK
content-type: application/json
connection: Keep-Alive
content-length: 637
location: /_api/collection/testCollection/shards
server: ArangoDB
x-content-type-options: nosniff

"{\"error\":false,\"code\":200,\"shards\":{\"s2010051\":[\"PRMR-886bb018-f049-44bf-a3ec-381a5ddcb5c0\"],\"s2010052\":[\"PRMR-68fe1db4-e711-4f1e-8cdb-9f042bb24a9a\"],\"s2010053\":[\"PRMR-886bb018-f049-44bf-a3ec-381a5ddcb5c0\"]},\"writeConcern\":1,\"shardingStrategy\":\"hash\",\"shardKeys\":[\"_key\"],\"replicationFactor\":1,\"waitForSync\":false,\"numberOfShards\":3,\"statusString\":\"loaded\",\"status\":3,\"type\":2,\"schema\":null,\"globallyUniqueId\":\"c2010050/\",\"isSmartChild\":false,\"id\":\"2010050\",\"cacheEnabled\":false,\"minReplicationFactor\":1,\"name\":\"testCollection\",\"isDisjoint\":false,\"isSmart\":false,\"keyOptions\":{\"allowUserKeys\":true,\"type\":\"traditional\"},\"isSystem\":false}"
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_properties.md -->
@startDocuBlock get_api_collection_properties

@brief reads the properties of the specified collection

@RESTHEADER{GET /_api/collection/{collection-name}/properties, Read properties of a collection, handleCommandGet:collectionProperties}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@RESTRETURNCODE{200}

@RESTREPLYBODY{,object,required,collection_info}

@RESTDESCRIPTION

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestCollectionGetCollectionIdentifier_container">
<div id="RestCollectionGetCollectionIdentifier_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/71042/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">379</span>
location: <span class="hljs-regexp">/_api/</span>collection/<span class="hljs-number">71042</span>/properties
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71042&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;71041&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71042&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionGetCollectionIdentifier_container_collapse" onclick="$('#RestCollectionGetCollectionIdentifier_long').hide(); $('#RestCollectionGetCollectionIdentifier_short').show(); window.location.hash='RestCollectionGetCollectionIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionIdentifier_short" onclick="$('#RestCollectionGetCollectionIdentifier_short').hide(); $('#RestCollectionGetCollectionIdentifier_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/71042/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">379</span>
location: <span class="hljs-regexp">/_api/</span>collection/<span class="hljs-number">71042</span>/properties
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using a name:


<div class="example-container" id="RestCollectionGetCollectionName_container">
<div id="RestCollectionGetCollectionName_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">379</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/properties
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71050&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;71049&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71050&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionGetCollectionName_container_collapse" onclick="$('#RestCollectionGetCollectionName_long').hide(); $('#RestCollectionGetCollectionName_short').show(); window.location.hash='RestCollectionGetCollectionName_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionName_short" onclick="$('#RestCollectionGetCollectionName_short').hide(); $('#RestCollectionGetCollectionName_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">379</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/properties
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_load_indexes_in_memory.md -->
@startDocuBlock put_api_collection_load_indexes_into_memory

@brief Load Indexes into Memory

@RESTHEADER{PUT /_api/collection/{collection-name}/loadIndexesIntoMemory, Load Indexes into Memory, handleCommandPut:loadIndexes}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}

@RESTDESCRIPTION
This route tries to cache all index entries
of this collection into the main memory.
Therefore it iterates over all indexes of the collection
and stores the indexed values, not the entire document data,
in memory.
All lookups that could be found in the cache are much faster
than lookups not stored in the cache so you get a nice performance boost.
It is also guaranteed that the cache is consistent with the stored data.

For the time being this function is only useful on RocksDB storage engine,
as in MMFiles engine all indexes are in memory anyways.

On RocksDB this function honors all memory limits, if the indexes you want
to load are smaller than your memory limit this function guarantees that most
index values are cached.
If the index is larger than your memory limit this function will fill up values
up to this limit and for the time being there is no way to control which indexes
of the collection should have priority over others.

On sucess this function returns an object with attribute `result` set to `true`

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the indexes have all been loaded

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierLoadIndexesIntoMemory_container">
<div id="RestCollectionIdentifierLoadIndexesIntoMemory_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/loadIndexesIntoMemory</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/loadIndexesIntoMemory
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestCollectionIdentifierLoadIndexesIntoMemory_container_collapse" onclick="$('#RestCollectionIdentifierLoadIndexesIntoMemory_long').hide(); $('#RestCollectionIdentifierLoadIndexesIntoMemory_short').show(); window.location.hash='RestCollectionIdentifierLoadIndexesIntoMemory_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierLoadIndexesIntoMemory_short" onclick="$('#RestCollectionIdentifierLoadIndexesIntoMemory_short').hide(); $('#RestCollectionIdentifierLoadIndexesIntoMemory_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/loadIndexesIntoMemory</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/loadIndexesIntoMemory
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_name.md -->
@startDocuBlock get_api_collection_name

@brief returns a collection

@RESTHEADER{GET /_api/collection/{collection-name}, Return information about a collection, handleCommandGet:collectionGetProperties}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
The result is an object describing the collection with the following
attributes:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *status*: The status of the collection as number.
  - 1: new born collection
  - 2: unloaded
  - 3: loaded
  - 4: in the process of being unloaded
  - 5: deleted
  - 6: loading

Every other status indicates a corrupted collection.

- *type*: The type of the collection as number.
  - 2: document collection (normal case)
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

@RESTRETURNCODES

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is
returned.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_checksum.md -->
@startDocuBlock get_api_collection_checksum

@brief returns a checksum for the specified collection

@RESTHEADER{GET /_api/collection/{collection-name}/checksum, Return checksum for the collection, handleCommandGet:collectionChecksum}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{withRevisions,boolean,optional}
Whether or not to include document revision ids in the checksum calculation.

@RESTQUERYPARAM{withData,boolean,optional}
Whether or not to include document body data in the checksum calculation.

@RESTDESCRIPTION
Will calculate a checksum of the meta-data (keys and optionally revision ids) and
optionally the document data in the collection.

The checksum can be used to compare if two collections on different ArangoDB
instances contain the same contents. The current revision of the collection is
returned too so one can make sure the checksums are calculated for the same
state of data.

By default, the checksum will only be calculated on the *_key* system attribute
of the documents contained in the collection. For edge collections, the system
attributes *_from* and *_to* will also be included in the calculation.

By setting the optional query parameter *withRevisions* to *true*, then revision
ids (*_rev* system attributes) are included in the checksumming.

By providing the optional query parameter *withData* with a value of *true*,
the user-defined document attributes will be included in the calculation too.
**Note**: Including user-defined attributes will make the checksumming slower.

The response is a JSON object with the following attributes:

- *checksum*: The calculated checksum as a number.

- *revision*: The collection revision id as a string.

**Note**: this method is not available in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Retrieving the checksum of a collection:


<div class="example-container" id="RestCollectionGetCollectionChecksum_container">
<div id="RestCollectionGetCollectionChecksum_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/checksum</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">193</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;revision&quot;</span> : <span class="hljs-string">&quot;_d7ylNRa---&quot;</span>, 
  <span class="hljs-string">&quot;checksum&quot;</span> : <span class="hljs-string">&quot;3632982271329311219&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70794&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70794&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionGetCollectionChecksum_container_collapse" onclick="$('#RestCollectionGetCollectionChecksum_long').hide(); $('#RestCollectionGetCollectionChecksum_short').show(); window.location.hash='RestCollectionGetCollectionChecksum_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionChecksum_short" onclick="$('#RestCollectionGetCollectionChecksum_short').hide(); $('#RestCollectionGetCollectionChecksum_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/checksum</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">193</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Retrieving the checksum of a collection including the collection data,
but not the revisions:


<div class="example-container" id="RestCollectionGetCollectionChecksumNoRev_container">
<div id="RestCollectionGetCollectionChecksumNoRev_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/checksum?withRevisions=<span class="hljs-literal">false</span>&amp;withData=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">193</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;revision&quot;</span> : <span class="hljs-string">&quot;_d7ylNSS---&quot;</span>, 
  <span class="hljs-string">&quot;checksum&quot;</span> : <span class="hljs-string">&quot;6095847180086327165&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70804&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70804&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionGetCollectionChecksumNoRev_container_collapse" onclick="$('#RestCollectionGetCollectionChecksumNoRev_long').hide(); $('#RestCollectionGetCollectionChecksumNoRev_short').show(); window.location.hash='RestCollectionGetCollectionChecksumNoRev_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionChecksumNoRev_short" onclick="$('#RestCollectionGetCollectionChecksumNoRev_short').hide(); $('#RestCollectionGetCollectionChecksumNoRev_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/checksum?withRevisions=<span class="hljs-literal">false</span>&amp;withData=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">193</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_truncate.md -->
@startDocuBlock put_api_collection_truncate

@brief truncates a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/truncate, Truncate collection, handleCommandPut:truncateCollection}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
If *true* then the data is synchronized to disk before returning from the
truncate operation (default: *false*)

@RESTQUERYPARAM{compact,boolean,optional}
If *true* (default) then the storage engine is told to start a compaction
in order to free up disk space. This can be resource intensive. If the only 
intention is to start over with an empty collection, specify *false*.

@RESTDESCRIPTION
Removes all documents from the collection, but leaves the indexes intact.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierTruncate_container">
<div id="RestCollectionIdentifierTruncate_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/truncate</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">135</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/truncate
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71101&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71101&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionIdentifierTruncate_container_collapse" onclick="$('#RestCollectionIdentifierTruncate_long').hide(); $('#RestCollectionIdentifierTruncate_short').show(); window.location.hash='RestCollectionIdentifierTruncate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierTruncate_short" onclick="$('#RestCollectionIdentifierTruncate_short').hide(); $('#RestCollectionIdentifierTruncate_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/truncate</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">135</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/truncate
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/get_api_collection_figures.md -->
@startDocuBlock get_api_collection_figures

@brief Fetch the statistics of a collection

@RESTHEADER{GET /_api/collection/{collection-name}/figures, Return statistics for a collection, handleCommandGet:collectionFigures}

@HINTS
{% hint 'warning' %}
Accessing collections by their numeric ID is deprecated from version 3.4.0 on.
You should reference them via their names instead.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTURLPARAM{details,boolean,required}
Setting `details` to `true` will return extended storage engine-specific
details to the figures. The details are intended for debugging ArangoDB itself
and their format is subject to change. By default, `details` is set to `false`,
so no details are returned and the behavior is identical to previous versions
of ArangoDB.

@RESTDESCRIPTION
In addition to the above, the result also contains the number of documents
and additional statistical information about the collection.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returns information about the collection:

@RESTREPLYBODY{count,integer,required,int64}
The number of documents currently present in the collection.

@RESTREPLYBODY{figures,object,required,collection_figures}
metrics of the collection

@RESTSTRUCT{indexes,collection_figures,object,required,collection_figures_indexes}

@RESTSTRUCT{count,collection_figures_indexes,integer,required,int64}
The total number of indexes defined for the collection, including the pre-defined
indexes (e.g. primary index).

@RESTSTRUCT{size,collection_figures_indexes,integer,required,int64}
The total memory allocated for indexes in bytes.

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Using an identifier and requesting the figures of the collection:


<div class="example-container" id="RestCollectionGetCollectionFigures_container">
<div id="RestCollectionGetCollectionFigures_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/figures</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">506</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/figures
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71022&quot;</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;figures&quot;</span> : { 
    <span class="hljs-string">&quot;indexes&quot;</span> : { 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">31</span> 
    }, 
    <span class="hljs-string">&quot;documentsSize&quot;</span> : <span class="hljs-number">336</span>, 
    <span class="hljs-string">&quot;cacheInUse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;cacheSize&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;cacheUsage&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71022&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;71021&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">71027</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
</pre>
<div id="RestCollectionGetCollectionFigures_container_collapse" onclick="$('#RestCollectionGetCollectionFigures_long').hide(); $('#RestCollectionGetCollectionFigures_short').show(); window.location.hash='RestCollectionGetCollectionFigures_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionFigures_short" onclick="$('#RestCollectionGetCollectionFigures_short').hide(); $('#RestCollectionGetCollectionFigures_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/figures</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">506</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/figures
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






<div class="example-container" id="RestCollectionGetCollectionFiguresDetails_container">
<div id="RestCollectionGetCollectionFiguresDetails_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/figures?details=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">578</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/figures
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/71032&quot;</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;figures&quot;</span> : { 
    <span class="hljs-string">&quot;indexes&quot;</span> : { 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">31</span> 
    }, 
    <span class="hljs-string">&quot;documentsSize&quot;</span> : <span class="hljs-number">87</span>, 
    <span class="hljs-string">&quot;cacheInUse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;cacheSize&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;cacheUsage&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;engine&quot;</span> : { 
      <span class="hljs-string">&quot;documents&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;indexes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span> 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71032&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;71031&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">71037</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
</pre>
<div id="RestCollectionGetCollectionFiguresDetails_container_collapse" onclick="$('#RestCollectionGetCollectionFiguresDetails_long').hide(); $('#RestCollectionGetCollectionFiguresDetails_short').show(); window.location.hash='RestCollectionGetCollectionFiguresDetails_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionFiguresDetails_short" onclick="$('#RestCollectionGetCollectionFiguresDetails_short').hide(); $('#RestCollectionGetCollectionFiguresDetails_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/collection/products/figures?details=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">578</span>
location: <span class="hljs-regexp">/_api/</span>collection/products/figures
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/put_api_collection_recalculate_count.md -->
@startDocuBlock put_api_collection_recalculate_count

@brief recalculates the document count of a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/recalculateCount, Recalculate count of a collection, handleCommandPut:recalculateCount}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Recalculates the document count of a collection, if it ever becomes inconsistent.

It returns an object with the attributes

- *result*: will be *true* if recalculating the document count succeeded.

**Note**: this method is specific for the RocksDB storage engine

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the document count was recalculated successfully, *HTTP 200* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_logger_follow.md -->
@startDocuBlock get_api_replication_logger_follow

@brief Fetch log lines from the server

@RESTHEADER{GET /_api/replication/logger-follow, Returns log entries, handleCommandLoggerFollow}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
It is considered as deprecated from version 3.4.0 on.
{% endhint %}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{from,number,optional}
Exclusive lower bound tick value for results.

@RESTQUERYPARAM{to,number,optional}
Inclusive upper bound tick value for results.

@RESTQUERYPARAM{chunkSize,number,optional}
Approximate maximum size of the returned result.

@RESTQUERYPARAM{includeSystem,boolean,optional}
Include system collections in the result. The default value is *true*.

@RESTDESCRIPTION
Returns data from the server's replication log. This method can be called
by replication clients after an initial synchronization of data. The method
will return all "recent" log entries from the logger server, and the clients
can replay and apply these entries locally so they get to the same data
state as the logger server.

Clients can call this method repeatedly to incrementally fetch all changes
from the logger server. In this case, they should provide the *from* value so
they will only get returned the log events since their last fetch.

When the *from* query parameter is not used, the logger server will return log
entries starting at the beginning of its replication log. When the *from*
parameter is used, the logger server will only return log entries which have
higher tick values than the specified *from* value (note: the log entry with a
tick value equal to *from* will be excluded). Use the *from* value when
incrementally fetching log data.

The *to* query parameter can be used to optionally restrict the upper bound of
the result to a certain tick value. If used, the result will contain only log events
with tick values up to (including) *to*. In incremental fetching, there is no
need to use the *to* parameter. It only makes sense in special situations,
when only parts of the change log are required.

The *chunkSize* query parameter can be used to control the size of the result.
It must be specified in bytes. The *chunkSize* value will only be honored
approximately. Otherwise a too low *chunkSize* value could cause the server
to not be able to put just one log entry into the result and return it.
Therefore, the *chunkSize* value will only be consulted after a log entry has
been written into the result. If the result size is then bigger than
*chunkSize*, the server will respond with as many log entries as there are
in the response already. If the result size is still smaller than *chunkSize*,
the server will try to return more data if there's more data left to return.

If *chunkSize* is not specified, some server-side default value will be used.

The *Content-Type* of the result is *application/x-arango-dump*. This is an
easy-to-process format, with all log events going onto separate lines in the
response body. Each log event itself is a JSON object, with at least the
following attributes:

- *tick*: the log event tick value

- *type*: the log event type

Individual log events will also have additional attributes, depending on the
event type. A few common attributes which are used for multiple events types
are:

- *cid*: id of the collection the event was for

- *tid*: id of the transaction the event was contained in

- *key*: document key

- *rev*: document revision id

- *data*: the original document data

The response will also contain the following HTTP headers:

- *x-arango-replication-active*: whether or not the logger is active. Clients
  can use this flag as an indication for their polling frequency. If the
  logger is not active and there are no more replication events available, it
  might be sensible for a client to abort, or to go to sleep for a long time
  and try again later to check whether the logger has been activated.

- *x-arango-replication-lastincluded*: the tick value of the last included
  value in the result. In incremental log fetching, this value can be used
  as the *from* value for the following request. **Note** that if the result is
  empty, the value will be *0*. This value should not be used as *from* value
  by clients in the next request (otherwise the server would return the log
  events from the start of the log again).

- *x-arango-replication-lasttick*: the last tick value the logger server has
  logged (not necessarily included in the result). By comparing the the last
  tick and last included tick values, clients have an approximate indication of
  how many events there are still left to fetch.

- *x-arango-replication-checkmore*: whether or not there already exists more
  log data which the client could fetch immediately. If there is more log data
  available, the client could call *logger-follow* again with an adjusted *from*
  value to fetch remaining log entries until there are no more.

  If there isn't any more log data to fetch, the client might decide to go
  to sleep for a while before calling the logger again.

**Note**: this method is not supported on a Coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully, and there are log
events available for the requested range. The response body will not be empty
in this case.

@RESTRETURNCODE{204}
is returned if the request was executed successfully, but there are no log
events available for the requested range. The response body will be empty
in this case.

@RESTRETURNCODE{400}
is returned if either the *from* or *to* values are invalid.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.

@EXAMPLES

No log events available


<div class="example-container" id="RestReplicationLoggerFollowEmpty_container">
<div id="RestReplicationLoggerFollowEmpty_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-follow?from=190233</span>

HTTP/1.1 204 No Content
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-replication-active: true
x-arango-replication-checkmore: false
x-arango-replication-frompresent: true
x-arango-replication-lastincluded: 0
x-arango-replication-lastscanned: 190230
x-arango-replication-lasttick: 190233
x-content-type-options: nosniff

</pre>
</div>
</div>





A few log events *(One JSON document per line)*


<div class="example-container" id="RestReplicationLoggerFollowSome_container">
<div id="RestReplicationLoggerFollowSome_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-follow?from=190233</span>

HTTP/1.1 200 OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: 1612
server: ArangoDB
x-arango-replication-active: true
x-arango-replication-checkmore: false
x-arango-replication-frompresent: true
x-arango-replication-lastincluded: 190265
x-arango-replication-lastscanned: 190265
x-arango-replication-lasttick: 190265
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;190236&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2300</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;tid&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;cid&quot;</span> : <span class="hljs-string">&quot;4&quot;</span>, 
  <span class="hljs-string">&quot;cname&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
  <span class="hljs-string">&quot;data&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;96&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_users/96&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylTUq---&quot;</span>, 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
    <span class="hljs-string">&quot;source&quot;</span> : <span class="hljs-string">&quot;LOCAL&quot;</span>, 
    <span class="hljs-string">&quot;authData&quot;</span> : { 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;simple&quot;</span> : { 
        <span class="hljs-string">&quot;hash&quot;</span> : <span class="hljs-string">&quot;60d76e431a7381e7db87395d5498156ebf087df55df4603c51da74270155444f&quot;</span>, 
        <span class="hljs-string">&quot;salt&quot;</span> : <span class="hljs-string">&quot;0c9abd44&quot;</span>, 
        <span class="hljs-string">&quot;method&quot;</span> : <span class="hljs-string">&quot;sha256&quot;</span> 
      } 
    }, 
    <span class="hljs-string">&quot;databases&quot;</span> : { 
      <span class="hljs-string">&quot;_system&quot;</span> : { 
        <span class="hljs-string">&quot;permissions&quot;</span> : { 
          <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;collections&quot;</span> : { 
          <span class="hljs-string">&quot;products&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;demo&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;*&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;products1&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;animals&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          } 
        } 
      }, 
      <span class="hljs-string">&quot;*&quot;</span> : { 
        <span class="hljs-string">&quot;permissions&quot;</span> : { 
          <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;collections&quot;</span> : { 
          <span class="hljs-string">&quot;*&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          } 
        } 
      } 
    } 
  } 
}&#x21A9;
{ 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;190249&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2001</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;cuid&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/72307&quot;</span>, 
  <span class="hljs-string">&quot;cid&quot;</span> : <span class="hljs-string">&quot;72307&quot;</span>, 
  <span class="hljs-string">&quot;data&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72307&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;&quot;</span> 
  } 
}&#x21A9;
{ 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;190257&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2300</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;tid&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;cid&quot;</span> : <span class="hljs-string">&quot;4&quot;</span>, 
  <span class="hljs-string">&quot;cname&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
  <span class="hljs-string">&quot;data&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;96&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_users/96&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylTV----&quot;</span>, 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
    <span class="hljs-string">&quot;source&quot;</span> : <span class="hljs-string">&quot;LOCAL&quot;</span>, 
    <span class="hljs-string">&quot;authData&quot;</span> : { 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;simple&quot;</span> : { 
        <span class="hljs-string">&quot;hash&quot;</span> : <span class="hljs-string">&quot;60d76e431a7381e7db87395d5498156ebf087df55df4603c51da74270155444f&quot;</span>, 
        <span class="hljs-string">&quot;salt&quot;</span> : <span class="hljs-string">&quot;0c9abd44&quot;</span>, 
        <span class="hljs-string">&quot;method&quot;</span> : <span class="hljs-string">&quot;sha256&quot;</span> 
      } 
    }, 
    <span class="hljs-string">&quot;databases&quot;</span> : { 
      <span class="hljs-string">&quot;*&quot;</span> : { 
        <span class="hljs-string">&quot;permissions&quot;</span> : { 
          <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;collections&quot;</span> : { 
          <span class="hljs-string">&quot;*&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          } 
        } 
      }, 
      <span class="hljs-string">&quot;_system&quot;</span> : { 
        <span class="hljs-string">&quot;permissions&quot;</span> : { 
          <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;collections&quot;</span> : { 
          <span class="hljs-string">&quot;animals&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;products1&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;*&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;demo&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          } 
        } 
      } 
    } 
  } 
}&#x21A9;
</pre>
<div id="RestReplicationLoggerFollowSome_container_collapse" onclick="$('#RestReplicationLoggerFollowSome_long').hide(); $('#RestReplicationLoggerFollowSome_short').show(); window.location.hash='RestReplicationLoggerFollowSome_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationLoggerFollowSome_short" onclick="$('#RestReplicationLoggerFollowSome_short').hide(); $('#RestReplicationLoggerFollowSome_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-follow?from=190233</span>

HTTP/1.1 200 OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: 1612
server: ArangoDB
x-arango-replication-active: true
x-arango-replication-checkmore: false
x-arango-replication-frompresent: true
x-arango-replication-lastincluded: 190265
x-arango-replication-lastscanned: 190265
x-arango-replication-lasttick: 190265
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







More events than would fit into the response


<div class="example-container" id="RestReplicationLoggerFollowBufferLimit_container">
<div id="RestReplicationLoggerFollowBufferLimit_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-follow?from=190207&amp;chunkSize=400</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: <span class="hljs-number">773</span>
server: ArangoDB
x-arango-replication-active: <span class="hljs-literal">true</span>
x-arango-replication-checkmore: <span class="hljs-literal">true</span>
x-arango-replication-frompresent: <span class="hljs-literal">true</span>
x-arango-replication-lastincluded: <span class="hljs-number">190212</span>
x-arango-replication-lastscanned: <span class="hljs-number">190209</span>
x-arango-replication-lasttick: <span class="hljs-number">190233</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;190210&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2300</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
  <span class="hljs-string">&quot;tid&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;cid&quot;</span> : <span class="hljs-string">&quot;4&quot;</span>, 
  <span class="hljs-string">&quot;cname&quot;</span> : <span class="hljs-string">&quot;_users&quot;</span>, 
  <span class="hljs-string">&quot;data&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;96&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_users/96&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylSSG---&quot;</span>, 
    <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
    <span class="hljs-string">&quot;source&quot;</span> : <span class="hljs-string">&quot;LOCAL&quot;</span>, 
    <span class="hljs-string">&quot;authData&quot;</span> : { 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;simple&quot;</span> : { 
        <span class="hljs-string">&quot;hash&quot;</span> : <span class="hljs-string">&quot;60d76e431a7381e7db87395d5498156ebf087df55df4603c51da74270155444f&quot;</span>, 
        <span class="hljs-string">&quot;salt&quot;</span> : <span class="hljs-string">&quot;0c9abd44&quot;</span>, 
        <span class="hljs-string">&quot;method&quot;</span> : <span class="hljs-string">&quot;sha256&quot;</span> 
      } 
    }, 
    <span class="hljs-string">&quot;databases&quot;</span> : { 
      <span class="hljs-string">&quot;_system&quot;</span> : { 
        <span class="hljs-string">&quot;permissions&quot;</span> : { 
          <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;collections&quot;</span> : { 
          <span class="hljs-string">&quot;products&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;demo&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;*&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;animals&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          }, 
          <span class="hljs-string">&quot;products1&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          } 
        } 
      }, 
      <span class="hljs-string">&quot;*&quot;</span> : { 
        <span class="hljs-string">&quot;permissions&quot;</span> : { 
          <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;collections&quot;</span> : { 
          <span class="hljs-string">&quot;*&quot;</span> : { 
            <span class="hljs-string">&quot;permissions&quot;</span> : { 
              <span class="hljs-string">&quot;read&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;write&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          } 
        } 
      } 
    } 
  } 
}
</pre>
<div id="RestReplicationLoggerFollowBufferLimit_container_collapse" onclick="$('#RestReplicationLoggerFollowBufferLimit_long').hide(); $('#RestReplicationLoggerFollowBufferLimit_short').show(); window.location.hash='RestReplicationLoggerFollowBufferLimit_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationLoggerFollowBufferLimit_short" onclick="$('#RestReplicationLoggerFollowBufferLimit_short').hide(); $('#RestReplicationLoggerFollowBufferLimit_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-follow?from=190207&amp;chunkSize=400</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: <span class="hljs-number">773</span>
server: ArangoDB
x-arango-replication-active: <span class="hljs-literal">true</span>
x-arango-replication-checkmore: <span class="hljs-literal">true</span>
x-arango-replication-frompresent: <span class="hljs-literal">true</span>
x-arango-replication-lastincluded: <span class="hljs-number">190212</span>
x-arango-replication-lastscanned: <span class="hljs-number">190209</span>
x-arango-replication-lasttick: <span class="hljs-number">190233</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_wal_access_last_tick.md -->
@startDocuBlock get_api_wal_access_last_tick

@brief Return last available tick value

@RESTHEADER{GET /_api/wal/lastTick, Return last available tick value, handleCommandLastTick}

@RESTDESCRIPTION
Returns the last available tick value that can be served from the server's
replication log. This corresponds to the tick of the latest successfull operation.

The result is a JSON object containing the attributes *tick*, *time* and *server*.
* *tick*: contains the last available tick, *time*
* *time*: the server time as string in format "YYYY-MM-DDTHH:MM:SSZ"
* *server*: An object with fields *version* and *serverId*

**Note**: this method is not supported on a Coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.

@EXAMPLES

Returning the first available tick


<div class="example-container" id="RestWalAccessFirstTick_container">
<div id="RestWalAccessFirstTick_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/lastTick</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">105</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:59Z&quot;</span>, 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;193137&quot;</span>, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
  } 
}
</pre>
<div id="RestWalAccessFirstTick_container_collapse" onclick="$('#RestWalAccessFirstTick_long').hide(); $('#RestWalAccessFirstTick_short').show(); window.location.hash='RestWalAccessFirstTick_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalAccessFirstTick_short" onclick="$('#RestWalAccessFirstTick_short').hide(); $('#RestWalAccessFirstTick_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/lastTick</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">105</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_makeSlave.md -->
@startDocuBlock put_api_replication_makeSlave

@brief Changes role to slave

@RESTHEADER{PUT /_api/replication/make-slave, Turn the server into a slave of another, handleCommandMakeSlave}

@RESTBODYPARAM{endpoint,string,required,string}
the master endpoint to connect to (e.g. "tcp://192.168.173.13:8529").

@RESTBODYPARAM{database,string,required,string}
the database name on the master (if not specified, defaults to the
name of the local current database).

@RESTBODYPARAM{username,string,optional,string}
an optional ArangoDB username to use when connecting to the master.

@RESTBODYPARAM{password,string,required,string}
the password to use when connecting to the master.

@RESTBODYPARAM{includeSystem,boolean,required,}
whether or not system collection operations will be applied

@RESTBODYPARAM{restrictType,string,optional,string}
an optional string value for collection filtering. When
specified, the allowed values are *include* or *exclude*.

@RESTBODYPARAM{restrictCollections,array,optional,string}
an optional array of collections for use with *restrictType*.
If *restrictType* is *include*, only the specified collections
will be sychronised. If *restrictType* is *exclude*, all but the specified
collections will be synchronized.

@RESTBODYPARAM{maxConnectRetries,integer,optional,int64}
the maximum number of connection attempts the applier
will make in a row. If the applier cannot establish a connection to the
endpoint in this number of attempts, it will stop itself.

@RESTBODYPARAM{connectTimeout,integer,optional,int64}
the timeout (in seconds) when attempting to connect to the
endpoint. This value is used for each connection attempt.

@RESTBODYPARAM{requestTimeout,integer,optional,int64}
the timeout (in seconds) for individual requests to the endpoint.

@RESTBODYPARAM{chunkSize,integer,optional,int64}
the requested maximum size for log transfer packets that
is used when the endpoint is contacted.

@RESTBODYPARAM{adaptivePolling,boolean,optional,}
whether or not the replication applier will use adaptive polling.

@RESTBODYPARAM{autoResync,boolean,optional,}
whether or not the slave should perform an automatic resynchronization with
the master in case the master cannot serve log data requested by the slave,
or when the replication is started and no tick value can be found.

@RESTBODYPARAM{autoResyncRetries,integer,optional,int64}
number of resynchronization retries that will be performed in a row when
automatic resynchronization is enabled and kicks in. Setting this to *0* will
effectively disable *autoResync*. Setting it to some other value will limit
the number of retries that are performed. This helps preventing endless retries
in case resynchronizations always fail.

@RESTBODYPARAM{initialSyncMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the initial synchronization will
wait for a response from the master when fetching initial collection data.
This wait time can be used to control after what time the initial synchronization
will give up waiting for a response and fail. This value is relevant even
for continuous replication when *autoResync* is set to *true* because this
may re-start the initial synchronization when the master cannot provide
log data the slave requires.
This value will be ignored if set to *0*.

@RESTBODYPARAM{connectionRetryWaitTime,integer,optional,int64}
the time (in seconds) that the applier will intentionally idle before
it retries connecting to the master in case of connection problems.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMinWaitTime,integer,optional,int64}
the minimum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data. This wait time can be used to control the
frequency with which the replication applier sends HTTP log fetch requests
to the master in case there is no write activity on the master.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data and there have been previous log fetch attempts
that resulted in no more log data. This wait time can be used to control the
maximum frequency with which the replication applier sends HTTP log fetch
requests to the master in case there is no write activity on the master for
longer periods. This configuration value will only be used if the option
*adaptivePolling* is set to *true*.
This value will be ignored if set to *0*.

@RESTBODYPARAM{requireFromPresent,boolean,optional,}
if set to *true*, then the replication applier will check
at start of its continuous replication if the start tick from the dump phase
is still present on the master. If not, then there would be data loss. If
*requireFromPresent* is *true*, the replication applier will abort with an
appropriate error message. If set to *false*, then the replication applier will
still start, and ignore the data loss.

@RESTBODYPARAM{verbose,boolean,optional,}
if set to *true*, then a log line will be emitted for all operations
performed by the replication applier. This should be used for debugging
replication
problems only.

@RESTDESCRIPTION
Starts a full data synchronization from a remote endpoint into the local ArangoDB
database and afterwards starts the continuous replication.
The operation works on a per-database level.

All local database data will be removed prior to the synchronization.

In case of success, the body of the response is a JSON object with the following
attributes:

- *state*: a JSON object with the following sub-attributes:

  - *running*: whether or not the applier is active and running

  - *lastAppliedContinuousTick*: the last tick value from the continuous
    replication log the applier has applied.

  - *lastProcessedContinuousTick*: the last tick value from the continuous
    replication log the applier has processed.

    Regularly, the last applied and last processed tick values should be
    identical. For transactional operations, the replication applier will first
    process incoming log events before applying them, so the processed tick
    value might be higher than the applied tick value. This will be the case
    until the applier encounters the *transaction commit* log event for the
    transaction.

  - *lastAvailableContinuousTick*: the last tick value the remote server can
    provide.

  - *ticksBehind*: this attribute will be present only if the applier is currently
    running. It will provide the number of log ticks between what the applier
    has applied/seen and the last log tick value provided by the remote server.
    If this value is zero, then both servers are in sync. If this is non-zero,
    then the remote server has additional data that the applier has not yet
    fetched and processed, or the remote server may have more data that is not
    applicable to the applier.

    Client applications can use it to determine approximately how far the applier
    is behind the remote server, and can periodically check if the value is
    increasing (applier is falling behind) or decreasing (applier is catching up).

    Please note that as the remote server will only keep one last log tick value
    for all of its databases, but replication may be restricted to just certain
    databases on the applier, this value is more meaningful when the global applier
    is used.
    Additionally, the last log tick provided by the remote server may increase
    due to writes into system collections that are not replicated due to replication
    configuration. So the reported value may exaggerate the reality a bit for
    some scenarios.

  - *time*: the time on the applier server.

  - *totalRequests*: the total number of requests the applier has made to the
    endpoint.

  - *totalFailedConnects*: the total number of failed connection attempts the
    applier has made.

  - *totalEvents*: the total number of log events the applier has processed.

  - *totalOperationsExcluded*: the total number of log events excluded because
    of *restrictCollections*.

  - *progress*: a JSON object with details about the replication applier progress.
    It contains the following sub-attributes if there is progress to report:

    - *message*: a textual description of the progress

    - *time*: the date and time the progress was logged

    - *failedConnects*: the current number of failed connection attempts

  - *lastError*: a JSON object with details about the last error that happened on
    the applier. It contains the following sub-attributes if there was an error:

    - *errorNum*: a numerical error code

    - *errorMessage*: a textual error description

    - *time*: the date and time the error occurred

    In case no error has occurred, *lastError* will be empty.

- *server*: a JSON object with the following sub-attributes:

  - *version*: the applier server's version

  - *serverId*: the applier server's id

- *endpoint*: the endpoint the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

- *database*: the name of the database the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

Please note that all "tick" values returned do not have a specific unit. Tick
values are only meaningful when compared to each other. Higher tick values mean
"later in time" than lower tick values.

WARNING: calling this method will sychronize data from the collections found
on the remote master to the local ArangoDB database. All data in the local
collections will be purged and replaced with data from the master.

Use with caution!

Please also keep in mind that this command may take a long time to complete
and return. This is because it will first do a full data synchronization with
the master, which will take time roughly proportional to the amount of data.

**Note**: this method is not supported on a Coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the configuration is incomplete or malformed.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred during synchronization or when starting the
continuous replication.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_batch_replication.md -->
@startDocuBlock put_batch_replication

@brief handle a dump batch command

@RESTHEADER{PUT /_api/replication/batch/{id}, Prolong existing dump batch, handleCommandBatch:Prolong}

**Note**: These calls are uninteresting to users.

@RESTBODYPARAM{ttl,integer,required,int64}
the time-to-live for the new batch (in seconds)

@RESTURLPARAMETERS

@RESTURLPARAM{id,string,required}
The id of the batch.

@RESTDESCRIPTION
Extends the ttl of an existing dump batch, using the batch's id and
the provided ttl value.

If the batch's ttl can be extended successfully, the response is empty.

**Note**: on a Coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DB-Server.
The very same request is forwarded synchronously to that DB-Server.
It is an error if this attribute is not bound in the Coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{204}
is returned if the batch's ttl was extended successfully.

@RESTRETURNCODE{400}
is returned if the ttl value is invalid or the batch was not found.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_wal_access_tail.md -->
@startDocuBlock get_api_wal_access_tail

@brief Fetch recent operations

@RESTHEADER{GET /_api/wal/tail, Tail recent server operations, handleCommandTail}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{global,boolean,optional}
If set to *true*, tails the WAL for all databases. If set to *false*, tails the 
WAL for the selected database.

@RESTQUERYPARAM{from,number,optional}
Exclusive lower bound tick value for results. On successive calls
to this API you should set this to the value returned
with the *x-arango-replication-lastincluded* header (Unless that header
contains 0).

@RESTQUERYPARAM{to,number,optional}
Inclusive upper bound tick value for results.

@RESTQUERYPARAM{lastScanned,number,optional}
Should be set to the value of the *x-arango-replication-lastscanned* header
or alternatively 0 on first try. This allows the rocksdb engine to break up
large transactions over multiple responses.

@RESTQUERYPARAM{global,boolean,optional}
Whether operations for all databases should be included. When set to *false*
only the operations for the current database are included. The value *true* is
only valid on the *_system* database. The default is *false*.

@RESTQUERYPARAM{chunkSize,number,optional}
Approximate maximum size of the returned result.

@RESTQUERYPARAM{syncerId,number,optional}
Id of the client used to tail results. The server will use this to
keep operations until the client has fetched them. Must be a positive integer.
**Note** this or serverId is required to have a chance at fetching reading all
operations with the rocksdb storage engine.

@RESTQUERYPARAM{serverId,number,optional}
Id of the client machine. If *syncerId* is unset, the server will use
this to keep operations until the client has fetched them. Must be a positive
integer.
**Note** this or syncerId is required to have a chance at fetching reading all
operations with the rocksdb storage engine.

@RESTQUERYPARAM{clientInfo,string,optional}
Short description of the client, used for informative purposes only.

@RESTQUERYPARAM{barrierId,number,optional}
Id of barrier used to keep WAL entries around. **Note** this is only required for the
MMFiles storage engine

@RESTDESCRIPTION
Returns data from the server's write-ahead log (also named replication log). This method can be called
by replication clients after an initial synchronization of data. The method
will return all "recent" logged operations from the server. Clients
can replay and apply these operations locally so they get to the same data
state as the server.

Clients can call this method repeatedly to incrementally fetch all changes
from the server. In this case, they should provide the *from* value so
they will only get returned the log events since their last fetch.

When the *from* query parameter is not used, the server will return log
entries starting at the beginning of its replication log. When the *from*
parameter is used, the server will only return log entries which have
higher tick values than the specified *from* value (note: the log entry with a
tick value equal to *from* will be excluded). Use the *from* value when
incrementally fetching log data.

The *to* query parameter can be used to optionally restrict the upper bound of
the result to a certain tick value. If used, the result will contain only log events
with tick values up to (including) *to*. In incremental fetching, there is no
need to use the *to* parameter. It only makes sense in special situations,
when only parts of the change log are required.

The *chunkSize* query parameter can be used to control the size of the result.
It must be specified in bytes. The *chunkSize* value will only be honored
approximately. Otherwise a too low *chunkSize* value could cause the server
to not be able to put just one log entry into the result and return it.
Therefore, the *chunkSize* value will only be consulted after a log entry has
been written into the result. If the result size is then bigger than
*chunkSize*, the server will respond with as many log entries as there are
in the response already. If the result size is still smaller than *chunkSize*,
the server will try to return more data if there's more data left to return.

If *chunkSize* is not specified, some server-side default value will be used.

The *Content-Type* of the result is *application/x-arango-dump*. This is an
easy-to-process format, with all log events going onto separate lines in the
response body. Each log event itself is a JSON object, with at least the
following attributes:

- *tick*: the log event tick value

- *type*: the log event type

Individual log events will also have additional attributes, depending on the
event type. A few common attributes which are used for multiple events types
are:

- *cuid*: globally unique id of the View or collection the event was for

- *db*: the database name the event was for

- *tid*: id of the transaction the event was contained in

- *data*: the original document data

A more detailed description of the individual replication event types and their
data structures can be found in [Operation Types](#operation-types).

The response will also contain the following HTTP headers:

- *x-arango-replication-active*: whether or not the logger is active. Clients
  can use this flag as an indication for their polling frequency. If the
  logger is not active and there are no more replication events available, it
  might be sensible for a client to abort, or to go to sleep for a long time
  and try again later to check whether the logger has been activated.

- *x-arango-replication-lastincluded*: the tick value of the last included
  value in the result. In incremental log fetching, this value can be used
  as the *from* value for the following request. **Note** that if the result is
  empty, the value will be *0*. This value should not be used as *from* value
  by clients in the next request (otherwise the server would return the log
  events from the start of the log again).

- *x-arango-replication-lastscanned*: the last tick the server scanned while
  computing the operation log. This might include operations the server did not
  returned to you due to various reasons (i.e. the value was filtered or skipped).
  You may use this value in the *lastScanned* header to allow the rocksdb engine
  to break up requests over multiple responses.

- *x-arango-replication-lasttick*: the last tick value the server has
  logged in its write ahead log (not necessarily included in the result). By comparing the the last
  tick and last included tick values, clients have an approximate indication of
  how many events there are still left to fetch.

- *x-arango-replication-frompresent*: is set to _true_ if server returned
  all tick values starting from the specified tick in the _from_ parameter.
  Should this be set to false the server did not have these operations anymore
  and the client might have missed operations.

- *x-arango-replication-checkmore*: whether or not there already exists more
  log data which the client could fetch immediately. If there is more log data
  available, the client could call *logger-follow* again with an adjusted *from*
  value to fetch remaining log entries until there are no more.

  If there isn't any more log data to fetch, the client might decide to go
  to sleep for a while before calling the logger again.

**Note**: this method is not supported on a Coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully, and there are log
events available for the requested range. The response body will not be empty
in this case.

@RESTRETURNCODE{204}
is returned if the request was executed successfully, but there are no log
events available for the requested range. The response body will be empty
in this case.

@RESTRETURNCODE{400}
is returned if either the *from* or *to* values are invalid.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.

@EXAMPLES

No log events available


<div class="example-container" id="RestWalAccessTailingEmpty_container">
<div id="RestWalAccessTailingEmpty_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/tail?from=193163</span>

HTTP/1.1 204 No Content
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: 0
server: ArangoDB
x-arango-replication-checkmore: false
x-arango-replication-frompresent: true
x-arango-replication-lastincluded: 0
x-arango-replication-lastscanned: 193160
x-arango-replication-lasttick: 193163
x-content-type-options: nosniff

</pre>
</div>
</div>





A few log events *(One JSON document per line)*


<div class="example-container" id="RestWalAccessTailingSome_container">
<div id="RestWalAccessTailingSome_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/tail?from=193163</span>

HTTP/1.1 200 OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: 74
server: ArangoDB
x-arango-replication-checkmore: true
x-arango-replication-frompresent: true
x-arango-replication-lastincluded: 193179
x-arango-replication-lastscanned: 193189
x-arango-replication-lasttick: 193189
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;193179&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2001</span>, 
  <span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
  <span class="hljs-string">&quot;cuid&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74159&quot;</span> 
}&#x21A9;
</pre>
<div id="RestWalAccessTailingSome_container_collapse" onclick="$('#RestWalAccessTailingSome_long').hide(); $('#RestWalAccessTailingSome_short').show(); window.location.hash='RestWalAccessTailingSome_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalAccessTailingSome_short" onclick="$('#RestWalAccessTailingSome_short').hide(); $('#RestWalAccessTailingSome_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/tail?from=193163</span>

HTTP/1.1 200 OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: 74
server: ArangoDB
x-arango-replication-checkmore: true
x-arango-replication-frompresent: true
x-arango-replication-lastincluded: 193179
x-arango-replication-lastscanned: 193189
x-arango-replication-lasttick: 193189
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







More events than would fit into the response


<div class="example-container" id="RestWalAccessTailingBufferLimit_container">
<div id="RestWalAccessTailingBufferLimit_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/tail?from=193137&amp;chunkSize=400</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: <span class="hljs-number">74</span>
server: ArangoDB
x-arango-replication-checkmore: <span class="hljs-literal">true</span>
x-arango-replication-frompresent: <span class="hljs-literal">true</span>
x-arango-replication-lastincluded: <span class="hljs-number">193153</span>
x-arango-replication-lastscanned: <span class="hljs-number">193163</span>
x-arango-replication-lasttick: <span class="hljs-number">193163</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;tick&quot;</span> : <span class="hljs-string">&quot;193153&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2001</span>, 
  <span class="hljs-string">&quot;db&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
  <span class="hljs-string">&quot;cuid&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74147&quot;</span> 
}
</pre>
<div id="RestWalAccessTailingBufferLimit_container_collapse" onclick="$('#RestWalAccessTailingBufferLimit_long').hide(); $('#RestWalAccessTailingBufferLimit_short').show(); window.location.hash='RestWalAccessTailingBufferLimit_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalAccessTailingBufferLimit_short" onclick="$('#RestWalAccessTailingBufferLimit_short').hide(); $('#RestWalAccessTailingBufferLimit_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/tail?from=193137&amp;chunkSize=400</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/x-arango-dump
connection: Keep-Alive
content-length: <span class="hljs-number">74</span>
server: ArangoDB
x-arango-replication-checkmore: <span class="hljs-literal">true</span>
x-arango-replication-frompresent: <span class="hljs-literal">true</span>
x-arango-replication-lastincluded: <span class="hljs-number">193153</span>
x-arango-replication-lastscanned: <span class="hljs-number">193163</span>
x-arango-replication-lasttick: <span class="hljs-number">193163</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_logger_first_tick.md -->
@startDocuBlock get_api_replication_logger_first_tick

@brief Return the first available tick value from the server

@RESTHEADER{GET /_api/replication/logger-first-tick, Returns the first available tick value, handleCommandLoggerFirstTick}

@RESTDESCRIPTION
Returns the first available tick value that can be served from the server's
replication log. This method can be called by replication clients after to
determine if certain data (identified by a tick value) is still available
for replication.

The result is a JSON object containing the attribute *firstTick*. This
attribute contains the minimum tick value available in the server's
replication
log.

**Note**: this method is not supported on a Coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.

@EXAMPLES

Returning the first available tick


<div class="example-container" id="RestReplicationLoggerFirstTick_container">
<div id="RestReplicationLoggerFirstTick_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-first-tick</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">22</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;firstTick&quot;</span> : <span class="hljs-string">&quot;187090&quot;</span> 
}
</pre>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_logger_return_state.md -->
@startDocuBlock get_api_replication_logger_return_state

@brief returns the state of the replication logger

@RESTHEADER{GET /_api/replication/logger-state, Return replication logger state, handleCommandLoggerState}

@RESTDESCRIPTION
Returns the current state of the server's replication logger. The state will
include information about whether the logger is running and about the last
logged tick value. This tick value is important for incremental fetching of
data.

The body of the response contains a JSON object with the following
attributes:

- *state*: the current logger state as a JSON object with the following
  sub-attributes:

  - *running*: whether or not the logger is running

  - *lastLogTick*: the tick value of the latest tick the logger has logged.
    This value can be used for incremental fetching of log data.

  - *totalEvents*: total number of events logged since the server was started.
    The value is not reset between multiple stops and re-starts of the logger.

  - *time*: the current date and time on the logger server

- *server*: a JSON object with the following sub-attributes:

  - *version*: the logger server's version

  - *serverId*: the logger server's id

- *clients*: returns the last fetch status by replication clients connected to
  the logger. Each client is returned as a JSON object with the following attributes:

  - *syncerId*: id of the client syncer

  - *serverId*: server id of client

  - *lastServedTick*: last tick value served to this client via the *logger-follow* API

  - *time*: date and time when this client last called the *logger-follow* API

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the logger state could be determined successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the logger state could not be determined.

@EXAMPLES

Returns the state of the replication logger.


<div class="example-container" id="RestReplicationLoggerStateActive_container">
<div id="RestReplicationLoggerStateActive_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-state</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">224</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;state&quot;</span> : { 
    <span class="hljs-string">&quot;running&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;lastLogTick&quot;</span> : <span class="hljs-string">&quot;190265&quot;</span>, 
    <span class="hljs-string">&quot;lastUncommittedLogTick&quot;</span> : <span class="hljs-string">&quot;190265&quot;</span>, 
    <span class="hljs-string">&quot;totalEvents&quot;</span> : <span class="hljs-number">190265</span>, 
    <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:57Z&quot;</span> 
  }, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span>, 
    <span class="hljs-string">&quot;engine&quot;</span> : <span class="hljs-string">&quot;rocksdb&quot;</span> 
  }, 
  <span class="hljs-string">&quot;clients&quot;</span> : [ ] 
}
</pre>
<div id="RestReplicationLoggerStateActive_container_collapse" onclick="$('#RestReplicationLoggerStateActive_long').hide(); $('#RestReplicationLoggerStateActive_short').show(); window.location.hash='RestReplicationLoggerStateActive_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationLoggerStateActive_short" onclick="$('#RestReplicationLoggerStateActive_short').hide(); $('#RestReplicationLoggerStateActive_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-state</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">224</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_wal_access_range.md -->
@startDocuBlock get_api_wal_access_range

@brief returns the tick ranges available in the write-ahead-log

@RESTHEADER{GET /_api/wal/range, Return tick ranges available in the operations of WAL, handleCommandTickRange}

@RESTDESCRIPTION
Returns the currently available ranges of tick values for all WAL files.
The tick values can be used to determine if certain
data (identified by tick value) are still available for replication.

The body of the response contains a JSON object.
* *tickMin*: minimum tick available
* *tickMax*: maximum tick available
* *time*: the server time as string in format "YYYY-MM-DDTHH:MM:SSZ"
* *server*: An object with fields *version* and *serverId*

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the tick ranges could be determined successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the server operations state could not be determined.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.

@EXAMPLES

Returns the available tick ranges.


<div class="example-container" id="RestWalAccessTickRange_container">
<div id="RestWalAccessTickRange_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/range</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">127</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:27:01Z&quot;</span>, 
  <span class="hljs-string">&quot;tickMin&quot;</span> : <span class="hljs-string">&quot;187090&quot;</span>, 
  <span class="hljs-string">&quot;tickMax&quot;</span> : <span class="hljs-string">&quot;193189&quot;</span>, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
  } 
}
</pre>
<div id="RestWalAccessTickRange_container_collapse" onclick="$('#RestWalAccessTickRange_long').hide(); $('#RestWalAccessTickRange_short').show(); window.location.hash='RestWalAccessTickRange_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalAccessTickRange_short" onclick="$('#RestWalAccessTickRange_short').hide(); $('#RestWalAccessTickRange_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/wal/range</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">127</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_serverID.md -->
@startDocuBlock put_api_replication_serverID

@brief fetch this server's unique identifier

@RESTHEADER{GET /_api/replication/server-id, Return server id, handleCommandServerId}

@RESTDESCRIPTION
Returns the servers id. The id is also returned by other replication API
methods, and this method is an easy means of determining a server's id.

The body of the response is a JSON object with the attribute *serverId*. The
server id is returned as a string.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationServerId_container">
<div id="RestReplicationServerId_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/server-id</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">29</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
}
</pre>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_cluster_inventory.md -->
@startDocuBlock get_api_replication_cluster_inventory

@brief returs an overview of collections and indexes in a cluster

@RESTHEADER{GET /_api/replication/clusterInventory, Return cluster inventory of collections and indexes, handleCommandClusterInventory}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{includeSystem,boolean,optional}
Include system collections in the result. The default value is *true*.

@RESTDESCRIPTION
Returns the array of collections and indexes available on the cluster.

The response will be an array of JSON objects, one for each collection.
Each collection containscontains exactly two keys "parameters" and
"indexes". This
information comes from Plan/Collections/{DB-Name}/* in the Agency,
just that the *indexes* attribute there is relocated to adjust it to
the data format of arangodump.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_applier_stop.md -->
@startDocuBlock put_api_replication_applier_stop

@brief stop the replication

@RESTHEADER{PUT /_api/replication/applier-stop, Stop replication applier,handleCommandApplierStop}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{global,boolean,optional}
If set to *true*, stops the global replication applier for all
databases. If set to *false*, stops the replication applier in the
selected database.

@RESTDESCRIPTION
Stops the replication applier. This will return immediately if the
replication applier is not running.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierStop_container">
<div id="RestReplicationApplierStop_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-stop</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">686</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;state&quot;</span> : { 
    <span class="hljs-string">&quot;started&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span>, 
    <span class="hljs-string">&quot;running&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;phase&quot;</span> : <span class="hljs-string">&quot;inactive&quot;</span>, 
    <span class="hljs-string">&quot;lastAppliedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastProcessedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastAvailableContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;safeResumeTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;progress&quot;</span> : { 
      <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:55Z&quot;</span>, 
      <span class="hljs-string">&quot;message&quot;</span> : <span class="hljs-string">&quot;applier shut down&quot;</span>, 
      <span class="hljs-string">&quot;failedConnects&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;totalRequests&quot;</span> : <span class="hljs-number">6</span>, 
    <span class="hljs-string">&quot;totalFailedConnects&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;totalEvents&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalDocuments&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalRemovals&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalResyncs&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalOperationsExcluded&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;lastError&quot;</span> : { 
      <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:55Z&quot;</span> 
  }, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
  }, 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
</pre>
<div id="RestReplicationApplierStop_container_collapse" onclick="$('#RestReplicationApplierStop_long').hide(); $('#RestReplicationApplierStop_short').show(); window.location.hash='RestReplicationApplierStop_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStop_short" onclick="$('#RestReplicationApplierStop_short').hide(); $('#RestReplicationApplierStop_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-stop</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">686</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_applier_adjust.md -->
@startDocuBlock put_api_replication_applier_adjust

@brief set configuration values of an applier

@RESTHEADER{PUT /_api/replication/applier-config, Adjust configuration of replication applier,handleCommandApplierSetConfig}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{global,boolean,optional}
If set to *true*, adjusts the configuration of the global replication applier for all
databases. If set to *false*, adjusts the configuration of the replication applier in the
selected database.

@RESTBODYPARAM{endpoint,string,required,string}
the logger server to connect to (e.g. "tcp://192.168.173.13:8529"). The endpoint must be specified.

@RESTBODYPARAM{database,string,required,string}
the name of the database on the endpoint. If not specified, defaults to the current local database name.

@RESTBODYPARAM{username,string,optional,string}
an optional ArangoDB username to use when connecting to the endpoint.

@RESTBODYPARAM{password,string,required,string}
the password to use when connecting to the endpoint.

@RESTBODYPARAM{maxConnectRetries,integer,required,int64}
the maximum number of connection attempts the applier
will make in a row. If the applier cannot establish a connection to the
endpoint in this number of attempts, it will stop itself.

@RESTBODYPARAM{connectTimeout,integer,required,int64}
the timeout (in seconds) when attempting to connect to the
endpoint. This value is used for each connection attempt.

@RESTBODYPARAM{requestTimeout,integer,required,int64}
the timeout (in seconds) for individual requests to the endpoint.

@RESTBODYPARAM{chunkSize,integer,required,int64}
the requested maximum size for log transfer packets that
is used when the endpoint is contacted.

@RESTBODYPARAM{autoStart,boolean,required,}
whether or not to auto-start the replication applier on
(next and following) server starts

@RESTBODYPARAM{adaptivePolling,boolean,required,}
if set to *true*, the replication applier will fall
to sleep for an increasingly long period in case the logger server at the
endpoint does not have any more replication events to apply. Using
adaptive polling is thus useful to reduce the amount of work for both the
applier and the logger server for cases when there are only infrequent
changes. The downside is that when using adaptive polling, it might take
longer for the replication applier to detect that there are new replication
events on the logger server.<br>
Setting *adaptivePolling* to false will make the replication applier
contact the logger server in a constant interval, regardless of whether
the logger server provides updates frequently or seldom.

@RESTBODYPARAM{includeSystem,boolean,required,}
whether or not system collection operations will be applied

@RESTBODYPARAM{autoResync,boolean,optional,}
whether or not the slave should perform a full automatic resynchronization
with the master in case the master cannot serve log data requested by the
slave,
or when the replication is started and no tick value can be found.

@RESTBODYPARAM{autoResyncRetries,integer,optional,int64}
number of resynchronization retries that will be performed in a row when
automatic resynchronization is enabled and kicks in. Setting this to *0*
will
effectively disable *autoResync*. Setting it to some other value will limit
the number of retries that are performed. This helps preventing endless
retries
in case resynchronizations always fail.

@RESTBODYPARAM{initialSyncMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the initial synchronization will
wait for a response from the master when fetching initial collection data.
This wait time can be used to control after what time the initial
synchronization
will give up waiting for a response and fail. This value is relevant even
for continuous replication when *autoResync* is set to *true* because this
may re-start the initial synchronization when the master cannot provide
log data the slave requires.
This value will be ignored if set to *0*.

@RESTBODYPARAM{connectionRetryWaitTime,integer,optional,int64}
the time (in seconds) that the applier will intentionally idle before
it retries connecting to the master in case of connection problems.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMinWaitTime,integer,optional,int64}
the minimum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data. This wait time can be used to control the
frequency with which the replication applier sends HTTP log fetch requests
to the master in case there is no write activity on the master.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data and there have been previous log fetch attempts
that resulted in no more log data. This wait time can be used to control the
maximum frequency with which the replication applier sends HTTP log fetch
requests to the master in case there is no write activity on the master for
longer periods. This configuration value will only be used if the option
*adaptivePolling* is set to *true*.
This value will be ignored if set to *0*.

@RESTBODYPARAM{requireFromPresent,boolean,required,}
if set to *true*, then the replication applier will check
at start whether the start tick from which it starts or resumes replication is
still present on the master. If not, then there would be data loss. If
*requireFromPresent* is *true*, the replication applier will abort with an
appropriate error message. If set to *false*, then the replication applier will
still start, and ignore the data loss.

@RESTBODYPARAM{verbose,boolean,required,}
if set to *true*, then a log line will be emitted for all operations
performed by the replication applier. This should be used for debugging replication
problems only.

@RESTBODYPARAM{restrictType,string,required,string}
the configuration for *restrictCollections*; Has to be either *include* or *exclude*

@RESTBODYPARAM{restrictCollections,array,optional,string}
the array of collections to include or exclude,
based on the setting of *restrictType*

@RESTDESCRIPTION
Sets the configuration of the replication applier. The configuration can
only be changed while the applier is not running. The updated configuration
will be saved immediately but only become active with the next start of the
applier.

In case of success, the body of the response is a JSON object with the updated
configuration.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the configuration is incomplete or malformed, or if the
replication applier is currently running.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierSetConfig_container">
<div id="RestReplicationApplierSetConfig_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/replication/applier-config</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;replicationApplier&quot;</span>, 
  <span class="hljs-string">&quot;password&quot;</span> : <span class="hljs-string">&quot;applier1234@foxx&quot;</span>, 
  <span class="hljs-string">&quot;chunkSize&quot;</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">&quot;autoStart&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;adaptivePolling&quot;</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">612</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
  <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;replicationApplier&quot;</span>, 
  <span class="hljs-string">&quot;requestTimeout&quot;</span> : <span class="hljs-number">600</span>, 
  <span class="hljs-string">&quot;connectTimeout&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;ignoreErrors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;maxConnectRetries&quot;</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">&quot;lockTimeoutRetries&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;sslProtocol&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;chunkSize&quot;</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">&quot;skipCreateDrop&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;autoStart&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;adaptivePolling&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;autoResync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;autoResyncRetries&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;maxPacketSize&quot;</span> : <span class="hljs-number">536870912</span>, 
  <span class="hljs-string">&quot;includeSystem&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;includeFoxxQueues&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;requireFromPresent&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;verbose&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;incremental&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;restrictType&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;restrictCollections&quot;</span> : [ ], 
  <span class="hljs-string">&quot;connectionRetryWaitTime&quot;</span> : <span class="hljs-number">15</span>, 
  <span class="hljs-string">&quot;initialSyncMaxWaitTime&quot;</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">&quot;idleMinWaitTime&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;idleMaxWaitTime&quot;</span> : <span class="hljs-number">2.5</span> 
}
</pre>
<div id="RestReplicationApplierSetConfig_container_collapse" onclick="$('#RestReplicationApplierSetConfig_long').hide(); $('#RestReplicationApplierSetConfig_short').show(); window.location.hash='RestReplicationApplierSetConfig_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierSetConfig_short" onclick="$('#RestReplicationApplierSetConfig_short').hide(); $('#RestReplicationApplierSetConfig_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/replication/applier-config</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;replicationApplier&quot;</span>, 
  <span class="hljs-string">&quot;password&quot;</span> : <span class="hljs-string">&quot;applier1234@foxx&quot;</span>, 
  <span class="hljs-string">&quot;chunkSize&quot;</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">&quot;autoStart&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;adaptivePolling&quot;</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">612</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_applier_state.md -->
@startDocuBlock get_api_replication_applier_state

@brief output the current status of the replication

@RESTHEADER{GET /_api/replication/applier-state, State of the replication applier,handleCommandApplierGetState}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{global,boolean,optional}
If set to *true*, returns the state of the global replication applier for all
databases. If set to *false*, returns the state of the replication applier in the
selected database.

@RESTDESCRIPTION
Returns the state of the replication applier, regardless of whether the
applier is currently running or not.

The response is a JSON object with the following attributes:

- *state*: a JSON object with the following sub-attributes:

  - *running*: whether or not the applier is active and running

  - *lastAppliedContinuousTick*: the last tick value from the continuous
    replication log the applier has applied.

  - *lastProcessedContinuousTick*: the last tick value from the continuous
    replication log the applier has processed.

    Regularly, the last applied and last processed tick values should be
    identical. For transactional operations, the replication applier will first
    process incoming log events before applying them, so the processed tick
    value might be higher than the applied tick value. This will be the case
    until the applier encounters the *transaction commit* log event for the
    transaction.

  - *lastAvailableContinuousTick*: the last tick value the remote server can
    provide, for all databases.

  - *ticksBehind*: this attribute will be present only if the applier is currently
    running. It will provide the number of log ticks between what the applier
    has applied/seen and the last log tick value provided by the remote server.
    If this value is zero, then both servers are in sync. If this is non-zero,
    then the remote server has additional data that the applier has not yet
    fetched and processed, or the remote server may have more data that is not
    applicable to the applier.

    Client applications can use it to determine approximately how far the applier
    is behind the remote server, and can periodically check if the value is
    increasing (applier is falling behind) or decreasing (applier is catching up).

    Please note that as the remote server will only keep one last log tick value
    for all of its databases, but replication may be restricted to just certain
    databases on the applier, this value is more meaningful when the global applier
    is used.
    Additionally, the last log tick provided by the remote server may increase
    due to writes into system collections that are not replicated due to replication
    configuration. So the reported value may exaggerate the reality a bit for
    some scenarios.

  - *time*: the time on the applier server.

  - *totalRequests*: the total number of requests the applier has made to the
    endpoint.

  - *totalFailedConnects*: the total number of failed connection attempts the
    applier has made.

  - *totalEvents*: the total number of log events the applier has processed.

  - *totalOperationsExcluded*: the total number of log events excluded because
    of *restrictCollections*.

  - *progress*: a JSON object with details about the replication applier progress.
    It contains the following sub-attributes if there is progress to report:

    - *message*: a textual description of the progress

    - *time*: the date and time the progress was logged

    - *failedConnects*: the current number of failed connection attempts

  - *lastError*: a JSON object with details about the last error that happened on
    the applier. It contains the following sub-attributes if there was an error:

    - *errorNum*: a numerical error code

    - *errorMessage*: a textual error description

    - *time*: the date and time the error occurred

    In case no error has occurred, *lastError* will be empty.

- *server*: a JSON object with the following sub-attributes:

  - *version*: the applier server's version

  - *serverId*: the applier server's id

- *endpoint*: the endpoint the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

- *database*: the name of the database the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

Please note that all "tick" values returned do not have a specific unit. Tick
values are only meaningful when compared to each other. Higher tick values mean
"later in time" than lower tick values.
@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES

Fetching the state of an inactive applier:


<div class="example-container" id="RestReplicationApplierStateNotRunning_container">
<div id="RestReplicationApplierStateNotRunning_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-state</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">686</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;state&quot;</span> : { 
    <span class="hljs-string">&quot;started&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span>, 
    <span class="hljs-string">&quot;running&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;phase&quot;</span> : <span class="hljs-string">&quot;inactive&quot;</span>, 
    <span class="hljs-string">&quot;lastAppliedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastProcessedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastAvailableContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;safeResumeTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;progress&quot;</span> : { 
      <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span>, 
      <span class="hljs-string">&quot;message&quot;</span> : <span class="hljs-string">&quot;applier shut down&quot;</span>, 
      <span class="hljs-string">&quot;failedConnects&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    <span class="hljs-string">&quot;totalRequests&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;totalFailedConnects&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;totalEvents&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalDocuments&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalRemovals&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalResyncs&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalOperationsExcluded&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;lastError&quot;</span> : { 
      <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span> 
  }, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
  }, 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
</pre>
<div id="RestReplicationApplierStateNotRunning_container_collapse" onclick="$('#RestReplicationApplierStateNotRunning_long').hide(); $('#RestReplicationApplierStateNotRunning_short').show(); window.location.hash='RestReplicationApplierStateNotRunning_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStateNotRunning_short" onclick="$('#RestReplicationApplierStateNotRunning_short').hide(); $('#RestReplicationApplierStateNotRunning_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-state</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">686</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Fetching the state of an active applier:


<div class="example-container" id="RestReplicationApplierStateRunning_container">
<div id="RestReplicationApplierStateRunning_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-state</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">716</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;state&quot;</span> : { 
    <span class="hljs-string">&quot;started&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span>, 
    <span class="hljs-string">&quot;running&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;phase&quot;</span> : <span class="hljs-string">&quot;running&quot;</span>, 
    <span class="hljs-string">&quot;lastAppliedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastProcessedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastAvailableContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;safeResumeTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;ticksBehind&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;progress&quot;</span> : { 
      <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span>, 
      <span class="hljs-string">&quot;message&quot;</span> : <span class="hljs-string">&quot;fetching master state information&quot;</span>, 
      <span class="hljs-string">&quot;failedConnects&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;totalRequests&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;totalFailedConnects&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;totalEvents&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalDocuments&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalRemovals&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalResyncs&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalOperationsExcluded&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;lastError&quot;</span> : { 
      <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span> 
  }, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
  }, 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
</pre>
<div id="RestReplicationApplierStateRunning_container_collapse" onclick="$('#RestReplicationApplierStateRunning_long').hide(); $('#RestReplicationApplierStateRunning_short').show(); window.location.hash='RestReplicationApplierStateRunning_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStateRunning_short" onclick="$('#RestReplicationApplierStateRunning_short').hide(); $('#RestReplicationApplierStateRunning_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-state</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">716</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_logger_tick_ranges.md -->
@startDocuBlock get_api_replication_logger_tick_ranges

@brief returns the tick value ranges available in the logfiles

@RESTHEADER{GET /_api/replication/logger-tick-ranges, Return the tick ranges available in the WAL logfiles,handleCommandLoggerTickRanges}

@RESTDESCRIPTION
Returns the currently available ranges of tick values for all currently
available WAL logfiles. The tick values can be used to determine if certain
data (identified by tick value) are still available for replication.

The body of the response contains a JSON array. Each array member is an
object
that describes a single logfile. Each object has the following attributes:

* *datafile*: name of the logfile

* *status*: status of the datafile, in textual form (e.g. "sealed", "open")

* *tickMin*: minimum tick value contained in logfile

* *tickMax*: maximum tick value contained in logfile

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the tick ranges could be determined successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the logger state could not be determined.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.

@EXAMPLES

Returns the available tick ranges.


<div class="example-container" id="RestReplicationLoggerTickRanges_container">
<div id="RestReplicationLoggerTickRanges_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/logger-tick-ranges</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">270</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;datafile&quot;</span> : <span class="hljs-string">&quot;/archive/000076.log&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;collected&quot;</span>, 
    <span class="hljs-string">&quot;tickMin&quot;</span> : <span class="hljs-string">&quot;187090&quot;</span>, 
    <span class="hljs-string">&quot;tickMax&quot;</span> : <span class="hljs-string">&quot;187147&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;datafile&quot;</span> : <span class="hljs-string">&quot;/archive/000096.log&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;collected&quot;</span>, 
    <span class="hljs-string">&quot;tickMin&quot;</span> : <span class="hljs-string">&quot;187147&quot;</span>, 
    <span class="hljs-string">&quot;tickMax&quot;</span> : <span class="hljs-string">&quot;187185&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;datafile&quot;</span> : <span class="hljs-string">&quot;/000103.log&quot;</span>, 
    <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-string">&quot;open&quot;</span>, 
    <span class="hljs-string">&quot;tickMin&quot;</span> : <span class="hljs-string">&quot;187185&quot;</span>, 
    <span class="hljs-string">&quot;tickMax&quot;</span> : <span class="hljs-string">&quot;190265&quot;</span> 
  } 
]
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_applier_start.md -->
@startDocuBlock put_api_replication_applier_start

@brief start the replication applier

@RESTHEADER{PUT /_api/replication/applier-start, Start replication applier,handleCommandApplierStart}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{global,boolean,optional}
If set to *true*, starts the global replication applier for all
databases. If set to *false*, starts the replication applier in the
selected database.

@RESTQUERYPARAM{from,string,optional}
The remote *lastLogTick* value from which to start applying. If not specified,
the last saved tick from the previous applier run is used. If there is no
previous applier state saved, the applier will start at the beginning of the
logger server's log.

@RESTDESCRIPTION
Starts the replication applier. This will return immediately if the
replication applier is already running.

If the replication applier is not already running, the applier configuration
will be checked, and if it is complete, the applier will be started in a
background thread. This means that even if the applier will encounter any
errors while running, they will not be reported in the response to this
method.

To detect replication applier errors after the applier was started, use the
*/_api/replication/applier-state* API instead.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the replication applier is not fully configured or the
configuration is invalid.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierStart_container">
<div id="RestReplicationApplierStart_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-start</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">711</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;state&quot;</span> : { 
    <span class="hljs-string">&quot;started&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
    <span class="hljs-string">&quot;running&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;phase&quot;</span> : <span class="hljs-string">&quot;running&quot;</span>, 
    <span class="hljs-string">&quot;lastAppliedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastProcessedContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;lastAvailableContinuousTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;safeResumeTick&quot;</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">&quot;ticksBehind&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;progress&quot;</span> : { 
      <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:49Z&quot;</span>, 
      <span class="hljs-string">&quot;message&quot;</span> : <span class="hljs-string">&quot;applier initially created for database &#x27;_system&#x27;&quot;</span>, 
      <span class="hljs-string">&quot;failedConnects&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;totalRequests&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalFailedConnects&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalEvents&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalDocuments&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalRemovals&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalResyncs&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalOperationsExcluded&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageApplyTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;totalFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;averageFetchTime&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;lastError&quot;</span> : { 
      <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:54Z&quot;</span> 
  }, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;serverId&quot;</span> : <span class="hljs-string">&quot;74057396967634&quot;</span> 
  }, 
  <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;tcp://127.0.0.1:8529&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
</pre>
<div id="RestReplicationApplierStart_container_collapse" onclick="$('#RestReplicationApplierStart_long').hide(); $('#RestReplicationApplierStart_short').show(); window.location.hash='RestReplicationApplierStart_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStart_short" onclick="$('#RestReplicationApplierStart_short').hide(); $('#RestReplicationApplierStart_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-start</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">711</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_applier.md -->
@startDocuBlock put_api_replication_applier

@brief fetch the current replication configuration

@RESTHEADER{GET /_api/replication/applier-config, Return configuration of replication applier, handleCommandApplierGetConfig}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{global,boolean,optional}
If set to *true*, returns the configuration of the global replication applier for all
databases. If set to *false*, returns the configuration of the replication applier in the
selected database.

@RESTDESCRIPTION
Returns the configuration of the replication applier.

The body of the response is a JSON object with the configuration. The
following attributes may be present in the configuration:

- *endpoint*: the logger server to connect to (e.g. "tcp://192.168.173.13:8529").

- *database*: the name of the database to connect to (e.g. "_system").

- *username*: an optional ArangoDB username to use when connecting to the endpoint.

- *password*: the password to use when connecting to the endpoint.

- *maxConnectRetries*: the maximum number of connection attempts the applier
  will make in a row. If the applier cannot establish a connection to the
  endpoint in this number of attempts, it will stop itself.

- *connectTimeout*: the timeout (in seconds) when attempting to connect to the
  endpoint. This value is used for each connection attempt.

- *requestTimeout*: the timeout (in seconds) for individual requests to the endpoint.

- *chunkSize*: the requested maximum size for log transfer packets that
  is used when the endpoint is contacted.

- *autoStart*: whether or not to auto-start the replication applier on
  (next and following) server starts

- *adaptivePolling*: whether or not the replication applier will use
  adaptive polling.

- *includeSystem*: whether or not system collection operations will be applied

- *autoResync*: whether or not the slave should perform a full automatic
  resynchronization with the master in case the master cannot serve log data
  requested by the slave, or when the replication is started and no tick
  value
  can be found.

- *autoResyncRetries*: number of resynchronization retries that will be performed
  in a row when automatic resynchronization is enabled and kicks in. Setting this
  to *0* will effectively disable *autoResync*. Setting it to some other value
  will limit the number of retries that are performed. This helps preventing endless
  retries in case resynchronizations always fail.

- *initialSyncMaxWaitTime*: the maximum wait time (in seconds) that the initial
  synchronization will wait for a response from the master when fetching initial
  collection data.
  This wait time can be used to control after what time the initial synchronization
  will give up waiting for a response and fail. This value is relevant even
  for continuous replication when *autoResync* is set to *true* because this
  may re-start the initial synchronization when the master cannot provide
  log data the slave requires.
  This value will be ignored if set to *0*.

- *connectionRetryWaitTime*: the time (in seconds) that the applier will
  intentionally idle before it retries connecting to the master in case of
  connection problems.
  This value will be ignored if set to *0*.

- *idleMinWaitTime*: the minimum wait time (in seconds) that the applier will
  intentionally idle before fetching more log data from the master in case
  the master has already sent all its log data. This wait time can be used
  to control the frequency with which the replication applier sends HTTP log
  fetch requests to the master in case there is no write activity on the master.
  This value will be ignored if set to *0*.

- *idleMaxWaitTime*: the maximum wait time (in seconds) that the applier will
  intentionally idle before fetching more log data from the master in case the
  master has already sent all its log data and there have been previous log
  fetch attempts that resulted in no more log data. This wait time can be used
  to control the maximum frequency with which the replication applier sends HTTP
  log fetch requests to the master in case there is no write activity on the
  master for longer periods. This configuration value will only be used if the
  option *adaptivePolling* is set to *true*.
  This value will be ignored if set to *0*.

- *requireFromPresent*: if set to *true*, then the replication applier will check
  at start whether the start tick from which it starts or resumes replication is
  still present on the master. If not, then there would be data loss. If
  *requireFromPresent* is *true*, the replication applier will abort with an
  appropriate error message. If set to *false*, then the replication applier will
  still start, and ignore the data loss.

- *verbose*: if set to *true*, then a log line will be emitted for all operations
  performed by the replication applier. This should be used for debugging
  replication
  problems only.

- *restrictType*: the configuration for *restrictCollections*

- *restrictCollections*: the optional array of collections to include or exclude,
  based on the setting of *restrictType*

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierGetConfig_container">
<div id="RestReplicationApplierGetConfig_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-config</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">519</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;requestTimeout&quot;</span> : <span class="hljs-number">600</span>, 
  <span class="hljs-string">&quot;connectTimeout&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;ignoreErrors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;maxConnectRetries&quot;</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">&quot;lockTimeoutRetries&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;sslProtocol&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;chunkSize&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skipCreateDrop&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;autoStart&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;adaptivePolling&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;autoResync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;autoResyncRetries&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;maxPacketSize&quot;</span> : <span class="hljs-number">536870912</span>, 
  <span class="hljs-string">&quot;includeSystem&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;includeFoxxQueues&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;requireFromPresent&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;verbose&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;incremental&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;restrictType&quot;</span> : <span class="hljs-string">&quot;&quot;</span>, 
  <span class="hljs-string">&quot;restrictCollections&quot;</span> : [ ], 
  <span class="hljs-string">&quot;connectionRetryWaitTime&quot;</span> : <span class="hljs-number">15</span>, 
  <span class="hljs-string">&quot;initialSyncMaxWaitTime&quot;</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">&quot;idleMinWaitTime&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;idleMaxWaitTime&quot;</span> : <span class="hljs-number">2.5</span> 
}
</pre>
<div id="RestReplicationApplierGetConfig_container_collapse" onclick="$('#RestReplicationApplierGetConfig_long').hide(); $('#RestReplicationApplierGetConfig_short').show(); window.location.hash='RestReplicationApplierGetConfig_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierGetConfig_short" onclick="$('#RestReplicationApplierGetConfig_short').hide(); $('#RestReplicationApplierGetConfig_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/replication/applier-config</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">519</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_inventory.md -->
@startDocuBlock put_api_replication_inventory

@brief Returns an overview of collections and their indexes

@RESTHEADER{GET /_api/replication/inventory, Return inventory of collections and indexes, handleCommandInventory}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{includeSystem,boolean,optional}
Include system collections in the result. The default value is *true*.

@RESTQUERYPARAM{global,boolean,optional}
Include all databases in the response. Only works on `_system` The default value is *false*.

@RESTQUERYPARAM{batchId,number,required}
A valid batchId is required for this API call

@RESTDESCRIPTION
Returns the array of collections and indexes available on the server. This
array can be used by replication clients to initiate an initial sync with the
server.

The response will contain a JSON object with the *collection* and *state* and
*tick* attributes.

*collections* is an array of collections with the following sub-attributes:

- *parameters*: the collection properties

- *indexes*: an array of the indexes of a the collection. Primary indexes and edge indexes
   are not included in this array.

The *state* attribute contains the current state of the replication logger. It
contains the following sub-attributes:

- *running*: whether or not the replication logger is currently active. Note:
  since ArangoDB 2.2, the value will always be *true*

- *lastLogTick*: the value of the last tick the replication logger has written

- *time*: the current time on the server

Replication clients should note the *lastLogTick* value returned. They can then
fetch collections' data using the dump method up to the value of lastLogTick, and
query the continuous replication log for log events after this tick value.

To create a full copy of the collections on the server, a replication client
can execute these steps:

- call the */inventory* API method. This returns the *lastLogTick* value and the
  array of collections and indexes from the server.

- for each collection returned by */inventory*, create the collection locally and
  call */dump* to stream the collection data to the client, up to the value of
  *lastLogTick*.
  After that, the client can create the indexes on the collections as they were
  reported by */inventory*.

If the clients wants to continuously stream replication log events from the logger
server, the following additional steps need to be carried out:

- the client should call */logger-follow* initially to fetch the first batch of
  replication events that were logged after the client's call to */inventory*.

  The call to */logger-follow* should use a *from* parameter with the value of the
  *lastLogTick* as reported by */inventory*. The call to */logger-follow* will return the
  *x-arango-replication-lastincluded* which will contain the last tick value included
  in the response.

- the client can then continuously call */logger-follow* to incrementally fetch new
  replication events that occurred after the last transfer.

  Calls should use a *from* parameter with the value of the *x-arango-replication-lastincluded*
  header of the previous response. If there are no more replication events, the
  response will be empty and clients can go to sleep for a while and try again
  later.

**Note**: on a Coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DB-Server.
The very same request is forwarded synchronously to that DB-Server.
It is an error if this attribute is not bound in the Coordinator case.

**Note**: Using the `global` parameter the top-level object contains a key `databases`
under which each key represents a database name, and the value conforms to the above description.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

<!-- TODO How to find out the RocksDB batchId?
 EXAMPLES

 EXAMPLE_ARANGOSH_RUN{RestReplicationInventory_mmfiles}
    var url = "/_api/replication/inventory";
    var response = logCurlRequest('GET', url);

    assert(response.code === 200);

    logJsonResponse(response);
 END_EXAMPLE_ARANGOSH_RUN

With some additional indexes:

 EXAMPLE_ARANGOSH_RUN{RestReplicationInventoryIndexes_mmfiles}
    db._drop("IndexedCollection1");
    var c1 = db._create("IndexedCollection1");
    c1.ensureHashIndex("name");
    c1.ensureUniqueSkiplist("a", "b");

    db._drop("IndexedCollection2");
    var c2 = db._create("IndexedCollection2");
    c2.ensureFulltextIndex("text", 10);
    c2.ensureSkiplist("a");

    var url = "/_api/replication/inventory";
    var response = logCurlRequest('GET', url);

    assert(response.code === 200);
    logJsonResponse(response);

    db._flushCache();
    db._drop("IndexedCollection1");
    db._drop("IndexedCollection2");
 END_EXAMPLE_ARANGOSH_RUN
-->
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/put_api_replication_synchronize.md -->
@startDocuBlock put_api_replication_synchronize

@brief start a replication

@RESTHEADER{PUT /_api/replication/sync, Synchronize data from a remote endpoint, handleCommandSync}

@RESTBODYPARAM{endpoint,string,required,string}
the master endpoint to connect to (e.g. "tcp://192.168.173.13:8529").

@RESTBODYPARAM{database,string,optional,string}
the database name on the master (if not specified, defaults to the
name of the local current database).

@RESTBODYPARAM{username,string,optional,string}
an optional ArangoDB username to use when connecting to the endpoint.

@RESTBODYPARAM{password,string,required,string}
the password to use when connecting to the endpoint.

@RESTBODYPARAM{includeSystem,boolean,optional,}
whether or not system collection operations will be applied

@RESTBODYPARAM{incremental,boolean,optional,}
if set to *true*, then an incremental synchronization method will be used
for synchronizing data in collections. This method is useful when
collections already exist locally, and only the remaining differences need
to be transferred from the remote endpoint. In this case, the incremental
synchronization can be faster than a full synchronization.
The default value is *false*, meaning that the complete data from the remote
collection will be transferred.

@RESTBODYPARAM{restrictType,string,optional,string}
an optional string value for collection filtering. When
specified, the allowed values are *include* or *exclude*.

@RESTBODYPARAM{restrictCollections,array,optional,string}
an optional array of collections for use with
*restrictType*. If *restrictType* is *include*, only the specified collections
will be sychronised. If *restrictType* is *exclude*, all but the specified
collections will be synchronized.

@RESTBODYPARAM{initialSyncMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the initial synchronization will
wait for a response from the master when fetching initial collection data.
This wait time can be used to control after what time the initial synchronization
will give up waiting for a response and fail.
This value will be ignored if set to *0*.

@RESTDESCRIPTION
Starts a full data synchronization from a remote endpoint into the local
ArangoDB database.

The *sync* method can be used by replication clients to connect an ArangoDB database
to a remote endpoint, fetch the remote list of collections and indexes, and collection
data. It will thus create a local backup of the state of data at the remote ArangoDB
database. *sync* works on a per-database level.

*sync* will first fetch the list of collections and indexes from the remote endpoint.
It does so by calling the *inventory* API of the remote database. It will then purge
data in the local ArangoDB database, and after start will transfer collection data
from the remote database to the local ArangoDB database. It will extract data from the
remote database by calling the remote database's *dump* API until all data are fetched.

In case of success, the body of the response is a JSON object with the following
attributes:

- *collections*: an array of collections that were transferred from the endpoint

- *lastLogTick*: the last log tick on the endpoint at the time the transfer
  was started. Use this value as the *from* value when starting the continuous
  synchronization later.

WARNING: calling this method will sychronize data from the collections found
on the remote endpoint to the local ArangoDB database. All data in the local
collections will be purged and replaced with data from the endpoint.

Use with caution!

**Note**: this method is not supported on a Coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the configuration is incomplete or malformed.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred during synchronization.

@RESTRETURNCODE{501}
is returned when this operation is called on a Coordinator in a cluster.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/post_batch_replication.md -->
@startDocuBlock post_batch_replication

@brief handle a dump batch command

@RESTHEADER{POST /_api/replication/batch, Create new dump batch, handleCommandBatch:Create}

**Note**: These calls are uninteresting to users.

@RESTBODYPARAM{ttl,integer,required,int64}
the time-to-live for the new batch (in seconds)<br>
A JSON object with the batch configuration.

@RESTDESCRIPTION
Creates a new dump batch and returns the batch's id.

The response is a JSON object with the following attributes:

- *id*: the id of the batch

**Note**: on a Coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DB-Server.
The very same request is forwarded synchronously to that DB-Server.
It is an error if this attribute is not bound in the Coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the batch was created successfully.

@RESTRETURNCODE{400}
is returned if the ttl value is invalid or if *DBserver* attribute
is not specified or illegal on a Coordinator.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/get_api_replication_dump.md -->
@startDocuBlock get_api_replication_dump

@brief returns the whole content of one collection

@RESTHEADER{GET /_api/replication/dump, Return data of a collection,handleCommandDump}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The name or id of the collection to dump.

@RESTQUERYPARAM{chunkSize,number,optional}
Approximate maximum size of the returned result.

@RESTQUERYPARAM{batchId,number,required}
The id of the snapshot to use

@RESTDESCRIPTION
Returns the data from the collection for the requested range.


The *chunkSize* query parameter can be used to control the size of the result.
It must be specified in bytes. The *chunkSize* value will only be honored
approximately. Otherwise a too low *chunkSize* value could cause the server
to not be able to put just one entry into the result and return it.
Therefore, the *chunkSize* value will only be consulted after an entry has
been written into the result. If the result size is then bigger than
*chunkSize*, the server will respond with as many entries as there are
in the response already. If the result size is still smaller than *chunkSize*,
the server will try to return more data if there's more data left to return.

If *chunkSize* is not specified, some server-side default value will be used.

The *Content-Type* of the result is *application/x-arango-dump*. This is an
easy-to-process format, with all entries going onto separate lines in the
response body.

Each line itself is a JSON object, with at least the following attributes:

- *tick*: the operation's tick attribute

- *key*: the key of the document/edge or the key used in the deletion operation

- *rev*: the revision id of the document/edge or the deletion operation

- *data*: the actual document/edge data for types 2300 and 2301. The full
  document/edge data will be returned even for updates.

- *type*: the type of entry. Possible values for *type* are:

  - 2300: document insertion/update

  - 2301: edge insertion/update

  - 2302: document/edge deletion

**Note**: there will be no distinction between inserts and updates when calling this method.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully and data was returned. The header
`x-arango-replication-lastincluded` is set to the tick of the last document returned.

@RESTRETURNCODE{204}
is returned if the request was executed successfully, but there was no content available.
The header `x-arango-replication-lastincluded` is `0` in this case.

@RESTRETURNCODE{404}
is returned when the collection could not be found.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

<!-- TODO: How to know the RocksDB batchId?
 EXAMPLES

Empty collection:

 EXAMPLE_ARANGOSH_RUN{RestReplicationDumpEmpty_mmfiles}
    db._drop("testCollection");
    var c = db._create("testCollection");
    var url = "/_api/replication/dump?collection=" + c.name();
    var response = logCurlRequest('GET', url);

    assert(response.code === 204);
    logRawResponse(response);

    c.drop();
 END_EXAMPLE_ARANGOSH_RUN

Non-empty collection *(One JSON document per line)*:

 EXAMPLE_ARANGOSH_RUN{RestReplicationDump_mmfiles}
    db._drop("testCollection");
    var c = db._create("testCollection");
    c.save({ "test" : true, "a" : "abc", "_key" : "abcdef" });
    c.save({ "b" : 1, "c" : false, "_key" : "123456" });
    c.update("123456", { "d" : "additional value" });
    c.save({ "_key": "foobar" });
    c.remove("foobar");
    c.remove("abcdef");

    var url = "/_api/replication/dump?collection=" + c.name();
    var response = logCurlRequest('GET', url);

    assert(response.code === 200);
    logJsonLResponse(response);

    c.drop();
 END_EXAMPLE_ARANGOSH_RUN
-->
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/delete_batch_replication.md -->
@startDocuBlock delete_batch_replication

@brief handle a dump batch command

@RESTHEADER{DELETE /_api/replication/batch/{id}, Deletes an existing dump batch,handleCommandBatch:DELETE}

**Note**: These calls are uninteresting to users.

@RESTURLPARAMETERS

@RESTURLPARAM{id,string,required}
The id of the batch.

@RESTDESCRIPTION
Deletes the existing dump batch, allowing compaction and cleanup to resume.

**Note**: on a Coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DB-Server.
The very same request is forwarded synchronously to that DB-Server.
It is an error if this attribute is not bound in the Coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{204}
is returned if the batch was deleted successfully.

@RESTRETURNCODE{400}
is returned if the batch was not found.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/get_api_index.md -->
@startDocuBlock get_api_index

@brief returns all indexes of a collection

@RESTHEADER{GET /_api/index, Read all indexes of a collection, getIndexes}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTDESCRIPTION
Returns an object with an attribute *indexes* containing an array of all
index descriptions for the given collection. The same information is also
available in the *identifiers* as an object with the index handles as
keys.

@RESTRETURNCODES

@RESTRETURNCODE{200}
returns a JSON object containing a list of indexes on that collection.

@EXAMPLES

Return information about all indexes


<div class="example-container" id="RestIndexAllIndexes_container">
<div id="RestIndexAllIndexes_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/index?collection=products</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1007</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;indexes&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;fields&quot;</span> : [ 
        <span class="hljs-string">&quot;_key&quot;</span> 
      ], 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/0&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
      <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
      <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
    }, 
    { 
      <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;fields&quot;</span> : [ 
        <span class="hljs-string">&quot;name&quot;</span> 
      ], 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72119&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230399078400&quot;</span>, 
      <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
      <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
    }, 
    { 
      <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;fields&quot;</span> : [ 
        <span class="hljs-string">&quot;price&quot;</span> 
      ], 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72123&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230401175552&quot;</span>, 
      <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
      <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ], 
  <span class="hljs-string">&quot;identifiers&quot;</span> : { 
    <span class="hljs-string">&quot;products/0&quot;</span> : { 
      <span class="hljs-string">&quot;fields&quot;</span> : [ 
        <span class="hljs-string">&quot;_key&quot;</span> 
      ], 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/0&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
      <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
      <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span> 
    }, 
    <span class="hljs-string">&quot;products/72119&quot;</span> : { 
      <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;fields&quot;</span> : [ 
        <span class="hljs-string">&quot;name&quot;</span> 
      ], 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72119&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230399078400&quot;</span>, 
      <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
      <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
    }, 
    <span class="hljs-string">&quot;products/72123&quot;</span> : { 
      <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;fields&quot;</span> : [ 
        <span class="hljs-string">&quot;price&quot;</span> 
      ], 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72123&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230401175552&quot;</span>, 
      <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
      <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  } 
}
</pre>
<div id="RestIndexAllIndexes_container_collapse" onclick="$('#RestIndexAllIndexes_long').hide(); $('#RestIndexAllIndexes_short').show(); window.location.hash='RestIndexAllIndexes_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexAllIndexes_short" onclick="$('#RestIndexAllIndexes_short').hide(); $('#RestIndexAllIndexes_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/index?collection=products</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1007</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_geo.md -->
@startDocuBlock post_api_index_geo

@brief creates a geo index

@RESTHEADER{POST /_api/index#geo, Create geo-spatial index, createIndex#geo}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"geo"*.

@RESTBODYPARAM{fields,array,required,string}
An array with one or two attribute paths.<br>
If it is an array with one attribute path *location*, then a geo-spatial
index on all documents is created using *location* as path to the
coordinates. The value of the attribute must be an array with at least two
double values. The array must contain the latitude (first value) and the
longitude (second value). All documents, which do not have the attribute
path or with value that are not suitable, are ignored.<br>
If it is an array with two attribute paths *latitude* and *longitude*,
then a geo-spatial index on all documents is created using *latitude*
and *longitude* as paths the latitude and the longitude. The value of
the attribute *latitude* and of the attribute *longitude* must a
double. All documents, which do not have the attribute paths or which
values are not suitable, are ignored.

@RESTBODYPARAM{geoJson,string,required,string}
If a geo-spatial index on a *location* is constructed
and *geoJson* is *true*, then the order within the array is longitude
followed by latitude. This corresponds to the format described in
http://geojson.org/geojson-spec.html#positions

@RESTDESCRIPTION
Creates a geo-spatial index in the collection *collection-name*, if
it does not already exist. Expects an object containing the index details.

Geo indexes are always sparse, meaning that documents that do not contain
the index attributes or have non-numeric values in the index attributes
will not be indexed.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a geo index with a location attribute


<div class="example-container" id="RestIndexCreateGeoLocation_container">
<div id="RestIndexCreateGeoLocation_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">241</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72146&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230430535680&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateGeoLocation_container_collapse" onclick="$('#RestIndexCreateGeoLocation_long').hide(); $('#RestIndexCreateGeoLocation_short').show(); window.location.hash='RestIndexCreateGeoLocation_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateGeoLocation_short" onclick="$('#RestIndexCreateGeoLocation_short').hide(); $('#RestIndexCreateGeoLocation_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">241</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a geo index with latitude and longitude attributes


<div class="example-container" id="RestIndexCreateGeoLatitudeLongitude_container">
<div id="RestIndexCreateGeoLatitudeLongitude_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;e&quot;</span>, 
    <span class="hljs-string">&quot;f&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">245</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;bestIndexedLevel&quot;</span> : <span class="hljs-number">17</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;e&quot;</span>, 
    <span class="hljs-string">&quot;f&quot;</span> 
  ], 
  <span class="hljs-string">&quot;geoJson&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72135&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;maxNumCoverCells&quot;</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230417952768&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;worstIndexedLevel&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateGeoLatitudeLongitude_container_collapse" onclick="$('#RestIndexCreateGeoLatitudeLongitude_long').hide(); $('#RestIndexCreateGeoLatitudeLongitude_short').show(); window.location.hash='RestIndexCreateGeoLatitudeLongitude_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateGeoLatitudeLongitude_short" onclick="$('#RestIndexCreateGeoLatitudeLongitude_short').hide(); $('#RestIndexCreateGeoLatitudeLongitude_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;geo&quot;</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;e&quot;</span>, 
    <span class="hljs-string">&quot;f&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">245</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_ttl.md -->
@startDocuBlock post_api_index_ttl

@brief creates a TTL (time-to-live) index

@RESTHEADER{POST /_api/index#ttl, Create TTL index, createIndex:ttl}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"ttl"*.

@RESTBODYPARAM{fields,array,required,string}
an array with exactly one attribute path.

@RESTBODYPARAM{expireAfter,number,required,}
The time interval (in seconds) from the point in time stored in the `fields`
attribute after which the documents count as expired. Can be set to `0` to let
documents expire as soon as the server time passes the point in time stored in
the document attribute, or to a higher number to delay the expiration.

@RESTDESCRIPTION
Creates a TTL index for the collection *collection-name* if it
does not already exist. The call expects an object containing the index
details.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains another TTL index, then an *HTTP 400* is
returned, as there can be at most one TTL index per collection.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a TTL index


<div class="example-container" id="RestIndexCreateNewTtlIndex_container">
<div id="RestIndexCreateNewTtlIndex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=sessions</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ttl&quot;</span>, 
  <span class="hljs-string">&quot;expireAfter&quot;</span> : <span class="hljs-number">3600</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;createdAt&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">211</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;expireAfter&quot;</span> : <span class="hljs-number">3600</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;createdAt&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;sessions/72201&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230494498816&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ttl&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewTtlIndex_container_collapse" onclick="$('#RestIndexCreateNewTtlIndex_long').hide(); $('#RestIndexCreateNewTtlIndex_short').show(); window.location.hash='RestIndexCreateNewTtlIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewTtlIndex_short" onclick="$('#RestIndexCreateNewTtlIndex_short').hide(); $('#RestIndexCreateNewTtlIndex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=sessions</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ttl&quot;</span>, 
  <span class="hljs-string">&quot;expireAfter&quot;</span> : <span class="hljs-number">3600</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;createdAt&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">211</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_persistent.md -->
@startDocuBlock post_api_index_persistent

@brief creates a persistent index

@RESTHEADER{POST /_api/index#persistent, Create a persistent index, createIndex:persistent}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"persistent"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute paths.

@RESTBODYPARAM{unique,boolean,required,}
if *true*, then create a unique index.

@RESTBODYPARAM{sparse,boolean,required,}
if *true*, then create a sparse index.

@RESTDESCRIPTION

Creates a persistent index for the collection *collection-name*, if
it does not already exist. The call expects an object containing the index
details.

In a sparse index all documents will be excluded from the index that do not
contain at least one of the specified index attributes (i.e. *fields*) or that
have a value of *null* in any of the specified index attributes. Such documents
will not be indexed, and not be taken into account for uniqueness checks if
the *unique* flag is set.

In a non-sparse index, these documents will be indexed (for non-present
indexed attributes, a value of *null* will be used) and will be taken into
account for uniqueness checks if the *unique* flag is set.

**Note**: unique indexes on non-shard keys are not supported in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is
returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains documents and you try to create a unique
persistent index in such a way that there are documents violating the
uniqueness, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a persistent index


<div class="example-container" id="RestIndexCreateNewPersistent_container">
<div id="RestIndexCreateNewPersistent_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">215</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72179&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230469332992&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewPersistent_container_collapse" onclick="$('#RestIndexCreateNewPersistent_long').hide(); $('#RestIndexCreateNewPersistent_short').show(); window.location.hash='RestIndexCreateNewPersistent_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewPersistent_short" onclick="$('#RestIndexCreateNewPersistent_short').hide(); $('#RestIndexCreateNewPersistent_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">215</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a sparse persistent index


<div class="example-container" id="RestIndexCreateSparsePersistent_container">
<div id="RestIndexCreateSparsePersistent_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">210</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72234&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230534344704&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateSparsePersistent_container_collapse" onclick="$('#RestIndexCreateSparsePersistent_long').hide(); $('#RestIndexCreateSparsePersistent_short').show(); window.location.hash='RestIndexCreateSparsePersistent_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateSparsePersistent_short" onclick="$('#RestIndexCreateSparsePersistent_short').hide(); $('#RestIndexCreateSparsePersistent_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">210</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_hash.md -->
@startDocuBlock post_api_index_hash

@brief creates a hash index

@RESTHEADER{POST /_api/index#hash, Create hash index, createIndex:hash}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"hash"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute paths.

@RESTBODYPARAM{unique,boolean,required,}
if *true*, then create a unique index.

@RESTBODYPARAM{sparse,boolean,required,}
if *true*, then create a sparse index.

@RESTBODYPARAM{deduplicate,boolean,optional,}
if *false*, the deduplication of array values is turned off.

@RESTDESCRIPTION
Creates a hash index for the collection *collection-name* if it
does not already exist. The call expects an object containing the index
details.

In a sparse index all documents will be excluded from the index that do not
contain at least one of the specified index attributes (i.e. *fields*) or that
have a value of *null* in any of the specified index attributes. Such documents
will not be indexed, and not be taken into account for uniqueness checks if
the *unique* flag is set.

In a non-sparse index, these documents will be indexed (for non-present
indexed attributes, a value of *null* will be used) and will be taken into
account for uniqueness checks if the *unique* flag is set.

**Note**: unique indexes on non-shard keys are not supported in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains documents and you try to create a unique
hash index in such a way that there are documents violating the uniqueness,
then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating an unique constraint


<div class="example-container" id="RestIndexCreateNewUniqueConstraint_container">
<div id="RestIndexCreateNewUniqueConstraint_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">208</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72212&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230509178880&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewUniqueConstraint_container_collapse" onclick="$('#RestIndexCreateNewUniqueConstraint_long').hide(); $('#RestIndexCreateNewUniqueConstraint_short').show(); window.location.hash='RestIndexCreateNewUniqueConstraint_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewUniqueConstraint_short" onclick="$('#RestIndexCreateNewUniqueConstraint_short').hide(); $('#RestIndexCreateNewUniqueConstraint_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">208</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a non-unique hash index


<div class="example-container" id="RestIndexCreateNewHashIndex_container">
<div id="RestIndexCreateNewHashIndex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">209</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72168&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230455701504&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewHashIndex_container_collapse" onclick="$('#RestIndexCreateNewHashIndex_long').hide(); $('#RestIndexCreateNewHashIndex_short').show(); window.location.hash='RestIndexCreateNewHashIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewHashIndex_short" onclick="$('#RestIndexCreateNewHashIndex_short').hide(); $('#RestIndexCreateNewHashIndex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">209</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a sparse index


<div class="example-container" id="RestIndexCreateSparseHashIndex_container">
<div id="RestIndexCreateSparseHashIndex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">204</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72223&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230521761792&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateSparseHashIndex_container_collapse" onclick="$('#RestIndexCreateSparseHashIndex_long').hide(); $('#RestIndexCreateSparseHashIndex_short').show(); window.location.hash='RestIndexCreateSparseHashIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateSparseHashIndex_short" onclick="$('#RestIndexCreateSparseHashIndex_short').hide(); $('#RestIndexCreateSparseHashIndex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">204</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_delete.md -->
@startDocuBlock post_api_index_delete

@brief deletes an index

@RESTHEADER{DELETE /_api/index/{index-id}, Delete index, dropIndex}

@RESTURLPARAMETERS

@RESTURLPARAM{index-id,string,required}
The index id.

@RESTDESCRIPTION
Deletes an index with *index-id*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index could be deleted, then an *HTTP 200* is
returned.

@RESTRETURNCODE{404}
If the *index-id* is unknown, then an *HTTP 404* is returned.
@EXAMPLES


<div class="example-container" id="RestIndexDeleteUniqueSkiplist_container">
<div id="RestIndexDeleteUniqueSkiplist_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/index/products/72256</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">48</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72256&quot;</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestIndexDeleteUniqueSkiplist_container_collapse" onclick="$('#RestIndexDeleteUniqueSkiplist_long').hide(); $('#RestIndexDeleteUniqueSkiplist_short').show(); window.location.hash='RestIndexDeleteUniqueSkiplist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexDeleteUniqueSkiplist_short" onclick="$('#RestIndexDeleteUniqueSkiplist_short').hide(); $('#RestIndexDeleteUniqueSkiplist_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/index/products/72256</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">48</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_fulltext.md -->
@startDocuBlock post_api_index_fulltext

@brief creates a fulltext index

@RESTHEADER{POST /_api/index#fulltext, Create fulltext index, createIndex#fulltext}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"fulltext"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute names. Currently, the array is limited
to exactly one attribute.

@RESTBODYPARAM{minLength,integer,required,int64}
Minimum character length of words to index. Will default
to a server-defined value if unspecified. It is thus recommended to set
this value explicitly when creating the index.

@RESTDESCRIPTION
Creates a fulltext index for the collection *collection-name*, if
it does not already exist. The call expects an object containing the index
details.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is
returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a fulltext index


<div class="example-container" id="RestIndexCreateNewFulltext_container">
<div id="RestIndexCreateNewFulltext_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;fulltext&quot;</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;text&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">182</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;text&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72157&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;minLength&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230443118592&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;fulltext&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewFulltext_container_collapse" onclick="$('#RestIndexCreateNewFulltext_long').hide(); $('#RestIndexCreateNewFulltext_short').show(); window.location.hash='RestIndexCreateNewFulltext_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewFulltext_short" onclick="$('#RestIndexCreateNewFulltext_short').hide(); $('#RestIndexCreateNewFulltext_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;fulltext&quot;</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;text&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">182</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index_skiplist.md -->
@startDocuBlock post_api_index_skiplist

@brief creates a skip-list

@RESTHEADER{POST /_api/index#skiplist, Create skip list, createIndex:skiplist}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"skiplist"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute paths.

@RESTBODYPARAM{unique,boolean,required,}
if *true*, then create a unique index.

@RESTBODYPARAM{sparse,boolean,required,}
if *true*, then create a sparse index.

@RESTBODYPARAM{deduplicate,boolean,optional,}
if *false*, the deduplication of array values is turned off.

@RESTDESCRIPTION

Creates a skip-list index for the collection *collection-name*, if
it does not already exist. The call expects an object containing the index
details.

In a sparse index all documents will be excluded from the index that do not
contain at least one of the specified index attributes (i.e. *fields*) or that
have a value of *null* in any of the specified index attributes. Such documents
will not be indexed, and not be taken into account for uniqueness checks if
the *unique* flag is set.

In a non-sparse index, these documents will be indexed (for non-present
indexed attributes, a value of *null* will be used) and will be taken into
account for uniqueness checks if the *unique* flag is set.

**Note**: unique indexes on non-shard keys are not supported in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is
returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains documents and you try to create a unique
skip-list index in such a way that there are documents violating the
uniqueness, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a skiplist index


<div class="example-container" id="RestIndexCreateNewSkiplist_container">
<div id="RestIndexCreateNewSkiplist_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">213</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72190&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230481915904&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewSkiplist_container_collapse" onclick="$('#RestIndexCreateNewSkiplist_long').hide(); $('#RestIndexCreateNewSkiplist_short').show(); window.location.hash='RestIndexCreateNewSkiplist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewSkiplist_short" onclick="$('#RestIndexCreateNewSkiplist_short').hide(); $('#RestIndexCreateNewSkiplist_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">213</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a sparse skiplist index


<div class="example-container" id="RestIndexCreateSparseSkiplist_container">
<div id="RestIndexCreateSparseSkiplist_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">208</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/72245&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230547976192&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateSparseSkiplist_container_collapse" onclick="$('#RestIndexCreateSparseSkiplist_long').hide(); $('#RestIndexCreateSparseSkiplist_short').show(); window.location.hash='RestIndexCreateSparseSkiplist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateSparseSkiplist_short" onclick="$('#RestIndexCreateSparseSkiplist_short').hide(); $('#RestIndexCreateSparseSkiplist_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/index?collection=products</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">208</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/get_api_reads_index.md -->
@startDocuBlock get_api_reads_index

@brief returns an index

@RESTHEADER{GET /_api/index/{index-id},Read index, getIndexes:handle}

@RESTURLPARAMETERS

@RESTURLPARAM{index-id,string,required}
The index identifier.

@RESTDESCRIPTION
The result is an object describing the index. It has at least the following
attributes:

- *id*: the identifier of the index

- *type*: the index type

All other attributes are type-dependent. For example, some indexes provide
*unique* or *sparse* flags, whereas others don't. Some indexes also provide
a selectivity estimate in the *selectivityEstimate* attribute of the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{404}
If the index does not exist, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestIndexPrimaryIndex_container">
<div id="RestIndexPrimaryIndex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/index/products/0</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">125</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;_key&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;products/0&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;primary&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestIndexPrimaryIndex_container_collapse" onclick="$('#RestIndexPrimaryIndex_long').hide(); $('#RestIndexPrimaryIndex_short').show(); window.location.hash='RestIndexPrimaryIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexPrimaryIndex_short" onclick="$('#RestIndexPrimaryIndex_short').hide(); $('#RestIndexPrimaryIndex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/index/products/0</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">125</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/post_api_index.md -->
@startDocuBlock post_api_index

@brief creates an index

@RESTHEADER{POST /_api/index#general, Create index, createIndex:general}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTALLBODYPARAM{index-details,json,required}

@RESTDESCRIPTION
Creates a new index in the collection *collection*. Expects
an object containing the index details.

The type of the index to be created must specified in the *type*
attribute of the index details. Depending on the index type, additional
other attributes may need to specified in the request in order to create
the index.

Indexes require the to be indexed attribute(s) in the *fields* attribute
of the index details. Depending on the index type, a single attribute or
multiple attributes can be indexed. In the latter case, an array of
strings is expected.

Indexing the system attribute *_id* is not supported for user-defined indexes.
Manually creating an index using *_id* as an index attribute will fail with
an error.

Optionally, an index name may be specified as a string in the *name* attribute.
Index names have the same restrictions as collection names. If no value is
specified, one will be auto-generated.

Some indexes can be created as unique or non-unique variants. Uniqueness
can be controlled for most indexes by specifying the *unique* flag in the
index details. Setting it to *true* will create a unique index.
Setting it to *false* or omitting the *unique* attribute will
create a non-unique index.

**Note**: The following index types do not support uniqueness, and using
the *unique* attribute with these types may lead to an error:

- geo indexes
- fulltext indexes

**Note**: Unique indexes on non-shard keys are not supported in a
cluster.

Hash, skiplist and persistent indexes can optionally be created in a sparse
variant. A sparse index will be created if the *sparse* attribute in
the index details is set to *true*. Sparse indexes do not index documents
for which any of the index attributes is either not set or is *null*.

The optional attribute **deduplicate** is supported by array indexes of
type *hash* or *skiplist*. It controls whether inserting duplicate index values
from the same document into a unique array index will lead to a unique constraint
error or not. The default value is *true*, so only a single instance of each
non-unique index value will be inserted into the index per document. Trying to
insert a value into the index that already exists in the index will always fail,
regardless of the value of this attribute.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then an *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then an *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If an invalid index description is posted or attributes are used that the
target index will not support, then an *HTTP 400* is returned.

@RESTRETURNCODE{404}
If *collection* is unknown, then an *HTTP 404* is returned.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_all_keys.md -->
@startDocuBlock put_api_simple_all_keys

@brief reads all document keys from collection

@RESTHEADER{PUT /_api/simple/all-keys, Read all document keys, allDocumentKeys}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,optional}
The name of the collection.
**This parameter is only for an easier migration path from old versions.**
In ArangoDB versions < 3.0, the URL path was `/_api/document` and
this was passed in via the query parameter "collection".
This combination was removed. The collection name can be passed to
`/_api/simple/all-keys` as body parameter (preferred) or as query parameter.

@RESTBODYPARAM{collection,string,required,}
The collection that should be queried

@RESTBODYPARAM{type,string,optional,}
The type of the result. The following values are allowed:<br>
  - *id*: returns an array of document ids (*_id* attributes)
  - *key*: returns an array of document keys (*_key* attributes)
  - *path*: returns an array of document URI paths. This is the default.

@RESTDESCRIPTION
Returns an array of all keys, ids, or URI paths for all documents in the
collection identified by *collection*. The type of the result array is
determined by the *type* attribute.

Note that the results have no defined order and thus the order should
not be relied on.

Note: the *all-keys* simple query is **deprecated** as of ArangoDB 3.4.0.
This API may get removed in future versions of ArangoDB. You can use the
`/_api/cursor` endpoint instead with one of the below AQL queries depending
on the desired result:

- `FOR doc IN @@collection RETURN doc._id` to mimic *type: id*
- `FOR doc IN @@collection RETURN doc._key` to mimic *type: key*
- `FOR doc IN @@collection RETURN CONCAT("/_db/", CURRENT_DATABASE(), "/_api/document/", doc._id)`
  to mimic *type: path*

@RESTRETURNCODES

@RESTRETURNCODE{201}
All went well.

@RESTRETURNCODE{404}
The collection does not exist.

@EXAMPLES

Return all document paths


<div class="example-container" id="RestDocumentHandlerReadDocumentAllPath_container">
<div id="RestDocumentHandlerReadDocumentAllPath_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">395</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-string">&quot;/_db/_system/_api/document/products/71649&quot;</span>, 
    <span class="hljs-string">&quot;/_db/_system/_api/document/products/71651&quot;</span>, 
    <span class="hljs-string">&quot;/_db/_system/_api/document/products/71653&quot;</span> 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0003537023440003395</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">38585</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentAllPath_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentAllPath_long').hide(); $('#RestDocumentHandlerReadDocumentAllPath_short').show(); window.location.hash='RestDocumentHandlerReadDocumentAllPath_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentAllPath_short" onclick="$('#RestDocumentHandlerReadDocumentAllPath_short').hide(); $('#RestDocumentHandlerReadDocumentAllPath_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">395</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Return all document keys


<div class="example-container" id="RestDocumentHandlerReadDocumentAllKey_container">
<div id="RestDocumentHandlerReadDocumentAllKey_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;id&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">314</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-string">&quot;products/71634&quot;</span>, 
    <span class="hljs-string">&quot;products/71636&quot;</span>, 
    <span class="hljs-string">&quot;products/71638&quot;</span> 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0005339495837688446</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">38585</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentAllKey_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentAllKey_long').hide(); $('#RestDocumentHandlerReadDocumentAllKey_short').show(); window.location.hash='RestDocumentHandlerReadDocumentAllKey_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentAllKey_short" onclick="$('#RestDocumentHandlerReadDocumentAllKey_short').hide(); $('#RestDocumentHandlerReadDocumentAllKey_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;id&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">314</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Collection does not exist


<div class="example-container" id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container">
<div id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/doesnotexist</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">106</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;expecting GET /_api/document/&lt;collection&gt;/&lt;key&gt;&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_long').hide(); $('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_short').show(); window.location.hash='RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_short" onclick="$('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_short').hide(); $('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/document/doesnotexist</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">106</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_range.md -->
@startDocuBlock put_api_simple_range

@brief returns all documents of a collection within a range

@RESTHEADER{PUT /_api/simple/range, Simple range query}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{attribute,string,required,string}
The attribute path to check.

@RESTBODYPARAM{left,string,required,string}
The lower bound.

@RESTBODYPARAM{right,string,required,string}
The upper bound.

@RESTBODYPARAM{closed,boolean,required,}
If *true*, use interval including *left* and *right*,
otherwise exclude *right*, but include *left*.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query (optional).

@RESTBODYPARAM{limit,integer,optional,int64}
The maximal amount of documents to return. The *skip*
is applied before the *limit* restriction. (optional)

@RESTDESCRIPTION

This will find all documents within a given range. In order to execute a
range query, a skip-list index on the queried attribute must be present.

Returns a cursor containing the result.

Note: the *range* simple query is **deprecated** as of ArangoDB 2.6.
The function may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection within a specific range
is to use an AQL query as follows:

    FOR doc IN @@collection
      FILTER doc.value >= @left && doc.value < @right
      LIMIT @skip, @limit
      RETURN doc`

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown or no
suitable index for the range query is present.  The response body contains
an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleRange_container">
<div id="RestSimpleRange_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/range</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;attribute&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
  <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-number">4</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">197</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72625&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72625&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUqu--A&quot;</span>, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">2</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72627&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72627&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUqy---&quot;</span>, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">3</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleRange_container_collapse" onclick="$('#RestSimpleRange_long').hide(); $('#RestSimpleRange_short').show(); window.location.hash='RestSimpleRange_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRange_short" onclick="$('#RestSimpleRange_short').hide(); $('#RestSimpleRange_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/range</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;attribute&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
  <span class="hljs-string">&quot;left&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;right&quot;</span> : <span class="hljs-number">4</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">197</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_within.md -->
@startDocuBlock put_api_simple_within

@brief returns all documents of a collection within a given radius

@RESTHEADER{PUT /_api/simple/within, Find documents within a radius around a coordinate}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{latitude,string,required,string}
The latitude of the coordinate.

@RESTBODYPARAM{longitude,string,required,string}
The longitude of the coordinate.

@RESTBODYPARAM{radius,string,required,string}
The maximal radius (in meters).

@RESTBODYPARAM{distance,string,required,string}
If given, the attribute key used to return the distance to
the given coordinate. (optional). If specified, distances are returned in meters.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query. (optional)

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip* is
applied before the *limit* restriction. The default is 100. (optional)

@RESTBODYPARAM{geo,string,required,string}
If given, the identifier of the geo-index to use. (optional)

@RESTDESCRIPTION

This will find all documents within a given radius around the coordinate
(*latitude*, *longitude*). The returned list is sorted by distance.

In order to use the *within* operator, a geo index must be defined for
the collection. This index also defines which attribute holds the
coordinates for the document.  If you have more than one geo-spatial index,
you can use the *geo* field to select a particular index.

Returns a cursor containing the result.

Note: the *within* simple query is **deprecated** as of ArangoDB 2.6.
This API may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to issue an AQL query using the *WITHIN()* function as follows:

    FOR doc IN WITHIN(@@collection, @latitude, @longitude, @radius, @distanceAttributeName)
      RETURN doc

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Without distance


<div class="example-container" id="RestSimpleWithin_container">
<div id="RestSimpleWithin_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;radius&quot;</span> : <span class="hljs-number">500</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">261</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72810&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72810&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU4i---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-0.002/&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        -<span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72814&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72814&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU4q---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.002/&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleWithin_container_collapse" onclick="$('#RestSimpleWithin_long').hide(); $('#RestSimpleWithin_short').show(); window.location.hash='RestSimpleWithin_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleWithin_short" onclick="$('#RestSimpleWithin_short').hide(); $('#RestSimpleWithin_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;radius&quot;</span> : <span class="hljs-number">500</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">261</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With distance


<div class="example-container" id="RestSimpleWithinDistance_container">
<div id="RestSimpleWithinDistance_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-string">&quot;distance&quot;</span>, 
  <span class="hljs-string">&quot;radius&quot;</span> : <span class="hljs-number">300</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">445</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72847&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72847&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU6G--A&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        -<span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-0.002/&quot;</span>, 
      <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">222.3898532891175</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72851&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72851&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU6O---&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.002/&quot;</span>, 
      <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">222.3898532891175</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72853&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72853&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU6S---&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.004</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.004/&quot;</span>, 
      <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">444.779706578235</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleWithinDistance_container_collapse" onclick="$('#RestSimpleWithinDistance_long').hide(); $('#RestSimpleWithinDistance_short').show(); window.location.hash='RestSimpleWithinDistance_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleWithinDistance_short" onclick="$('#RestSimpleWithinDistance_short').hide(); $('#RestSimpleWithinDistance_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-string">&quot;distance&quot;</span>, 
  <span class="hljs-string">&quot;radius&quot;</span> : <span class="hljs-number">300</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">445</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_first_example.md -->
@startDocuBlock put_api_simple_first_example

@brief returns one document of a collection matching a given example

@RESTHEADER{PUT /_api/simple/first-example, Find documents matching an example}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

{% hint 'warning' %}
Till ArangoDB versions 3.2.13 and 3.3.7 this API is quite expensive.
A more lightweight alternative is to use the HTTP Cursor API.
Starting from versions 3.2.14 and 3.3.8 this performance impact is not
an issue anymore, as the internal implementation of the API has changed.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{example,string,required,string}
The example document.

@RESTDESCRIPTION

This will return the first document matching a given example.

Returns a result containing the document or *HTTP 404* if no
document matched the example.

If more than one document in the collection matches the specified example, only
one of these documents will be returned, and it is undefined which of the matching
documents is returned.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned when the query was successfully executed.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

If a matching document was found


<div class="example-container" id="RestSimpleFirstExample_container">
<div id="RestSimpleFirstExample_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/first-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">122</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;document&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72452&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72452&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUhm---&quot;</span>, 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;k&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleFirstExample_container_collapse" onclick="$('#RestSimpleFirstExample_long').hide(); $('#RestSimpleFirstExample_short').show(); window.location.hash='RestSimpleFirstExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleFirstExample_short" onclick="$('#RestSimpleFirstExample_short').hide(); $('#RestSimpleFirstExample_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/first-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">122</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





If no document was found


<div class="example-container" id="RestSimpleFirstExampleNotFound_container">
<div id="RestSimpleFirstExampleNotFound_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/first-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;l&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">66</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;no match&quot;</span> 
}
</pre>
<div id="RestSimpleFirstExampleNotFound_container_collapse" onclick="$('#RestSimpleFirstExampleNotFound_long').hide(); $('#RestSimpleFirstExampleNotFound_short').show(); window.location.hash='RestSimpleFirstExampleNotFound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleFirstExampleNotFound_short" onclick="$('#RestSimpleFirstExampleNotFound_short').hide(); $('#RestSimpleFirstExampleNotFound_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/first-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;l&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">66</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_by_example.md -->
@startDocuBlock put_api_simple_by_example

@brief returns all documents of a collection matching a given example

@RESTHEADER{PUT /_api/simple/by-example, Simple query by-example}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

{% hint 'warning' %}
Till ArangoDB versions 3.2.13 and 3.3.7 this API is quite expensive.
A more lightweight alternative is to use the HTTP Cursor API.
Starting from versions 3.2.14 and 3.3.8 this performance impact is not
an issue anymore, as the internal implementation of the API has changed.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{example,string,required,string}
The example document.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query (optional).

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip*
is applied before the *limit* restriction. (optional)

@RESTBODYPARAM{batchSize,integer,optional,int64}
maximum number of result documents to be transferred from
the server to the client in one roundtrip. If this attribute is
not set, a server-controlled default value will be used. A *batchSize* value of
*0* is disallowed.

@RESTDESCRIPTION

This will find all documents matching a given example.

Returns a cursor containing the result.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Matching an attribute


<div class="example-container" id="RestSimpleByExample_container">
<div id="RestSimpleByExample_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">589</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72401&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72401&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUdi---&quot;</span>, 
      <span class="hljs-string">&quot;a&quot;</span> : { 
        <span class="hljs-string">&quot;k&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72403&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72403&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUdm---&quot;</span>, 
      <span class="hljs-string">&quot;a&quot;</span> : { 
        <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72405&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72405&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUdq---&quot;</span>, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72407&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72407&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUdu---&quot;</span>, 
      <span class="hljs-string">&quot;a&quot;</span> : { 
        <span class="hljs-string">&quot;k&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">2</span> 
      }, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0003475630655884743</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">23073</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleByExample_container_collapse" onclick="$('#RestSimpleByExample_long').hide(); $('#RestSimpleByExample_short').show(); window.location.hash='RestSimpleByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleByExample_short" onclick="$('#RestSimpleByExample_short').hide(); $('#RestSimpleByExample_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">589</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Matching an attribute which is a sub-document


<div class="example-container" id="RestSimpleByExample2_container">
<div id="RestSimpleByExample2_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a.j&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">438</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72418&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72418&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUe6---&quot;</span>, 
      <span class="hljs-string">&quot;a&quot;</span> : { 
        <span class="hljs-string">&quot;k&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72420&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72420&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUf----&quot;</span>, 
      <span class="hljs-string">&quot;a&quot;</span> : { 
        <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00035964231938123703</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">22981</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleByExample2_container_collapse" onclick="$('#RestSimpleByExample2_long').hide(); $('#RestSimpleByExample2_short').show(); window.location.hash='RestSimpleByExample2_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleByExample2_short" onclick="$('#RestSimpleByExample2_short').hide(); $('#RestSimpleByExample2_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a.j&quot;</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">438</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Matching an attribute within a sub-document


<div class="example-container" id="RestSimpleByExample3_container">
<div id="RestSimpleByExample3_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">353</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72437&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72437&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUgq---&quot;</span>, 
      <span class="hljs-string">&quot;a&quot;</span> : { 
        <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00037662964314222336</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">22929</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleByExample3_container_collapse" onclick="$('#RestSimpleByExample3_long').hide(); $('#RestSimpleByExample3_short').show(); window.location.hash='RestSimpleByExample3_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleByExample3_short" onclick="$('#RestSimpleByExample3_short').hide(); $('#RestSimpleByExample3_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">353</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/RestRemoveByKeys.md -->
@startDocuBlock RestRemoveByKeys

@brief removes multiple documents by their keys

@RESTHEADER{PUT /_api/simple/remove-by-keys, Remove documents by their keys}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to look in for the documents to remove

@RESTBODYPARAM{keys,array,required,string}
array with the _keys of documents to remove.

@RESTBODYPARAM{options,object,optional,put_api_simple_remove_by_keys_opts}
a json object which can contains following attributes:

@RESTSTRUCT{waitForSync,put_api_simple_remove_by_keys_opts,boolean,optional,}
if set to true, then all removal operations will
instantly be synchronized to disk. If this is not specified, then the
collection's default sync behavior will be applied.

@RESTSTRUCT{silent,put_api_simple_remove_by_keys_opts,boolean,optional,}
if set to *false*, then the result will contain an additional
attribute *old* which contains an array with one entry for each
removed document. By default, these entries will have the *_id*,
*_key* and *_rev* attributes.

@RESTSTRUCT{returnOld,put_api_simple_remove_by_keys_opts,boolean,optional,}
if set to *true* and *silent* above is *false*, then the above
information about the removed documents contains the complete
removed documents.

@RESTDESCRIPTION
Looks up the documents in the specified collection using the array of keys
provided, and removes all documents from the collection whose keys are
contained in the *keys* array. Keys for which no document can be found in
the underlying collection are ignored, and no exception will be thrown for
them.

Equivalent AQL query (the RETURN clause is optional):

    FOR key IN @keys REMOVE key IN @@collection
      RETURN OLD

The body of the response contains a JSON object with information how many
documents were removed (and how many were not). The *removed* attribute will
contain the number of actually removed documents. The *ignored* attribute
will contain the number of keys in the request for which no matching document
could be found.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the operation was carried out successfully. The number of removed
documents may still be 0 in this case if none of the specified document keys
were found in the collection.

@RESTRETURNCODE{404}
is returned if the collection was not found.
The response body contains an error document in this case.

@RESTRETURNCODE{405}
is returned if the operation was called with a different HTTP METHOD than PUT.

@EXAMPLES


<div class="example-container" id="RestSimpleRemove_container">
<div id="RestSimpleRemove_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;test0&quot;</span>, 
    <span class="hljs-string">&quot;test1&quot;</span>, 
    <span class="hljs-string">&quot;test2&quot;</span>, 
    <span class="hljs-string">&quot;test3&quot;</span>, 
    <span class="hljs-string">&quot;test4&quot;</span>, 
    <span class="hljs-string">&quot;test5&quot;</span>, 
    <span class="hljs-string">&quot;test6&quot;</span>, 
    <span class="hljs-string">&quot;test7&quot;</span>, 
    <span class="hljs-string">&quot;test8&quot;</span>, 
    <span class="hljs-string">&quot;test9&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">51</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;removed&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemove_container_collapse" onclick="$('#RestSimpleRemove_long').hide(); $('#RestSimpleRemove_short').show(); window.location.hash='RestSimpleRemove_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemove_short" onclick="$('#RestSimpleRemove_short').hide(); $('#RestSimpleRemove_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;test0&quot;</span>, 
    <span class="hljs-string">&quot;test1&quot;</span>, 
    <span class="hljs-string">&quot;test2&quot;</span>, 
    <span class="hljs-string">&quot;test3&quot;</span>, 
    <span class="hljs-string">&quot;test4&quot;</span>, 
    <span class="hljs-string">&quot;test5&quot;</span>, 
    <span class="hljs-string">&quot;test6&quot;</span>, 
    <span class="hljs-string">&quot;test7&quot;</span>, 
    <span class="hljs-string">&quot;test8&quot;</span>, 
    <span class="hljs-string">&quot;test9&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">51</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






<div class="example-container" id="RestSimpleRemoveNotFound_container">
<div id="RestSimpleRemoveNotFound_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;baz&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">50</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;removed&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveNotFound_container_collapse" onclick="$('#RestSimpleRemoveNotFound_long').hide(); $('#RestSimpleRemoveNotFound_short').show(); window.location.hash='RestSimpleRemoveNotFound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveNotFound_short" onclick="$('#RestSimpleRemoveNotFound_short').hide(); $('#RestSimpleRemoveNotFound_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;baz&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">50</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_remove_by_example.md -->
@startDocuBlock put_api_simple_remove_by_example

@brief removes all documents of a collection that match an example

@RESTHEADER{PUT /_api/simple/remove-by-example, Remove documents by example}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to remove from.

@RESTBODYPARAM{example,string,required,string}
An example document that all collection documents are compared against.

@RESTBODYPARAM{options,object,optional,put_api_simple_remove_by_example_opts}
a json object which can contains following attributes:

@RESTSTRUCT{waitForSync,put_api_simple_remove_by_example_opts,boolean,optional,}
if set to true, then all removal operations will
instantly be synchronized to disk. If this is not specified, then the
collection's default sync behavior will be applied.

@RESTSTRUCT{limit,put_api_simple_remove_by_example_opts,string,required,string}
an optional value that determines how many documents to
delete at most. If *limit* is specified but is less than the number
of documents in the collection, it is undefined which of the documents
will be deleted.

@RESTDESCRIPTION

This will find all documents in the collection that match the specified
example object.

Note: the *limit* attribute is not supported on sharded collections.
Using it will result in an error.

Returns the number of documents that were deleted.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleRemoveByExample_container">
<div id="RestSimpleRemoveByExample_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deleted&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveByExample_container_collapse" onclick="$('#RestSimpleRemoveByExample_long').hide(); $('#RestSimpleRemoveByExample_short').show(); window.location.hash='RestSimpleRemoveByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveByExample_short" onclick="$('#RestSimpleRemoveByExample_short').hide(); $('#RestSimpleRemoveByExample_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using Parameter: waitForSync and limit


<div class="example-container" id="RestSimpleRemoveByExample_1_container">
<div id="RestSimpleRemoveByExample_1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deleted&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveByExample_1_container_collapse" onclick="$('#RestSimpleRemoveByExample_1_long').hide(); $('#RestSimpleRemoveByExample_1_short').show(); window.location.hash='RestSimpleRemoveByExample_1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveByExample_1_short" onclick="$('#RestSimpleRemoveByExample_1_short').hide(); $('#RestSimpleRemoveByExample_1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using Parameter: waitForSync and limit with new signature


<div class="example-container" id="RestSimpleRemoveByExample_2_container">
<div id="RestSimpleRemoveByExample_2_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;deleted&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveByExample_2_container_collapse" onclick="$('#RestSimpleRemoveByExample_2_long').hide(); $('#RestSimpleRemoveByExample_2_short').show(); window.location.hash='RestSimpleRemoveByExample_2_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveByExample_2_short" onclick="$('#RestSimpleRemoveByExample_2_short').hide(); $('#RestSimpleRemoveByExample_2_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_replace_by_example.md -->
@startDocuBlock put_api_simple_replace_by_example

@brief replaces the body of all documents of a collection that match an example

@RESTHEADER{PUT /_api/simple/replace-by-example, Replace documents by example}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to replace within.

@RESTBODYPARAM{example,string,required,string}
An example document that all collection documents are compared against.

@RESTBODYPARAM{newValue,string,required,string}
The replacement document that will get inserted in place
of the "old" documents.

@RESTBODYPARAM{options,object,optional,put_api_simple_replace_by_example_options}
a json object which can contain following attributes

@RESTSTRUCT{waitForSync,put_api_simple_replace_by_example_options,boolean,optional,}
if set to true, then all removal operations will
 instantly be synchronized to disk. If this is not specified, then the
 collection's default sync behavior will be applied.

@RESTSTRUCT{limit,put_api_simple_replace_by_example_options,string,optional,string}
an optional value that determines how many documents to
replace at most. If *limit* is specified but is less than the number
of documents in the collection, it is undefined which of the documents
will be replaced.

@RESTDESCRIPTION

This will find all documents in the collection that match the specified
example object, and replace the entire document body with the new value
specified. Note that document meta-attributes such as *_id*, *_key*,
*_from*, *_to* etc. cannot be replaced.

Note: the *limit* attribute is not supported on sharded collections.
Using it will result in an error.

Returns the number of documents that were replaced.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleReplaceByExample_container">
<div id="RestSimpleReplaceByExample_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span> 
  }, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;replaced&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleReplaceByExample_container_collapse" onclick="$('#RestSimpleReplaceByExample_long').hide(); $('#RestSimpleReplaceByExample_short').show(); window.location.hash='RestSimpleReplaceByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleReplaceByExample_short" onclick="$('#RestSimpleReplaceByExample_short').hide(); $('#RestSimpleReplaceByExample_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span> 
  }, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using new Signature for attributes WaitForSync and limit


<div class="example-container" id="RestSimpleReplaceByExampleWaitForSync_container">
<div id="RestSimpleReplaceByExampleWaitForSync_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span> 
  }, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;replaced&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleReplaceByExampleWaitForSync_container_collapse" onclick="$('#RestSimpleReplaceByExampleWaitForSync_long').hide(); $('#RestSimpleReplaceByExampleWaitForSync_short').show(); window.location.hash='RestSimpleReplaceByExampleWaitForSync_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleReplaceByExampleWaitForSync_short" onclick="$('#RestSimpleReplaceByExampleWaitForSync_short').hide(); $('#RestSimpleReplaceByExampleWaitForSync_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span> 
  }, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/RestLookupByKeys.md -->
@startDocuBlock RestLookupByKeys

@brief fetches multiple documents by their keys

@RESTHEADER{PUT /_api/simple/lookup-by-keys, Find documents by their keys}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to look in for the documents

@RESTBODYPARAM{keys,array,required,string}
array with the _keys of documents to remove.

@RESTDESCRIPTION
Looks up the documents in the specified collection
using the array of keys provided. All documents for which a matching
key was specified in the *keys* array and that exist in the collection
will be returned.  Keys for which no document can be found in the
underlying collection are ignored, and no exception will be thrown for
them.

Equivalent AQL query:

    FOR doc IN @@collection FILTER doc._key IN @keys RETURN doc

The body of the response contains a JSON object with a *documents*
attribute. The *documents* attribute is an array containing the
matching documents. The order in which matching documents are present
in the result array is unspecified.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the operation was carried out successfully.

@RESTRETURNCODE{404}
is returned if the collection was not found.  The response body
contains an error document in this case.

@RESTRETURNCODE{405}
is returned if the operation was called with a different HTTP METHOD than PUT.

@EXAMPLES

Looking up existing documents


<div class="example-container" id="RestSimpleLookup_container">
<div id="RestSimpleLookup_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;test0&quot;</span>, 
    <span class="hljs-string">&quot;test1&quot;</span>, 
    <span class="hljs-string">&quot;test2&quot;</span>, 
    <span class="hljs-string">&quot;test3&quot;</span>, 
    <span class="hljs-string">&quot;test4&quot;</span>, 
    <span class="hljs-string">&quot;test5&quot;</span>, 
    <span class="hljs-string">&quot;test6&quot;</span>, 
    <span class="hljs-string">&quot;test7&quot;</span>, 
    <span class="hljs-string">&quot;test8&quot;</span>, 
    <span class="hljs-string">&quot;test9&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">710</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;documents&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test0&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test0&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUkm---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test1&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test1&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUkq---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test2&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test2&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUku---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test3&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test3&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUku--A&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">3</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test4&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test4&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUky---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">4</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test5&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test5&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUk2---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">5</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test6&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test6&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUk6---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">6</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test7&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test7&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUl----&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">7</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test8&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test8&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUl---A&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">8</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;test9&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;test/test9&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUlC---&quot;</span>, 
      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">9</span> 
    } 
  ], 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleLookup_container_collapse" onclick="$('#RestSimpleLookup_long').hide(); $('#RestSimpleLookup_short').show(); window.location.hash='RestSimpleLookup_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleLookup_short" onclick="$('#RestSimpleLookup_short').hide(); $('#RestSimpleLookup_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;test0&quot;</span>, 
    <span class="hljs-string">&quot;test1&quot;</span>, 
    <span class="hljs-string">&quot;test2&quot;</span>, 
    <span class="hljs-string">&quot;test3&quot;</span>, 
    <span class="hljs-string">&quot;test4&quot;</span>, 
    <span class="hljs-string">&quot;test5&quot;</span>, 
    <span class="hljs-string">&quot;test6&quot;</span>, 
    <span class="hljs-string">&quot;test7&quot;</span>, 
    <span class="hljs-string">&quot;test8&quot;</span>, 
    <span class="hljs-string">&quot;test9&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">710</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Looking up non-existing documents


<div class="example-container" id="RestSimpleLookupNotFound_container">
<div id="RestSimpleLookupNotFound_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;baz&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;documents&quot;</span> : [ ], 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleLookupNotFound_container_collapse" onclick="$('#RestSimpleLookupNotFound_long').hide(); $('#RestSimpleLookupNotFound_short').show(); window.location.hash='RestSimpleLookupNotFound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleLookupNotFound_short" onclick="$('#RestSimpleLookupNotFound_short').hide(); $('#RestSimpleLookupNotFound_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;keys&quot;</span> : [ 
    <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;baz&quot;</span> 
  ], 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_update_by_example.md -->
@startDocuBlock put_api_simple_update_by_example

@brief partially updates the body of all documents of a collection that match an example

@RESTHEADER{PUT /_api/simple/update-by-example, Update documents by example}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to update within.

@RESTBODYPARAM{example,string,required,string}
An example document that all collection documents are compared against.

@RESTBODYPARAM{newValue,object,required,}
A document containing all the attributes to update in the found documents.

@RESTBODYPARAM{options,object,optional,put_api_simple_update_by_example_options}
a json object which can contains following attributes:

@RESTSTRUCT{keepNull,put_api_simple_update_by_example_options,boolean,optional,}
This parameter can be used to modify the behavior when
handling *null* values. Normally, *null* values are stored in the
database. By setting the *keepNull* parameter to *false*, this
behavior can be changed so that all attributes in *data* with *null*
values will be removed from the updated document.

@RESTSTRUCT{waitForSync,put_api_simple_update_by_example_options,boolean,optional,}
if set to true, then all removal operations will
instantly be synchronized to disk. If this is not specified, then the
collection's default sync behavior will be applied.

@RESTSTRUCT{limit,put_api_simple_update_by_example_options,integer,optional,int64}
an optional value that determines how many documents to
update at most. If *limit* is specified but is less than the number
of documents in the collection, it is undefined which of the documents
will be updated.

@RESTSTRUCT{mergeObjects,put_api_simple_update_by_example_options,boolean,optional,}
Controls whether objects (not arrays) will be merged if present in both the
existing and the patch document. If set to false, the value in the
patch document will overwrite the existing document's value. If set to
true, objects will be merged. The default is true.

@RESTDESCRIPTION

This will find all documents in the collection that match the specified
example object, and partially update the document body with the new value
specified. Note that document meta-attributes such as *_id*, *_key*,
*_from*, *_to* etc. cannot be replaced.

Note: the *limit* attribute is not supported on sharded collections.
Using it will result in an error.

Returns the number of documents that were updated.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the collection was updated successfully and *waitForSync* was
*true*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

using old syntax for options


<div class="example-container" id="RestSimpleUpdateByExample_container">
<div id="RestSimpleUpdateByExample_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleUpdateByExample_container_collapse" onclick="$('#RestSimpleUpdateByExample_long').hide(); $('#RestSimpleUpdateByExample_short').show(); window.location.hash='RestSimpleUpdateByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleUpdateByExample_short" onclick="$('#RestSimpleUpdateByExample_short').hide(); $('#RestSimpleUpdateByExample_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





using new signature for options


<div class="example-container" id="RestSimpleUpdateByExample_1_container">
<div id="RestSimpleUpdateByExample_1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleUpdateByExample_1_container_collapse" onclick="$('#RestSimpleUpdateByExample_1_long').hide(); $('#RestSimpleUpdateByExample_1_short').show(); window.location.hash='RestSimpleUpdateByExample_1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleUpdateByExample_1_short" onclick="$('#RestSimpleUpdateByExample_1_short').hide(); $('#RestSimpleUpdateByExample_1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;example&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">&quot;newValue&quot;</span> : { 
    <span class="hljs-string">&quot;a&quot;</span> : { 
      <span class="hljs-string">&quot;j&quot;</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_near.md -->
@startDocuBlock put_api_simple_near

@brief returns all documents of a collection near a given location

@RESTHEADER{PUT /_api/simple/near, Returns documents near a coordinate}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{latitude,string,required,string}
The latitude of the coordinate.

@RESTBODYPARAM{longitude,string,required,string}
The longitude of the coordinate.

@RESTBODYPARAM{distance,string,required,string}
If given, the attribute key used to return the distance to
the given coordinate. (optional). If specified, distances are returned in meters.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query. (optional)

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip* is
applied before the *limit* restriction. The default is 100. (optional)

@RESTBODYPARAM{geo,string,required,string}
If given, the identifier of the geo-index to use. (optional)

@RESTDESCRIPTION

The default will find at most 100 documents near the given coordinate.  The
returned array is sorted according to the distance, with the nearest document
being first in the return array. If there are near documents of equal distance, documents
are chosen randomly from this set until the limit is reached.

In order to use the *near* operator, a geo index must be defined for the
collection. This index also defines which attribute holds the coordinates
for the document.  If you have more than one geo-spatial index, you can use
the *geo* field to select a particular index.

Returns a cursor containing the result.

Note: the *near* simple query is **deprecated** as of ArangoDB 2.6.
This API may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to issue an AQL query using the *NEAR()* function as follows:

    FOR doc IN NEAR(@@collection, @latitude, @longitude, @limit)
      RETURN doc

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Without distance


<div class="example-container" id="RestSimpleNear_container">
<div id="RestSimpleNear_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">261</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72557&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72557&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUn2---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-0.002/&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        -<span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72561&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72561&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUn6---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.002/&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleNear_container_collapse" onclick="$('#RestSimpleNear_long').hide(); $('#RestSimpleNear_short').show(); window.location.hash='RestSimpleNear_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleNear_short" onclick="$('#RestSimpleNear_short').hide(); $('#RestSimpleNear_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">261</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With distance


<div class="example-container" id="RestSimpleNearDistance_container">
<div id="RestSimpleNearDistance_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-string">&quot;distance&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">445</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72594&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72594&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUpW---&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        -<span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/-0.002/&quot;</span>, 
      <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">222.3898532891175</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72598&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72598&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUpa--A&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.002/&quot;</span>, 
      <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">222.3898532891175</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72600&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72600&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUpe---&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.004</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.004/&quot;</span>, 
      <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-number">444.779706578235</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleNearDistance_container_collapse" onclick="$('#RestSimpleNearDistance_long').hide(); $('#RestSimpleNearDistance_short').show(); window.location.hash='RestSimpleNearDistance_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleNearDistance_short" onclick="$('#RestSimpleNearDistance_short').hide(); $('#RestSimpleNearDistance_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/near</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;distance&quot;</span> : <span class="hljs-string">&quot;distance&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">445</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_within_rectangle.md -->
@startDocuBlock put_api_simple_within_rectangle

@brief returns all documents of a collection within a rectangle

@RESTHEADER{PUT /_api/simple/within-rectangle, Within rectangle query}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{latitude1,string,required,string}
The latitude of the first rectangle coordinate.

@RESTBODYPARAM{longitude1,string,required,string}
The longitude of the first rectangle coordinate.

@RESTBODYPARAM{latitude2,string,required,string}
The latitude of the second rectangle coordinate.

@RESTBODYPARAM{longitude2,string,required,string}
The longitude of the second rectangle coordinate.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query. (optional)

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip* is
applied before the *limit* restriction. The default is 100. (optional)

@RESTBODYPARAM{geo,string,required,string}
If given, the identifier of the geo-index to use. (optional)

@RESTDESCRIPTION

This will find all documents within the specified rectangle (determined by
the given coordinates (*latitude1*, *longitude1*, *latitude2*, *longitude2*).

In order to use the *within-rectangle* query, a geo index must be defined for
the collection. This index also defines which attribute holds the
coordinates for the document.  If you have more than one geo-spatial index,
you can use the *geo* field to select a particular index.

Returns a cursor containing the result.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleWithinRectangle_container">
<div id="RestSimpleWithinRectangle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/within-rectangle</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude1&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude1&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;latitude2&quot;</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">&quot;longitude2&quot;</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">259</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72894&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72894&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU8G---&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.008/&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.008</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72892&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72892&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylU8C--A&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Name/0.006/&quot;</span>, 
      <span class="hljs-string">&quot;loc&quot;</span> : [ 
        <span class="hljs-number">0.006</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleWithinRectangle_container_collapse" onclick="$('#RestSimpleWithinRectangle_long').hide(); $('#RestSimpleWithinRectangle_short').show(); window.location.hash='RestSimpleWithinRectangle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleWithinRectangle_short" onclick="$('#RestSimpleWithinRectangle_short').hide(); $('#RestSimpleWithinRectangle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/within-rectangle</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;latitude1&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;longitude1&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;latitude2&quot;</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">&quot;longitude2&quot;</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">&quot;skip&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">259</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_fulltext.md -->
@startDocuBlock put_api_simple_fulltext

@brief returns documents of a collection as a result of a fulltext query

@RESTHEADER{PUT /_api/simple/fulltext, Fulltext index query}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{attribute,string,required,string}
The attribute that contains the texts.

@RESTBODYPARAM{query,string,required,string}
The fulltext query.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query (optional).

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip*
is applied before the *limit* restriction. (optional)

@RESTBODYPARAM{index,string,required,string}
The identifier of the fulltext-index to use.

@RESTDESCRIPTION

This will find all documents from the collection that match the fulltext
query specified in *query*.

In order to use the *fulltext* operator, a fulltext index must be defined
for the collection and the specified attribute.

Returns a cursor containing the result.

Note: the *fulltext* simple query is **deprecated** as of ArangoDB 2.6.
This API may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to issue an AQL query using the *FULLTEXT()* AQL function as follows:

    FOR doc IN FULLTEXT(@@collection, @attributeName, @queryString, @limit)
      RETURN doc

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleFulltext_container">
<div id="RestSimpleFulltext_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/fulltext</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;attribute&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;word&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">253</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72486&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72486&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUjO---&quot;</span>, 
      <span class="hljs-string">&quot;text&quot;</span> : <span class="hljs-string">&quot;this text contains word&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72488&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72488&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUjS---&quot;</span>, 
      <span class="hljs-string">&quot;text&quot;</span> : <span class="hljs-string">&quot;this text also has a word&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleFulltext_container_collapse" onclick="$('#RestSimpleFulltext_long').hide(); $('#RestSimpleFulltext_short').show(); window.location.hash='RestSimpleFulltext_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleFulltext_short" onclick="$('#RestSimpleFulltext_short').hide(); $('#RestSimpleFulltext_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/fulltext</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;attribute&quot;</span> : <span class="hljs-string">&quot;text&quot;</span>, 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;word&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">253</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_all.md -->
@startDocuBlock put_api_simple_all

@brief returns all documents of a collection

@RESTHEADER{PUT /_api/simple/all, Return all documents}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTALLBODYPARAM{query,string,required}
Contains the query.

@RESTDESCRIPTION
Returns all documents of a collections. Equivalent to the AQL query
`FOR doc IN collection RETURN doc`. The call expects a JSON object
as body with the following attributes:

- *collection*: The name of the collection to query.

- *skip*: The number of documents to skip in the query (optional).

- *limit*: The maximal amount of documents to return. The *skip*
  is applied before the *limit* restriction (optional).

- *batchSize*: The number of documents to return in one go. (optional)

- *ttl*: The time-to-live for the cursor (in seconds, optional).

- *stream*: Create this cursor as a stream query (optional).

Returns a cursor containing the result.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Limit the amount of documents using *limit*


<div class="example-container" id="RestSimpleAllSkipLimit_container">
<div id="RestSimpleAllSkipLimit_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all</span> &lt;&lt;EOF
{ "collection": "products", "skip": 2, "limit" : 2 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">430</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72368&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72368&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUbW--A&quot;</span>, 
      <span class="hljs-string">&quot;Hello3&quot;</span> : <span class="hljs-string">&quot;World3&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72370&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72370&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUba---&quot;</span>, 
      <span class="hljs-string">&quot;Hello4&quot;</span> : <span class="hljs-string">&quot;World4&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0001907413825392723</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">6764</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleAllSkipLimit_container_collapse" onclick="$('#RestSimpleAllSkipLimit_long').hide(); $('#RestSimpleAllSkipLimit_short').show(); window.location.hash='RestSimpleAllSkipLimit_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleAllSkipLimit_short" onclick="$('#RestSimpleAllSkipLimit_short').hide(); $('#RestSimpleAllSkipLimit_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all</span> &lt;&lt;EOF
{ "collection": "products", "skip": 2, "limit" : 2 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">430</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a *batchSize* value


<div class="example-container" id="RestSimpleAllBatch_container">
<div id="RestSimpleAllBatch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all</span> &lt;&lt;EOF
{ "collection": "products", "batchSize" : 3 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">522</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72344&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72344&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUZ2---&quot;</span>, 
      <span class="hljs-string">&quot;Hello1&quot;</span> : <span class="hljs-string">&quot;World1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72346&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72346&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUZ6---&quot;</span>, 
      <span class="hljs-string">&quot;Hello2&quot;</span> : <span class="hljs-string">&quot;World2&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72348&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72348&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUa----&quot;</span>, 
      <span class="hljs-string">&quot;Hello3&quot;</span> : <span class="hljs-string">&quot;World3&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72355&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0004125526174902916</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">22431</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleAllBatch_container_collapse" onclick="$('#RestSimpleAllBatch_long').hide(); $('#RestSimpleAllBatch_short').show(); window.location.hash='RestSimpleAllBatch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleAllBatch_short" onclick="$('#RestSimpleAllBatch_short').hide(); $('#RestSimpleAllBatch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/all</span> &lt;&lt;EOF
{ "collection": "products", "batchSize" : 3 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">522</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/put_api_simple_any.md -->
@startDocuBlock put_api_simple_any

@brief returns a random document from a collection

@RESTHEADER{PUT /_api/simple/any, Return a random document}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
All endpoints for Simple Queries are deprecated from version 3.4.0 on.
They are superseded by AQL queries.
{% endhint %}

@RESTDESCRIPTION
Returns a random document from a collection. The call expects a JSON object
as body with the following attributes:

@RESTBODYPARAM{collection,string,required, string}
The identifier or name of the collection to query.<br>
Returns a JSON object with the document stored in the attribute
*document* if the collection contains at least one document. If
the collection is empty, the *document* attribute contains null.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleAny_container">
<div id="RestSimpleAny_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/any</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">116</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;document&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;72387&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/72387&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylUce---&quot;</span>, 
    <span class="hljs-string">&quot;Hello3&quot;</span> : <span class="hljs-string">&quot;World3&quot;</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleAny_container_collapse" onclick="$('#RestSimpleAny_long').hide(); $('#RestSimpleAny_short').show(); window.location.hash='RestSimpleAny_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleAny_short" onclick="$('#RestSimpleAny_short').hide(); $('#RestSimpleAny_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/simple/any</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">116</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryCacheCurrent.md -->
@startDocuBlock GetApiQueryCacheCurrent

@brief returns a list of the stored results in the AQL query results cache

@RESTHEADER{GET /_api/query-cache/entries, Returns the currently cached query results, readQueries}

@RESTDESCRIPTION
Returns an array containing the AQL query results currently stored in the query results
cache of the selected database. Each result is a JSON object with the following attributes:

- *hash*: the query result's hash

- *query*: the query string

- *bindVars*: the query's bind parameters. this attribute is only shown if tracking for
  bind variables was enabled at server start

- *size*: the size of the query result and bind parameters, in bytes

- *results*: number of documents/rows in the query result

- *started*: the date and time when the query was stored in the cache

- *hits*: number of times the result was served from the cache (can be
  *0* for queries that were only stored in the cache but were never accessed
  again afterwards)

- *runTime*: the query's run time

- *dataSources*: an array of collections/Views the query was using

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the list of results can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/DeleteApiQuerySlow.md -->
@startDocuBlock DeleteApiQuerySlow

@brief clears the list of slow AQL queries

@RESTHEADER{DELETE /_api/query/slow, Clears the list of slow AQL queries, deleteSlowQueries}

@RESTDESCRIPTION
Clears the list of slow AQL queries in the currently selected database

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{all,boolean,optional}
If set to *true*, will clear the slow query history in all databases, not just
the selected one.
Using the parameter is only allowed in the system database and with superuser
privileges.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* when the list of queries was
cleared successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/PostApiQueryProperties.md -->
@startDocuBlock PostApiQueryProperties

@brief parse an AQL query and return information about it

@RESTHEADER{POST /_api/query, Parse an AQL query, parseQuery}

@RESTDESCRIPTION
This endpoint is for query validation only. To actually query the database,
see `/api/cursor`.

@RESTBODYPARAM{query,string,required,string}
To validate a query string without executing it, the query string can be
passed to the server via an HTTP POST request.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the query is valid, the server will respond with *HTTP 200* and
return the names of the bind parameters it found in the query (if any) in
the *bindVars* attribute of the response. It will also return an array
of the collections used in the query in the *collections* attribute.
If a query can be parsed successfully, the *ast* attribute of the returned
JSON will contain the abstract syntax tree representation of the query.
The format of the *ast* is subject to change in future versions of
ArangoDB, but it can be used to inspect how ArangoDB interprets a given
query. Note that the abstract syntax tree will be returned without any
optimizations applied to it.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,
or if the query contains a parse error. The body of the response will
contain the error details embedded in a JSON object.

@EXAMPLES

a valid query


<div class="example-container" id="RestQueryValid_container">
<div id="RestQueryValid_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/query</span> &lt;&lt;EOF
{ "query" : "FOR i IN 1..100 FILTER i > 10 LIMIT 2 RETURN i * 3" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">620</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;parsed&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;collections&quot;</span> : [ ], 
  <span class="hljs-string">&quot;bindVars&quot;</span> : [ ], 
  <span class="hljs-string">&quot;ast&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;for&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;variable&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;range&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                  <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span> 
                }, 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                  <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">100</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;no-op&quot;</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;filter&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                }, 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                  <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">10</span> 
                } 
              ] 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;limit&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;return&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;times&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                }, 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                  <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">3</span> 
                } 
              ] 
            } 
          ] 
        } 
      ] 
    } 
  ] 
}
</pre>
<div id="RestQueryValid_container_collapse" onclick="$('#RestQueryValid_long').hide(); $('#RestQueryValid_short').show(); window.location.hash='RestQueryValid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestQueryValid_short" onclick="$('#RestQueryValid_short').hide(); $('#RestQueryValid_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/query</span> &lt;&lt;EOF
{ "query" : "FOR i IN 1..100 FILTER i > 10 LIMIT 2 RETURN i * 3" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">620</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





an invalid query


<div class="example-container" id="RestQueryInvalid_container">
<div id="RestQueryInvalid_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/query</span> &lt;&lt;EOF
{ "query" : "FOR i IN 1..100 FILTER i = 1 LIMIT 2 RETURN i * 3" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">143</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;syntax error, unexpected assignment near &#x27;= 1 LIMIT 2 RETURN i * 3&#x27; at position 1:26&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1501</span> 
}
</pre>
<div id="RestQueryInvalid_container_collapse" onclick="$('#RestQueryInvalid_long').hide(); $('#RestQueryInvalid_short').show(); window.location.hash='RestQueryInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestQueryInvalid_short" onclick="$('#RestQueryInvalid_short').hide(); $('#RestQueryInvalid_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/query</span> &lt;&lt;EOF
{ "query" : "FOR i IN 1..100 FILTER i = 1 LIMIT 2 RETURN i * 3" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">143</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryProperties.md -->
@startDocuBlock GetApiQueryProperties

@brief returns the configuration for the AQL query tracking

@RESTHEADER{GET /_api/query/properties, Returns the properties for the AQL query tracking, readQueryProperties}

@RESTDESCRIPTION
Returns the current query tracking configuration. The configuration is a
JSON object with the following properties:

- *enabled*: if set to *true*, then queries will be tracked. If set to
  *false*, neither queries nor slow queries will be tracked.

- *trackSlowQueries*: if set to *true*, then slow queries will be tracked
  in the list of slow queries if their runtime exceeds the value set in
  *slowQueryThreshold*. In order for slow queries to be tracked, the *enabled*
  property must also be set to *true*.

- *trackBindVars*: if set to *true*, then bind variables used in queries will
  be tracked.

- *maxSlowQueries*: the maximum number of slow queries to keep in the list
  of slow queries. If the list of slow queries is full, the oldest entry in
  it will be discarded when additional slow queries occur.

- *slowQueryThreshold*: the threshold value for treating a query as slow. A
  query with a runtime greater or equal to this threshold value will be
  put into the list of slow queries when slow query tracking is enabled.
  The value for *slowQueryThreshold* is specified in seconds.

- *maxQueryStringLength*: the maximum query string length to keep in the
  list of queries. Query strings can have arbitrary lengths, and this property
  can be used to save memory in case very long query strings are used. The
  value is specified in bytes.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if properties were retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryCurrent.md -->
@startDocuBlock GetApiQueryCurrent

@brief returns a list of currently running AQL queries

@RESTHEADER{GET /_api/query/current, Returns the currently running AQL queries, readQuery:current}

@RESTDESCRIPTION
Returns an array containing the AQL queries currently running in the selected
database. Each query is a JSON object with the following attributes:

- *id*: the query's id

- *database*: the name of the database the query runs in

- *user*: the name of the user that started the query

- *query*: the query string (potentially truncated)

- *bindVars*: the bind parameter values used by the query

- *started*: the date and time when the query was started

- *runTime*: the query's run time up to the point the list of queries was
  queried

- *state*: the query's current execution state (as a string). One of:
  - `"initializing"`
  - `"parsing"`
  - `"optimizing ast"`
  - `"loading collections"`
  - `"instantiating plan"`
  - `"optimizing plan"`
  - `"executing"`
  - `"finalizing"`
  - `"finished"`
  - `"killed"`
  - `"invalid"`

- *stream*: whether or not the query uses a streaming cursor

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{all,boolean,optional}
If set to *true*, will return the currently running queries in all databases,
not just the selected one.
Using the parameter is only allowed in the system database and with superuser
privileges.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the list of queries can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@RESTRETURNCODE{403}
*HTTP 403* is returned in case the *all* parameter was used, but the request
was made in a different database than _system, or by an non-privileged user.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/PutApiQueryCacheProperties.md -->
@startDocuBlock PutApiQueryCacheProperties

@brief changes the configuration for the AQL query results cache

@RESTHEADER{PUT /_api/query-cache/properties, Globally adjusts the AQL query results cache properties, replaceProperties:QueryCache}

@RESTDESCRIPTION
After the properties have been changed, the current set of properties will
be returned in the HTTP response.

Note: changing the properties may invalidate all results in the cache.
The global properties for AQL query cache.
The properties need to be passed in the attribute *properties* in the body
of the HTTP request. *properties* needs to be a JSON object with the following
properties:

@RESTBODYPARAM{mode,string,optional,string}
 the mode the AQL query cache should operate in. Possible values are *off*, *on* or *demand*.

@RESTBODYPARAM{maxResults,integer,optional,int64}
the maximum number of query results that will be stored per database-specific cache.

@RESTBODYPARAM{maxResultsSize,integer,optional,int64}
the maximum cumulated size of query results that will be stored per database-specific cache.

@RESTBODYPARAM{maxEntrySize,integer,optional,int64}
the maximum individual size of query results that will be stored per database-specific cache.

@RESTBODYPARAM{includeSystem,boolean,optional,}
whether or not to store results of queries that involve system collections.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the properties were changed successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/get_api_aqlfunction.md -->
@startDocuBlock get_api_aqlfunction

@brief gets all reqistered AQL user functions

@RESTHEADER{GET /_api/aqlfunction, Return registered AQL user functions, RestAqlUserFunctionsHandler:List}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{namespace,string,optional}
Returns all registered AQL user functions from namespace *namespace* under *result*.

@RESTDESCRIPTION
Returns all registered AQL user functions.

The call will return a JSON array with status codes and all user functions found under *result*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
on success *HTTP 200* is returned.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{result,array,required,aql_userfunction_struct}
All functions, or the ones matching the *namespace* parameter

@RESTSTRUCT{name,aql_userfunction_struct,string,required,}
The fully qualified name of the user function

@RESTSTRUCT{code,aql_userfunction_struct,string,required,}
A string representation of the function body

@RESTSTRUCT{isDeterministic,aql_userfunction_struct,boolean,required,}
an optional boolean value to indicate whether the function
results are fully deterministic (function return value solely depends on
the input value and return value is the same for repeated calls with same
input). The *isDeterministic* attribute is currently not used but may be
used later for optimizations.

@RESTRETURNCODE{400}
If the user function name is malformed, the server will respond with *HTTP 400*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message

@EXAMPLES


<div class="example-container" id="RestAqlfunctionsGetAll_container">
<div id="RestAqlfunctionsGetAll_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/aqlfunction/<span class="hljs-built_in">test</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ ] 
}
</pre>
<div id="RestAqlfunctionsGetAll_container_collapse" onclick="$('#RestAqlfunctionsGetAll_long').hide(); $('#RestAqlfunctionsGetAll_short').show(); window.location.hash='RestAqlfunctionsGetAll_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAqlfunctionsGetAll_short" onclick="$('#RestAqlfunctionsGetAll_short').hide(); $('#RestAqlfunctionsGetAll_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/aqlfunction/<span class="hljs-built_in">test</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/DeleteApiQueryCache.md -->
@startDocuBlock DeleteApiQueryCache

@brief clears the AQL query results cache

@RESTHEADER{DELETE /_api/query-cache, Clears any results in the AQL query results cache, clearCache}

@RESTDESCRIPTION
clears the query results cache for the current database
@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* when the cache was cleared
successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryCacheProperties.md -->
@startDocuBlock GetApiQueryCacheProperties

@brief returns the global configuration for the AQL query results cache

@RESTHEADER{GET /_api/query-cache/properties, Returns the global properties for the AQL query results cache, readProperties}

@RESTDESCRIPTION
Returns the global AQL query results cache configuration. The configuration is a
JSON object with the following properties:

- *mode*: the mode the AQL query results cache operates in. The mode is one of the following
  values: *off*, *on* or *demand*.

- *maxResults*: the maximum number of query results that will be stored per database-specific
  cache.

- *maxResultsSize*: the maximum cumulated size of query results that will be stored per
  database-specific cache.

- *maxEntrySize*: the maximum individual result size of queries that will be stored per
  database-specific cache.

- *includeSystem*: whether or not results of queries that involve system collections will be
  stored in the query results cache.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the properties can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/post_api_explain.md -->
@startDocuBlock post_api_explain

@brief explain an AQL query and return information about it

@RESTHEADER{POST /_api/explain, Explain an AQL query, explainQuery}

A JSON object describing the query and query parameters.

@RESTBODYPARAM{query,string,required,string}
the query which you want explained; If the query references any bind variables,
these must also be passed in the attribute *bindVars*. Additional
options for the query can be passed in the *options* attribute.

@RESTBODYPARAM{bindVars,array,optional,object}
key/value pairs representing the bind parameters.

@RESTBODYPARAM{options,object,optional,explain_options}
Options for the query

@RESTSTRUCT{allPlans,explain_options,boolean,optional,}
if set to *true*, all possible execution plans will be returned.
The default is *false*, meaning only the optimal plan will be returned.

@RESTSTRUCT{maxNumberOfPlans,explain_options,integer,optional,int64}
an optional maximum number of plans that the optimizer is
allowed to generate. Setting this attribute to a low value allows to put a
cap on the amount of work the optimizer does.

@RESTSTRUCT{optimizer,explain_options,object,optional,explain_options_optimizer}
Options related to the query optimizer.

@RESTSTRUCT{rules,explain_options_optimizer,array,optional,string}
A list of to-be-included or to-be-excluded optimizer rules can be put into this
attribute, telling the optimizer to include or exclude specific rules. To disable
a rule, prefix its name with a `-`, to enable a rule, prefix it with a `+`. There is
also a pseudo-rule `all`, which matches all optimizer rules. `-all` disables all rules.

@RESTDESCRIPTION

To explain how an AQL query would be executed on the server, the query string
can be sent to the server via an HTTP POST request. The server will then validate
the query and create an execution plan for it. The execution plan will be
returned, but the query will not be executed.

The execution plan that is returned by the server can be used to estimate the
probable performance of the query. Though the actual performance will depend
on many different factors, the execution plan normally can provide some rough
estimates on the amount of work the server needs to do in order to actually run
the query.

By default, the explain operation will return the optimal plan as chosen by
the query optimizer The optimal plan is the plan with the lowest total estimated
cost. The plan will be returned in the attribute *plan* of the response object.
If the option *allPlans* is specified in the request, the result will contain
all plans created by the optimizer. The plans will then be returned in the
attribute *plans*.

The result will also contain an attribute *warnings*, which is an array of
warnings that occurred during optimization or execution plan creation. Additionally,
a *stats* attribute is contained in the result with some optimizer statistics.
If *allPlans* is set to *false*, the result will contain an attribute *cacheable*
that states whether the query results can be cached on the server if the query
result cache were used. The *cacheable* attribute is not present when *allPlans*
is set to *true*.

Each plan in the result is a JSON object with the following attributes:
- *nodes*: the array of execution nodes of the plan.

- *estimatedCost*: the total estimated cost for the plan. If there are multiple
  plans, the optimizer will choose the plan with the lowest total cost.

- *collections*: an array of collections used in the query

- *rules*: an array of rules the optimizer applied.

- *variables*: array of variables used in the query (note: this may contain
  internal variables created by the optimizer)

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the query is valid, the server will respond with *HTTP 200* and
return the optimal execution plan in the *plan* attribute of the response.
If option *allPlans* was set in the request, an array of plans will be returned
in the *allPlans* attribute instead.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,
or if the query contains a parse error. The body of the response will
contain the error details embedded in a JSON object.
Omitting bind variables if the query references any will also result
in an *HTTP 400* error.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* in case a non-existing collection is
accessed in the query.

@EXAMPLES

Valid query


<div class="example-container" id="RestExplainValid_container">
<div id="RestExplainValid_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products RETURN p&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">962</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateCollectionNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">12</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">&quot;random&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexHint&quot;</span> : { 
          <span class="hljs-string">&quot;forced&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">22</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">22</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainValid_container_collapse" onclick="$('#RestExplainValid_long').hide(); $('#RestExplainValid_short').show(); window.location.hash='RestExplainValid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainValid_short" onclick="$('#RestExplainValid_short').hide(); $('#RestExplainValid_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products RETURN p&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">962</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





A plan with some optimizer rules applied


<div class="example-container" id="RestExplainOptimizerRules_container">
<div id="RestExplainOptimizerRules_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2829</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">11</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">4.3719280948873624</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ 
          <span class="hljs-string">&quot;name&quot;</span>, 
          <span class="hljs-string">&quot;id&quot;</span> 
        ], 
        <span class="hljs-string">&quot;filter&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
          <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;id&quot;</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
        <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;indexes&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71835&quot;</span>, 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230026833920&quot;</span>, 
            <span class="hljs-string">&quot;fields&quot;</span> : [ 
              <span class="hljs-string">&quot;id&quot;</span> 
            ], 
            <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">&quot;condition&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
                  <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;id&quot;</span>, 
                      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                        { 
                          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">4</span>, 
                      <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                      <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;LimitNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">11</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">5.3719280948873624</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">6.3719280948873624</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">7.3719280948873624</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
      <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
      <span class="hljs-string">&quot;use-indexes&quot;</span>, 
      <span class="hljs-string">&quot;use-index-for-sort&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-down&quot;</span>, 
      <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-into-enumerate&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;a&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">7.3719280948873624</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainOptimizerRules_container_collapse" onclick="$('#RestExplainOptimizerRules_long').hide(); $('#RestExplainOptimizerRules_short').show(); window.location.hash='RestExplainOptimizerRules_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainOptimizerRules_short" onclick="$('#RestExplainOptimizerRules_short').hide(); $('#RestExplainOptimizerRules_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2829</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using some options


<div class="example-container" id="RestExplainOptions_container">
<div id="RestExplainOptions_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;maxNumberOfPlans&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;allPlans&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;optimizer&quot;</span> : { 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;-all&quot;</span>, 
        <span class="hljs-string">&quot;+use-index-for-sort&quot;</span>, 
        <span class="hljs-string">&quot;+use-index-range&quot;</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">3090</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plans&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;nodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">11</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">11</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
          }, 
          <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
          <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
          <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;indexes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71868&quot;</span>, 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769230065631232&quot;</span>, 
              <span class="hljs-string">&quot;fields&quot;</span> : [ 
                <span class="hljs-string">&quot;id&quot;</span> 
              ], 
              <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          ], 
          <span class="hljs-string">&quot;condition&quot;</span> : { 
          }, 
          <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">11</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">21</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;id&quot;</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;a&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">3</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">31</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
            <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;a&quot;</span>, 
                <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span> 
              }, 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">4</span>, 
                <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;FilterNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">4</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">41</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;inVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          } 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">5</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">51</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">6</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">7</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">61</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;id&quot;</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;LimitNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">7</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">62</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">9</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;inVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;use-index-for-sort&quot;</span> 
      ], 
      <span class="hljs-string">&quot;collections&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;variables&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;name&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;a&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">63</span>, 
      <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ], 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">38</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainOptions_container_collapse" onclick="$('#RestExplainOptions_long').hide(); $('#RestExplainOptions_short').show(); window.location.hash='RestExplainOptions_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainOptions_short" onclick="$('#RestExplainOptions_short').hide(); $('#RestExplainOptions_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;maxNumberOfPlans&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;allPlans&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;optimizer&quot;</span> : { 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;-all&quot;</span>, 
        <span class="hljs-string">&quot;+use-index-for-sort&quot;</span>, 
        <span class="hljs-string">&quot;+use-index-range&quot;</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">3090</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Returning all plans


<div class="example-container" id="RestExplainAllPlans_container">
<div id="RestExplainAllPlans_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products FILTER p.id == 25 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;allPlans&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1651</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plans&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;nodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
          }, 
          <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
          <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
          <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;indexes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71804&quot;</span>, 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;hash&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1728769229977550848&quot;</span>, 
              <span class="hljs-string">&quot;fields&quot;</span> : [ 
                <span class="hljs-string">&quot;id&quot;</span> 
              ], 
              <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span> 
            } 
          ], 
          <span class="hljs-string">&quot;condition&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
                <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                  { 
                    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
                    <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
                    <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
                    <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                      { 
                        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                        <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;id&quot;</span>, 
                        <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                          { 
                            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                          } 
                        ] 
                      }, 
                      { 
                        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                        <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                        <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">25</span>, 
                        <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                        <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                      } 
                    ] 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">6</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;inVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
          }, 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;use-indexes&quot;</span>, 
        <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
        <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span> 
      ], 
      <span class="hljs-string">&quot;collections&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;variables&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ], 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainAllPlans_container_collapse" onclick="$('#RestExplainAllPlans_long').hide(); $('#RestExplainAllPlans_short').show(); window.location.hash='RestExplainAllPlans_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainAllPlans_short" onclick="$('#RestExplainAllPlans_short').hide(); $('#RestExplainAllPlans_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products FILTER p.id == 25 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;allPlans&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1651</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





A query that produces a warning


<div class="example-container" id="RestExplainWarning_container">
<div id="RestExplainWarning_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..10 RETURN 1 / 0&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1623</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;range&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">49</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">10</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
          <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-literal">null</span>, 
          <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;null&quot;</span>, 
          <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;json&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateListNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">13</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        } 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">23</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-up-2&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">23</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">1562</span>, 
      <span class="hljs-string">&quot;message&quot;</span> : <span class="hljs-string">&quot;division by zero&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainWarning_container_collapse" onclick="$('#RestExplainWarning_long').hide(); $('#RestExplainWarning_short').show(); window.location.hash='RestExplainWarning_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainWarning_short" onclick="$('#RestExplainWarning_short').hide(); $('#RestExplainWarning_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..10 RETURN 1 / 0&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1623</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Invalid query (missing bind parameter)


<div class="example-container" id="RestExplainInvalid_container">
<div id="RestExplainInvalid_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products FILTER p.id == @id LIMIT 2 RETURN p.n&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">126</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;no value specified for declared bind parameter &#x27;id&#x27; (while parsing)&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1551</span> 
}
</pre>
<div id="RestExplainInvalid_container_collapse" onclick="$('#RestExplainInvalid_long').hide(); $('#RestExplainInvalid_short').show(); window.location.hash='RestExplainInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainInvalid_short" onclick="$('#RestExplainInvalid_short').hide(); $('#RestExplainInvalid_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products FILTER p.id == @id LIMIT 2 RETURN p.n&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">126</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





The data returned in the **plan** attribute of the result contains one element per AQL top-level statement
(i.e. `FOR`, `RETURN`, `FILTER` etc.). If the query optimizer removed some unnecessary statements,
the result might also contain less elements than there were top-level statements in the AQL query.

The following example shows a query with a non-sensible filter condition that
the optimizer has removed so that there are less top-level statements.


<div class="example-container" id="RestExplainEmpty_container">
<div id="RestExplainEmpty_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ "query" : "FOR i IN [ 1, 2, 3 ] FILTER 1 == 2 RETURN i" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1358</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;array&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">41</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">2</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            }, 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
              <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">3</span>, 
              <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
              <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;json&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;EnumerateListNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        } 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;NoResultsNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">0.5</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">0.5</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">0.5</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">41</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainEmpty_container_collapse" onclick="$('#RestExplainEmpty_long').hide(); $('#RestExplainEmpty_short').show(); window.location.hash='RestExplainEmpty_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainEmpty_short" onclick="$('#RestExplainEmpty_short').hide(); $('#RestExplainEmpty_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ "query" : "FOR i IN [ 1, 2, 3 ] FILTER 1 == 2 RETURN i" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1358</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/PutApiQueryProperties.md -->
@startDocuBlock PutApiQueryProperties

@brief changes the configuration for the AQL query tracking

@RESTHEADER{PUT /_api/query/properties, Changes the properties for the AQL query tracking, replaceProperties}

@RESTBODYPARAM{enabled,boolean,required,}
If set to *true*, then queries will be tracked. If set to
*false*, neither queries nor slow queries will be tracked.

@RESTBODYPARAM{trackSlowQueries,boolean,required,}
If set to *true*, then slow queries will be tracked
in the list of slow queries if their runtime exceeds the value set in
*slowQueryThreshold*. In order for slow queries to be tracked, the *enabled*
property must also be set to *true*.

@RESTBODYPARAM{trackBindVars,boolean,required,}
If set to *true*, then the bind variables used in queries will be tracked
along with queries.

@RESTBODYPARAM{maxSlowQueries,integer,required,int64}
The maximum number of slow queries to keep in the list
of slow queries. If the list of slow queries is full, the oldest entry in
it will be discarded when additional slow queries occur.

@RESTBODYPARAM{slowQueryThreshold,integer,required,int64}
The threshold value for treating a query as slow. A
query with a runtime greater or equal to this threshold value will be
put into the list of slow queries when slow query tracking is enabled.
The value for *slowQueryThreshold* is specified in seconds.

@RESTBODYPARAM{maxQueryStringLength,integer,required,int64}
The maximum query string length to keep in the list of queries.
Query strings can have arbitrary lengths, and this property
can be used to save memory in case very long query strings are used. The
value is specified in bytes.

@RESTDESCRIPTION
The properties need to be passed in the attribute *properties* in the body
of the HTTP request. *properties* needs to be a JSON object.

After the properties have been changed, the current set of properties will
be returned in the HTTP response.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the properties were changed successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/post_api_aqlfunction.md -->
@startDocuBlock post_api_aqlfunction

@brief create a new AQL user function

@RESTHEADER{POST /_api/aqlfunction, Create AQL user function, RestAqlUserFunctionsHandler:create}

@RESTBODYPARAM{name,string,required,string}
the fully qualified name of the user functions.

@RESTBODYPARAM{code,string,required,string}
a string representation of the function body.

@RESTBODYPARAM{isDeterministic,boolean,optional,}
an optional boolean value to indicate whether the function
results are fully deterministic (function return value solely depends on
the input value and return value is the same for repeated calls with same
input). The *isDeterministic* attribute is currently not used but may be
used later for optimizations.

@RESTDESCRIPTION

In case of success, HTTP 200 is returned.
If the function isn't valid etc. HTTP 400 including a detailed error message will be returned.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the function already existed and was replaced by the
call, the server will respond with *HTTP 200*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{isNewlyCreated,boolean,required,}
boolean flag to indicate whether the function was newly created (*false* in this case)

@RESTRETURNCODE{201}
If the function can be registered by the server, the server will respond with
*HTTP 201*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{isNewlyCreated,boolean,required,}
boolean flag to indicate whether the function was newly created (*true* in this case)

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing from the
request, the server will respond with *HTTP 400*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message

@EXAMPLES


<div class="example-container" id="RestAqlfunctionCreate_container">
<div id="RestAqlfunctionCreate_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/aqlfunction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myfunctions::temperature::celsiustofahrenheit&quot;</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;function (celsius) { return celsius * 1.8 + 32; }&quot;</span>, 
  <span class="hljs-string">&quot;isDeterministic&quot;</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">48</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestAqlfunctionCreate_container_collapse" onclick="$('#RestAqlfunctionCreate_long').hide(); $('#RestAqlfunctionCreate_short').show(); window.location.hash='RestAqlfunctionCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAqlfunctionCreate_short" onclick="$('#RestAqlfunctionCreate_short').hide(); $('#RestAqlfunctionCreate_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/aqlfunction</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myfunctions::temperature::celsiustofahrenheit&quot;</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-string">&quot;function (celsius) { return celsius * 1.8 + 32; }&quot;</span>, 
  <span class="hljs-string">&quot;isDeterministic&quot;</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">48</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/DeleteApiQueryKill.md -->
@startDocuBlock DeleteApiQueryKill

@brief kills an AQL query

@RESTHEADER{DELETE /_api/query/{query-id}, Kills a running AQL query, deleteQuery}

@RESTURLPARAMETERS

@RESTURLPARAM{query-id,string,required}
The id of the query.

@RESTDESCRIPTION
Kills a running query in the currently selected database. The query will be 
terminated at the next cancelation point.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{all,boolean,optional}
If set to *true*, will attempt to kill the specified query in all databases, 
not just the selected one.
Using the parameter is only allowed in the system database and with superuser
privileges.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* when the query was still running when
the kill request was executed and the query's kill flag was set.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request.

@RESTRETURNCODE{403}
*HTTP 403* is returned in case the *all* parameter was used, but the request
was made in a different database than _system, or by an non-privileged user.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* when no query with the specified
id was found.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQuerySlow.md -->
@startDocuBlock GetApiQuerySlow

@brief returns a list of slow running AQL queries

@RESTHEADER{GET /_api/query/slow, Returns the list of slow AQL queries, readQuery:Slow}

@RESTDESCRIPTION
Returns an array containing the last AQL queries that are finished and
have exceeded the slow query threshold in the selected database.
The maximum amount of queries in the list can be controlled by setting
the query tracking property `maxSlowQueries`. The threshold for treating
a query as *slow* can be adjusted by setting the query tracking property
`slowQueryThreshold`.

Each query is a JSON object with the following attributes:

- *id*: the query's id

- *database*: the name of the database the query runs in

- *user*: the name of the user that started the query

- *query*: the query string (potentially truncated)

- *bindVars*: the bind parameter values used by the query

- *started*: the date and time when the query was started

- *runTime*: the query's total run time

- *state*: the query's current execution state (will always be "finished"
  for the list of slow queries)

- *stream*: whether or not the query uses a streaming cursor

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{all,boolean,optional}
If set to *true*, will return the slow queries from all databases, not just
the selected one.
Using the parameter is only allowed in the system database and with superuser
privileges.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the list of queries can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@RESTRETURNCODE{403}
*HTTP 403* is returned in case the *all* parameter was used, but the request
was made in a different database than _system, or by an non-privileged user.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/delete_api_aqlfunction.md -->
@startDocuBlock delete_api_aqlfunction

@brief remove an existing AQL user function

@RESTHEADER{DELETE /_api/aqlfunction/{name}, Remove existing AQL user function, RestAqlUserFunctionsHandler:Remove}

@RESTURLPARAMETERS

@RESTURLPARAM{name,string,required}
the name of the AQL user function.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{group,string,optional}
- *true*: The function name provided in *name* is treated as
  a namespace prefix, and all functions in the specified namespace will be deleted.
  The returned number of deleted functions may become 0 if none matches the string.
- *false*: The function name provided in *name* must be fully
  qualified, including any namespaces. If none matches the *name*, HTTP 404 is returned.

@RESTDESCRIPTION
Removes an existing AQL user function or function group, identified by *name*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the function can be removed by the server, the server will respond with
*HTTP 200*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{deletedCount,integer,required,int64}
The number of deleted user functions, always `1` when `group` is set to *false*.
Any number `>= 0` when `group` is set to *true*

@RESTRETURNCODE{400}
If the user function name is malformed, the server will respond with *HTTP 400*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message

@RESTRETURNCODE{404}
If the specified user user function does not exist, the server will respond with *HTTP 404*.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message

@EXAMPLES

deletes a function:


<div class="example-container" id="RestAqlfunctionDelete_container">
<div id="RestAqlfunctionDelete_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/aqlfunction/square::x::y</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">43</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;deletedCount&quot;</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="RestAqlfunctionDelete_container_collapse" onclick="$('#RestAqlfunctionDelete_long').hide(); $('#RestAqlfunctionDelete_short').show(); window.location.hash='RestAqlfunctionDelete_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAqlfunctionDelete_short" onclick="$('#RestAqlfunctionDelete_short').hide(); $('#RestAqlfunctionDelete_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/aqlfunction/square::x::y</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">43</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






function not found:


<div class="example-container" id="RestAqlfunctionDeleteFails_container">
<div id="RestAqlfunctionDeleteFails_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/aqlfunction/myfunction::x::y</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">114</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;no AQL user function with name &#x27;myfunction::x::y&#x27; found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1582</span> 
}
</pre>
<div id="RestAqlfunctionDeleteFails_container_collapse" onclick="$('#RestAqlfunctionDeleteFails_long').hide(); $('#RestAqlfunctionDeleteFails_short').show(); window.location.hash='RestAqlfunctionDeleteFails_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAqlfunctionDeleteFails_short" onclick="$('#RestAqlfunctionDeleteFails_short').hide(); $('#RestAqlfunctionDeleteFails_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/aqlfunction/myfunction::x::y</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">114</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/get_api_view_name.md -->
@startDocuBlock get_api_view_name

@brief returns a View

@RESTHEADER{GET /_api/view/{view-name}, Return information about a View, getViews:Properties}

@RESTURLPARAMETERS

@RESTURLPARAM{view-name,string,required}
The name of the View.

@RESTDESCRIPTION
The result is an object briefly describing the View with the following attributes:
- *id*: The identifier of the View
- *name*: The name of the View
- *type*: The type of the View as string

@RESTRETURNCODES

@RESTRETURNCODE{404}
If the *view-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestViewGetViewIdentifierArangoSearch_container">
<div id="RestViewGetViewIdentifierArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/74098</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">120</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testView&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74098&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74098&quot;</span> 
}
</pre>
<div id="RestViewGetViewIdentifierArangoSearch_container_collapse" onclick="$('#RestViewGetViewIdentifierArangoSearch_long').hide(); $('#RestViewGetViewIdentifierArangoSearch_short').show(); window.location.hash='RestViewGetViewIdentifierArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewGetViewIdentifierArangoSearch_short" onclick="$('#RestViewGetViewIdentifierArangoSearch_short').hide(); $('#RestViewGetViewIdentifierArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/74098</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">120</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a name:


<div class="example-container" id="RestViewGetViewNameArangoSearch_container">
<div id="RestViewGetViewNameArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/testView</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">120</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testView&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74103&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74103&quot;</span> 
}
</pre>
<div id="RestViewGetViewNameArangoSearch_container_collapse" onclick="$('#RestViewGetViewNameArangoSearch_long').hide(); $('#RestViewGetViewNameArangoSearch_short').show(); window.location.hash='RestViewGetViewNameArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewGetViewNameArangoSearch_short" onclick="$('#RestViewGetViewNameArangoSearch_short').hide(); $('#RestViewGetViewNameArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/testView</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">120</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/put_api_view_properties_arangosearch.md -->
@startDocuBlock put_api_view_properties_arangosearch

@brief changes all properties of an ArangoSearch View

@RESTHEADER{PUT /_api/view/{view-name}/properties#ArangoSearch, Change properties of an ArangoSearch View, modifyView}

@RESTURLPARAMETERS

@RESTURLPARAM{view-name,string,required}
The name of the View.

@RESTBODYPARAM{links,object,optional,}
Expects an object with the attribute keys being names of to be linked collections,
and the link properties as attribute values. See
[ArangoSearch View Link Properties](https://www.arangodb.com/docs/stable/arangosearch-views.html#link-properties)
for details.

@RESTBODYPARAM{cleanupIntervalStep,integer,optional,int64}
Wait at least this many commits between removing unused files in the
ArangoSearch data directory (default: 2, to disable use: 0).
For the case where the consolidation policies merge segments often (i.e. a lot
of commit+consolidate), a lower value will cause a lot of disk space to be
wasted.
For the case where the consolidation policies rarely merge segments (i.e. few
inserts/deletes), a higher value will impact performance without any added
benefits.<br/>
_Background:_
  With every "commit" or "consolidate" operation a new state of the View
  internal data-structures is created on disk.
  Old states/snapshots are released once there are no longer any users
  remaining.
  However, the files for the released states/snapshots are left on disk, and
  only removed by "cleanup" operation.

@RESTBODYPARAM{commitIntervalMsec,integer,optional,int64}
Wait at least this many milliseconds between committing View data store
changes and making documents visible to queries (default: 1000, to disable
use: 0).
For the case where there are a lot of inserts/updates, a lower value, until
commit, will cause the index not to account for them and memory usage would
continue to grow.
For the case where there are a few inserts/updates, a higher value will impact
performance and waste disk space for each commit call without any added
benefits.<br/>
_Background:_
  For data retrieval ArangoSearch Views follow the concept of
  "eventually-consistent", i.e. eventually all the data in ArangoDB will be
  matched by corresponding query expressions.
  The concept of ArangoSearch View "commit" operation is introduced to
  control the upper-bound on the time until document addition/removals are
  actually reflected by corresponding query expressions.
  Once a "commit" operation is complete all documents added/removed prior to
  the start of the "commit" operation will be reflected by queries invoked in
  subsequent ArangoDB transactions, in-progress ArangoDB transactions will
  still continue to return a repeatable-read state.

@RESTBODYPARAM{consolidationIntervalMsec,integer,optional,int64}
Wait at least this many milliseconds between applying 'consolidationPolicy' to
consolidate View data store and possibly release space on the filesystem
(default: 10000, to disable use: 0).
For the case where there are a lot of data modification operations, a higher
value could potentially have the data store consume more space and file handles.
For the case where there are a few data modification operations, a lower value
will impact performance due to no segment candidates available for
consolidation.<br/>
_Background:_
  For data modification ArangoSearch Views follow the concept of a
  "versioned data store". Thus old versions of data may be removed once there
  are no longer any users of the old data. The frequency of the cleanup and
  compaction operations are governed by 'consolidationIntervalMsec' and the
  candidates for compaction are selected via 'consolidationPolicy'.

@RESTBODYPARAM{consolidationPolicy,object,optional,}
The consolidation policy to apply for selecting which segments should be merged
(default: {})<br/>
_Background:_
  With each ArangoDB transaction that inserts documents one or more
  ArangoSearch internal segments gets created.
  Similarly for removed documents the segments that contain such documents
  will have these documents marked as 'deleted'.
  Over time this approach causes a lot of small and sparse segments to be
  created.
  A "consolidation" operation selects one or more segments and copies all of
  their valid documents into a single new segment, thereby allowing the
  search algorithm to perform more optimally and for extra file handles to be
  released once old segments are no longer used.<br/>
Sub-properties:
  - `type` (string, _optional_):
    The segment candidates for the "consolidation" operation are selected based
    upon several possible configurable formulas as defined by their types.
    The currently supported types are:
    - `"tier"` (default): consolidate based on segment byte size and live
      document count as dictated by the customization attributes. If this type
      is used, then below `segments*` and `minScore` properties are available.
    - `"bytes_accum"`: consolidate if and only if
      `{threshold} > (segment_bytes + sum_of_merge_candidate_segment_bytes) / all_segment_bytes`
      i.e. the sum of all candidate segment byte size is less than the total
      segment byte size multiplied by the `{threshold}`. If this type is used,
      then below `threshold` property is available.
  - `threshold` (number, _optional_): value in the range `[0.0, 1.0]`
  - `segmentsBytesFloor` (number, _optional_): Defines the value (in bytes) to
    treat all smaller segments as equal for consolidation selection
    (default: 2097152)
  - `segmentsBytesMax` (number, _optional_): Maximum allowed size of all
    consolidated segments in bytes (default: 5368709120)
  - `segmentsMax` (number, _optional_): The maximum number of segments that will
    be evaluated as candidates for consolidation (default: 10)
  - `segmentsMin` (number, _optional_): The minimum number of segments that will
    be evaluated as candidates for consolidation (default: 1)
  - `minScore` (number, _optional_): (default: 0)

@RESTDESCRIPTION
Changes the properties of a View by replacing them.

On success an object with the following attributes is returned:
- *id*: The identifier of the View
- *name*: The name of the View
- *type*: The View type
- all additional ArangoSearch View implementation specific properties

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *view-name* is missing, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *view-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestViewPutPropertiesArangoSearch_container">
<div id="RestViewPutPropertiesArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view/products/properties</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">471</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74131&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74131&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  } 
}
</pre>
<div id="RestViewPutPropertiesArangoSearch_container_collapse" onclick="$('#RestViewPutPropertiesArangoSearch_long').hide(); $('#RestViewPutPropertiesArangoSearch_short').show(); window.location.hash='RestViewPutPropertiesArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewPutPropertiesArangoSearch_short" onclick="$('#RestViewPutPropertiesArangoSearch_short').hide(); $('#RestViewPutPropertiesArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view/products/properties</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">471</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/patch_api_view_properties_arangosearch.md -->
@startDocuBlock patch_api_view_properties_arangosearch

@brief partially changes properties of an ArangoSearch View

@RESTHEADER{PATCH /_api/view/{view-name}/properties#ArangoSearch, Partially changes properties of an ArangoSearch View, modifyViewPartial}

@RESTURLPARAMETERS

@RESTURLPARAM{view-name,string,required}
The name of the View.

@RESTBODYPARAM{links,object,optional,}
Expects an object with the attribute keys being names of to be linked collections,
and the link properties as attribute values. See
[ArangoSearch View Link Properties](https://www.arangodb.com/docs/stable/arangosearch-views.html#link-properties)
for details.

@RESTBODYPARAM{cleanupIntervalStep,integer,optional,int64}
Wait at least this many commits between removing unused files in the
ArangoSearch data directory (default: 2, to disable use: 0).
For the case where the consolidation policies merge segments often (i.e. a lot
of commit+consolidate), a lower value will cause a lot of disk space to be
wasted.
For the case where the consolidation policies rarely merge segments (i.e. few
inserts/deletes), a higher value will impact performance without any added
benefits.<br/>
_Background:_
  With every "commit" or "consolidate" operation a new state of the View
  internal data-structures is created on disk.
  Old states/snapshots are released once there are no longer any users
  remaining.
  However, the files for the released states/snapshots are left on disk, and
  only removed by "cleanup" operation.

@RESTBODYPARAM{commitIntervalMsec,integer,optional,int64}
Wait at least this many milliseconds between committing View data store
changes and making documents visible to queries (default: 1000, to disable
use: 0).
For the case where there are a lot of inserts/updates, a lower value, until
commit, will cause the index not to account for them and memory usage would
continue to grow.
For the case where there are a few inserts/updates, a higher value will impact
performance and waste disk space for each commit call without any added
benefits.<br/>
_Background:_
  For data retrieval ArangoSearch Views follow the concept of
  "eventually-consistent", i.e. eventually all the data in ArangoDB will be
  matched by corresponding query expressions.
  The concept of ArangoSearch View "commit" operation is introduced to
  control the upper-bound on the time until document addition/removals are
  actually reflected by corresponding query expressions.
  Once a "commit" operation is complete all documents added/removed prior to
  the start of the "commit" operation will be reflected by queries invoked in
  subsequent ArangoDB transactions, in-progress ArangoDB transactions will
  still continue to return a repeatable-read state.

@RESTBODYPARAM{consolidationIntervalMsec,integer,optional,int64}
Wait at least this many milliseconds between applying 'consolidationPolicy' to
consolidate View data store and possibly release space on the filesystem
(default: 10000, to disable use: 0).
For the case where there are a lot of data modification operations, a higher
value could potentially have the data store consume more space and file handles.
For the case where there are a few data modification operations, a lower value
will impact performance due to no segment candidates available for
consolidation.<br/>
_Background:_
  For data modification ArangoSearch Views follow the concept of a
  "versioned data store". Thus old versions of data may be removed once there
  are no longer any users of the old data. The frequency of the cleanup and
  compaction operations are governed by 'consolidationIntervalMsec' and the
  candidates for compaction are selected via 'consolidationPolicy'.

@RESTBODYPARAM{consolidationPolicy,object,optional,}
The consolidation policy to apply for selecting which segments should be merged
(default: {})<br/>
_Background:_
  With each ArangoDB transaction that inserts documents one or more
  ArangoSearch internal segments gets created.
  Similarly for removed documents the segments that contain such documents
  will have these documents marked as 'deleted'.
  Over time this approach causes a lot of small and sparse segments to be
  created.
  A "consolidation" operation selects one or more segments and copies all of
  their valid documents into a single new segment, thereby allowing the
  search algorithm to perform more optimally and for extra file handles to be
  released once old segments are no longer used.<br/>
Sub-properties:
  - `type` (string, _optional_):
    The segment candidates for the "consolidation" operation are selected based
    upon several possible configurable formulas as defined by their types.
    The currently supported types are:
    - `"tier"` (default): consolidate based on segment byte size and live
      document count as dictated by the customization attributes. If this type
      is used, then below `segments*` and `minScore` properties are available.
    - `"bytes_accum"`: consolidate if and only if
      `{threshold} > (segment_bytes + sum_of_merge_candidate_segment_bytes) / all_segment_bytes`
      i.e. the sum of all candidate segment byte size is less than the total
      segment byte size multiplied by the `{threshold}`. If this type is used,
      then below `threshold` property is available.
  - `threshold` (number, _optional_): value in the range `[0.0, 1.0]`
  - `segmentsBytesFloor` (number, _optional_): Defines the value (in bytes) to
    treat all smaller segments as equal for consolidation selection
    (default: 2097152)
  - `segmentsBytesMax` (number, _optional_): Maximum allowed size of all
    consolidated segments in bytes (default: 5368709120)
  - `segmentsMax` (number, _optional_): The maximum number of segments that will
    be evaluated as candidates for consolidation (default: 10)
  - `segmentsMin` (number, _optional_): The minimum number of segments that will
    be evaluated as candidates for consolidation (default: 1)
  - `minScore` (number, _optional_): (default: 0)

@RESTDESCRIPTION
Changes the properties of a View by updating the specified attributes.

On success an object with the following attributes is returned:
- *id*: The identifier of the View
- *name*: The name of the View
- *type*: The View type
- all additional ArangoSearch View implementation specific properties

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *view-name* is missing, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *view-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestViewPatchPropertiesArangoSearch_container">
<div id="RestViewPatchPropertiesArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view/products/properties</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">471</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74120&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74120&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  } 
}
</pre>
<div id="RestViewPatchPropertiesArangoSearch_container_collapse" onclick="$('#RestViewPatchPropertiesArangoSearch_long').hide(); $('#RestViewPatchPropertiesArangoSearch_short').show(); window.location.hash='RestViewPatchPropertiesArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewPatchPropertiesArangoSearch_short" onclick="$('#RestViewPatchPropertiesArangoSearch_short').hide(); $('#RestViewPatchPropertiesArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view/products/properties</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;locale&quot;</span> : <span class="hljs-string">&quot;en&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">471</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/get_api_view_properties.md -->
@startDocuBlock get_api_view_properties

@brief reads the properties of the specified View

@RESTHEADER{GET /_api/view/{view-name}/properties, Read properties of a View, getView}

@RESTURLPARAMETERS

@RESTDESCRIPTION
Returns an object containing the definition of the View identified by *view-name*.

@RESTURLPARAM{view-name,string,required}
The name of the View.

@RESTDESCRIPTION
The result is an object with a full description of a specific View, including
View type dependent properties.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *view-name* is missing, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *view-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestViewGetViewPropertiesIdentifierArangoSearch_container">
<div id="RestViewGetViewPropertiesIdentifierArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/74108/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">496</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74108&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74108&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span> 
}
</pre>
<div id="RestViewGetViewPropertiesIdentifierArangoSearch_container_collapse" onclick="$('#RestViewGetViewPropertiesIdentifierArangoSearch_long').hide(); $('#RestViewGetViewPropertiesIdentifierArangoSearch_short').show(); window.location.hash='RestViewGetViewPropertiesIdentifierArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewGetViewPropertiesIdentifierArangoSearch_short" onclick="$('#RestViewGetViewPropertiesIdentifierArangoSearch_short').hide(); $('#RestViewGetViewPropertiesIdentifierArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/74108/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">496</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a name:


<div class="example-container" id="RestViewGetViewPropertiesNameArangoSearch_container">
<div id="RestViewGetViewPropertiesNameArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/products/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">496</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74114&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74114&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span> 
}
</pre>
<div id="RestViewGetViewPropertiesNameArangoSearch_container_collapse" onclick="$('#RestViewGetViewPropertiesNameArangoSearch_long').hide(); $('#RestViewGetViewPropertiesNameArangoSearch_short').show(); window.location.hash='RestViewGetViewPropertiesNameArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewGetViewPropertiesNameArangoSearch_short" onclick="$('#RestViewGetViewPropertiesNameArangoSearch_short').hide(); $('#RestViewGetViewPropertiesNameArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/products/properties</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">496</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/get_api_views.md -->
@startDocuBlock get_api_views

@brief returns all Views

@RESTHEADER{GET /_api/view, List all Views, getViews:AllViews}

@RESTDESCRIPTION
Returns an object containing a listing of all Views in a database, regardless
of their type. It is an array of objects with the following attributes:
- *id*
- *name*
- *type*

@RESTRETURNCODES

@RESTRETURNCODE{200}
The list of Views

@EXAMPLES

Return information about all Views:


<div class="example-container" id="RestViewGetAllViews_container">
<div id="RestViewGetAllViews_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">129</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/108&quot;</span>, 
      <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;108&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;demoView&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span> 
    } 
  ] 
}
</pre>
<div id="RestViewGetAllViews_container_collapse" onclick="$('#RestViewGetAllViews_long').hide(); $('#RestViewGetAllViews_short').show(); window.location.hash='RestViewGetAllViews_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewGetAllViews_short" onclick="$('#RestViewGetAllViews_short').hide(); $('#RestViewGetAllViews_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">129</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/post_api_view_arangosearch.md -->
@startDocuBlock post_api_view_arangosearch

@brief creates an ArangoSearch View

@RESTHEADER{POST /_api/view#arangosearch, Create an ArangoSearch View, createView}

@RESTBODYPARAM{name,string,required,string}
The name of the View.

@RESTBODYPARAM{type,string,required,string}
The type of the View. Must be equal to *"arangosearch"*.
This option is immutable.

@RESTBODYPARAM{links,object,optional,}
Expects an object with the attribute keys being names of to be linked collections,
and the link properties as attribute values. See
[ArangoSearch View Link Properties](https://www.arangodb.com/docs/stable/arangosearch-views.html#link-properties)
for details.

@RESTBODYPARAM{primarySort,array,optional,object}
A primary sort order can be defined to enable an AQL optimization. If a query
iterates over all documents of a View, wants to sort them by attribute values
and the (left-most) fields to sort by as well as their sorting direction match
with the *primarySort* definition, then the `SORT` operation is optimized away.
This option is immutable.<br/>
Expects an array of objects, each specifying a field (attribute path) and a
sort direction (`"asc` for ascending, `"desc"` for descending):
`[ { "field": "attr", "direction": "asc"}, … ]`

@RESTBODYPARAM{primarySortCompression,string,optional,string}
Defines how to compress the primary sort data (introduced in v3.7.1).
ArangoDB v3.5 and v3.6 always compress the index using LZ4.
This option is immutable.
- `"lz4"` (default): use LZ4 fast compression.
- `"none"`: disable compression to trade space for speed.

@RESTBODYPARAM{storedValues,array,optional,object}
An array of objects to describe which document attributes to store in the View
index (introduced in v3.7.1). It can then cover search queries, which means the
data can be taken from the index directly and accessing the storage engine can
be avoided.<br/>
Each object is expected in the form
`{ "fields": [ "attr1", "attr2", ... "attrN" ], "compression": "none" }`,
where the required `fields` attribute is an array of strings with one or more
document attribute paths. The specified attributes are placed into a single
column of the index. A column with all fields that are involved in common
search queries is ideal for performance. The column should not include too many
unneeded fields however. The optional `compression` attribute defines the
compression type used for the internal column-store, which can be `"lz4"`
(LZ4 fast compression, default) or `"none"` (no compression).<br/>
This option is immutable. Not to be confused with `storeValues`, which allows
to store meta data about attribute values in the View index.

@RESTBODYPARAM{cleanupIntervalStep,integer,optional,int64}
Wait at least this many commits between removing unused files in the
ArangoSearch data directory (default: 2, to disable use: 0).
For the case where the consolidation policies merge segments often (i.e. a lot
of commit+consolidate), a lower value will cause a lot of disk space to be
wasted.
For the case where the consolidation policies rarely merge segments (i.e. few
inserts/deletes), a higher value will impact performance without any added
benefits.<br/>
_Background:_
  With every "commit" or "consolidate" operation a new state of the View
  internal data-structures is created on disk.
  Old states/snapshots are released once there are no longer any users
  remaining.
  However, the files for the released states/snapshots are left on disk, and
  only removed by "cleanup" operation.

@RESTBODYPARAM{commitIntervalMsec,integer,optional,int64}
Wait at least this many milliseconds between committing View data store
changes and making documents visible to queries (default: 1000, to disable
use: 0).
For the case where there are a lot of inserts/updates, a lower value, until
commit, will cause the index not to account for them and memory usage would
continue to grow.
For the case where there are a few inserts/updates, a higher value will impact
performance and waste disk space for each commit call without any added
benefits.<br/>
_Background:_
  For data retrieval ArangoSearch Views follow the concept of
  "eventually-consistent", i.e. eventually all the data in ArangoDB will be
  matched by corresponding query expressions.
  The concept of ArangoSearch View "commit" operation is introduced to
  control the upper-bound on the time until document addition/removals are
  actually reflected by corresponding query expressions.
  Once a "commit" operation is complete all documents added/removed prior to
  the start of the "commit" operation will be reflected by queries invoked in
  subsequent ArangoDB transactions, in-progress ArangoDB transactions will
  still continue to return a repeatable-read state.

@RESTBODYPARAM{consolidationIntervalMsec,integer,optional,int64}
Wait at least this many milliseconds between applying 'consolidationPolicy' to
consolidate View data store and possibly release space on the filesystem
(default: 10000, to disable use: 0).
For the case where there are a lot of data modification operations, a higher
value could potentially have the data store consume more space and file handles.
For the case where there are a few data modification operations, a lower value
will impact performance due to no segment candidates available for
consolidation.<br/>
_Background:_
  For data modification ArangoSearch Views follow the concept of a
  "versioned data store". Thus old versions of data may be removed once there
  are no longer any users of the old data. The frequency of the cleanup and
  compaction operations are governed by 'consolidationIntervalMsec' and the
  candidates for compaction are selected via 'consolidationPolicy'.

@RESTBODYPARAM{consolidationPolicy,object,optional,}
The consolidation policy to apply for selecting which segments should be merged
(default: {})<br/>
_Background:_
  With each ArangoDB transaction that inserts documents one or more
  ArangoSearch internal segments gets created.
  Similarly for removed documents the segments that contain such documents
  will have these documents marked as 'deleted'.
  Over time this approach causes a lot of small and sparse segments to be
  created.
  A "consolidation" operation selects one or more segments and copies all of
  their valid documents into a single new segment, thereby allowing the
  search algorithm to perform more optimally and for extra file handles to be
  released once old segments are no longer used.<br/>
Sub-properties:
  - `type` (string, _optional_):
    The segment candidates for the "consolidation" operation are selected based
    upon several possible configurable formulas as defined by their types.
    The currently supported types are:
    - `"tier"` (default): consolidate based on segment byte size and live
      document count as dictated by the customization attributes. If this type
      is used, then below `segments*` and `minScore` properties are available.
    - `"bytes_accum"`: consolidate if and only if
      `{threshold} > (segment_bytes + sum_of_merge_candidate_segment_bytes) / all_segment_bytes`
      i.e. the sum of all candidate segment byte size is less than the total
      segment byte size multiplied by the `{threshold}`. If this type is used,
      then below `threshold` property is available.
  - `threshold` (number, _optional_): value in the range `[0.0, 1.0]`
  - `segmentsBytesFloor` (number, _optional_): Defines the value (in bytes) to
    treat all smaller segments as equal for consolidation selection
    (default: 2097152)
  - `segmentsBytesMax` (number, _optional_): Maximum allowed size of all
    consolidated segments in bytes (default: 5368709120)
  - `segmentsMax` (number, _optional_): The maximum number of segments that will
    be evaluated as candidates for consolidation (default: 10)
  - `segmentsMin` (number, _optional_): The minimum number of segments that will
    be evaluated as candidates for consolidation (default: 1)
  - `minScore` (number, _optional_): (default: 0)

@RESTBODYPARAM{writebufferIdle,integer,optional,int64}
Maximum number of writers (segments) cached in the pool
(default: 64, use 0 to disable, immutable)

@RESTBODYPARAM{writebufferActive,integer,optional,int64}
Maximum number of concurrent active writers (segments) that perform a
transaction. Other writers (segments) wait till current active writers
(segments) finish (default: 0, use 0 to disable, immutable)

@RESTBODYPARAM{writebufferSizeMax,integer,optional,int64}
Maximum memory byte size per writer (segment) before a writer (segment) flush
is triggered. `0` value turns off this limit for any writer (buffer) and data
will be flushed periodically based on the value defined for the flush thread
(ArangoDB server startup option). `0` value should be used carefully due to
high potential memory consumption
(default: 33554432, use 0 to disable, immutable)

@RESTDESCRIPTION
Creates a new View with a given name and properties if it does not
already exist.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *name* or *type* attribute are missing or invalid, then an *HTTP 400*
error is returned.

@RESTRETURNCODE{409}
If a View called *name* already exists, then an *HTTP 409* error is returned.

@EXAMPLES


<div class="example-container" id="RestViewPostViewArangoSearch_container">
<div id="RestViewPostViewArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testViewBasics&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">477</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74126&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74126&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testViewBasics&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;cleanupIntervalStep&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;commitIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationIntervalMsec&quot;</span> : <span class="hljs-number">1000</span>, 
  <span class="hljs-string">&quot;consolidationPolicy&quot;</span> : { 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;tier&quot;</span>, 
    <span class="hljs-string">&quot;segmentsBytesFloor&quot;</span> : <span class="hljs-number">2097152</span>, 
    <span class="hljs-string">&quot;segmentsBytesMax&quot;</span> : <span class="hljs-number">5368709120</span>, 
    <span class="hljs-string">&quot;segmentsMax&quot;</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">&quot;segmentsMin&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;minScore&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;primarySort&quot;</span> : [ ], 
  <span class="hljs-string">&quot;primarySortCompression&quot;</span> : <span class="hljs-string">&quot;lz4&quot;</span>, 
  <span class="hljs-string">&quot;storedValues&quot;</span> : [ ], 
  <span class="hljs-string">&quot;writebufferActive&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;writebufferIdle&quot;</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">&quot;writebufferSizeMax&quot;</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">&quot;links&quot;</span> : { 
  } 
}
</pre>
<div id="RestViewPostViewArangoSearch_container_collapse" onclick="$('#RestViewPostViewArangoSearch_long').hide(); $('#RestViewPostViewArangoSearch_short').show(); window.location.hash='RestViewPostViewArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewPostViewArangoSearch_short" onclick="$('#RestViewPostViewArangoSearch_short').hide(); $('#RestViewPostViewArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;testViewBasics&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">477</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/put_api_view_rename.md -->
@startDocuBlock put_api_view_rename

@brief renames a View

@RESTHEADER{PUT /_api/view/{view-name}/rename, Rename a View, modifyView:rename}

@RESTURLPARAMETERS

@RESTURLPARAM{view-name,string,required}
The name of the View to rename.

@RESTDESCRIPTION
Renames a View. Expects an object with the attribute(s)
- *name*: The new name

It returns an object with the attributes
- *id*: The identifier of the View.
- *name*: The new name of the View.
- *type*: The View type.

**Note**: This method is not available in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *view-name* is missing, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *view-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestViewPutRename_container">
<div id="RestViewPutRename_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view/products1/rename</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;viewNewName&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">123</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;viewNewName&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/74138&quot;</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;arangosearch&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;74138&quot;</span> 
}
</pre>
<div id="RestViewPutRename_container_collapse" onclick="$('#RestViewPutRename_long').hide(); $('#RestViewPutRename_short').show(); window.location.hash='RestViewPutRename_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewPutRename_short" onclick="$('#RestViewPutRename_short').hide(); $('#RestViewPutRename_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/view/products1/rename</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;viewNewName&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">123</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Views/delete_api_view.md -->
@startDocuBlock delete_api_view

@brief drops a View

@RESTHEADER{DELETE /_api/view/{view-name}, Drops a View, deleteView}

@RESTURLPARAMETERS

@RESTURLPARAM{view-name,string,required}
The name of the View to drop.

@RESTDESCRIPTION
Drops the View identified by *view-name*.

If the View was successfully dropped, an object is returned with
the following attributes:
- *error*: *false*
- *id*: The identifier of the dropped View

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *view-name* is missing, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *view-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestViewDeleteViewIdentifierArangoSearch_container">
<div id="RestViewDeleteViewIdentifierArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/74088</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestViewDeleteViewIdentifierArangoSearch_container_collapse" onclick="$('#RestViewDeleteViewIdentifierArangoSearch_long').hide(); $('#RestViewDeleteViewIdentifierArangoSearch_short').show(); window.location.hash='RestViewDeleteViewIdentifierArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewDeleteViewIdentifierArangoSearch_short" onclick="$('#RestViewDeleteViewIdentifierArangoSearch_short').hide(); $('#RestViewDeleteViewIdentifierArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/74088</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using a name:


<div class="example-container" id="RestViewDeleteViewNameArangoSearch_container">
<div id="RestViewDeleteViewNameArangoSearch_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/testView</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestViewDeleteViewNameArangoSearch_container_collapse" onclick="$('#RestViewDeleteViewNameArangoSearch_long').hide(); $('#RestViewDeleteViewNameArangoSearch_short').show(); window.location.hash='RestViewDeleteViewNameArangoSearch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestViewDeleteViewNameArangoSearch_short" onclick="$('#RestViewDeleteViewNameArangoSearch_short').hide(); $('#RestViewDeleteViewNameArangoSearch_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/view/testView</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_collection_remove_http_examples.md -->
@startDocuBlock general_graph_vertex_collection_remove_http_examples

@brief Remove a vertex collection form the graph.

@RESTHEADER{DELETE /_api/gharial/{graph}/vertex/{collection}, Remove vertex collection}

@RESTDESCRIPTION
Removes a vertex collection from the graph and optionally deletes the collection,
if it is not used in any other graph.
It can only remove vertex collections that are no longer part of edge definitions,
if they are used in edge definitions you are required to modify those first.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the vertex collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{dropCollection,boolean,optional}
Drop the collection as well.
Collection will only be dropped if it is not used in other graphs.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex collection was removed from the graph successfully
and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the newly created graph

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the newly created graph

@RESTRETURNCODE{400}
Returned if the vertex collection is still used in an edge definition.
In this case it cannot be removed from the graph yet, it has to be
removed from the edge definition first.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to drop a vertex you at least need to have the following privileges:
  1. `Administrate` access on the Database.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES

You can remove vertex collections that are not used in any edge collection:


<div class="example-container" id="HttpGharialRemoveVertexCollection_container">
<div id="HttpGharialRemoveVertexCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/otherVertices</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">229</span>
etag: _d7yknia---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;social&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknia---&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/social&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;social&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialRemoveVertexCollection_container_collapse" onclick="$('#HttpGharialRemoveVertexCollection_long').hide(); $('#HttpGharialRemoveVertexCollection_short').show(); window.location.hash='HttpGharialRemoveVertexCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialRemoveVertexCollection_short" onclick="$('#HttpGharialRemoveVertexCollection_short').hide(); $('#HttpGharialRemoveVertexCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/otherVertices</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">229</span>
etag: _d7yknia---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




You cannot remove vertex collections that are used in edge collections:


<div class="example-container" id="HttpGharialRemoveVertexCollectionFailed_container">
<div id="HttpGharialRemoveVertexCollectionFailed_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/male</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">106</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection is not in list of orphan collections&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1928</span> 
}
</pre>
<div id="HttpGharialRemoveVertexCollectionFailed_container_collapse" onclick="$('#HttpGharialRemoveVertexCollectionFailed_long').hide(); $('#HttpGharialRemoveVertexCollectionFailed_short').show(); window.location.hash='HttpGharialRemoveVertexCollectionFailed_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialRemoveVertexCollectionFailed_short" onclick="$('#HttpGharialRemoveVertexCollectionFailed_short').hide(); $('#HttpGharialRemoveVertexCollectionFailed_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/male</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">106</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_list_edge_http_examples.md -->
@startDocuBlock general_graph_list_edge_http_examples

@brief Lists all edge definitions

@RESTHEADER{GET /_api/gharial/{graph}/edge, List edge definitions}

@RESTDESCRIPTION
Lists all edge collections within this graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the edge definitions could be listed.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{collections,array,required,string}
The list of all vertex collections within this graph.
Includes collections in edgeDefinitions as well as orphans.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialListEdge_container">
<div id="HttpGharialListEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">53</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;collections&quot;</span> : [ 
    <span class="hljs-string">&quot;relation&quot;</span> 
  ] 
}
</pre>
<div id="HttpGharialListEdge_container_collapse" onclick="$('#HttpGharialListEdge_long').hide(); $('#HttpGharialListEdge_short').show(); window.location.hash='HttpGharialListEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialListEdge_short" onclick="$('#HttpGharialListEdge_short').hide(); $('#HttpGharialListEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">53</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_list_vertex_http_examples.md -->
@startDocuBlock general_graph_list_vertex_http_examples

@brief Lists all vertex collections used in this graph.

@RESTHEADER{GET /_api/gharial/{graph}/vertex, List vertex collections}

@RESTDESCRIPTION
Lists all vertex collections within this graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the collections could be listed.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{collections,array,required,string}
The list of all vertex collections within this graph.
Includes collections in edgeDefinitions as well as orphans.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialListVertex_container">
<div id="HttpGharialListVertex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">58</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;collections&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span> 
  ] 
}
</pre>
<div id="HttpGharialListVertex_container_collapse" onclick="$('#HttpGharialListVertex_long').hide(); $('#HttpGharialListVertex_short').show(); window.location.hash='HttpGharialListVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialListVertex_short" onclick="$('#HttpGharialListVertex_short').hide(); $('#HttpGharialListVertex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">58</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_modify_http_examples.md -->
@startDocuBlock general_graph_edge_modify_http_examples

@brief modify an existing edge

@RESTHEADER{PATCH /_api/gharial/{graph}/edge/{collection}/{edge}, Modify an edge}

@RESTDESCRIPTION
Updates the data of the specific edge in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{keepNull,boolean,optional}
Define if values set to null should be stored.
By default (true) the given documents attribute(s) will be set to null.
If this parameter is false the attribute(s) will instead be deleted from the
document.

@RESTQUERYPARAM{returnOld,boolean,optional}
Define if a presentation of the deleted document should
be returned within the response object.

@RESTQUERYPARAM{returnNew,boolean,optional}
Define if a presentation of the new document should
be returned within the response object.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTALLBODYPARAM{edge,object,required}
The body has to contain a JSON object containing exactly the attributes that should be overwritten, all other attributes remain unchanged.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the edge could be updated, and waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The internal attributes for the edge.

@RESTREPLYBODY{new,object,optional,edge_representation}
The complete newly written edge document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,edge_representation}
The complete overwritten edge document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The internal attributes for the edge.

@RESTREPLYBODY{new,object,optional,edge_representation}
The complete newly written edge document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,edge_representation}
The complete overwritten edge document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to update edges in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The edge to update does not exist.
* either `_from` or `_to` vertex does not exist (if updated).

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialPatchEdge_container">
<div id="HttpGharialPatchEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/70256</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;since&quot;</span> : <span class="hljs-string">&quot;01.01.2001&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7ykne----
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;edge&quot;</span> : { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/70256&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;70256&quot;</span>, 
    <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ykndy---&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykne----&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialPatchEdge_container_collapse" onclick="$('#HttpGharialPatchEdge_long').hide(); $('#HttpGharialPatchEdge_short').show(); window.location.hash='HttpGharialPatchEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialPatchEdge_short" onclick="$('#HttpGharialPatchEdge_short').hide(); $('#HttpGharialPatchEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/70256</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;since&quot;</span> : <span class="hljs-string">&quot;01.01.2001&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7ykne----
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_definition_modify_http_examples.md -->
@startDocuBlock general_graph_edge_definition_modify_http_examples

@brief Replace an existing edge definition

@RESTHEADER{PUT /_api/gharial/{graph}/edge/{definition}#definition, Replace an edge definition}

@RESTDESCRIPTION
Change one specific edge definition.
This will modify all occurrences of this definition in all graphs known to your database.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{definition,string,required}
The name of the edge collection used in the definition.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{dropCollections,boolean,optional}
Drop the collection as well.
Collection will only be dropped if it is not used in other graphs.

@RESTBODYPARAM{collection,string,required,string}
The name of the edge collection to be used.

@RESTBODYPARAM{from,array,required,string}
One or many vertex collections that can contain source vertices.

@RESTBODYPARAM{to,array,required,string}
One or many vertex collections that can contain target vertices.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the request was successful and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{400}
Returned if the new edge definition is ill-formed and cannot be used.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to drop a vertex you at least need to have the following privileges:
  1. `Administrate` access on the Database.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found, or if no edge definition
with this name is found in the graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialReplaceEdgeCol_container">
<div id="HttpGharialReplaceEdgeCol_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span>, 
    <span class="hljs-string">&quot;animal&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span>, 
    <span class="hljs-string">&quot;animal&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">247</span>
etag: _d7yknm2---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;social&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;animal&quot;</span>, 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;animal&quot;</span>, 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknm2---&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/social&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;social&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialReplaceEdgeCol_container_collapse" onclick="$('#HttpGharialReplaceEdgeCol_long').hide(); $('#HttpGharialReplaceEdgeCol_short').show(); window.location.hash='HttpGharialReplaceEdgeCol_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialReplaceEdgeCol_short" onclick="$('#HttpGharialReplaceEdgeCol_short').hide(); $('#HttpGharialReplaceEdgeCol_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span>, 
    <span class="hljs-string">&quot;animal&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span>, 
    <span class="hljs-string">&quot;animal&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">247</span>
etag: _d7yknm2---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_create_http_examples.md -->
@startDocuBlock general_graph_edge_create_http_examples

@brief Creates an edge in an existing graph

@RESTHEADER{POST /_api/gharial/{graph}/edge/{collection}, Create an edge}

@RESTDESCRIPTION
Creates a new edge in the collection.
Within the body the edge has to contain a *_from* and *_to* value referencing to valid vertices in the graph.
Furthermore the edge has to be valid in the definition of the used edge collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the edge collection the edge belongs to.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{returnNew,boolean,optional}
Define if the response should contain the complete
new version of the document.

@RESTBODYPARAM{_from,string,required,}
The source vertex of this edge. Has to be valid within
the used edge definition.

@RESTBODYPARAM{_to,string,required,}
The target vertex of this edge. Has to be valid within
the used edge definition.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the edge could be created and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The internal attributes for the edge.

@RESTREPLYBODY{new,object,optional,edge_representation}
The complete newly written edge document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The internal attributes for the edge.

@RESTREPLYBODY{new,object,optional,edge_representation}
The complete newly written edge document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTRETURNCODE{400}
Returned if the input document is invalid.
This can for instance be the case if the `_from` or `_to` attribute is missing
or malformed, or if the referenced vertex collection is not part of the graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to insert edges into the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in any of the following cases:
* no graph with this name could be found.
* the edge collection is not part of the graph.
* the vertex collection is part of the graph, but does not exist.
* `_from` or `_to` vertex does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialAddEdge_container">
<div id="HttpGharialAddEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">94</span>
etag: _d7ykm4a---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;edge&quot;</span> : { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/69113&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;69113&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykm4a---&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialAddEdge_container_collapse" onclick="$('#HttpGharialAddEdge_long').hide(); $('#HttpGharialAddEdge_short').show(); window.location.hash='HttpGharialAddEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddEdge_short" onclick="$('#HttpGharialAddEdge_short').hide(); $('#HttpGharialAddEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">94</span>
etag: _d7ykm4a---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_delete_http_examples.md -->
@startDocuBlock general_graph_vertex_delete_http_examples

@brief removes a vertex from a graph

@RESTHEADER{DELETE /_api/gharial/{graph}/vertex/{collection}/{vertex}, Remove a vertex}

@RESTDESCRIPTION
Removes a vertex from the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{returnOld,boolean,optional}
Define if a presentation of the deleted document should
be returned within the response object.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be removed.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{removed,boolean,required,}
Is set to true if the remove was successful.

@RESTREPLYBODY{old,object,optional,vertex_representation}
The complete deleted vertex document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{removed,boolean,required,}
Is set to true if the remove was successful.

@RESTREPLYBODY{old,object,optional,vertex_representation}
The complete deleted vertex document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to delete vertices in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The vertex to remove does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialDeleteVertex_container">
<div id="HttpGharialDeleteVertex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;removed&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="HttpGharialDeleteVertex_container_collapse" onclick="$('#HttpGharialDeleteVertex_long').hide(); $('#HttpGharialDeleteVertex_short').show(); window.location.hash='HttpGharialDeleteVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialDeleteVertex_short" onclick="$('#HttpGharialDeleteVertex_short').hide(); $('#HttpGharialDeleteVertex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_collection_add_http_examples.md -->
@startDocuBlock general_graph_vertex_collection_add_http_examples

@brief Add an additional vertex collection to the graph.

@RESTHEADER{POST /_api/gharial/{graph}/vertex, Add vertex collection}

@RESTDESCRIPTION
Adds a vertex collection to the set of orphan collections of the graph.
If the collection does not exist, it will be created.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Is returned if the collection could be created and waitForSync is enabled
for the `_graphs` collection, or given in the request.
The response body contains the graph configuration that has been stored.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{202}
Is returned if the collection could be created and waitForSync is disabled
for the `_graphs` collection, or given in the request.
The response body contains the graph configuration that has been stored.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the newly created graph

@RESTRETURNCODE{400}
Returned if the request is in an invalid format.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to modify a graph you at least need to have the following privileges:<br>
  1. `Administrate` access on the Database.
  2. `Read Only` access on every collection used within this graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialAddVertexCol_container">
<div id="HttpGharialAddVertexCol_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;otherVertices&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">244</span>
etag: _d7yknAG--A
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;social&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ 
      <span class="hljs-string">&quot;otherVertices&quot;</span> 
    ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknAG--A&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/social&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;social&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialAddVertexCol_container_collapse" onclick="$('#HttpGharialAddVertexCol_long').hide(); $('#HttpGharialAddVertexCol_short').show(); window.location.hash='HttpGharialAddVertexCol_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddVertexCol_short" onclick="$('#HttpGharialAddVertexCol_short').hide(); $('#HttpGharialAddVertexCol_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;otherVertices&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">244</span>
etag: _d7yknAG--A
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_create_http_examples.md -->
@startDocuBlock general_graph_create_http_examples

@brief Create a new graph in the graph module.

@RESTHEADER{POST /_api/gharial, Create a graph}

@RESTDESCRIPTION
The creation of a graph requires the name of the graph and a
definition of its edges.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
define if the request should wait until everything is synced to disc.
Will change the success response code.

@RESTBODYPARAM{name,string,required,string}
Name of the graph.

@RESTBODYPARAM{edgeDefinitions,array,optional,graph_edge_definition}
An array of definitions for the relations of the graph.
Each has the following type:

@RESTBODYPARAM{orphanCollections,array,optional,string}
An array of additional vertex collections.
Documents within these collections do not have edges within this graph.

@RESTBODYPARAM{isSmart,boolean,optional,}
Define if the created graph should be smart (Enterprise Edition only).

@RESTBODYPARAM{isDisjoint,boolean,optional,}
Whether to create a Disjoint SmartGraph instead of a regular SmartGraph
(Enterprise Edition only).

@RESTBODYPARAM{options,object,optional,post_api_gharial_create_opts}
a JSON object to define options for creating collections within this graph.
It can contain the following attributes:

@RESTSTRUCT{smartGraphAttribute,post_api_gharial_create_opts,string,optional,}
Only has effect in Enterprise Edition and it is required if isSmart is true.
The attribute name that is used to smartly shard the vertices of a graph.
Every vertex in this SmartGraph has to have this attribute.
Cannot be modified later.

@RESTSTRUCT{numberOfShards,post_api_gharial_create_opts,integer,required,}
The number of shards that is used for every collection within this graph.
Cannot be modified later.

@RESTSTRUCT{replicationFactor,post_api_gharial_create_opts,integer,required,}
The replication factor used when initially creating collections for this graph.
Can be set to `"satellite"` to create a SatelliteGraph, which will ignore
*numberOfShards*, *minReplicationFactor* and *writeConcern*
(Enterprise Edition only).

@RESTSTRUCT{writeConcern,post_api_gharial_create_opts,integer,optional,}
Write concern for new collections in the graph.
It determines how many copies of each shard are required to be
in sync on the different DB-Servers. If there are less then these many copies
in the cluster a shard will refuse to write. Writes to shards with enough
up-to-date copies will succeed at the same time however. The value of
*writeConcern* can not be larger than *replicationFactor*. _(cluster only)_

@RESTRETURNCODES

@RESTRETURNCODE{201}
Is returned if the graph could be created and waitForSync is enabled
for the `_graphs` collection, or given in the request.
The response body contains the graph configuration that has been stored.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the newly created graph.

@RESTRETURNCODE{202}
Is returned if the graph could be created and waitForSync is disabled
for the `_graphs` collection and not given in the request.
The response body contains the graph configuration that has been stored.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the newly created graph.

@RESTRETURNCODE{400}
Returned if the request is in a wrong format.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to create a graph you at least need to have the following privileges:<br>
  1. `Administrate` access on the Database.
  2. `Read Only` access on every collection used within this graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{409}
Returned if there is a conflict storing the graph. This can occur
either if a graph with this name is already stored, or if there is one
edge definition with a the same edge collection but a different signature
used in any other graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialCreate_container">
<div id="HttpGharialCreate_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
  <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
      <span class="hljs-string">&quot;from&quot;</span> : [ 
        <span class="hljs-string">&quot;startVertices&quot;</span> 
      ], 
      <span class="hljs-string">&quot;to&quot;</span> : [ 
        <span class="hljs-string">&quot;endVertices&quot;</span> 
      ] 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">227</span>
etag: _d7yknBe--A
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;startVertices&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;endVertices&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknBe--A&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/myGraph&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialCreate_container_collapse" onclick="$('#HttpGharialCreate_long').hide(); $('#HttpGharialCreate_short').show(); window.location.hash='HttpGharialCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialCreate_short" onclick="$('#HttpGharialCreate_short').hide(); $('#HttpGharialCreate_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
  <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
      <span class="hljs-string">&quot;from&quot;</span> : [ 
        <span class="hljs-string">&quot;startVertices&quot;</span> 
      ], 
      <span class="hljs-string">&quot;to&quot;</span> : [ 
        <span class="hljs-string">&quot;endVertices&quot;</span> 
      ] 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">227</span>
etag: _d7yknBe--A
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







<div class="example-container" id="HttpGharialCreate2_container">
<div id="HttpGharialCreate2_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
  <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
      <span class="hljs-string">&quot;from&quot;</span> : [ 
        <span class="hljs-string">&quot;startVertices&quot;</span> 
      ], 
      <span class="hljs-string">&quot;to&quot;</span> : [ 
        <span class="hljs-string">&quot;endVertices&quot;</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ 
    <span class="hljs-string">&quot;orphanVertices&quot;</span> 
  ], 
  <span class="hljs-string">&quot;isSmart&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;replicationFactor&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;numberOfShards&quot;</span> : <span class="hljs-number">9</span>, 
    <span class="hljs-string">&quot;smartGraphAttribute&quot;</span> : <span class="hljs-string">&quot;region&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">243</span>
etag: _d7yknCy--A
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;startVertices&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;endVertices&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ 
      <span class="hljs-string">&quot;orphanVertices&quot;</span> 
    ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknCy--A&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/myGraph&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialCreate2_container_collapse" onclick="$('#HttpGharialCreate2_long').hide(); $('#HttpGharialCreate2_short').show(); window.location.hash='HttpGharialCreate2_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialCreate2_short" onclick="$('#HttpGharialCreate2_short').hide(); $('#HttpGharialCreate2_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
  <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
      <span class="hljs-string">&quot;from&quot;</span> : [ 
        <span class="hljs-string">&quot;startVertices&quot;</span> 
      ], 
      <span class="hljs-string">&quot;to&quot;</span> : [ 
        <span class="hljs-string">&quot;endVertices&quot;</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ 
    <span class="hljs-string">&quot;orphanVertices&quot;</span> 
  ], 
  <span class="hljs-string">&quot;isSmart&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;replicationFactor&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;numberOfShards&quot;</span> : <span class="hljs-number">9</span>, 
    <span class="hljs-string">&quot;smartGraphAttribute&quot;</span> : <span class="hljs-string">&quot;region&quot;</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">243</span>
etag: _d7yknCy--A
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_definition_add_http_examples.md -->
@startDocuBlock general_graph_edge_definition_add_http_examples

@brief Add a new edge definition to the graph

@RESTHEADER{POST /_api/gharial/{graph}/edge, Add edge definition}

@RESTDESCRIPTION
Adds an additional edge definition to the graph.

This edge definition has to contain a *collection* and an array of
each *from* and *to* vertex collections.  An edge definition can only
be added if this definition is either not used in any other graph, or
it is used with exactly the same definition. It is not possible to
store a definition "e" from "v1" to "v2" in the one graph, and "e"
from "v2" to "v1" in the other graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTBODYPARAM{collection,string,required,string}
The name of the edge collection to be used.

@RESTBODYPARAM{from,array,required,string}
One or many vertex collections that can contain source vertices.

@RESTBODYPARAM{to,array,required,string}
One or many vertex collections that can contain target vertices.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the definition could be added successfully and
waitForSync is enabled for the `_graphs` collection.
The response body contains the graph configuration that has been stored.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{202}
Returned if the definition could be added successfully and
waitForSync is disabled for the `_graphs` collection.
The response body contains the graph configuration that has been stored.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{400}
Returned if the definition could not be added.
This could be because it is ill-formed, or
if the definition is used in an other graph with a different signature.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to modify a graph you at least need to have the following privileges:<br>
  1. `Administrate` access on the Database.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialAddEdgeCol_container">
<div id="HttpGharialAddEdgeCol_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;works_in&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;city&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">294</span>
etag: _d7ykm7O---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;social&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ] 
      }, 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;works_in&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;female&quot;</span>, 
          <span class="hljs-string">&quot;male&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;city&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykm7O---&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/social&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;social&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialAddEdgeCol_container_collapse" onclick="$('#HttpGharialAddEdgeCol_long').hide(); $('#HttpGharialAddEdgeCol_short').show(); window.location.hash='HttpGharialAddEdgeCol_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddEdgeCol_short" onclick="$('#HttpGharialAddEdgeCol_short').hide(); $('#HttpGharialAddEdgeCol_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;works_in&quot;</span>, 
  <span class="hljs-string">&quot;from&quot;</span> : [ 
    <span class="hljs-string">&quot;female&quot;</span>, 
    <span class="hljs-string">&quot;male&quot;</span> 
  ], 
  <span class="hljs-string">&quot;to&quot;</span> : [ 
    <span class="hljs-string">&quot;city&quot;</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">294</span>
etag: _d7ykm7O---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_drop_http_examples.md -->
@startDocuBlock general_graph_drop_http_examples

@brief delete an existing graph

@RESTHEADER{DELETE /_api/gharial/{graph}, Drop a graph}

@RESTDESCRIPTION
Drops an existing graph object by name.
Optionally all collections not used by other graphs
can be dropped as well.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{dropCollections,boolean,optional}
Drop collections of this graph as well.  Collections will only be
dropped if they are not used in other graphs.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Is returned if the graph could be dropped and waitForSync is enabled
for the `_graphs` collection, or given in the request.

@RESTRETURNCODE{202}
Is returned if the graph could be dropped and waitForSync is disabled
for the `_graphs` collection and not given in the request.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to drop a graph you at least need to have the following privileges:
  1. `Administrate` access on the Database.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialDrop_container">
<div id="HttpGharialDrop_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social?dropCollections=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;removed&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="HttpGharialDrop_container_collapse" onclick="$('#HttpGharialDrop_long').hide(); $('#HttpGharialDrop_short').show(); window.location.hash='HttpGharialDrop_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialDrop_short" onclick="$('#HttpGharialDrop_short').hide(); $('#HttpGharialDrop_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social?dropCollections=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_create_http_examples.md -->
@startDocuBlock general_graph_vertex_create_http_examples

@brief create a new vertex

@RESTHEADER{POST /_api/gharial/{graph}/vertex/{collection}, Create a vertex}

@RESTDESCRIPTION
Adds a vertex to the given collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the vertex collection the vertex should be inserted into.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{returnNew,boolean,optional}
Define if the response should contain the complete
new version of the document.

@RESTALLBODYPARAM{vertex,object,required}
The body has to be the JSON object to be stored.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the vertex could be added and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The internal attributes for the vertex.

@RESTREPLYBODY{new,object,optional,vertex_representation}
The complete newly written vertex document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The internal attributes generated while storing the vertex.
Does not include any attribute given in request body.

@RESTREPLYBODY{new,object,optional,vertex_representation}
The complete newly written vertex document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to insert vertices into the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.
Or if a graph is found but this collection is not part of the graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialAddVertex_container">
<div id="HttpGharialAddVertex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/male</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Francis&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">92</span>
etag: _d7ykm9y--A
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;vertex&quot;</span> : { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;male/69262&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;69262&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykm9y--A&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialAddVertex_container_collapse" onclick="$('#HttpGharialAddVertex_long').hide(); $('#HttpGharialAddVertex_short').show(); window.location.hash='HttpGharialAddVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddVertex_short" onclick="$('#HttpGharialAddVertex_short').hide(); $('#HttpGharialAddVertex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/male</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Francis&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">92</span>
etag: _d7ykm9y--A
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_modify_http_examples.md -->
@startDocuBlock general_graph_vertex_modify_http_examples

@brief update an existing vertex

@RESTHEADER{PATCH /_api/gharial/{graph}/vertex/{collection}/{vertex}, Update a vertex}

@RESTDESCRIPTION
Updates the data of the specific vertex in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{keepNull,boolean,optional}
Define if values set to null should be stored.
By default (true) the given documents attribute(s) will be set to null.
If this parameter is false the attribute(s) will instead be delete from the
document.

@RESTQUERYPARAM{returnOld,boolean,optional}
Define if a presentation of the deleted document should
be returned within the response object.

@RESTQUERYPARAM{returnNew,boolean,optional}
Define if a presentation of the new document should
be returned within the response object.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTALLBODYPARAM{vertex,object,required}
The body has to contain a JSON object containing exactly the attributes that should be overwritten, all other attributes remain unchanged.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be updated, and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The internal attributes for the vertex.

@RESTREPLYBODY{new,object,optional,vertex_representation}
The complete newly written vertex document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,vertex_representation}
The complete overwritten vertex document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{202}
Returned if the request was successful, and waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The internal attributes for the vertex.

@RESTREPLYBODY{new,object,optional,vertex_representation}
The complete newly written vertex document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,vertex_representation}
The complete overwritten vertex document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to update vertices in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The vertex to update does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialModifyVertex_container">
<div id="HttpGharialModifyVertex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7yknbu--A
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;vertex&quot;</span> : { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
    <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7yknba---&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknbu--A&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialModifyVertex_container_collapse" onclick="$('#HttpGharialModifyVertex_long').hide(); $('#HttpGharialModifyVertex_short').show(); window.location.hash='HttpGharialModifyVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialModifyVertex_short" onclick="$('#HttpGharialModifyVertex_short').hide(); $('#HttpGharialModifyVertex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7yknbu--A
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_list_http_examples.md -->
@startDocuBlock general_graph_list_http_examples

@brief Lists all graphs known to the graph module.

@RESTHEADER{GET /_api/gharial, List all graphs}

@RESTDESCRIPTION
Lists all graphs stored in this database.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the module is available and the graphs could be listed.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graphs,array,required,graph_list}

@RESTSTRUCT{graph,graph_list,object,optional,graph_representation}
The information about the newly created graph

@RESTSTRUCT{name,graph_representation,string,required,}
The name of the graph

@RESTSTRUCT{edgeDefinitions,graph_representation,array,required,graph_edge_definition}
An array of definitions for the relations of the graph.
Each has the following type:

@RESTSTRUCT{orphanCollections,graph_representation,array,required,string}
An array of additional vertex collections.
Documents within these collections do not have edges within this graph.

@RESTSTRUCT{numberOfShards,graph_representation,integer,required,}
Number of shards created for every new collection in the graph.

@RESTSTRUCT{_id,graph_representation,string,required,}
The internal id value of this graph.

@RESTSTRUCT{_rev,graph_representation,string,required,}
The revision of this graph. Can be used to make sure to not override
concurrent modifications to this graph.

@RESTSTRUCT{replicationFactor,graph_representation,integer,required,}
The replication factor used for every new collection in the graph.
Can also be the string `"satellite"` for a SmartGraph (Enterprise Edition only).

@RESTSTRUCT{isSmart,graph_representation,boolean,required,}
Whether the graph is a SmartGraph (Enterprise Edition only).

@RESTSTRUCT{isDisjoint,graph_representation,boolean,required,}
Whether the graph is a Disjoint SmartGraph (Enterprise Edition only).

@RESTSTRUCT{smartGraphAttribute,graph_representation,string,optional,}
Name of the sharding attribute in the SmartGraph case (Enterprise Edition only).

@RESTSTRUCT{isSatellite,graph_representation,boolean,required,}
Flag if the graph is a SatelliteGraph (Enterprise Edition only) or not.

@EXAMPLES


<div class="example-container" id="HttpGharialList_container">
<div id="HttpGharialList_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">623</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;graphs&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/social&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;social&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknSq---&quot;</span>, 
      <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;relation&quot;</span>, 
          <span class="hljs-string">&quot;from&quot;</span> : [ 
            <span class="hljs-string">&quot;female&quot;</span>, 
            <span class="hljs-string">&quot;male&quot;</span> 
          ], 
          <span class="hljs-string">&quot;to&quot;</span> : [ 
            <span class="hljs-string">&quot;female&quot;</span>, 
            <span class="hljs-string">&quot;male&quot;</span> 
          ] 
        } 
      ], 
      <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;social&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/routeplanner&quot;</span>, 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;routeplanner&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknT6--A&quot;</span>, 
      <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;frenchHighway&quot;</span>, 
          <span class="hljs-string">&quot;from&quot;</span> : [ 
            <span class="hljs-string">&quot;frenchCity&quot;</span> 
          ], 
          <span class="hljs-string">&quot;to&quot;</span> : [ 
            <span class="hljs-string">&quot;frenchCity&quot;</span> 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;germanHighway&quot;</span>, 
          <span class="hljs-string">&quot;from&quot;</span> : [ 
            <span class="hljs-string">&quot;germanCity&quot;</span> 
          ], 
          <span class="hljs-string">&quot;to&quot;</span> : [ 
            <span class="hljs-string">&quot;germanCity&quot;</span> 
          ] 
        }, 
        { 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;internationalHighway&quot;</span>, 
          <span class="hljs-string">&quot;from&quot;</span> : [ 
            <span class="hljs-string">&quot;frenchCity&quot;</span>, 
            <span class="hljs-string">&quot;germanCity&quot;</span> 
          ], 
          <span class="hljs-string">&quot;to&quot;</span> : [ 
            <span class="hljs-string">&quot;frenchCity&quot;</span>, 
            <span class="hljs-string">&quot;germanCity&quot;</span> 
          ] 
        } 
      ], 
      <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;routeplanner&quot;</span> 
    } 
  ] 
}
</pre>
<div id="HttpGharialList_container_collapse" onclick="$('#HttpGharialList_long').hide(); $('#HttpGharialList_short').show(); window.location.hash='HttpGharialList_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialList_short" onclick="$('#HttpGharialList_short').hide(); $('#HttpGharialList_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">623</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_replace_http_examples.md -->
@startDocuBlock general_graph_vertex_replace_http_examples

@brief replaces an existing vertex

@RESTHEADER{PUT /_api/gharial/{graph}/vertex/{collection}/{vertex}, Replace a vertex}

@RESTDESCRIPTION
Replaces the data of a vertex in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{keepNull,boolean,optional}
Define if values set to null should be stored. By default the key is not removed from the document.

@RESTQUERYPARAM{returnOld,boolean,optional}
Define if a presentation of the deleted document should
be returned within the response object.

@RESTQUERYPARAM{returnNew,boolean,optional}
Define if a presentation of the new document should
be returned within the response object.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTALLBODYPARAM{vertex,object,required}
The body has to be the JSON object to be stored.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be replaced, and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The internal attributes for the vertex.

@RESTREPLYBODY{new,object,optional,vertex_representation}
The complete newly written vertex document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,vertex_representation}
The complete overwritten vertex document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{202}
Returned if the vertex could be replaced, and waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The internal attributes for the vertex.

@RESTREPLYBODY{new,object,optional,vertex_representation}
The complete newly written vertex document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,vertex_representation}
The complete overwritten vertex document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to replace vertices in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The vertex to replace does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialReplaceVertex_container">
<div id="HttpGharialReplaceVertex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice Cooper&quot;</span>, 
  <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7yknpG---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;vertex&quot;</span> : { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
    <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7yknoq---&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknpG---&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialReplaceVertex_container_collapse" onclick="$('#HttpGharialReplaceVertex_long').hide(); $('#HttpGharialReplaceVertex_short').show(); window.location.hash='HttpGharialReplaceVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialReplaceVertex_short" onclick="$('#HttpGharialReplaceVertex_short').hide(); $('#HttpGharialReplaceVertex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice Cooper&quot;</span>, 
  <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7yknpG---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_definition_remove_http_examples.md -->
@startDocuBlock general_graph_edge_definition_remove_http_examples

@brief Remove an edge definition form the graph

@RESTHEADER{DELETE /_api/gharial/{graph}/edge/{definition}#definition, Remove an edge definition from the graph}

@RESTDESCRIPTION
Remove one edge definition from the graph.  This will only remove the
edge collection, the vertex collections remain untouched and can still
be used in your queries.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{definition,string,required}
The name of the edge collection used in the definition.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{dropCollections,boolean,optional}
Drop the collection as well.
Collection will only be dropped if it is not used in other graphs.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the edge definition could be removed from the graph
and waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{202}
Returned if the edge definition could be removed from the graph and
waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the modified graph.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to drop a vertex you at least need to have the following privileges:
  1. `Administrate` access on the Database.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found,
or if no edge definition with this name is found in the graph.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialEdgeDefinitionRemove_container">
<div id="HttpGharialEdgeDefinitionRemove_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge/relation</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">171</span>
etag: _d7yknLi---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;social&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ 
      <span class="hljs-string">&quot;female&quot;</span>, 
      <span class="hljs-string">&quot;male&quot;</span> 
    ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknLi---&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/social&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;social&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialEdgeDefinitionRemove_container_collapse" onclick="$('#HttpGharialEdgeDefinitionRemove_long').hide(); $('#HttpGharialEdgeDefinitionRemove_short').show(); window.location.hash='HttpGharialEdgeDefinitionRemove_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialEdgeDefinitionRemove_short" onclick="$('#HttpGharialEdgeDefinitionRemove_short').hide(); $('#HttpGharialEdgeDefinitionRemove_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge/relation</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">171</span>
etag: _d7yknLi---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_delete_http_examples.md -->
@startDocuBlock general_graph_edge_delete_http_examples

@brief removes an edge from graph

@RESTHEADER{DELETE /_api/gharial/{graph}/edge/{collection}/{edge}, Remove an edge}

@RESTDESCRIPTION
Removes an edge from the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge,string,required}
The *_key* attribute of the edge.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{returnOld,boolean,optional}
Define if a presentation of the deleted document should
be returned within the response object.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the edge could be removed.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{removed,boolean,required,}
Is set to true if the remove was successful.

@RESTREPLYBODY{old,object,optional,edge_representation}
The complete deleted edge document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{removed,boolean,required,}
Is set to true if the remove was successful.

@RESTREPLYBODY{old,object,optional,edge_representation}
The complete deleted edge document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to delete vertices in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The edge to remove does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialDeleteEdge_container">
<div id="HttpGharialDeleteEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge/relation/69487</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;removed&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="HttpGharialDeleteEdge_container_collapse" onclick="$('#HttpGharialDeleteEdge_long').hide(); $('#HttpGharialDeleteEdge_short').show(); window.location.hash='HttpGharialDeleteEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialDeleteEdge_short" onclick="$('#HttpGharialDeleteEdge_short').hide(); $('#HttpGharialDeleteEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge/relation/69487</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_get_http_examples.md -->
@startDocuBlock general_graph_edge_get_http_examples

@brief fetch an edge

@RESTHEADER{GET /_api/gharial/{graph}/edge/{collection}/{edge}, Get an edge}

@RESTDESCRIPTION
Gets an edge from the given collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge,string,required}
The *_key* attribute of the edge.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{rev,string,optional}
Must contain a revision.
If this is set a document is only returned if
it has exactly this revision.
Also see if-match header as an alternative to this.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is returned,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTHEADERPARAM{if-none-match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one Etag. The document is returned,
only if it has a different revision as the given Etag. Otherwise a HTTP 304 is returned.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the edge could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The complete edge.

@RESTRETURNCODE{304}
Returned if the if-none-match header is given and the
currently stored edge still has this revision value.
So there was no update between the last time the edge
was fetched by the caller.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to update vertices in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Read Only` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The edge does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialGetEdge_container">
<div id="HttpGharialGetEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge/relation/69747</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">165</span>
etag: _d7yknNq---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;edge&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;69747&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/69747&quot;</span>, 
    <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span>, 
    <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;female/diana&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknNq---&quot;</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;friend&quot;</span>, 
    <span class="hljs-string">&quot;vertex&quot;</span> : <span class="hljs-string">&quot;bob&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialGetEdge_container_collapse" onclick="$('#HttpGharialGetEdge_long').hide(); $('#HttpGharialGetEdge_short').show(); window.location.hash='HttpGharialGetEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialGetEdge_short" onclick="$('#HttpGharialGetEdge_short').hide(); $('#HttpGharialGetEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/edge/relation/69747</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">165</span>
etag: _d7yknNq---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_vertex_get_http_examples.md -->
@startDocuBlock general_graph_vertex_get_http_examples

@brief fetches an existing vertex

@RESTHEADER{GET /_api/gharial/{graph}/vertex/{collection}/{vertex}, Get a vertex}

@RESTDESCRIPTION
Gets a vertex from the given collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{rev,string,optional}
Must contain a revision.
If this is set a document is only returned if
it has exactly this revision.
Also see if-match header as an alternative to this.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is returned,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an query parameter *rev*.

@RESTHEADERPARAM{if-none-match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one Etag. The document is returned,
only if it has a different revision as the given Etag. Otherwise a HTTP 304 is returned.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{vertex,object,required,vertex_representation}
The complete vertex.

@RESTRETURNCODE{304}
Returned if the if-none-match header is given and the
currently stored vertex still has this revision value.
So there was no update between the last time the vertex
was fetched by the caller.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to update vertices in the graph  you at least need to have the following privileges:<br>
  1. `Read Only` access on the Database.
  2. `Read Only` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The vertex does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialGetVertex_container">
<div id="HttpGharialGetVertex_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">109</span>
etag: _d7yknQy---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;vertex&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;alice&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknQy---&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Alice&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialGetVertex_container_collapse" onclick="$('#HttpGharialGetVertex_long').hide(); $('#HttpGharialGetVertex_short').show(); window.location.hash='HttpGharialGetVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialGetVertex_short" onclick="$('#HttpGharialGetVertex_short').hide(); $('#HttpGharialGetVertex_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">109</span>
etag: _d7yknQy---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_edge_replace_http_examples.md -->
@startDocuBlock general_graph_edge_replace_http_examples

@brief replace the content of an existing edge

@RESTHEADER{PUT /_api/gharial/{graph}/edge/{collection}/{edge}, Replace an edge}

@RESTDESCRIPTION
Replaces the data of an edge in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTURLPARAM{collection,string,required}
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{keepNull,boolean,optional}
Define if values set to null should be stored. By default the key is not removed from the document.

@RESTQUERYPARAM{returnOld,boolean,optional}
Define if a presentation of the deleted document should
be returned within the response object.

@RESTQUERYPARAM{returnNew,boolean,optional}
Define if a presentation of the new document should
be returned within the response object.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTBODYPARAM{_from,string,required,}
The source vertex of this edge. Has to be valid within
the used edge definition.

@RESTBODYPARAM{_to,string,required,}
The target vertex of this edge. Has to be valid within
the used edge definition.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the request was successful but waitForSync is true.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The internal attributes for the edge

@RESTREPLYBODY{new,object,optional,edge_representation}
The complete newly written edge document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,edge_representation}
The complete overwritten edge document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{edge,object,required,edge_representation}
The internal attributes for the edge

@RESTREPLYBODY{new,object,optional,edge_representation}
The complete newly written edge document.
Includes all written attributes in the request body
and all internal attributes generated by ArangoDB.
Will only be present if returnNew is true.

@RESTREPLYBODY{old,object,optional,edge_representation}
The complete overwritten edge document.
Includes all attributes stored before this operation.
Will only be present if returnOld is true.

@RESTRETURNCODE{403}
Returned if your user has insufficient rights.
In order to replace edges in the graph  you at least need to have the following privileges:

  1. `Read Only` access on the Database.
  2. `Write` access on the given collection.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{404}
Returned in the following cases:
* No graph with this name could be found.
* This collection is not part of the graph.
* The edge to replace does not exist.
* either `_from` or `_to` vertex does not exist.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the stored documents revision is different.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialPutEdge_container">
<div id="HttpGharialPutEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/70321</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;divorced&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7ykngK---
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;edge&quot;</span> : { 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;relation/70321&quot;</span>, 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;70321&quot;</span>, 
    <span class="hljs-string">&quot;_oldRev&quot;</span> : <span class="hljs-string">&quot;_d7ykngC---&quot;</span>, 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ykngK---&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialPutEdge_container_collapse" onclick="$('#HttpGharialPutEdge_long').hide(); $('#HttpGharialPutEdge_short').show(); window.location.hash='HttpGharialPutEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialPutEdge_short" onclick="$('#HttpGharialPutEdge_short').hide(); $('#HttpGharialPutEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/70321</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;divorced&quot;</span>, 
  <span class="hljs-string">&quot;_from&quot;</span> : <span class="hljs-string">&quot;female/alice&quot;</span>, 
  <span class="hljs-string">&quot;_to&quot;</span> : <span class="hljs-string">&quot;male/bob&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">118</span>
etag: _d7ykngK---
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/general_graph_get_http_examples.md -->
@startDocuBlock general_graph_get_http_examples

@brief Get a graph from the graph module.

@RESTHEADER{GET /_api/gharial/{graph}, Get a graph}

@RESTDESCRIPTION
Selects information for a given graph.
Will return the edge definitions as well as the orphan collections.
Or returns a 404 if the graph does not exist.

@RESTURLPARAMETERS

@RESTURLPARAM{graph,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returns the graph if it could be found.
The result will have the following format:

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is false in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{graph,object,required,graph_representation}
The information about the newly created graph

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@RESTREPLYBODY{error,boolean,required,}
Flag if there was an error (true) or not (false).
It is true in this response.

@RESTREPLYBODY{code,integer,required,}
The response code.

@RESTREPLYBODY{errorNum,integer,required,}
ArangoDB error number for the error that occurred.

@RESTREPLYBODY{errorMessage,string,required,}
A message created for this error.

@EXAMPLES


<div class="example-container" id="HttpGharialGetGraph_container">
<div id="HttpGharialGetGraph_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/myGraph</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">227</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;graph&quot;</span> : { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span>, 
    <span class="hljs-string">&quot;edgeDefinitions&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;edges&quot;</span>, 
        <span class="hljs-string">&quot;from&quot;</span> : [ 
          <span class="hljs-string">&quot;startVertices&quot;</span> 
        ], 
        <span class="hljs-string">&quot;to&quot;</span> : [ 
          <span class="hljs-string">&quot;endVertices&quot;</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">&quot;orphanCollections&quot;</span> : [ ], 
    <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7yknO6---&quot;</span>, 
    <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;_graphs/myGraph&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;myGraph&quot;</span> 
  } 
}
</pre>
<div id="HttpGharialGetGraph_container_collapse" onclick="$('#HttpGharialGetGraph_long').hide(); $('#HttpGharialGetGraph_short').show(); window.location.hash='HttpGharialGetGraph_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialGetGraph_short" onclick="$('#HttpGharialGetGraph_short').hide(); $('#HttpGharialGetGraph_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/gharial/myGraph</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">227</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_create

@brief Create a new user.

@RESTHEADER{POST /_api/user, Create User}

@RESTBODYPARAM{user,string,required,string}
The name of the user as a string. This is mandatory.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. If not specified, it will default to an empty
string.

@RESTBODYPARAM{active,boolean,optional,}
An optional flag that specifies whether the user is active. If not
specified, this will default to *true*.

@RESTBODYPARAM{extra,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Create a new user. You need server access level *Administrate* in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the user can be added by the server

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{409}
Returned if a user with the same name already exists.

@EXAMPLES


<div class="example-container" id="RestCreateUser_container">
<div id="RestCreateUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@example&quot;</span>, 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">74</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@example&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCreateUser_container_collapse" onclick="$('#RestCreateUser_long').hide(); $('#RestCreateUser_short').show(); window.location.hash='RestCreateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCreateUser_short" onclick="$('#RestCreateUser_short').hide(); $('#RestCreateUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@example&quot;</span>, 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">74</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_grantDatabase

@brief Set the database access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}, Set the database access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the database access level to *Administrate*.<br>
Use "ro" to set the database access level to *Access*.<br>
Use "none" to set the database access level to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Sets the database access levels for the database *dbname* of user *user*. You
need the *Administrate* server access level in order to execute this REST
call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level was changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantDatabase_container">
<div id="RestGrantDatabase_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_system&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantDatabase_container_collapse" onclick="$('#RestGrantDatabase_long').hide(); $('#RestGrantDatabase_short').show(); window.location.hash='RestGrantDatabase_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantDatabase_short" onclick="$('#RestGrantDatabase_short').hide(); $('#RestGrantDatabase_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_revokeDatabase

@brief Clear the database access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}, Clear the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Clears the database access level for the database *dbname* of user *user*. As
consequence the default database access level is used. If there is no defined
default database access level, it defaults to *No access*. You need permission
to the *_system* database in order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@EXAMPLES


<div class="example-container" id="RestRevokeDatabase_container">
<div id="RestRevokeDatabase_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/admin@myapp/database/_system</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">26</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_grantCollection

@brief Set the collection access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}/{collection}, Set the collection access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the collection level access to *Read/Write*.

Use "ro" to set the collection level access to  *Read Only*.

Use "none" to set the collection level access to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Sets the collection access level for the *collection* in the database *dbname*
for user *user*. You need the *Administrate* server access level in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantCollection_container">
<div id="RestGrantCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">49</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_system/reports&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantCollection_container_collapse" onclick="$('#RestGrantCollection_long').hide(); $('#RestGrantCollection_short').show(); window.location.hash='RestGrantCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantCollection_short" onclick="$('#RestGrantCollection_short').hide(); $('#RestGrantCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">49</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_revokeCollection

@brief Clear the collection access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}/{collection}, Clear the collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Clears the collection access level for the collection *collection* in the
database *dbname* of user *user*.  As consequence the default collection
access level is used. If there is no defined default collection access level,
it defaults to *No access*.  You need permissions to the *_system* database in
order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If there was an error

@EXAMPLES


<div class="example-container" id="RestRevokeCollection_container">
<div id="RestRevokeCollection_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">26</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchDatabaseList

@brief List the accessible databases for a user

@RESTHEADER{GET /_api/user/{user}/database/, List the accessible databases for a user}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{full,boolean,optional}
Return the full set of access levels for all databases and all collections.

@RESTDESCRIPTION
Fetch the list of databases available to the specified *user*. You need
*Administrate* for the server access level in order to execute this REST call.

The call will return a JSON object with the per-database access
privileges for the specified user. The *result* object will contain
the databases names as object keys, and the associated privileges
for the database as values.

In case you specified *full*, the result will contain the permissions
for the databases as well as the permissions for the collections.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the list of available databases can be returned.

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabaseList_container">
<div id="RestFetchUserDatabaseList_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">52</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;_system&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
  } 
}
</pre>
<div id="RestFetchUserDatabaseList_container_collapse" onclick="$('#RestFetchUserDatabaseList_long').hide(); $('#RestFetchUserDatabaseList_short').show(); window.location.hash='RestFetchUserDatabaseList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseList_short" onclick="$('#RestFetchUserDatabaseList_short').hide(); $('#RestFetchUserDatabaseList_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">52</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With the full response format:


<div class="example-container" id="RestFetchUserDatabaseListFull_container">
<div id="RestFetchUserDatabaseListFull_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">504</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;_system&quot;</span> : { 
      <span class="hljs-string">&quot;permission&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span>, 
      <span class="hljs-string">&quot;collections&quot;</span> : { 
        <span class="hljs-string">&quot;animals&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;demo&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_fishbowl&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_modules&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_frontend&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_appbundles&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_statistics&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_graphs&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_statistics15&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_apps&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_users&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_statisticsRaw&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_analyzers&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_aqlfunctions&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_queues&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_jobs&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;*&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span> 
      } 
    }, 
    <span class="hljs-string">&quot;*&quot;</span> : { 
      <span class="hljs-string">&quot;permission&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
    } 
  } 
}
</pre>
<div id="RestFetchUserDatabaseListFull_container_collapse" onclick="$('#RestFetchUserDatabaseListFull_long').hide(); $('#RestFetchUserDatabaseListFull_short').show(); window.location.hash='RestFetchUserDatabaseListFull_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseListFull_short" onclick="$('#RestFetchUserDatabaseListFull_short').hide(); $('#RestFetchUserDatabaseListFull_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">504</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchDatabasePermission

@brief Get specific database access level

@RESTHEADER{GET /_api/user/{user}/database/{dbname}, Get the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{dbname,string,required}
The name of the database to query

@RESTDESCRIPTION
Fetch the database access level for a specific database

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabasePermission_container">
<div id="RestFetchUserDatabasePermission_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
</pre>
<div id="RestFetchUserDatabasePermission_container_collapse" onclick="$('#RestFetchUserDatabasePermission_long').hide(); $('#RestFetchUserDatabasePermission_short').show(); window.location.hash='RestFetchUserDatabasePermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabasePermission_short" onclick="$('#RestFetchUserDatabasePermission_short').hide(); $('#RestFetchUserDatabasePermission_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchCollectionPermission

@brief Get the collection access level

@RESTHEADER{GET /_api/user/{user}/database/{dbname}/{collection}, Get the specific collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{dbname,string,required}
The name of the database to query

@RESTURLPARAM{collection,string,required}
The name of the collection

@RESTDESCRIPTION
Returns the collection access level for a specific collection

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserCollectionPermission_container">
<div id="RestFetchUserCollectionPermission_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">42</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
}
</pre>
<div id="RestFetchUserCollectionPermission_container_collapse" onclick="$('#RestFetchUserCollectionPermission_long').hide(); $('#RestFetchUserCollectionPermission_short').show(); window.location.hash='RestFetchUserCollectionPermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserCollectionPermission_short" onclick="$('#RestFetchUserCollectionPermission_short').hide(); $('#RestFetchUserCollectionPermission_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">42</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_replace

@brief Replace an existing user.

@RESTHEADER{PUT /_api/user/{user}, Replace User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. If not specified, it will default to an empty
string.

@RESTBODYPARAM{active,boolean,optional,}
An optional flag that specifies whether the user is active. If not
specified, this will default to *true*.

@RESTBODYPARAM{extra,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Replaces the data of an existing user. You need server access level
*Administrate* in order to execute this REST call. Additionally, a user can
change his/her own data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestReplaceUser_container">
<div id="RestReplaceUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@myapp&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestReplaceUser_container_collapse" onclick="$('#RestReplaceUser_long').hide(); $('#RestReplaceUser_short').show(); window.location.hash='RestReplaceUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplaceUser_short" onclick="$('#RestReplaceUser_short').hide(); $('#RestReplaceUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_modify

@brief Modify attributes of an existing user

@RESTHEADER{PATCH /_api/user/{user}, Modify User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string.

@RESTBODYPARAM{active,boolean,optional,}
An optional flag that specifies whether the user is active.

@RESTBODYPARAM{extra,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Partially updates the data of an existing user. You need server access level
*Administrate* in order to execute this REST call. Additionally, a user can
change his/her own data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestUpdateUser_container">
<div id="RestUpdateUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@myapp&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestUpdateUser_container_collapse" onclick="$('#RestUpdateUser_long').hide(); $('#RestUpdateUser_short').show(); window.location.hash='RestUpdateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestUpdateUser_short" onclick="$('#RestUpdateUser_short').hide(); $('#RestUpdateUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_create

@brief Create a new user.

@RESTHEADER{POST /_api/user, Create User}

@RESTBODYPARAM{user,string,required,string}
The name of the user as a string. This is mandatory.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. If not specified, it will default to an empty
string.

@RESTBODYPARAM{active,boolean,optional,}
An optional flag that specifies whether the user is active. If not
specified, this will default to *true*.

@RESTBODYPARAM{extra,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Create a new user. You need server access level *Administrate* in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the user can be added by the server

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{409}
Returned if a user with the same name already exists.

@EXAMPLES


<div class="example-container" id="RestCreateUser_container">
<div id="RestCreateUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@example&quot;</span>, 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">74</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@example&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCreateUser_container_collapse" onclick="$('#RestCreateUser_long').hide(); $('#RestCreateUser_short').show(); window.location.hash='RestCreateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCreateUser_short" onclick="$('#RestCreateUser_short').hide(); $('#RestCreateUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@example&quot;</span>, 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">74</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock



@startDocuBlock UserHandling_grantDatabase

@brief Set the database access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}, Set the database access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the database access level to *Administrate*.<br>
Use "ro" to set the database access level to *Access*.<br>
Use "none" to set the database access level to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Sets the database access levels for the database *dbname* of user *user*. You
need the *Administrate* server access level in order to execute this REST
call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level was changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantDatabase_container">
<div id="RestGrantDatabase_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_system&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantDatabase_container_collapse" onclick="$('#RestGrantDatabase_long').hide(); $('#RestGrantDatabase_short').show(); window.location.hash='RestGrantDatabase_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantDatabase_short" onclick="$('#RestGrantDatabase_short').hide(); $('#RestGrantDatabase_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">41</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_revokeDatabase

@brief Clear the database access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}, Clear the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Clears the database access level for the database *dbname* of user *user*. As
consequence the default database access level is used. If there is no defined
default database access level, it defaults to *No access*. You need permission
to the *_system* database in order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@EXAMPLES


<div class="example-container" id="RestRevokeDatabase_container">
<div id="RestRevokeDatabase_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/admin@myapp/database/_system</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">26</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_grantCollection

@brief Set the collection access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}/{collection}, Set the collection access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the collection level access to *Read/Write*.

Use "ro" to set the collection level access to  *Read Only*.

Use "none" to set the collection level access to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Sets the collection access level for the *collection* in the database *dbname*
for user *user*. You need the *Administrate* server access level in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantCollection_container">
<div id="RestGrantCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">49</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;_system/reports&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantCollection_container_collapse" onclick="$('#RestGrantCollection_long').hide(); $('#RestGrantCollection_short').show(); window.location.hash='RestGrantCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantCollection_short" onclick="$('#RestGrantCollection_short').hide(); $('#RestGrantCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;grant&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">49</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_revokeCollection

@brief Clear the collection access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}/{collection}, Clear the collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Clears the collection access level for the collection *collection* in the
database *dbname* of user *user*.  As consequence the default collection
access level is used. If there is no defined default collection access level,
it defaults to *No access*.  You need permissions to the *_system* database in
order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If there was an error

@EXAMPLES


<div class="example-container" id="RestRevokeCollection_container">
<div id="RestRevokeCollection_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">26</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_fetchDatabaseList

@brief List the accessible databases for a user

@RESTHEADER{GET /_api/user/{user}/database/, List the accessible databases for a user}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{full,boolean,optional}
Return the full set of access levels for all databases and all collections.

@RESTDESCRIPTION
Fetch the list of databases available to the specified *user*. You need
*Administrate* for the server access level in order to execute this REST call.

The call will return a JSON object with the per-database access
privileges for the specified user. The *result* object will contain
the databases names as object keys, and the associated privileges
for the database as values.

In case you specified *full*, the result will contain the permissions
for the databases as well as the permissions for the collections.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the list of available databases can be returned.

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabaseList_container">
<div id="RestFetchUserDatabaseList_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">52</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;_system&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
  } 
}
</pre>
<div id="RestFetchUserDatabaseList_container_collapse" onclick="$('#RestFetchUserDatabaseList_long').hide(); $('#RestFetchUserDatabaseList_short').show(); window.location.hash='RestFetchUserDatabaseList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseList_short" onclick="$('#RestFetchUserDatabaseList_short').hide(); $('#RestFetchUserDatabaseList_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">52</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With the full response format:


<div class="example-container" id="RestFetchUserDatabaseListFull_container">
<div id="RestFetchUserDatabaseListFull_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">504</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;_system&quot;</span> : { 
      <span class="hljs-string">&quot;permission&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span>, 
      <span class="hljs-string">&quot;collections&quot;</span> : { 
        <span class="hljs-string">&quot;animals&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;demo&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_fishbowl&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_modules&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_frontend&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_appbundles&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_statistics&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_graphs&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_statistics15&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_apps&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_users&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_statisticsRaw&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_analyzers&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_aqlfunctions&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_queues&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;_jobs&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span>, 
        <span class="hljs-string">&quot;*&quot;</span> : <span class="hljs-string">&quot;undefined&quot;</span> 
      } 
    }, 
    <span class="hljs-string">&quot;*&quot;</span> : { 
      <span class="hljs-string">&quot;permission&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
    } 
  } 
}
</pre>
<div id="RestFetchUserDatabaseListFull_container_collapse" onclick="$('#RestFetchUserDatabaseListFull_long').hide(); $('#RestFetchUserDatabaseListFull_short').show(); window.location.hash='RestFetchUserDatabaseListFull_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseListFull_short" onclick="$('#RestFetchUserDatabaseListFull_short').hide(); $('#RestFetchUserDatabaseListFull_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">504</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_fetchDatabasePermission

@brief Get specific database access level

@RESTHEADER{GET /_api/user/{user}/database/{dbname}, Get the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{dbname,string,required}
The name of the database to query

@RESTDESCRIPTION
Fetch the database access level for a specific database

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabasePermission_container">
<div id="RestFetchUserDatabasePermission_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-string">&quot;rw&quot;</span> 
}
</pre>
<div id="RestFetchUserDatabasePermission_container_collapse" onclick="$('#RestFetchUserDatabasePermission_long').hide(); $('#RestFetchUserDatabasePermission_short').show(); window.location.hash='RestFetchUserDatabasePermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabasePermission_short" onclick="$('#RestFetchUserDatabasePermission_short').hide(); $('#RestFetchUserDatabasePermission_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_fetchCollectionPermission

@brief Get the collection access level

@RESTHEADER{GET /_api/user/{user}/database/{dbname}/{collection}, Get the specific collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{dbname,string,required}
The name of the database to query

@RESTURLPARAM{collection,string,required}
The name of the collection

@RESTDESCRIPTION
Returns the collection access level for a specific collection

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserCollectionPermission_container">
<div id="RestFetchUserCollectionPermission_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">42</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
}
</pre>
<div id="RestFetchUserCollectionPermission_container_collapse" onclick="$('#RestFetchUserCollectionPermission_long').hide(); $('#RestFetchUserCollectionPermission_short').show(); window.location.hash='RestFetchUserCollectionPermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserCollectionPermission_short" onclick="$('#RestFetchUserCollectionPermission_short').hide(); $('#RestFetchUserCollectionPermission_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">42</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_replace

@brief Replace an existing user.

@RESTHEADER{PUT /_api/user/{user}, Replace User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. If not specified, it will default to an empty
string.

@RESTBODYPARAM{active,boolean,optional,}
An optional flag that specifies whether the user is active. If not
specified, this will default to *true*.

@RESTBODYPARAM{extra,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Replaces the data of an existing user. You need server access level
*Administrate* in order to execute this REST call. Additionally, a user can
change his/her own data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestReplaceUser_container">
<div id="RestReplaceUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@myapp&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestReplaceUser_container_collapse" onclick="$('#RestReplaceUser_long').hide(); $('#RestReplaceUser_short').show(); window.location.hash='RestReplaceUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplaceUser_short" onclick="$('#RestReplaceUser_short').hide(); $('#RestReplaceUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock



@startDocuBlock UserHandling_modify

@brief Modify attributes of an existing user

@RESTHEADER{PATCH /_api/user/{user}, Modify User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string.

@RESTBODYPARAM{active,boolean,optional,}
An optional flag that specifies whether the user is active.

@RESTBODYPARAM{extra,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Partially updates the data of an existing user. You need server access level
*Administrate* in order to execute this REST call. Additionally, a user can
change his/her own data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestUpdateUser_container">
<div id="RestUpdateUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@myapp&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestUpdateUser_container_collapse" onclick="$('#RestUpdateUser_long').hide(); $('#RestUpdateUser_short').show(); window.location.hash='RestUpdateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestUpdateUser_short" onclick="$('#RestUpdateUser_short').hide(); $('#RestUpdateUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PATCH --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secure&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_delete

@brief delete a user permanently.

@RESTHEADER{DELETE /_api/user/{user}, Remove User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTDESCRIPTION
Removes an existing user, identified by *user*.  You need *Administrate* for
the server access level in order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Is returned if the user was removed by the server

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestDeleteUser_container">
<div id="RestDeleteUser_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/user/userToDelete@myapp</span> &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">26</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetch

@brief fetch the properties of a user.

@RESTHEADER{GET /_api/user/{user}, Fetch User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTDESCRIPTION
Fetches data about the specified user. You can fetch information about
yourself or you need the *Administrate* server access level in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The user was found.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The user with the specified name does not exist.

@EXAMPLES


<div class="example-container" id="RestFetchUser_container">
<div id="RestFetchUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/admin@myapp</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin@myapp&quot;</span>, 
  <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestFetchUser_container_collapse" onclick="$('#RestFetchUser_long').hide(); $('#RestFetchUser_short').show(); window.location.hash='RestFetchUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUser_short" onclick="$('#RestFetchUser_short').hide(); $('#RestFetchUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user/admin@myapp</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchProperties

@brief fetch the properties of a user.

@RESTHEADER{GET /_api/user/, List available Users}

@RESTDESCRIPTION
Fetches data about all users.  You need the *Administrate* server access level
in order to execute this REST call.  Otherwise, you will only get information
about yourself.

The call will return a JSON object with at least the following
attributes on success:

- *user*: The name of the user as a string.
- *active*: An optional flag that specifies whether the user is active.
- *extra*: A JSON object with extra user information. It is used by the web
  interface to store graph viewer settings and saved queries.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The users that were found.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchAllUser_container">
<div id="RestFetchAllUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">164</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;tester&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">&quot;extra&quot;</span> : { 
      } 
    }, 
    { 
      <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;extra&quot;</span> : { 
      } 
    }, 
    { 
      <span class="hljs-string">&quot;user&quot;</span> : <span class="hljs-string">&quot;root&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">&quot;extra&quot;</span> : { 
      } 
    } 
  ] 
}
</pre>
<div id="RestFetchAllUser_container_collapse" onclick="$('#RestFetchAllUser_long').hide(); $('#RestFetchAllUser_short').show(); window.location.hash='RestFetchAllUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchAllUser_short" onclick="$('#RestFetchAllUser_short').hide(); $('#RestFetchAllUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/user</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">164</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/put_api_new_tasks.md -->
@startDocuBlock put_api_new_tasks

@brief registers a new task with a pre-defined id; not compatible with load balancers

@RESTHEADER{PUT /_api/tasks/{id}, creates a task with id, registerTask:byId}

@RESTURLPARAM{id,string,required}
The id of the task to create

@RESTBODYPARAM{name,string,required,string}
The name of the task

@RESTBODYPARAM{command,string,required,string}
The JavaScript code to be executed

@RESTBODYPARAM{params,string,required,string}
The parameters to be passed into command

@RESTBODYPARAM{period,integer,optional,int64}
number of seconds between the executions

@RESTBODYPARAM{offset,integer,optional,int64}
Number of seconds initial delay

@RESTDESCRIPTION
registers a new task with the specified id

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the task *id* already exists or the rest body is not accurate, *HTTP 400* is returned.

@EXAMPLES


<div class="example-container" id="RestTasksPutWithId_container">
<div id="RestTasksPutWithId_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/tasks/sampleTask</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function(params) { require(&#x27;@arangodb&#x27;).print(params); })(params)&quot;</span>, 
  <span class="hljs-string">&quot;params&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span> 
  }, 
  <span class="hljs-string">&quot;period&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">245</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;sampleTask&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">1648682818.5914094</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;periodic&quot;</span>, 
  <span class="hljs-string">&quot;period&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function (params) { (function(params) { require(&#x27;@arangodb&#x27;).print(params); })(params) } )(params);&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
</pre>
<div id="RestTasksPutWithId_container_collapse" onclick="$('#RestTasksPutWithId_long').hide(); $('#RestTasksPutWithId_short').show(); window.location.hash='RestTasksPutWithId_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksPutWithId_short" onclick="$('#RestTasksPutWithId_short').hide(); $('#RestTasksPutWithId_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/tasks/sampleTask</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function(params) { require(&#x27;@arangodb&#x27;).print(params); })(params)&quot;</span>, 
  <span class="hljs-string">&quot;params&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span> 
  }, 
  <span class="hljs-string">&quot;period&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">245</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/post_admin_server_encryption.md -->
@startDocuBlock post_admin_server_encryption

@brief Rotate encryption at rest key

@RESTHEADER{POST /_admin/server/encryption, Rotate the encryption at rest keystore, handleEncryption:post}

@RESTDESCRIPTION
Change the user supplied encryption at rest key by sending a request without
payload to this endpoint. The file supplied via `--rocksdb.encryption-keyfolder`
will be reloaded and the internal encryption key will be re-encrypted with the
new user key.

This is a protected API and can only be executed with superuser rights.
This API is not available on coordinator nodes.

The API returns HTTP 404 in case encryption key rotation is disabled.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 if everything is ok

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code - 200 in this case

@RESTREPLYBODY{result,object,required,jwt_keys_struct}
The result object.

@RESTSTRUCT{encryption-keys,jwt_keys_struct,array,required,object}
An array of objects with the SHA-256 hashes of the key secrets.
Can be empty.

@RESTRETURNCODE{403}
This API will return HTTP 403 FORBIDDEN if it is not called with
superuser rights.

@RESTRETURNCODE{404}
This API will return HTTP 404 in case encryption key rotation is disabled.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_modules_flush.md -->
@startDocuBlock get_admin_log

@brief returns the server logs

@RESTHEADER{GET /_admin/log, Read global logs from the server, setLogLevel:read}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{upto,string,optional}
Returns all log entries up to log level *upto*. Note that *upto* must be:
- *fatal* or *0*
- *error* or *1*
- *warning* or *2*
- *info* or *3*
- *debug*  or *4*
The default value is *info*.

@RESTQUERYPARAM{level,string,optional}
Returns all log entries of log level *level*. Note that the query parameters
*upto* and *level* are mutually exclusive.

@RESTQUERYPARAM{start,number,optional}
Returns all log entries such that their log entry identifier (*lid* value)
is greater or equal to *start*.

@RESTQUERYPARAM{size,number,optional}
Restricts the result to at most *size* log entries.

@RESTQUERYPARAM{offset,number,optional}
Starts to return log entries skipping the first *offset* log entries. *offset*
and *size* can be used for pagination.

@RESTQUERYPARAM{search,string,optional}
Only return the log entries containing the text specified in *search*.

@RESTQUERYPARAM{sort,string,optional}
Sort the log entries either ascending (if *sort* is *asc*) or descending
(if *sort* is *desc*) according to their *lid* values. Note that the *lid*
imposes a chronological order. The default value is *asc*.

@RESTDESCRIPTION
Returns fatal, error, warning or info log messages from the server's global log.
The result is a JSON object with the following attributes:

@RESTRETURNCODES

@RESTRETURNCODE{200}

@RESTREPLYBODY{lid,array,required,string}
a list of log entry identifiers. Each log message is uniquely
identified by its @LIT{lid} and the identifiers are in ascending
order.

@RESTREPLYBODY{level,string,required,string}
A list of the log levels for all log entries.

@RESTREPLYBODY{timestamp,array,required,string}
a list of the timestamps as seconds since 1970-01-01 for all log
entries.

@RESTREPLYBODY{text,string,required,string}
a list of the texts of all log entries

@RESTREPLYBODY{topic,string,required,string}
a list of the topics of all log entries

@RESTREPLYBODY{totalAmount,integer,required,int64}
the total amount of log entries before pagination.

@RESTRETURNCODE{400}
is returned if invalid values are specified for *upto* or *level*.

@RESTRETURNCODE{500}
is returned if the server cannot generate the result due to an out-of-memory
error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_modules_flush.md -->
@startDocuBlock get_admin_loglevel

@brief returns the current log level settings

@RESTHEADER{GET /_admin/log/level, Return the current server log level}

@RESTDESCRIPTION
Returns the server's current log level settings.
The result is a JSON object with the log topics being the object keys, and
the log levels being the object values.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request is valid

@RESTRETURNCODE{500}
is returned if the server cannot generate the result due to an out-of-memory
error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_modules_flush.md -->
@startDocuBlock put_admin_loglevel

@brief modifies the current log level settings

@RESTHEADER{PUT /_admin/log/level, Modify and return the current server log level}

@RESTDESCRIPTION
Modifies and returns the server's current log level settings.
The request body must be a JSON object with the log topics being the object keys
and the log levels being the object values.

The result is a JSON object with the adjusted log topics being the object keys, and
the adjusted log levels being the object values.

It can set the log level of all facilities by only specifying the log level as string without json.

Possible log levels are:
- FATAL - There will be no way out of this. ArangoDB will go down after this message.
- ERROR - This is an error. you should investigate and fix it. It may harm your production.
- WARNING - This may be serious application-wise, but we don't know.
- INFO - Something has happened, take notice, but no drama attached.
- DEBUG - output debug messages
- TRACE - trace - prepare your log to be flooded - don't use in production.

@RESTBODYPARAM{agency,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{agencycomm,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{agencystore,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{aql,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{arangosearch,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{audit-authentication,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-authorization,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-collection,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-database,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-document,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-hotbackup,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-service,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{audit-view,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{authentication,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{authorization,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{backup,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{cache,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{cluster,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{clustercomm,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{collector,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{communication,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{compactor,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{config,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{crash,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{datafiles,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{development,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{dump,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{engines,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{flush,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{general,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{graphs,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{heartbeat,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{httpclient,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{ldap,string,optional,string}
One of the possible log topics (_Enterprise Edition only_).

@RESTBODYPARAM{libiresearch,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{maintenance,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{memory,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{mmap,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{performance,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{pregel,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{queries,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{replication,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{requests,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{restore,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{rocksdb,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{security,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{ssl,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{startup,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{statistics,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{supervision,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{syscall,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{threads,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{trx,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{ttl,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{validation,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{v8,string,optional,string}
One of the possible log topics.

@RESTBODYPARAM{views,string,optional,string}
One of the possible log topics.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request is valid

@RESTRETURNCODE{400}
is returned when the request body contains invalid JSON.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the server cannot generate the result due to an out-of-memory
error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/post_api_new_tasks.md -->
@startDocuBlock post_api_new_tasks

@brief creates a new task

@RESTHEADER{POST /_api/tasks, creates a task, registerTask}

@RESTBODYPARAM{name,string,required,string}
The name of the task

@RESTBODYPARAM{command,string,required,string}
The JavaScript code to be executed

@RESTBODYPARAM{params,string,required,string}
The parameters to be passed into command

@RESTBODYPARAM{period,integer,optional,int64}
number of seconds between the executions

@RESTBODYPARAM{offset,integer,optional,int64}
Number of seconds initial delay

@RESTDESCRIPTION
creates a new task with a generated id

@RESTRETURNCODES

@RESTRETURNCODE{200}
The task was registered

@RESTREPLYBODY{id,string,required,}
A string identifying the task

@RESTREPLYBODY{created,number,required,float}
The timestamp when this task was created

@RESTREPLYBODY{type,string,required,}
What type of task is this [ `periodic`, `timed`]
  - periodic are tasks that repeat periodically
  - timed are tasks that execute once at a specific time

@RESTREPLYBODY{period,number,required,}
this task should run each `period` seconds

@RESTREPLYBODY{offset,number,required,float}
time offset in seconds from the created timestamp

@RESTREPLYBODY{command,string,required,}
the javascript function for this task

@RESTREPLYBODY{database,string,required,}
the database this task belongs to

@RESTREPLYBODY{code,number,required,}
The status code, 200 in this case.

@RESTREPLYBODY{error,boolean,required,}
*false* in this case

@RESTRETURNCODE{400}
If the post body is not accurate, a *HTTP 400* is returned.

@EXAMPLES


<div class="example-container" id="RestTasksCreate_container">
<div id="RestTasksCreate_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/tasks/</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function(params) { require(&#x27;@arangodb&#x27;).print(params); })(params)&quot;</span>, 
  <span class="hljs-string">&quot;params&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span> 
  }, 
  <span class="hljs-string">&quot;period&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">240</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;72903&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">1648682818.5477724</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;periodic&quot;</span>, 
  <span class="hljs-string">&quot;period&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function (params) { (function(params) { require(&#x27;@arangodb&#x27;).print(params); })(params) } )(params);&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/72903</span>

</pre>
<div id="RestTasksCreate_container_collapse" onclick="$('#RestTasksCreate_long').hide(); $('#RestTasksCreate_short').show(); window.location.hash='RestTasksCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksCreate_short" onclick="$('#RestTasksCreate_short').hide(); $('#RestTasksCreate_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/tasks/</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SampleTask&quot;</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function(params) { require(&#x27;@arangodb&#x27;).print(params); })(params)&quot;</span>, 
  <span class="hljs-string">&quot;params&quot;</span> : { 
    <span class="hljs-string">&quot;foo&quot;</span> : <span class="hljs-string">&quot;bar&quot;</span>, 
    <span class="hljs-string">&quot;bar&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span> 
  }, 
  <span class="hljs-string">&quot;period&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">240</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/72903</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_engine.md -->
@startDocuBlock get_engine

@brief returns the engine the type the server is running with

@RESTHEADER{GET /_api/engine, Return server database engine type, RestEngineHandler}

@RESTDESCRIPTION
Returns the storage engine the server is configured to use.
The response is a JSON object with the following attributes:

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned in all cases.

@RESTREPLYBODY{name,string,required,string}
will be *rocksdb*

@EXAMPLES

Return the active storage engine with the RocksDB storage engine in use:


<div class="example-container" id="RestEngine_rocksdb_container">
<div id="RestEngine_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/engine</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">195</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;rocksdb&quot;</span>, 
  <span class="hljs-string">&quot;supports&quot;</span> : { 
    <span class="hljs-string">&quot;dfdb&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;indexes&quot;</span> : [ 
      <span class="hljs-string">&quot;primary&quot;</span>, 
      <span class="hljs-string">&quot;edge&quot;</span>, 
      <span class="hljs-string">&quot;hash&quot;</span>, 
      <span class="hljs-string">&quot;skiplist&quot;</span>, 
      <span class="hljs-string">&quot;ttl&quot;</span>, 
      <span class="hljs-string">&quot;persistent&quot;</span>, 
      <span class="hljs-string">&quot;geo&quot;</span>, 
      <span class="hljs-string">&quot;fulltext&quot;</span> 
    ], 
    <span class="hljs-string">&quot;aliases&quot;</span> : { 
      <span class="hljs-string">&quot;indexes&quot;</span> : { 
        <span class="hljs-string">&quot;skiplist&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
        <span class="hljs-string">&quot;hash&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span> 
      } 
    } 
  } 
}
</pre>
<div id="RestEngine_rocksdb_container_collapse" onclick="$('#RestEngine_rocksdb_long').hide(); $('#RestEngine_rocksdb_short').show(); window.location.hash='RestEngine_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEngine_rocksdb_short" onclick="$('#RestEngine_rocksdb_short').hide(); $('#RestEngine_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/engine</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">195</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/post_admin_execute.md -->
@startDocuBlock post_admin_execute

@brief Execute a script on the server.

@RESTHEADER{POST /_admin/execute, Execute program, RestAdminExecuteHandler}

@RESTALLBODYPARAM{body,string,required}
The body to be executed.

@RESTDESCRIPTION
Executes the javascript code in the body on the server as the body
of a function with no arguments. If you have a *return* statement
then the return value you produce will be returned as content type
*application/json*. If the parameter *returnAsJSON* is set to
*true*, the result will be a JSON object describing the return value
directly, otherwise a string produced by JSON.stringify will be
returned.

Note that this API endpoint will only be present if the server was
started with the option `--javascript.allow-admin-execute true`.

The default value of this option is `false`, which disables the execution of
user-defined code and disables this API endpoint entirely.
This is also the recommended setting for production.

@RESTRETURNCODE{200}
is returned when everything went well, or if a timeout occurred. In the
latter case a body of type application/json indicating the timeout
is returned. depending on *returnAsJSON* this is a json object or a plain string.

@RESTRETURNCODE{403}
is returned if ArangoDB is not running in cluster mode.

@RESTRETURNCODE{404}
is returned if ArangoDB was not compiled for cluster operation.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_jwt.md -->
@startDocuBlock get_admin_server_jwt

@brief Retrieve JWT secrets info

@RESTHEADER{GET /_admin/server/jwt, Fetch information about the currently loaded secrets, handleJWT:get}

@RESTDESCRIPTION
Get information about the currently loaded secrets.

To utilize the API a superuser JWT token is necessary, otherwise the response
will be _HTTP 403 Forbidden_.

@RESTRETURNCODES

@RESTRETURNCODE{200}

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code - 200 in this case

@RESTREPLYBODY{result,object,required,jwt_secret_struct}
The result object.

@RESTSTRUCT{active,jwt_secret_struct,object,required,}
An object with the SHA-256 hash of the active secret.

@RESTSTRUCT{passive,jwt_secret_struct,array,required,object}
An array of objects with the SHA-256 hashes of the passive secrets.
Can be empty.

@RESTRETURNCODE{403}
if the request was not authenticated as a user with sufficient rights

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/put_admin_server_mode.md -->
@startDocuBlock put_admin_server_mode

@brief Update the mode of this server (read-only or default)

@RESTHEADER{PUT /_admin/server/mode, Update whether or not a server is in read-only mode, handleMode:set}

@RESTBODYPARAM{mode,string,required,string}
The mode of the server `readonly` or `default`.

@RESTDESCRIPTION
Update mode information about a server. The json response will contain
a field `mode` with the value `readonly` or `default`. In a read-only server
all write operations will fail with an error code of `1004` (_ERROR_READ_ONLY_).
Creating or dropping of databases and collections will also fail with error
code `11` (_ERROR_FORBIDDEN_).

This is a protected API. It requires authentication and administrative
server rights.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 if everything is ok

@RESTRETURNCODE{401}
if the request was not authenticated as a user with sufficient rights

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_status.md -->
@startDocuBlock JSF_get_admin_status

@brief returns status information of the server.

@RESTHEADER{GET /_admin/status, Return status information, RestStatusHandler}

@RESTDESCRIPTION
Returns status information about the server.

This is intended for manual use by the support and should
never be used for monitoring or automatic tests. The results
are subject to change without notice.

The call returns an object with the following attributes:

- *server*: always *arango*.

- *license*: either *community* or *enterprise*.

- *version*: the server version as string.

- *mode* : either *server* or *console*.

- *host*: the hostname, see *ServerState*.

- *serverInfo.role*: either *SINGLE*, *COORDINATOR*, *PRIMARY*, *AGENT*.

- *serverInfo.writeOpsEnabled*: boolean, true if writes are enabled.

- *serverInfo.maintenance*: boolean, true if maintenance mode is enabled.

- *agency.endpoints*: a list of possible Agency endpoints.

An Agent, Coordinator or primary will also have

- *serverInfo.persistedId*: the persisted ide, e. g. *"CRDN-e427b441-5087-4a9a-9983-2fb1682f3e2a"*.

A Coordinator or primary will also have

- *serverInfo.state*: *SERVING*

- *serverInfo.address*: the address of the server, e. g. *tcp://[::1]:8530*.

- *serverInfo.serverId*: the server ide, e. g. *"CRDN-e427b441-5087-4a9a-9983-2fb1682f3e2a"*.

A Coordinator will also have

- *coordinator.foxxmaster*: the server id of the foxx master.

- *coordinator.isFoxxmaster*: boolean, true if the server is the foxx master.

An Agent will also have

- *agent.id*: server id of this Agent.

- *agent.leaderId*: server id of the leader.

- *agent.leading*: boolean, true if leading.

- *agent.endpoint*: the endpoint of this Agent.

- *agent.term*: current term number.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Status information was returned successfully.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_role.md -->
@startDocuBlock get_admin_server_role

@brief Return the role of a server in a cluster

@RESTHEADER{GET /_admin/server/role, Return the role of a server in a cluster, handleRole}

@RESTDESCRIPTION
Returns the role of a server in a cluster.
The role is returned in the *role* attribute of the result.
Possible return values for *role* are:
- *SINGLE*: the server is a standalone server without clustering
- *COORDINATOR*: the server is a Coordinator in a cluster
- *PRIMARY*: the server is a DB-Server in a cluster
- *SECONDARY*: this role is not used anymore
- *AGENT*: the server is an Agency node in a cluster
- *UNDEFINED*: in a cluster, *UNDEFINED* is returned if the server role cannot be
   determined.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned in all cases.

@RESTREPLYBODY{error,boolean,required,}
always *false*

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code, always 200

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{role,string,required,string}
one of [ *SINGLE*, *COORDINATOR*, *PRIMARY*, *SECONDARY*, *AGENT*, *UNDEFINED*]

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_api_tasks.md -->
@startDocuBlock get_api_tasks

@brief Retrieves one currently active server task

@RESTHEADER{GET /_api/tasks/{id}, Fetch one task with id, getTask}

@RESTURLPARAM{id,string,required}
The id of the task to fetch.

@RESTDESCRIPTION
fetches one existing task on the server specified by *id*

@RESTRETURNCODE{200}
The requested task

@RESTREPLYBODY{,object,required,api_task_struct}
The function in question

@EXAMPLES

Fetching a single task by its id

<div class="example-container" id="RestTasksListOne_container">
<div id="RestTasksListOne_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/tasks</span> &lt;&lt;EOF
{"id":"testTask","command":"console.log('Hello from task!');","offset":10000}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/testTask</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">206</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;testTask&quot;</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;user-defined task&quot;</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">1648682818.5837405</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;timed&quot;</span>, 
  <span class="hljs-string">&quot;offset&quot;</span> : <span class="hljs-number">10000</span>, 
  <span class="hljs-string">&quot;command&quot;</span> : <span class="hljs-string">&quot;(function (params) { console.log(&#x27;Hello from task!&#x27;); } )(params);&quot;</span>, 
  <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span> 
}
</pre>
<div id="RestTasksListOne_container_collapse" onclick="$('#RestTasksListOne_long').hide(); $('#RestTasksListOne_short').show(); window.location.hash='RestTasksListOne_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksListOne_short" onclick="$('#RestTasksListOne_short').hide(); $('#RestTasksListOne_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/tasks</span> &lt;&lt;EOF
{"id":"testTask","command":"console.log('Hello from task!');","offset":10000}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/testTask</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">206</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Trying to fetch a non-existing task

<div class="example-container" id="RestTasksListNonExisting_container">
<div id="RestTasksListNonExisting_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/non-existing-task</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">73</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;task not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1852</span> 
}
</pre>
<div id="RestTasksListNonExisting_container_collapse" onclick="$('#RestTasksListNonExisting_long').hide(); $('#RestTasksListNonExisting_short').show(); window.location.hash='RestTasksListNonExisting_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksListNonExisting_short" onclick="$('#RestTasksListNonExisting_short').hide(); $('#RestTasksListNonExisting_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/non-existing-task</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">73</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_api_tasks_all.md -->
@startDocuBlock get_api_tasks_all

@brief Retrieves all currently active server tasks

@RESTHEADER{GET /_api/tasks/, Fetch all tasks or one task, getTasks}

@RESTDESCRIPTION
fetches all existing tasks on the server

@RESTRETURNCODE{200}
The list of tasks

@RESTREPLYBODY{,array,required,api_task_struct}
a list of all tasks

@EXAMPLES

Fetching all tasks

<div class="example-container" id="RestTasksListAll_container">
<div id="RestTasksListAll_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2</span>
server: ArangoDB
x-content-type-options: nosniff

[ ]
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/post_admin_echo.md -->
@startDocuBlock post_admin_echo

@brief Send back what was sent in, headers, post body etc.

@RESTHEADER{POST /_admin/echo, Return current request, adminEchoJs}

@RESTALLBODYPARAM{body,object,required}
The body can be any type and is simply forwarded.

@RESTDESCRIPTION
The call returns an object with the servers request information

@RESTRETURNCODES

@RESTRETURNCODE{200}
Echo was returned successfully.

@RESTREPLYBODY{authorized,boolean,required,}
whether the session is authorized

@RESTREPLYBODY{user,string,required,}
the currently user that sent this request

@RESTREPLYBODY{database,string,required,}
the database this request was executed on

@RESTREPLYBODY{url,string,required,}
the raw request URL

@RESTREPLYBODY{protocol,string,required,}
the transport, one of ['http', 'https', 'velocystream']

@RESTREPLYBODY{server,object,required,admin_echo_server_struct}

@RESTSTRUCT{address,admin_echo_server_struct,string,required,}
the bind address of the endpoint this request was sent to

@RESTSTRUCT{port,admin_echo_server_struct,integer,required,}
the port this request was sent to

@RESTREPLYBODY{client,object,required,admin_echo_client_struct}
attributes of the client connection

@RESTSTRUCT{address,admin_echo_server_struct,integer,required,}
the ip address of the client

@RESTSTRUCT{port,admin_echo_server_struct,integer,required,}
port of the client side of the tcp connection

@RESTSTRUCT{id,admin_echo_server_struct,string,required,}
a server generated id

@RESTREPLYBODY{internals,object,required,}
contents of the server internals struct

@RESTREPLYBODY{prefix,object,required,}
prefix of the database

@RESTREPLYBODY{headers,object,required,}
the list of the HTTP headers you sent

@RESTREPLYBODY{requestType,string,required,}
In this case *POST*, if you use another HTTP-Verb, you will se that (GET/DELETE, ...)

@RESTREPLYBODY{requestBody,string,required,}
stringified version of the POST body we sent

@RESTREPLYBODY{parameters,object,required,}
Object containing the query parameters

@RESTREPLYBODY{cookies,object,required,}
list of the cookies you sent

@RESTREPLYBODY{suffix,array,required,}

@RESTREPLYBODY{rawSuffix,array,required,}

@RESTREPLYBODY{path,string,required,}
relative path of this request

@RESTREPLYBODY{rawRequestBody,array,required,}
List of digits of the sent characters

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_mode.md -->
@startDocuBlock get_admin_server_mode

@brief Return the mode of this server (read-only or default)

@RESTHEADER{GET /_admin/server/mode, Return whether or not a server is in read-only mode, handleMode:get}

@RESTDESCRIPTION
Return mode information about a server. The json response will contain
a field `mode` with the value `readonly` or `default`. In a read-only server
all write operations will fail with an error code of `1004` (_ERROR_READ_ONLY_).
Creating or dropping of databases and collections will also fail with error code `11` (_ERROR_FORBIDDEN_).

This API requires authentication.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 if everything is ok
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_availability.md -->
@startDocuBlock get_admin_server_availability

@brief Return whether or not a server is available

@RESTHEADER{GET /_admin/server/availability, Return whether or not a server is available, handleAvailability}

@RESTDESCRIPTION
Return availability information about a server.

This is a public API so it does *not* require authentication. It is meant to be
used only in the context of server monitoring only.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 in case the server is up and running and usable for
arbitrary operations, is not set to read-only mode and is currently not a follower
in case of an active failover setup.

@RESTRETURNCODE{503}
HTTP 503 will be returned in case the server is during startup or during shutdown,
is set to read-only mode or is currently a follower in an active failover setup.

In addition, since ArangoDB version 3.7.6, HTTP 503 will be returned in case the 
fill grade of the scheduler queue exceeds the configured high-water mark (adjustable 
via startup option `--server.unavailability-queue-fill-grade`), which by default is 
set to 100 % of the maximum queue length. I
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/post_admin_server_jwt.md -->
@startDocuBlock post_admin_server_jwt

@brief Hot-reload JWT secrets

@RESTHEADER{POST /_admin/server/jwt, Hot-reload the JWT secret(s) from disk, handleJWT:post}

@RESTDESCRIPTION
Sending a request without payload to this endpoint reloads the JWT secret(s)
from disk. Only the files specified via the arangod startup option
`--server.jwt-secret-keyfile` or `--server.jwt-secret-folder` are used.
It is not possible to change the locations where files are loaded from
without restarting the process.

To utilize the API a superuser JWT token is necessary, otherwise the response
will be _HTTP 403 Forbidden_.

@RESTRETURNCODES

@RESTRETURNCODE{200}

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code - 200 in this case

@RESTREPLYBODY{result,object,required,jwt_secret_struct}
The result object.

@RESTSTRUCT{active,jwt_secret_struct,object,required,}
An object with the SHA-256 hash of the active secret.

@RESTSTRUCT{passive,jwt_secret_struct,array,required,object}
An array of objects with the SHA-256 hashes of the passive secrets.
Can be empty.

@RESTRETURNCODE{403}
if the request was not authenticated as a user with sufficient rights

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/delete_api_shutdown.md -->
@startDocuBlock delete_api_shutdown

@brief initiates the shutdown sequence

@RESTHEADER{DELETE /_admin/shutdown, Initiate shutdown sequence, RestShutdownHandler}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{soft,boolean,optional}
<small>Introduced in: v3.7.12, v3.8.1, v3.9.0</small>

If set to `true`, this initiates a soft shutdown. This is only available
on Coordinators. When issued, the Coordinator tracks a number of ongoing
operations, waits until all have finished, and then shuts itself down
normally. It will still accept new operations.

This feature can be used to make restart operations of Coordinators less
intrusive for clients. It is designed for setups with a load balancer in front
of Coordinators. Remove the designated Coordinator from the load balancer before
issuing the soft-shutdown. The remaining Coordinators will internally forward
requests that need to be handled by the designated Coordinator. All other
requests will be handled by the remaining Coordinators, reducing the designated
Coordinator's load.

The following types of operations are tracked:

 - AQL cursors (in particular streaming cursors)
 - Transactions (in particular stream transactions)
 - Pregel runs (conducted by this Coordinator)
 - Ongoing asynchronous requests (using the `x-arango-async: store` HTTP header
 - Finished asynchronous requests, whose result has not yet been
   collected
 - Queued low priority requests (most normal requests)
 - Ongoing low priority requests

@RESTDESCRIPTION
This call initiates a clean shutdown sequence. Requires administrative privileges.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned in all cases, `OK` will be returned in the result buffer on success.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/put_admin_compact.md -->
@startDocuBlock put_admin_compact

@brief compact all databases

@RESTHEADER{PUT /_admin/compact, Compact the entire database system data, RestCompactHandler}

@HINTS
{% hint 'warning' %}
This command can cause a full rewrite of all data in all databases, which may
take very long for large databases. It should thus only be used with care and
only when additional I/O load can be tolerated for a prolonged time.
{% endhint %}

@RESTDESCRIPTION
This endpoint can be used to reclaim disk space after substantial data
deletions have taken place. It requires superuser access.

@RESTBODYPARAM{changeLevel,boolean,optional,}
whether or not compacted data should be moved to the minimum possible level.
The default value is *false*.

@RESTBODYPARAM{compactBottomMostLevel,boolean,optional,}
Whether or not to compact the bottommost level of data.
The default value is *false*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Compaction started successfully

@RESTRETURNCODE{401}
if the request was not authenticated as a user with sufficient rights

@EXAMPLES


<div class="example-container" id="RestAdminCompact_container">
<div id="RestAdminCompact_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/compact</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
}
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_database_version.md -->
@startDocuBlock get_admin_database_version

@brief returns the version of the database.

@RESTHEADER{GET /_admin/database/target-version, Return the required version of the database, RestAdminDatabaseHandler}

@RESTDESCRIPTION
Returns the database version that this server requires.
The version is returned in the *version* attribute of the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned in all cases.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_time.md -->
@startDocuBlock get_admin_time

@brief Get the current time of the system

@RESTHEADER{GET /_admin/time, Return system time, RestTimeHandler}

@RESTDESCRIPTION
The call returns an object with the attribute *time*. This contains the
current system time as a Unix timestamp with microsecond precision.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Time was returned successfully.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{time,number,required,float}
The current system time as a Unix timestamp with microsecond precision of the server

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_routing_reloads.md -->
@startDocuBlock get_admin_routing_reloads

@brief Reload the routing table.

@RESTHEADER{POST /_admin/routing/reload, Reloads the routing information, RestAdminRoutingHandler}

@RESTDESCRIPTION
Reloads the routing information from the collection *routing*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Routing information was reloaded successfully.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_api_return.md -->
@startDocuBlock get_api_return

@brief returns the server version number

@RESTHEADER{GET /_api/version, Return server version, RestVersionHandler}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{details,boolean,optional}
If set to *true*, the response will contain a *details* attribute with
additional information about included components and their versions. The
attribute names and internals of the *details* object may vary depending on
platform and ArangoDB version.

@RESTDESCRIPTION
Returns the server name and version number. The response is a JSON object
with the following attributes:

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned in all cases.

@RESTREPLYBODY{server,string,required,string}
will always contain *arango*

@RESTREPLYBODY{version,string,required,string}
the server version string. The string has the format
"*major*.*minor*.*sub*". *major* and *minor* will be numeric, and *sub*
may contain a number or a textual version.

@RESTREPLYBODY{details,object,optional,version_details_struct}
an optional JSON object with additional details. This is
returned only if the *details* query parameter is set to *true* in the
request.

@RESTSTRUCT{architecture,version_details_struct,string,optional,}
The CPU architecture, i.e. *64bit*

@RESTSTRUCT{arm,version_details_struct,string,optional,}
*false* - this is not running on an ARM cpu

@RESTSTRUCT{asan,version_details_struct,string,optional,}
has this been compiled with the asan address sanitizer turned on? (should be false)

@RESTSTRUCT{asm-crc32,version_details_struct,string,optional,}
do we have assembler implemented CRC functions?

@RESTSTRUCT{assertions,version_details_struct,string,optional,}
do we have assertions compiled in (=> developer version)

@RESTSTRUCT{boost-version,version_details_struct,string,optional,}
which boost version do we bind

@RESTSTRUCT{build-date,version_details_struct,string,optional,}
the date when this binary was created

@RESTSTRUCT{build-repository,version_details_struct,string,optional,}
reference to the git-ID this was compiled from

@RESTSTRUCT{compiler,version_details_struct,string,optional,}
which compiler did we use

@RESTSTRUCT{cplusplus,version_details_struct,string,optional,}
C++ standards version

@RESTSTRUCT{debug,version_details_struct,string,optional,}
*false* for production binaries

@RESTSTRUCT{endianness,version_details_struct,string,optional,}
currently only *little* is supported

@RESTSTRUCT{failure-tests,version_details_struct,string,optional,}
*false* for production binaries (the facility to invoke fatal errors is disabled)

@RESTSTRUCT{fd-client-event-handler,version_details_struct,string,optional,}
which method do we use to handle fd-sets, *poll* should be here on linux.

@RESTSTRUCT{fd-setsize,version_details_struct,string,optional,}
if not *poll* the fd setsize is valid for the maximum number of filedescriptors

@RESTSTRUCT{full-version-string,version_details_struct,string,optional,}
The full version string

@RESTSTRUCT{icu-version,version_details_struct,string,optional,}
Which version of ICU do we bundle

@RESTSTRUCT{jemalloc,version_details_struct,string,optional,}
*true* if we use jemalloc

@RESTSTRUCT{maintainer-mode,version_details_struct,string,optional,}
*false* if this is a production binary

@RESTSTRUCT{openssl-version,version_details_struct,string,optional,}
which openssl version do we link?

@RESTSTRUCT{platform,version_details_struct,string,optional,}
the host os - *linux*, *windows* or *darwin*

@RESTSTRUCT{reactor-type,version_details_struct,string,optional,}
*epoll* TODO

@RESTSTRUCT{rocksdb-version,version_details_struct,string,optional,}
the rocksdb version this release bundles

@RESTSTRUCT{server-version,version_details_struct,string,optional,}
the ArangoDB release version

@RESTSTRUCT{sizeof int,version_details_struct,string,optional,}
number of bytes for *integers*

@RESTSTRUCT{sizeof void*,version_details_struct,string,optional,}
number of bytes for *void pointers*

@RESTSTRUCT{sse42,version_details_struct,string,optional,}
do we have a SSE 4.2 enabled cpu?

@RESTSTRUCT{unaligned-access,version_details_struct,string,optional,}
does this system support unaligned memory access?

@RESTSTRUCT{v8-version,version_details_struct,string,optional,}
the bundled V8 javascript engine version

@RESTSTRUCT{vpack-version,version_details_struct,string,optional,}
the version of the used velocypack implementation

@RESTSTRUCT{zlib-version,version_details_struct,string,optional,}
the version of the bundled zlib

@RESTSTRUCT{mode,version_details_struct,string,optional,}
the mode we're runnig as - one of [*server*, *console*, *script*]

@RESTSTRUCT{host,version_details_struct,string,optional,}
the host ID

@EXAMPLES

Return the version information


<div class="example-container" id="RestVersion_container">
<div id="RestVersion_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">61</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;server&quot;</span> : <span class="hljs-string">&quot;arango&quot;</span>, 
  <span class="hljs-string">&quot;license&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
  <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span> 
}
</pre>
<div id="RestVersion_container_collapse" onclick="$('#RestVersion_long').hide(); $('#RestVersion_short').show(); window.location.hash='RestVersion_container';" class="example_show_button">Hide response body</div></div>
<div id="RestVersion_short" onclick="$('#RestVersion_short').hide(); $('#RestVersion_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">61</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Return the version information with details


<div class="example-container" id="RestVersionDetails_container">
<div id="RestVersionDetails_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version?details=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1709</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;server&quot;</span> : <span class="hljs-string">&quot;arango&quot;</span>, 
  <span class="hljs-string">&quot;license&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
  <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
  <span class="hljs-string">&quot;details&quot;</span> : { 
    <span class="hljs-string">&quot;architecture&quot;</span> : <span class="hljs-string">&quot;64bit&quot;</span>, 
    <span class="hljs-string">&quot;arm&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;asan&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;asm-crc32&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;assertions&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;avx2&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;boost-version&quot;</span> : <span class="hljs-string">&quot;1.71.0&quot;</span>, 
    <span class="hljs-string">&quot;build-date&quot;</span> : <span class="hljs-string">&quot;2022-03-30 22:11:45&quot;</span>, 
    <span class="hljs-string">&quot;build-repository&quot;</span> : <span class="hljs-string">&quot;heads/documentation-3.7/note-about-key-generator-sequence-gaps-0-ga9c782a6f2c&quot;</span>, 
    <span class="hljs-string">&quot;compiler&quot;</span> : <span class="hljs-string">&quot;gcc [9.3.0]&quot;</span>, 
    <span class="hljs-string">&quot;cplusplus&quot;</span> : <span class="hljs-string">&quot;201703&quot;</span>, 
    <span class="hljs-string">&quot;curl-version&quot;</span> : <span class="hljs-string">&quot;none&quot;</span>, 
    <span class="hljs-string">&quot;debug&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;endianness&quot;</span> : <span class="hljs-string">&quot;little&quot;</span>, 
    <span class="hljs-string">&quot;enterprise-version&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
    <span class="hljs-string">&quot;failure-tests&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;fd-client-event-handler&quot;</span> : <span class="hljs-string">&quot;poll&quot;</span>, 
    <span class="hljs-string">&quot;fd-setsize&quot;</span> : <span class="hljs-string">&quot;1024&quot;</span>, 
    <span class="hljs-string">&quot;full-version-string&quot;</span> : <span class="hljs-string">&quot;ArangoDB 3.7.18 enterprise [linux] 64bit, using jemalloc, build heads/documentation-3.7/note-about-key-generator-sequence-gaps-0-ga9c782a6f2c, VPack 0.1.33, RocksDB 6.8.0, ICU 64.2, V8 7.9.317, OpenSSL 1.1.1n  15 Mar 2022&quot;</span>, 
    <span class="hljs-string">&quot;icu-version&quot;</span> : <span class="hljs-string">&quot;64.2&quot;</span>, 
    <span class="hljs-string">&quot;ipo&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;iresearch-version&quot;</span> : <span class="hljs-string">&quot;1.0.0.0&quot;</span>, 
    <span class="hljs-string">&quot;jemalloc&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;libunwind&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;license&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
    <span class="hljs-string">&quot;maintainer-mode&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;ndebug&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;openssl-version-compile-time&quot;</span> : <span class="hljs-string">&quot;OpenSSL 1.1.1n  15 Mar 2022&quot;</span>, 
    <span class="hljs-string">&quot;openssl-version-run-time&quot;</span> : <span class="hljs-string">&quot;OpenSSL 1.1.1n  15 Mar 2022&quot;</span>, 
    <span class="hljs-string">&quot;optimization-flags&quot;</span> : <span class="hljs-string">&quot;-march=westmere -msse2 -msse3 -mssse3 -msse4.1 -msse4.2 -mno-sse4a -mno-avx -mno-fma -mno-bmi2 -mno-avx2 -mno-xop -mno-fma4 -mno-avx512f -mno-avx512vl -mno-avx512pf -mno-avx512er -mno-avx512cd -mno-avx512dq -mno-avx512bw -mno-avx512ifma -mno-avx512vbmi&quot;</span>, 
    <span class="hljs-string">&quot;pic&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;pie&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
    <span class="hljs-string">&quot;platform&quot;</span> : <span class="hljs-string">&quot;linux&quot;</span>, 
    <span class="hljs-string">&quot;reactor-type&quot;</span> : <span class="hljs-string">&quot;epoll&quot;</span>, 
    <span class="hljs-string">&quot;rocksdb-version&quot;</span> : <span class="hljs-string">&quot;6.8.0&quot;</span>, 
    <span class="hljs-string">&quot;server-version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
    <span class="hljs-string">&quot;sizeof int&quot;</span> : <span class="hljs-string">&quot;4&quot;</span>, 
    <span class="hljs-string">&quot;sizeof long&quot;</span> : <span class="hljs-string">&quot;8&quot;</span>, 
    <span class="hljs-string">&quot;sizeof void*&quot;</span> : <span class="hljs-string">&quot;8&quot;</span>, 
    <span class="hljs-string">&quot;sse42&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;tsan&quot;</span> : <span class="hljs-string">&quot;false&quot;</span>, 
    <span class="hljs-string">&quot;unaligned-access&quot;</span> : <span class="hljs-string">&quot;true&quot;</span>, 
    <span class="hljs-string">&quot;v8-version&quot;</span> : <span class="hljs-string">&quot;7.9.317&quot;</span>, 
    <span class="hljs-string">&quot;vpack-version&quot;</span> : <span class="hljs-string">&quot;0.1.33&quot;</span>, 
    <span class="hljs-string">&quot;zlib-version&quot;</span> : <span class="hljs-string">&quot;1.2.11&quot;</span>, 
    <span class="hljs-string">&quot;mode&quot;</span> : <span class="hljs-string">&quot;server&quot;</span>, 
    <span class="hljs-string">&quot;role&quot;</span> : <span class="hljs-string">&quot;SINGLE&quot;</span>, 
    <span class="hljs-string">&quot;host&quot;</span> : <span class="hljs-string">&quot;hw3-linux&quot;</span> 
  } 
}
</pre>
<div id="RestVersionDetails_container_collapse" onclick="$('#RestVersionDetails_long').hide(); $('#RestVersionDetails_short').show(); window.location.hash='RestVersionDetails_container';" class="example_show_button">Hide response body</div></div>
<div id="RestVersionDetails_short" onclick="$('#RestVersionDetails_short').hide(); $('#RestVersionDetails_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/version?details=<span class="hljs-literal">true</span></span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1709</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_id.md -->
@startDocuBlock get_admin_server_id

@brief Get to know the internal id of the server

@RESTHEADER{GET /_admin/server/id, Return id of a server in a cluster, handleId}

@RESTDESCRIPTION
Returns the id of a server in a cluster. The request will fail if the
server is not running in cluster mode.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the server is running in cluster mode.

@RESTRETURNCODE{500}
Is returned when the server is not running in cluster mode.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_api_cluster_endpoints.md -->
@startDocuBlock get_api_cluster_endpoints

@brief This API call returns information about all Coordinator endpoints (cluster only).

@RESTHEADER{GET /_api/cluster/endpoints, Get information about all Coordinator endpoints, handleCommandEndpoints:listClusterEndpoints}

@RESTDESCRIPTION
Returns an object with an attribute `endpoints`, which contains an
array of objects, which each have the attribute `endpoint`, whose value
is a string with the endpoint description. There is an entry for each
Coordinator in the cluster. This method only works on Coordinators in
cluster mode. In case of an error the `error` attribute is set to
`true`.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code - 200

@RESTREPLYBODY{endpoints,array,required,cluster_endpoints_struct}
A list of active cluster endpoints.

@RESTSTRUCT{endpoint,cluster_endpoints_struct,string,required,}
The bind of the Coordinator, like `tcp://[::1]:8530`

@RESTRETURNCODE{501} server is not a Coordinator or method was not GET.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/delete_api_tasks.md -->
@startDocuBlock delete_api_tasks

@brief deletes one currently active server task

@RESTHEADER{DELETE /_api/tasks/{id}, deletes the task with id, deleteTask}

@RESTURLPARAM{id,string,required}
The id of the task to delete.

@RESTDESCRIPTION
Deletes the task identified by *id* on the server.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the task was deleted, *HTTP 200* is returned.

@RESTREPLYBODY{code,number,required,}
The status code, 200 in this case.

@RESTREPLYBODY{error,boolean,required,}
*false* in this case

@RESTRETURNCODE{404}
If the task *id* is unknown, then an *HTTP 404* is returned.

@RESTREPLYBODY{code,number,required,}
The status code, 404 in this case.

@RESTREPLYBODY{error,boolean,required,}
*true* in this case

@RESTREPLYBODY{errorMessage,string,required,}
A plain text message stating what went wrong.

@EXAMPLES

trying to delete non existing task


<div class="example-container" id="RestTasksDeleteFail_container">
<div id="RestTasksDeleteFail_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/NoTaskWithThatName</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">73</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;task not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1852</span> 
}
</pre>
<div id="RestTasksDeleteFail_container_collapse" onclick="$('#RestTasksDeleteFail_long').hide(); $('#RestTasksDeleteFail_short').show(); window.location.hash='RestTasksDeleteFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksDeleteFail_short" onclick="$('#RestTasksDeleteFail_short').hide(); $('#RestTasksDeleteFail_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/NoTaskWithThatName</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">73</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Remove existing Task


<div class="example-container" id="RestTasksDelete_container">
<div id="RestTasksDelete_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/tasks/SampleTask</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">26</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_api_endpoint.md -->
@startDocuBlock get_api_endpoint

@brief This API call returns the list of all endpoints (single server).

@RESTHEADER{GET /_api/endpoint, Return list of all endpoints, retrieveEndpoints}

@HINTS
{% hint 'warning' %}
This route should no longer be used.
It is considered as deprecated from version 3.4.0 on.
{% endhint %}

@RESTDESCRIPTION
Returns an array of all configured endpoints the server is listening on.

The result is a JSON array of JSON objects, each with `"entrypoint"' as
the only attribute, and with the value being a string describing the
endpoint.

**Note**: retrieving the array of all endpoints is allowed in the system database
only. Calling this action in any other database will make the server return
an error.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned when the array of endpoints can be determined successfully.

@RESTRETURNCODE{400}
is returned if the action is not carried out in the system database.

@RESTRETURNCODE{405}
The server will respond with *HTTP 405* if an unsupported HTTP method is used.

@EXAMPLES


<div class="example-container" id="RestEndpointGet_container">
<div id="RestEndpointGet_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/endpoint</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">39</span>
server: ArangoDB
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">&quot;endpoint&quot;</span> : <span class="hljs-string">&quot;http://127.0.0.1:27248&quot;</span> 
  } 
]
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/post_admin_server_tls.md -->
@startDocuBlock post_admin_server_tls

@brief Trigger a reload of the TLS data of this server (server key, client-auth CA) and return the new data as a summary.

@RESTHEADER{POST /_admin/server/tls, Trigger a reload of the TLS data and return a summary, handleTLS:post}

@RESTDESCRIPTION
This API call triggers a reload of all the TLS data and then
returns a summary. The JSON response is exactly as in the corresponding
GET request (see there).

This is a protected API and can only be executed with superuser rights.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 if everything is ok

@RESTRETURNCODE{403}
This API will return HTTP 403 FORBIDDEN if it is not called with
superuser rights.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_statistics_description.md -->
@startDocuBlock get_admin_statistics_description

@brief fetch descriptive info of statistics

@RESTHEADER{GET /_admin/statistics-description, Statistics description, getStatisticsDescription}

@RESTDESCRIPTION
Returns a description of the statistics returned by */_admin/statistics*.
The returned objects contains an array of statistics groups in the attribute
*groups* and an array of statistics figures in the attribute *figures*.

A statistics group is described by

- *group*: The identifier of the group.
- *name*: The name of the group.
- *description*: A description of the group.

A statistics figure is described by

- *group*: The identifier of the group to which this figure belongs.
- *identifier*: The identifier of the figure. It is unique within the group.
- *name*: The name of the figure.
- *description*: A description of the figure.
- *type*: Either *current*, *accumulated*, or *distribution*.
- *cuts*: The distribution vector.
- *units*: Units in which the figure is measured.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Description was returned successfully.

@RESTREPLYBODY{groups,array,required,admin_statistics_group_struct}
A statistics group

@RESTSTRUCT{group,admin_statistics_group_struct,string,required,}
The identifier of the group.

@RESTSTRUCT{name,admin_statistics_group_struct,string,required,}
The name of the group.

@RESTSTRUCT{description,admin_statistics_group_struct,string,required,}
A description of the group.

@RESTREPLYBODY{figures,array,required,admin_statistics_figures_struct}
A statistics figure

@RESTSTRUCT{group,admin_statistics_figures_struct,string,required,}
The identifier of the group to which this figure belongs.

@RESTSTRUCT{identifier,admin_statistics_figures_struct,string,required,}
The identifier of the figure. It is unique within the group.

@RESTSTRUCT{name,admin_statistics_figures_struct,string,required,}
The name of the figure.

@RESTSTRUCT{description,admin_statistics_figures_struct,string,required,}
A description of the figure.

@RESTSTRUCT{type,admin_statistics_figures_struct,string,required,}
Either *current*, *accumulated*, or *distribution*.

@RESTSTRUCT{cuts,admin_statistics_figures_struct,string,required,}
The distribution vector.

@RESTSTRUCT{units,admin_statistics_figures_struct,string,required,}
Units in which the figure is measured.

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{error,boolean,required,}
the error, *false* in this case

@EXAMPLES


<div class="example-container" id="RestAdminStatisticsDescription1_container">
<div id="RestAdminStatisticsDescription1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/statistics-description</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">7844</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;groups&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Process Statistics&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Statistics about the ArangoDB process&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Client Connection Statistics&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Statistics about the connections.&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Client User Connection Statistics&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Statistics about the connections, only user traffic (ignoring superuser JWT traffic).&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP Request Statistics&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Statistics about the HTTP requests.&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;server&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Server Statistics&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Statistics about the ArangoDB server&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;figures&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;userTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;User Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Amount of time that this process has been scheduled in user mode, measured in seconds.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;systemTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;System Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Amount of time that this process has been scheduled in kernel mode, measured in seconds.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;numberOfThreads&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Number of Threads&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of threads in the arangod process.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;residentSize&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Resident Set Size&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;The total size of the number of pages the process has in real memory. This is just the pages which count toward text, data, or stack space. This does not include pages which have not been demand-loaded in, or which are swapped out. The resident set size is reported in bytes.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;residentSizePercent&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Resident Set Size&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;The percentage of physical memory used by the process as resident set size.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;percent&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;virtualSize&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Virtual Memory Size&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;On Windows, this figure contains the total amount of memory that the memory manager has committed for the arangod process. On other systems, this figure contains The size of the virtual memory the process is using.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;minorPageFaults&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Minor Page Faults&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;The number of minor faults the process has made which have not required loading a memory page from disk. This figure is not reported on Windows.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;system&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;majorPageFaults&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Major Page Faults&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;On Windows, this figure contains the total number of page faults. On other system, this figure contains the number of major faults the process has made which have required loading a memory page from disk.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;httpConnections&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Client Connections&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;The number of connections that are currently open.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;totalTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Total Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total time needed to answer a request.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Request Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Request time needed to answer a request.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;queueTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Queue Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Queue time needed to answer a request.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;bytesSent&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bytes Sent&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Bytes sents for a request.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">250</span>, 
        <span class="hljs-number">1000</span>, 
        <span class="hljs-number">2000</span>, 
        <span class="hljs-number">5000</span>, 
        <span class="hljs-number">10000</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;bytesReceived&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bytes Received&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Bytes received for a request.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">250</span>, 
        <span class="hljs-number">1000</span>, 
        <span class="hljs-number">2000</span>, 
        <span class="hljs-number">5000</span>, 
        <span class="hljs-number">10000</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;client&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;connectionTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Connection Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total connection time of a client.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">60</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;httpConnections&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Client Connections&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;The number of connections that are currently open (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;totalTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Total Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total time needed to answer a request (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Request Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Request time needed to answer a request (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;queueTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Queue Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Queue time needed to answer a request (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;bytesSent&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bytes Sent&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Bytes sents for a request (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">250</span>, 
        <span class="hljs-number">1000</span>, 
        <span class="hljs-number">2000</span>, 
        <span class="hljs-number">5000</span>, 
        <span class="hljs-number">10000</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;bytesReceived&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Bytes Received&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Bytes received for a request (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">250</span>, 
        <span class="hljs-number">1000</span>, 
        <span class="hljs-number">2000</span>, 
        <span class="hljs-number">5000</span>, 
        <span class="hljs-number">10000</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;clientUser&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;connectionTime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Connection Time&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total connection time of a client (only user traffic).&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;distribution&quot;</span>, 
      <span class="hljs-string">&quot;cuts&quot;</span> : [ 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">60</span> 
      ], 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsTotal&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Total requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total number of HTTP requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsSuperuser&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Total superuser requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total number of HTTP requests executed by superuser/JWT.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsUser&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Total user requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Total number of HTTP requests executed by clients.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsAsync&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Async requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of asynchronously executed HTTP requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsGet&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP GET requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP GET requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsHead&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP HEAD requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP HEAD requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsPost&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP POST requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP POST requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsPut&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP PUT requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP PUT requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsPatch&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP PATCH requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP PATCH requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsDelete&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP DELETE requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP DELETE requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsOptions&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;HTTP OPTIONS requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of HTTP OPTIONS requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;http&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;requestsOther&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;other HTTP requests&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of other HTTP requests.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;accumulated&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;number&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;server&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;uptime&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Server Uptime&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Number of seconds elapsed since server start.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;seconds&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;group&quot;</span> : <span class="hljs-string">&quot;server&quot;</span>, 
      <span class="hljs-string">&quot;identifier&quot;</span> : <span class="hljs-string">&quot;physicalMemory&quot;</span>, 
      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;Physical Memory&quot;</span>, 
      <span class="hljs-string">&quot;description&quot;</span> : <span class="hljs-string">&quot;Physical memory in bytes.&quot;</span>, 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;current&quot;</span>, 
      <span class="hljs-string">&quot;units&quot;</span> : <span class="hljs-string">&quot;bytes&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestAdminStatisticsDescription1_container_collapse" onclick="$('#RestAdminStatisticsDescription1_long').hide(); $('#RestAdminStatisticsDescription1_short').show(); window.location.hash='RestAdminStatisticsDescription1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAdminStatisticsDescription1_short" onclick="$('#RestAdminStatisticsDescription1_short').hide(); $('#RestAdminStatisticsDescription1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/statistics-description</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">7844</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_api_shutdown.md -->
@startDocuBlock get_api_shutdown

@brief query progress of soft shutdown process

@RESTHEADER{GET /_admin/shutdown, Query progress of soft shutdown process, RestGetShutdownHandler}

@RESTDESCRIPTION
<small>Introduced in: v3.7.12, v3.8.1, v3.9.0</small>

This call reports progress about a soft Coordinator shutdown (see
documentation of `DELETE /_admin/shutdown?soft=true`).
In this case, the following types of operations are tracked:

 - AQL cursors (in particular streaming cursors)
 - Transactions (in particular stream transactions)
 - Pregel runs (conducted by this Coordinator)
 - Ongoing asynchronous requests (using the `x-arango-async: store` HTTP header
 - Finished asynchronous requests, whose result has not yet been
   collected
 - Queued low priority requests (most normal requests)
 - Ongoing low priority requests

This API is only available on Coordinators.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The response indicates the fact that a soft shutdown is ongoing and the
number of active operations of the various types. Once all numbers have gone
to 0, the flag `allClear` is set and the Coordinator shuts down automatically.

@RESTREPLYBODY{softShutdownOngoing,boolean,required,}
Whether a soft shutdown of the Coordinator is in progress.

@RESTREPLYBODY{AQLcursors,number,required,}
Number of AQL cursors that are still active.

@RESTREPLYBODY{transactions,number,required,}
Number of ongoing transactions.

@RESTREPLYBODY{pendingJobs,number,required,}
Number of ongoing asynchronous requests.

@RESTREPLYBODY{doneJobs,number,required,}
Number of finished asynchronous requests, whose result has not yet been collected.

@RESTREPLYBODY{pregelConductors,number,required,}
Number of ongoing Pregel jobs.

@RESTREPLYBODY{lowPrioOngoingRequests,number,required,}
Number of queued low priority requests.

@RESTREPLYBODY{lowPrioQueuedRequests,number,required,}
Number of ongoing low priority requests.

@RESTREPLYBODY{allClear,boolean,required,}
Whether all active operations finished.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_statistics.md -->
@startDocuBlock get_admin_statistics

@brief return the statistics information

@RESTHEADER{GET /_admin/statistics, Read the statistics, getStatistics}

@RESTDESCRIPTION
Returns the statistics information. The returned object contains the
statistics figures grouped together according to the description returned by
*_admin/statistics-description*. For instance, to access a figure *userTime*
from the group *system*, you first select the sub-object describing the
group stored in *system* and in that sub-object the value for *userTime* is
stored in the attribute of the same name.

In case of a distribution, the returned object contains the total count in
*count* and the distribution list in *counts*. The sum (or total) of the
individual values is returned in *sum*.

The transaction statistics show the local started, committed and aborted
transactions as well as intermediate commits done for the server queried. The
intermediate commit count will only take non zero values for the RocksDB
storage engine. Coordinators do almost no local transactions themselves in
their local databases, therefor cluster transactions (transactions started on a
Coordinator that require DB-Servers to finish before the transactions is
committed cluster wide) are just added to their local statistics. This means
that the statistics you would see for a single server is roughly what you can
expect in a cluster setup using a single Coordinator querying this Coordinator.
Just with the difference that cluster transactions have no notion of
intermediate commits and will not increase the value.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Statistics were returned successfully.

@RESTRETURNCODE{404}
Statistics are disabled on the instance.

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate whether an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code - 200 in this case

@RESTREPLYBODY{time,integer,required,int64}
the current server timestamp

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message

@RESTREPLYBODY{enabled,boolean,required,}
*true* if the server has the statistics module enabled. If not, don't expect any values.

@RESTREPLYBODY{system,object,required,system_statistics_struct}
metrics gathered from the system about this process; may depend on the host OS

@RESTSTRUCT{minorPageFaults,system_statistics_struct,integer,required,}
pagefaults

@RESTSTRUCT{majorPageFaults,system_statistics_struct,integer,required,}
pagefaults

@RESTSTRUCT{userTime,system_statistics_struct,number,required,float}
the user CPU time used by the server process

@RESTSTRUCT{systemTime,system_statistics_struct,number,required,float}
the system CPU time used by the server process

@RESTSTRUCT{numberOfThreads,system_statistics_struct,integer,required,}
the number of threads in the server

@RESTSTRUCT{residentSize,system_statistics_struct,integer,required,}
RSS of process

@RESTSTRUCT{residentSizePercent,system_statistics_struct,number,required,float}
RSS of process in %

@RESTSTRUCT{virtualSize,system_statistics_struct,integer,required,}
VSS of the process

@RESTREPLYBODY{client,object,required,client_statistics_struct}
information about the connected clients and their resource usage

@RESTSTRUCT{sum,setof_statistics_struct,number,required,}
summarized value of all counts

@RESTSTRUCT{count,setof_statistics_struct,integer,required,}
number of values summarized

@RESTSTRUCT{counts,setof_statistics_struct,array,required,integer}
array containing the values

@RESTSTRUCT{connectionTime,client_statistics_struct,object,required,setof_statistics_struct}
total connection times

@RESTSTRUCT{totalTime,client_statistics_struct,object,required,setof_statistics_struct}
the system time

@RESTSTRUCT{requestTime,client_statistics_struct,object,required,setof_statistics_struct}
the request times

@RESTSTRUCT{queueTime,client_statistics_struct,object,required,setof_statistics_struct}
the time requests were queued waiting for processing

@RESTSTRUCT{ioTime,client_statistics_struct,object,required,setof_statistics_struct}
IO Time

@RESTSTRUCT{bytesSent,client_statistics_struct,object,required,setof_statistics_struct}
number of bytes sent to the clients

@RESTSTRUCT{bytesReceived,client_statistics_struct,object,required,setof_statistics_struct}
number of bytes received from the clients

@RESTSTRUCT{httpConnections,client_statistics_struct,integer,required,}
the number of open http connections

@RESTREPLYBODY{http,object,required,http_statistics_struct}
the numbers of requests by Verb

@RESTSTRUCT{requestsTotal,http_statistics_struct,integer,required,}
total number of http requests

@RESTSTRUCT{requestsAsync,http_statistics_struct,integer,required,}
total number of asynchronous http requests

@RESTSTRUCT{requestsGet,http_statistics_struct,integer,required,}
No of requests using the GET-verb

@RESTSTRUCT{requestsHead,http_statistics_struct,integer,required,}
No of requests using the HEAD-verb

@RESTSTRUCT{requestsPost,http_statistics_struct,integer,required,}
No of requests using the POST-verb

@RESTSTRUCT{requestsPut,http_statistics_struct,integer,required,}
No of requests using the PUT-verb

@RESTSTRUCT{requestsPatch,http_statistics_struct,integer,required,}
No of requests using the PATCH-verb

@RESTSTRUCT{requestsDelete,http_statistics_struct,integer,required,}
No of requests using the DELETE-verb

@RESTSTRUCT{requestsOptions,http_statistics_struct,integer,required,}
No of requests using the OPTIONS-verb

@RESTSTRUCT{requestsOther,http_statistics_struct,integer,required,}
No of requests using the none of the above identified verbs

@RESTREPLYBODY{server,object,required,server_statistics_struct}
statistics of the server

@RESTSTRUCT{uptime,server_statistics_struct,integer,required,}
time the server is up and running

@RESTSTRUCT{physicalMemory,server_statistics_struct,integer,required,}
available physical memory on the server

@RESTSTRUCT{transactions,server_statistics_struct,object,required,transactions_struct}
Statistics about transactions

@RESTSTRUCT{started,transactions_struct,integer,required,}
the number of started transactions

@RESTSTRUCT{committed,transactions_struct,integer,required,}
the number of committed transactions

@RESTSTRUCT{aborted,transactions_struct,integer,required,}
the number of aborted transactions

@RESTSTRUCT{intermediateCommits,transactions_struct,integer,required,}
the number of intermediate commits done

@RESTSTRUCT{v8Context,server_statistics_struct,object,required,v8_context_struct}
Statistics about the V8 javascript contexts

@RESTSTRUCT{available,v8_context_struct,integer,required,}
the number of currently spawnen V8 contexts

@RESTSTRUCT{busy,v8_context_struct,integer,required,}
the number of currently active V8 contexts

@RESTSTRUCT{dirty,v8_context_struct,integer,required,}
the number of contexts that were previously used, and should now be garbage collected before being re-used

@RESTSTRUCT{free,v8_context_struct,integer,required,}
the number of V8 contexts that are free to use

@RESTSTRUCT{max,v8_context_struct,integer,required,}
the maximum number of concurrent V8 contexts we may spawn as configured by --javascript.v8-contexts

@RESTSTRUCT{min,v8_context_struct,integer,required,}
the minimum number of V8 contexts that are spawned as configured by --javascript.v8-contexts-minimum

@RESTSTRUCT{memory,v8_context_struct,array,required,v8_isolate_memory}
a list of V8 memory / garbage collection watermarks; Refreshed on every garbage collection run;
Preserves min/max memory used at that time for 10 seconds

@RESTSTRUCT{contextId,v8_isolate_memory,integer,required,}
ID of the context this set of memory statistics is from

@RESTSTRUCT{tMax,v8_isolate_memory,number,required,}
the timestamp where the 10 seconds interval started

@RESTSTRUCT{countOfTimes,v8_isolate_memory,integer,required,}
how many times was the garbage collection run in these 10 seconds

@RESTSTRUCT{heapMax,v8_isolate_memory,integer,required,}
High watermark of all garbage collection runs in 10 seconds

@RESTSTRUCT{heapMin,v8_isolate_memory,integer,required,}
Low watermark of all garbage collection runs in these 10 seconds

@RESTSTRUCT{threads,server_statistics_struct,object,required,server_threads_struct}
Statistics about the server worker threads (excluding V8 specific or jemalloc specific threads and system threads)

@RESTSTRUCT{scheduler-threads,server_threads_struct,integer,required,}
The number of spawned worker threads

@RESTSTRUCT{in-progress,server_threads_struct,integer,required,}
The number of currently busy worker threads

@RESTSTRUCT{queued,server_threads_struct,integer,required,}
The number of jobs queued up waiting for worker threads becomming available

@EXAMPLES


<div class="example-container" id="RestAdminStatistics1_container">
<div id="RestAdminStatistics1_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/statistics</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2213</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;time&quot;</span> : <span class="hljs-number">1648682773.7113755</span>, 
  <span class="hljs-string">&quot;enabled&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;system&quot;</span> : { 
    <span class="hljs-string">&quot;minorPageFaults&quot;</span> : <span class="hljs-number">77646</span>, 
    <span class="hljs-string">&quot;majorPageFaults&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;userTime&quot;</span> : <span class="hljs-number">10.55</span>, 
    <span class="hljs-string">&quot;systemTime&quot;</span> : <span class="hljs-number">3.75</span>, 
    <span class="hljs-string">&quot;numberOfThreads&quot;</span> : <span class="hljs-number">52</span>, 
    <span class="hljs-string">&quot;residentSize&quot;</span> : <span class="hljs-number">328015872</span>, 
    <span class="hljs-string">&quot;residentSizePercent&quot;</span> : <span class="hljs-number">0.004858524489373214</span>, 
    <span class="hljs-string">&quot;virtualSize&quot;</span> : <span class="hljs-number">1379971072</span> 
  }, 
  <span class="hljs-string">&quot;client&quot;</span> : { 
    <span class="hljs-string">&quot;httpConnections&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;connectionTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;totalTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">10.324453592300415</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35013</span>, 
        <span class="hljs-number">3</span>, 
        <span class="hljs-number">3</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;requestTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">6.683019399642944</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35014</span>, 
        <span class="hljs-number">2</span>, 
        <span class="hljs-number">3</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;queueTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">0.7245235443115234</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35019</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35018</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;ioTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">2.9169106483459473</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35020</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;bytesSent&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">10520052</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">458</span>, 
        <span class="hljs-number">34112</span>, 
        <span class="hljs-number">410</span>, 
        <span class="hljs-number">35</span>, 
        <span class="hljs-number">2</span>, 
        <span class="hljs-number">3</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;bytesReceived&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">8202330</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">33959</span>, 
        <span class="hljs-number">1061</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;clientUser&quot;</span> : { 
    <span class="hljs-string">&quot;httpConnections&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;connectionTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;totalTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">10.324453592300415</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35013</span>, 
        <span class="hljs-number">3</span>, 
        <span class="hljs-number">3</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;requestTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">6.683019399642944</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35014</span>, 
        <span class="hljs-number">2</span>, 
        <span class="hljs-number">3</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;queueTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">0.7245235443115234</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35019</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35018</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;ioTime&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">2.9169106483459473</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">35020</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;bytesSent&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">10520052</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">458</span>, 
        <span class="hljs-number">34112</span>, 
        <span class="hljs-number">410</span>, 
        <span class="hljs-number">35</span>, 
        <span class="hljs-number">2</span>, 
        <span class="hljs-number">3</span> 
      ] 
    }, 
    <span class="hljs-string">&quot;bytesReceived&quot;</span> : { 
      <span class="hljs-string">&quot;sum&quot;</span> : <span class="hljs-number">8202330</span>, 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">35020</span>, 
      <span class="hljs-string">&quot;counts&quot;</span> : [ 
        <span class="hljs-number">33959</span>, 
        <span class="hljs-number">1061</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  }, 
  <span class="hljs-string">&quot;http&quot;</span> : { 
    <span class="hljs-string">&quot;requestsTotal&quot;</span> : <span class="hljs-number">35020</span>, 
    <span class="hljs-string">&quot;requestsSuperuser&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;requestsUser&quot;</span> : <span class="hljs-number">35020</span>, 
    <span class="hljs-string">&quot;requestsAsync&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;requestsGet&quot;</span> : <span class="hljs-number">1008</span>, 
    <span class="hljs-string">&quot;requestsHead&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;requestsPost&quot;</span> : <span class="hljs-number">33859</span>, 
    <span class="hljs-string">&quot;requestsPut&quot;</span> : <span class="hljs-number">33</span>, 
    <span class="hljs-string">&quot;requestsPatch&quot;</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">&quot;requestsDelete&quot;</span> : <span class="hljs-number">118</span>, 
    <span class="hljs-string">&quot;requestsOptions&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;requestsOther&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;server&quot;</span> : { 
    <span class="hljs-string">&quot;uptime&quot;</span> : <span class="hljs-number">21.85938262939453</span>, 
    <span class="hljs-string">&quot;physicalMemory&quot;</span> : <span class="hljs-number">67513475072</span>, 
    <span class="hljs-string">&quot;transactions&quot;</span> : { 
      <span class="hljs-string">&quot;started&quot;</span> : <span class="hljs-number">34157</span>, 
      <span class="hljs-string">&quot;aborted&quot;</span> : <span class="hljs-number">222</span>, 
      <span class="hljs-string">&quot;committed&quot;</span> : <span class="hljs-number">35030</span>, 
      <span class="hljs-string">&quot;intermediateCommits&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;readOnly&quot;</span> : <span class="hljs-number">1197</span> 
    }, 
    <span class="hljs-string">&quot;v8Context&quot;</span> : { 
      <span class="hljs-string">&quot;available&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;busy&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;dirty&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;free&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;max&quot;</span> : <span class="hljs-number">16</span>, 
      <span class="hljs-string">&quot;min&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;memory&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;contextId&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;tMax&quot;</span> : <span class="hljs-number">1648682752.4513123</span>, 
          <span class="hljs-string">&quot;countOfTimes&quot;</span> : <span class="hljs-number">7</span>, 
          <span class="hljs-string">&quot;heapMax&quot;</span> : <span class="hljs-number">12038664</span>, 
          <span class="hljs-string">&quot;heapMin&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;invocations&quot;</span> : <span class="hljs-number">40</span> 
        }, 
        { 
          <span class="hljs-string">&quot;contextId&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;tMax&quot;</span> : <span class="hljs-number">1648682772.9578223</span>, 
          <span class="hljs-string">&quot;countOfTimes&quot;</span> : <span class="hljs-number">7</span>, 
          <span class="hljs-string">&quot;heapMax&quot;</span> : <span class="hljs-number">12010520</span>, 
          <span class="hljs-string">&quot;heapMin&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;invocations&quot;</span> : <span class="hljs-number">6</span> 
        } 
      ] 
    }, 
    <span class="hljs-string">&quot;threads&quot;</span> : { 
      <span class="hljs-string">&quot;scheduler-threads&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;blocked&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;queued&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;in-progress&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;direct-exec&quot;</span> : <span class="hljs-number">0</span> 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestAdminStatistics1_container_collapse" onclick="$('#RestAdminStatistics1_long').hide(); $('#RestAdminStatistics1_short').show(); window.location.hash='RestAdminStatistics1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAdminStatistics1_short" onclick="$('#RestAdminStatistics1_short').hide(); $('#RestAdminStatistics1_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/statistics</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2213</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_tls.md -->
@startDocuBlock get_admin_server_tls

@brief Return the TLS data of this server (server key, client-auth CA)

@RESTHEADER{GET /_admin/server/tls, Return a summary of the TLS data, handleMode:get}

@RESTDESCRIPTION
Return a summary of the TLS data. The JSON response will contain a field
`result` with the following components:

  - `keyfile`: Information about the key file.
  - `clientCA`: Information about the CA for client certificate
    verification.

If server name indication (SNI) is used and multiple key files are
configured for different server names, then there is an additional
attribute `SNI`, which contains for each configured server name
the corresponding information about the key file for that server name.

In all cases the value of the attribute will be a JSON object, which
has a subset of the following attributes (whatever is appropriate):

  - `sha256`: The value is a string with the SHA256 of the whole input
    file.
  - `certificates`: The value is a JSON array with the public
    certificates in the chain in the file.
  - `privateKeySha256`: In cases where there is a private key (`keyfile`
    but not `clientCA`), this field is present and contains a
    JSON string with the SHA256 of the private key.

This API requires authentication.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 if everything is ok
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_metrics.md -->
@startDocuBlock get_admin_metrics

@brief return the current instance metrics

@RESTHEADER{GET /_admin/metrics, Read the metrics, getMetrics}

@RESTDESCRIPTION
Returns the instance's current metrics in Prometheus format. The
returned document collects all instance metrics, which are measured
at any given time and exposes them for collection by Prometheus.

The document contains different metrics and metrics groups dependent
on the role of the queried instance. All exported metrics are
published with the `arangodb_` or `rocksdb_` string to distinguish
them from other collected data. 

The API then needs to be added to the Prometheus configuration file
for collection.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Metrics were returned successfully.

@RESTRETURNCODE{404}
The metrics API may be disabled using `--server.export-metrics-api false`
setting in the server. In this case, the result of the call indicates the API
to be not found.

@EXAMPLES


<div class="example-container" id="RestAdminMetrics_container">
<div id="RestAdminMetrics_long">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_admin/metrics</span>

HTTP/1.1 200 OK
content-type: text/plain
connection: Keep-Alive
content-length: 37118
server: ArangoDB
x-content-type-options: nosniff


#TYPE arangodb_heartbeat_failures counter
#HELP arangodb_heartbeat_failures Counting failed heartbeat transmissions
arangodb_heartbeat_failures{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_connection_pool_no_success_select_ClusterComm counter
#HELP arangodb_connection_pool_no_success_select_ClusterComm Total number of failed connection leases
arangodb_connection_pool_no_success_select_ClusterComm{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_connection_pool_success_select_ClusterComm counter
#HELP arangodb_connection_pool_success_select_ClusterComm Total number of successful connection leases
arangodb_connection_pool_success_select_ClusterComm{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_connection_pool_nr_conns_ClusterComm gauge
#HELP arangodb_connection_pool_nr_conns_ClusterComm Current number of connections in pool
arangodb_connection_pool_nr_conns_ClusterComm{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_connection_pool_conns_created_ClusterComm counter
#HELP arangodb_connection_pool_conns_created_ClusterComm Number of connections created
arangodb_connection_pool_conns_created_ClusterComm{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_agency_cache_callback_count gauge
#HELP arangodb_agency_cache_callback_count Current number of entries in agency cache callbacks table
arangodb_agency_cache_callback_count{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_connection_pool_lease_time_hist_ClusterComm histogram
#HELP arangodb_connection_pool_lease_time_hist_ClusterComm Time to lease a connection from pool ClusterComm [us]
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="1.953125"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="3.906250"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="7.812500"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="15.625000"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="31.250000"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="62.500000"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="125.000000"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="250.000000"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="500.000000"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_bucket{role="SINGLE",shortname="Single0001",le="+Inf"} 0
arangodb_connection_pool_lease_time_hist_ClusterComm_count{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_transactions_aborted counter
#HELP arangodb_transactions_aborted Number of transactions aborted
arangodb_transactions_aborted{} 222

#TYPE arangodb_v8_context_entered counter
#HELP arangodb_v8_context_entered V8 context enter events
arangodb_v8_context_entered{} 35

#TYPE rocksdb_archived_wal_files gauge
#HELP rocksdb_archived_wal_files Number of archived RocksDB WAL files
rocksdb_archived_wal_files 0

#TYPE arangodb_transactions_started counter
#HELP arangodb_transactions_started Number of transactions started
arangodb_transactions_started{} 34157

#TYPE arangodb_agencycomm_request_time_msec histogram
#HELP arangodb_agencycomm_request_time_msec Request time for Agency requests
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="292"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="526"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="995"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="1932"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="3806"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="7554"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="15050"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="30043"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="60029"} 0
arangodb_agencycomm_request_time_msec_bucket{role="SINGLE",shortname="Single0001",le="+Inf"} 0
arangodb_agencycomm_request_time_msec_count{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_v8_context_enter_failures counter
#HELP arangodb_v8_context_enter_failures V8 context enter failures
arangodb_v8_context_enter_failures{} 0

#TYPE arangodb_load_plan_runtime histogram
#HELP arangodb_load_plan_runtime Plan loading runtimes [ms]
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="0.308525"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="0.838657"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="2.279705"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="6.196882"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="16.844870"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="45.789104"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="124.467682"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="338.338226"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="919.698608"} 0
arangodb_load_plan_runtime_bucket{role="SINGLE",shortname="Single0001",le="+Inf"} 0
arangodb_load_plan_runtime_count{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_scheduler_num_working_threads gauge
#HELP arangodb_scheduler_num_working_threads Number of working threads
arangodb_scheduler_num_working_threads{role="SINGLE",shortname="Single0001"} 1

#TYPE arangodb_heartbeat_send_time_msec histogram
#HELP arangodb_heartbeat_send_time_msec Time required to send heartbeat [ms]
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="19"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="35"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="66"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="128"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="253"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="503"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="1003"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="2003"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="4002"} 0
arangodb_heartbeat_send_time_msec_bucket{role="SINGLE",shortname="Single0001",le="+Inf"} 0
arangodb_heartbeat_send_time_msec_count{role="SINGLE",shortname="Single0001"} 0

#TYPE rocksdb_wal_sequence_lower_bound gauge
#HELP rocksdb_wal_sequence_lower_bound RocksDB WAL sequence number until which background thread has caught up
rocksdb_wal_sequence_lower_bound 186729

#TYPE arangodb_replication_cluster_inventory_requests counter
#HELP arangodb_replication_cluster_inventory_requests Number of cluster replication inventory requests received
arangodb_replication_cluster_inventory_requests{} 0

#TYPE arangodb_request_body_size_http1 histogram
#HELP arangodb_request_body_size_http1 Body size of HTTP/1.1 requests
arangodb_request_body_size_http1_bucket{le="191"} 34987
arangodb_request_body_size_http1_bucket{le="319"} 32
arangodb_request_body_size_http1_bucket{le="575"} 6
arangodb_request_body_size_http1_bucket{le="1087"} 0
arangodb_request_body_size_http1_bucket{le="2110"} 0
arangodb_request_body_size_http1_bucket{le="4156"} 0
arangodb_request_body_size_http1_bucket{le="8248"} 0
arangodb_request_body_size_http1_bucket{le="16432"} 0
arangodb_request_body_size_http1_bucket{le="32800"} 0
arangodb_request_body_size_http1_bucket{le="+Inf"} 0
arangodb_request_body_size_http1_count{} 35025

#TYPE arangodb_vst_connections_total counter
#HELP arangodb_vst_connections_total Total number of VST connections
arangodb_vst_connections_total{} 0

#TYPE arangodb_http2_connections_total counter
#HELP arangodb_http2_connections_total Total number of HTTP/2 connections
arangodb_http2_connections_total{} 0

#TYPE rocksdb_wal_pruning_active gauge
#HELP rocksdb_wal_pruning_active Whether or not RocksDB WAL file pruning is active
rocksdb_wal_pruning_active 0

#TYPE arangodb_scheduler_awake_threads gauge
#HELP arangodb_scheduler_awake_threads Number of awake worker threads
arangodb_scheduler_awake_threads{role="SINGLE",shortname="Single0001"} 1

#TYPE arangodb_aql_slow_query_time histogram
#HELP arangodb_aql_slow_query_time Execution time histogram for slow AQL queries [s]
arangodb_aql_slow_query_time_bucket{le="4.904297"} 0
arangodb_aql_slow_query_time_bucket{le="8.808594"} 0
arangodb_aql_slow_query_time_bucket{le="16.617188"} 0
arangodb_aql_slow_query_time_bucket{le="32.234375"} 0
arangodb_aql_slow_query_time_bucket{le="63.468750"} 0
arangodb_aql_slow_query_time_bucket{le="125.937500"} 0
arangodb_aql_slow_query_time_bucket{le="250.875000"} 0
arangodb_aql_slow_query_time_bucket{le="500.750000"} 0
arangodb_aql_slow_query_time_bucket{le="1000.500000"} 0
arangodb_aql_slow_query_time_bucket{le="+Inf"} 0
arangodb_aql_slow_query_time_count{} 0

#TYPE arangodb_scheduler_jobs_done gauge
#HELP arangodb_scheduler_jobs_done Total number of queue jobs done
arangodb_scheduler_jobs_done{role="SINGLE",shortname="Single0001"} 35113

#TYPE arangodb_agency_callback_count gauge
#HELP arangodb_agency_callback_count Current number of agency callbacks registered
arangodb_agency_callback_count{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_request_body_size_vst histogram
#HELP arangodb_request_body_size_vst Body size of VST requests
arangodb_request_body_size_vst_bucket{le="191"} 0
arangodb_request_body_size_vst_bucket{le="319"} 0
arangodb_request_body_size_vst_bucket{le="575"} 0
arangodb_request_body_size_vst_bucket{le="1087"} 0
arangodb_request_body_size_vst_bucket{le="2110"} 0
arangodb_request_body_size_vst_bucket{le="4156"} 0
arangodb_request_body_size_vst_bucket{le="8248"} 0
arangodb_request_body_size_vst_bucket{le="16432"} 0
arangodb_request_body_size_vst_bucket{le="32800"} 0
arangodb_request_body_size_vst_bucket{le="+Inf"} 0
arangodb_request_body_size_vst_count{} 0

#TYPE arangodb_v8_context_exited counter
#HELP arangodb_v8_context_exited V8 context exit events
arangodb_v8_context_exited{} 35

#TYPE arangodb_load_plan_accum_runtime_msec counter
#HELP arangodb_load_plan_accum_runtime_msec Accumulated runtime of Plan loading [ms]
arangodb_load_plan_accum_runtime_msec{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_aql_query_time histogram
#HELP arangodb_aql_query_time Execution time histogram for all AQL queries [s]
arangodb_aql_query_time_bucket{le="0.000095"} 0
arangodb_aql_query_time_bucket{le="0.000191"} 25
arangodb_aql_query_time_bucket{le="0.000381"} 300
arangodb_aql_query_time_bucket{le="0.000763"} 35
arangodb_aql_query_time_bucket{le="0.001526"} 23
arangodb_aql_query_time_bucket{le="0.003052"} 4
arangodb_aql_query_time_bucket{le="0.006104"} 3
arangodb_aql_query_time_bucket{le="0.012207"} 1
arangodb_aql_query_time_bucket{le="0.024414"} 0
arangodb_aql_query_time_bucket{le="0.048828"} 1
arangodb_aql_query_time_bucket{le="0.097656"} 0
arangodb_aql_query_time_bucket{le="0.195312"} 0
arangodb_aql_query_time_bucket{le="0.390625"} 0
arangodb_aql_query_time_bucket{le="0.781250"} 1
arangodb_aql_query_time_bucket{le="1.562500"} 1
arangodb_aql_query_time_bucket{le="3.125000"} 0
arangodb_aql_query_time_bucket{le="6.250000"} 0
arangodb_aql_query_time_bucket{le="12.500000"} 0
arangodb_aql_query_time_bucket{le="25.000000"} 0
arangodb_aql_query_time_bucket{le="+Inf"} 0
arangodb_aql_query_time_count{} 394

#TYPE rocksdb_prunable_wal_files gauge
#HELP rocksdb_prunable_wal_files Number of prunable RocksDB WAL files
rocksdb_prunable_wal_files 0

#TYPE arangodb_aql_slow_query counter
#HELP arangodb_aql_slow_query Number of slow AQL queries
arangodb_aql_slow_query{} 0

#TYPE arangodb_v8_context_destroyed counter
#HELP arangodb_v8_context_destroyed V8 contexts destroyed
arangodb_v8_context_destroyed{} 0

#TYPE arangodb_scheduler_jobs_dequeued gauge
#HELP arangodb_scheduler_jobs_dequeued Total number of jobs dequeued
arangodb_scheduler_jobs_dequeued{role="SINGLE",shortname="Single0001"} 35114

#TYPE arangodb_request_body_size_http2 histogram
#HELP arangodb_request_body_size_http2 Body size of HTTP/2 requests
arangodb_request_body_size_http2_bucket{le="191"} 0
arangodb_request_body_size_http2_bucket{le="319"} 0
arangodb_request_body_size_http2_bucket{le="575"} 0
arangodb_request_body_size_http2_bucket{le="1087"} 0
arangodb_request_body_size_http2_bucket{le="2110"} 0
arangodb_request_body_size_http2_bucket{le="4156"} 0
arangodb_request_body_size_http2_bucket{le="8248"} 0
arangodb_request_body_size_http2_bucket{le="16432"} 0
arangodb_request_body_size_http2_bucket{le="32800"} 0
arangodb_request_body_size_http2_bucket{le="+Inf"} 0
arangodb_request_body_size_http2_count{} 0

#TYPE arangodb_aql_total_query_time_msec counter
#HELP arangodb_aql_total_query_time_msec Total execution time of all AQL queries [ms]
arangodb_aql_total_query_time_msec{} 1887

#TYPE arangodb_aql_all_query counter
#HELP arangodb_aql_all_query Total number of AQL queries
arangodb_aql_all_query{} 394

#TYPE arangodb_transactions_committed counter
#HELP arangodb_transactions_committed Number of transactions committed
arangodb_transactions_committed{} 35029

#TYPE arangodb_intermediate_commits counter
#HELP arangodb_intermediate_commits Number of intermediate commits performed in transactions
arangodb_intermediate_commits{} 0

#TYPE arangodb_v8_context_created counter
#HELP arangodb_v8_context_created V8 contexts created
arangodb_v8_context_created{} 2

#TYPE arangodb_read_ransactions counter
#HELP arangodb_read_ransactions Number of read transactions
arangodb_read_ransactions{} 1196

#TYPE arangodb_collection_lock_timeouts_exclusive counter
#HELP arangodb_collection_lock_timeouts_exclusive Number of timeouts when trying to acquire collection exclusive locks
arangodb_collection_lock_timeouts_exclusive{} 0

#TYPE arangodb_collection_lock_timeouts_write counter
#HELP arangodb_collection_lock_timeouts_write Number of timeouts when trying to acquire collection write locks
arangodb_collection_lock_timeouts_write{} 0

#TYPE arangodb_scheduler_jobs_submitted gauge
#HELP arangodb_scheduler_jobs_submitted Total number of jobs submitted to the queue
arangodb_scheduler_jobs_submitted{role="SINGLE",shortname="Single0001"} 35114

#TYPE arangodb_collection_lock_acquisition_micros counter
#HELP arangodb_collection_lock_acquisition_micros Total amount of collection lock acquisition time [μs]
arangodb_collection_lock_acquisition_micros{} 104763

#TYPE arangodb_collection_lock_acquisition_time histogram
#HELP arangodb_collection_lock_acquisition_time Collection lock acquisition time histogram [s]
arangodb_collection_lock_acquisition_time_bucket{le="0.000000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="0.000001"} 633
arangodb_collection_lock_acquisition_time_bucket{le="0.000010"} 28200
arangodb_collection_lock_acquisition_time_bucket{le="0.000100"} 5324
arangodb_collection_lock_acquisition_time_bucket{le="0.001000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="0.010000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="0.100000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="1.000000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="10.000000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="100.000000"} 0
arangodb_collection_lock_acquisition_time_bucket{le="+Inf"} 0
arangodb_collection_lock_acquisition_time_count{} 34157

#TYPE arangodb_scheduler_threads_stopped counter
#HELP arangodb_scheduler_threads_stopped Number of scheduler threads stopped
arangodb_scheduler_threads_stopped{role="SINGLE",shortname="Single0001"} 1

#TYPE arangodb_load_current_runtime histogram
#HELP arangodb_load_current_runtime Current loading runtimes [ms]
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="0.308525"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="0.838657"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="2.279705"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="6.196882"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="16.844870"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="45.789104"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="124.467682"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="338.338226"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="919.698608"} 0
arangodb_load_current_runtime_bucket{role="SINGLE",shortname="Single0001",le="+Inf"} 0
arangodb_load_current_runtime_count{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_collection_lock_sequential_mode counter
#HELP arangodb_collection_lock_sequential_mode Number of transactions using sequential locking of collections to avoid deadlocking
arangodb_collection_lock_sequential_mode{} 0

#TYPE arangodb_scheduler_queue_length gauge
#HELP arangodb_scheduler_queue_length Servers internal queue length
arangodb_scheduler_queue_length{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_scheduler_num_worker_threads gauge
#HELP arangodb_scheduler_num_worker_threads Number of worker threads
arangodb_scheduler_num_worker_threads{role="SINGLE",shortname="Single0001"} 2

#TYPE arangodb_network_forwarded_requests counter
#HELP arangodb_network_forwarded_requests Number of requests forwarded to another coordinator
arangodb_network_forwarded_requests{} 0

#TYPE arangodb_scheduler_threads_started counter
#HELP arangodb_scheduler_threads_started Number of scheduler threads started
arangodb_scheduler_threads_started{role="SINGLE",shortname="Single0001"} 3

#TYPE arangodb_scheduler_queue_full_failures counter
#HELP arangodb_scheduler_queue_full_failures Tasks dropped and not added to internal queue
arangodb_scheduler_queue_full_failures{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_load_current_accum_runtime_msec counter
#HELP arangodb_load_current_accum_runtime_msec Accumulated runtime of Current loading [ms]
arangodb_load_current_accum_runtime_msec{role="SINGLE",shortname="Single0001"} 0

#TYPE arangodb_process_statistics_minor_page_faults gauge
#HELP arangodb_process_statistics_minor_page_faults The number of minor faults the process has made which have not required loading a memory page from disk. This figure is not reported on Windows
arangodb_process_statistics_minor_page_faults 77597

#TYPE arangodb_process_statistics_major_page_faults gauge
#HELP arangodb_process_statistics_major_page_faults On Windows, this figure contains the total number of page faults. On other system, this figure contains the number of major faults the process has made which have required loading a memory page from disk
arangodb_process_statistics_major_page_faults 0

#TYPE arangodb_process_statistics_user_time gauge
#HELP arangodb_process_statistics_user_time Amount of time that this process has been scheduled in user mode, measured in seconds
arangodb_process_statistics_user_time 10.540000

#TYPE arangodb_process_statistics_system_time gauge
#HELP arangodb_process_statistics_system_time Amount of time that this process has been scheduled in kernel mode, measured in seconds
arangodb_process_statistics_system_time 3.750000

#TYPE arangodb_process_statistics_number_of_threads gauge
#HELP arangodb_process_statistics_number_of_threads Number of threads in the arangod process
arangodb_process_statistics_number_of_threads 52

#TYPE arangodb_process_statistics_resident_set_size gauge
#HELP arangodb_process_statistics_resident_set_size The total size of the number of pages the process has in real memory. This is just the pages which count toward text, data, or stack space. This does not include pages which have not been demand-loaded in, or which are swapped out. The resident set size is reported in bytes
arangodb_process_statistics_resident_set_size 328015872

#TYPE arangodb_process_statistics_resident_set_size_percent gauge
#HELP arangodb_process_statistics_resident_set_size_percent The relative size of the number of pages the process has in real memory compared to system memory. This is just the pages which count toward text, data, or stack space. This does not include pages which have not been demand-loaded in, or which are swapped out. The value is a ratio between 0.00 and 1.00
arangodb_process_statistics_resident_set_size_percent 0.004859

#TYPE arangodb_process_statistics_virtual_memory_size gauge
#HELP arangodb_process_statistics_virtual_memory_size On Windows, this figure contains the total amount of memory that the memory manager has committed for the arangod process. On other systems, this figure contains The size of the virtual memory the process is using
arangodb_process_statistics_virtual_memory_size 1379971072

#TYPE arangodb_server_statistics_physical_memory gauge
#HELP arangodb_server_statistics_physical_memory Physical memory in bytes
arangodb_server_statistics_physical_memory 67513475072

#TYPE arangodb_server_statistics_server_uptime gauge
#HELP arangodb_server_statistics_server_uptime Number of seconds elapsed since server start
arangodb_server_statistics_server_uptime 21.847053

#TYPE arangodb_client_connection_statistics_client_connections gauge
#HELP arangodb_client_connection_statistics_client_connections The number of client connections that are currently open
arangodb_client_connection_statistics_client_connections 2

#TYPE arangodb_client_connection_statistics_connection_time_bucket gauge
#HELP arangodb_client_connection_statistics_connection_time_bucket Total connection time of a client
arangodb_client_connection_statistics_connection_time_bucket{le="0.01"} 0
arangodb_client_connection_statistics_connection_time_bucket{le="1.0"} 0
arangodb_client_connection_statistics_connection_time_bucket{le="60.0"} 0
arangodb_client_connection_statistics_connection_time_bucket{le="+Inf"} 0

#TYPE arangodb_client_connection_statistics_total_time_bucket gauge
#HELP arangodb_client_connection_statistics_total_time_bucket Total time needed to answer a request
arangodb_client_connection_statistics_total_time_bucket{le="0.01"} 35013
arangodb_client_connection_statistics_total_time_bucket{le="0.05"} 3
arangodb_client_connection_statistics_total_time_bucket{le="0.1"} 3
arangodb_client_connection_statistics_total_time_bucket{le="0.2"} 0
arangodb_client_connection_statistics_total_time_bucket{le="0.5"} 0
arangodb_client_connection_statistics_total_time_bucket{le="1.0"} 1
arangodb_client_connection_statistics_total_time_bucket{le="+Inf"} 0

#TYPE arangodb_client_connection_statistics_request_time_bucket gauge
#HELP arangodb_client_connection_statistics_request_time_bucket Request time needed to answer a request
arangodb_client_connection_statistics_request_time_bucket{le="0.01"} 35014
arangodb_client_connection_statistics_request_time_bucket{le="0.05"} 2
arangodb_client_connection_statistics_request_time_bucket{le="0.1"} 3
arangodb_client_connection_statistics_request_time_bucket{le="0.2"} 0
arangodb_client_connection_statistics_request_time_bucket{le="0.5"} 0
arangodb_client_connection_statistics_request_time_bucket{le="1.0"} 1
arangodb_client_connection_statistics_request_time_bucket{le="+Inf"} 0

#TYPE arangodb_client_connection_statistics_queue_time_bucket gauge
#HELP arangodb_client_connection_statistics_queue_time_bucket Request time needed to answer a request
arangodb_client_connection_statistics_queue_time_bucket{le="0.01"} 35018
arangodb_client_connection_statistics_queue_time_bucket{le="0.05"} 1
arangodb_client_connection_statistics_queue_time_bucket{le="0.1"} 0
arangodb_client_connection_statistics_queue_time_bucket{le="0.2"} 0
arangodb_client_connection_statistics_queue_time_bucket{le="0.5"} 0
arangodb_client_connection_statistics_queue_time_bucket{le="1.0"} 0
arangodb_client_connection_statistics_queue_time_bucket{le="+Inf"} 0

#TYPE arangodb_client_connection_statistics_io_time_bucket gauge
#HELP arangodb_client_connection_statistics_io_time_bucket Request time needed to answer a request
arangodb_client_connection_statistics_io_time_bucket{le="0.01"} 35020
arangodb_client_connection_statistics_io_time_bucket{le="0.05"} 0
arangodb_client_connection_statistics_io_time_bucket{le="0.1"} 0
arangodb_client_connection_statistics_io_time_bucket{le="0.2"} 0
arangodb_client_connection_statistics_io_time_bucket{le="0.5"} 0
arangodb_client_connection_statistics_io_time_bucket{le="1.0"} 0
arangodb_client_connection_statistics_io_time_bucket{le="+Inf"} 0

#TYPE arangodb_client_connection_statistics_bytes_sent_bucket gauge
#HELP arangodb_client_connection_statistics_bytes_sent_bucket Bytes sent for a request
arangodb_client_connection_statistics_bytes_sent_bucket{le="250"} 458
arangodb_client_connection_statistics_bytes_sent_bucket{le="1000"} 34112
arangodb_client_connection_statistics_bytes_sent_bucket{le="2000"} 410
arangodb_client_connection_statistics_bytes_sent_bucket{le="5000"} 35
arangodb_client_connection_statistics_bytes_sent_bucket{le="10000"} 2
arangodb_client_connection_statistics_bytes_sent_bucket{le="+Inf"} 3

#TYPE arangodb_client_connection_statistics_bytes_received_bucket gauge
#HELP arangodb_client_connection_statistics_bytes_received_bucket Bytes received for a request
arangodb_client_connection_statistics_bytes_received_bucket{le="250"} 33959
arangodb_client_connection_statistics_bytes_received_bucket{le="1000"} 1061
arangodb_client_connection_statistics_bytes_received_bucket{le="2000"} 0
arangodb_client_connection_statistics_bytes_received_bucket{le="5000"} 0
arangodb_client_connection_statistics_bytes_received_bucket{le="10000"} 0
arangodb_client_connection_statistics_bytes_received_bucket{le="+Inf"} 0

#TYPE arangodb_http_request_statistics_async_requests gauge
#HELP arangodb_http_request_statistics_async_requests Number of asynchronously executed HTTP requests
arangodb_http_request_statistics_async_requests 0

#TYPE arangodb_http_request_statistics_http_delete_requests gauge
#HELP arangodb_http_request_statistics_http_delete_requests Number of HTTP DELETE requests
arangodb_http_request_statistics_http_delete_requests 118

#TYPE arangodb_http_request_statistics_http_get_requests gauge
#HELP arangodb_http_request_statistics_http_get_requests Number of HTTP GET requests
arangodb_http_request_statistics_http_get_requests 1008

#TYPE arangodb_http_request_statistics_http_head_requests gauge
#HELP arangodb_http_request_statistics_http_head_requests Number of HTTP HEAD requests
arangodb_http_request_statistics_http_head_requests 0

#TYPE arangodb_http_request_statistics_http_options_requests gauge
#HELP arangodb_http_request_statistics_http_options_requests Number of HTTP OPTIONS requests
arangodb_http_request_statistics_http_options_requests 0

#TYPE arangodb_http_request_statistics_http_patch_requests gauge
#HELP arangodb_http_request_statistics_http_patch_requests Number of HTTP PATCH requests
arangodb_http_request_statistics_http_patch_requests 2

#TYPE arangodb_http_request_statistics_http_post_requests gauge
#HELP arangodb_http_request_statistics_http_post_requests Number of HTTP POST requests
arangodb_http_request_statistics_http_post_requests 33859

#TYPE arangodb_http_request_statistics_http_put_requests gauge
#HELP arangodb_http_request_statistics_http_put_requests Number of HTTP PUT requests
arangodb_http_request_statistics_http_put_requests 33

#TYPE arangodb_http_request_statistics_other_http_requests gauge
#HELP arangodb_http_request_statistics_other_http_requests Number of other HTTP requests
arangodb_http_request_statistics_other_http_requests 0

#TYPE arangodb_http_request_statistics_total_requests gauge
#HELP arangodb_http_request_statistics_total_requests Total number of HTTP requests
arangodb_http_request_statistics_total_requests 35020

#TYPE arangodb_http_request_statistics_superuser_requests gauge
#HELP arangodb_http_request_statistics_superuser_requests Total number of HTTP requests executed by superuser/JWT
arangodb_http_request_statistics_superuser_requests 0

#TYPE arangodb_http_request_statistics_user_requests gauge
#HELP arangodb_http_request_statistics_user_requests Total number of HTTP requests executed by clients
arangodb_http_request_statistics_user_requests 35020

#TYPE arangodb_v8_context_alive gauge
#HELP arangodb_v8_context_alive Number of V8 contexts currently alive
arangodb_v8_context_alive 2

#TYPE arangodb_v8_context_busy gauge
#HELP arangodb_v8_context_busy Number of V8 contexts currently busy
arangodb_v8_context_busy 0

#TYPE arangodb_v8_context_dirty gauge
#HELP arangodb_v8_context_dirty Number of V8 contexts currently dirty
arangodb_v8_context_dirty 0

#TYPE arangodb_v8_context_free gauge
#HELP arangodb_v8_context_free Number of V8 contexts currently free
arangodb_v8_context_free 2

#TYPE arangodb_v8_context_min gauge
#HELP arangodb_v8_context_min Minimum number of concurrent V8 contexts
arangodb_v8_context_min 1

#TYPE arangodb_v8_context_max gauge
#HELP arangodb_v8_context_max Maximum number of concurrent V8 contexts
arangodb_v8_context_max 16


#TYPE rocksdb_cache_allocated gauge
#HELP rocksdb_cache_allocated rocksdb_cache_allocated
rocksdb_cache_allocated 1355320

#TYPE rocksdb_cache_hit_rate_lifetime gauge
#HELP rocksdb_cache_hit_rate_lifetime rocksdb_cache_hit_rate_lifetime
rocksdb_cache_hit_rate_lifetime 3

#TYPE rocksdb_cache_hit_rate_recent gauge
#HELP rocksdb_cache_hit_rate_recent rocksdb_cache_hit_rate_recent
rocksdb_cache_hit_rate_recent 3

#TYPE rocksdb_cache_limit gauge
#HELP rocksdb_cache_limit rocksdb_cache_limit
rocksdb_cache_limit 16341497856

#TYPE rocksdb_actual_delayed_write_rate gauge
#HELP rocksdb_actual_delayed_write_rate rocksdb_actual_delayed_write_rate
rocksdb_actual_delayed_write_rate 0

#TYPE rocksdb_background_errors gauge
#HELP rocksdb_background_errors rocksdb_background_errors
rocksdb_background_errors 0

#TYPE rocksdb_base_level gauge
#HELP rocksdb_base_level rocksdb_base_level
rocksdb_base_level 6

#TYPE rocksdb_block_cache_capacity gauge
#HELP rocksdb_block_cache_capacity rocksdb_block_cache_capacity
rocksdb_block_cache_capacity 19609797427

#TYPE rocksdb_block_cache_pinned_usage gauge
#HELP rocksdb_block_cache_pinned_usage rocksdb_block_cache_pinned_usage
rocksdb_block_cache_pinned_usage 16592

#TYPE rocksdb_block_cache_usage gauge
#HELP rocksdb_block_cache_usage rocksdb_block_cache_usage
rocksdb_block_cache_usage 16592

#TYPE rocksdb_compaction_pending gauge
#HELP rocksdb_compaction_pending rocksdb_compaction_pending
rocksdb_compaction_pending 4

#TYPE rocksdb_compression_ratio_at_level0 gauge
#HELP rocksdb_compression_ratio_at_level0 rocksdb_compression_ratio_at_level0
rocksdb_compression_ratio_at_level0 0

#TYPE rocksdb_compression_ratio_at_level1 gauge
#HELP rocksdb_compression_ratio_at_level1 rocksdb_compression_ratio_at_level1
rocksdb_compression_ratio_at_level1 0

#TYPE rocksdb_compression_ratio_at_level2 gauge
#HELP rocksdb_compression_ratio_at_level2 rocksdb_compression_ratio_at_level2
rocksdb_compression_ratio_at_level2 0

#TYPE rocksdb_compression_ratio_at_level3 gauge
#HELP rocksdb_compression_ratio_at_level3 rocksdb_compression_ratio_at_level3
rocksdb_compression_ratio_at_level3 0

#TYPE rocksdb_compression_ratio_at_level4 gauge
#HELP rocksdb_compression_ratio_at_level4 rocksdb_compression_ratio_at_level4
rocksdb_compression_ratio_at_level4 0

#TYPE rocksdb_compression_ratio_at_level5 gauge
#HELP rocksdb_compression_ratio_at_level5 rocksdb_compression_ratio_at_level5
rocksdb_compression_ratio_at_level5 0

#TYPE rocksdb_compression_ratio_at_level6 gauge
#HELP rocksdb_compression_ratio_at_level6 rocksdb_compression_ratio_at_level6
rocksdb_compression_ratio_at_level6 5

#TYPE rocksdb_cur_size_active_mem_table gauge
#HELP rocksdb_cur_size_active_mem_table rocksdb_cur_size_active_mem_table
rocksdb_cur_size_active_mem_table 88085528

#TYPE rocksdb_cur_size_all_mem_tables gauge
#HELP rocksdb_cur_size_all_mem_tables rocksdb_cur_size_all_mem_tables
rocksdb_cur_size_all_mem_tables 88085528

#TYPE rocksdb_estimate_live_data_size gauge
#HELP rocksdb_estimate_live_data_size rocksdb_estimate_live_data_size
rocksdb_estimate_live_data_size 1983584

#TYPE rocksdb_estimate_num_keys gauge
#HELP rocksdb_estimate_num_keys rocksdb_estimate_num_keys
rocksdb_estimate_num_keys 0

#TYPE rocksdb_estimate_pending_compaction_bytes gauge
#HELP rocksdb_estimate_pending_compaction_bytes rocksdb_estimate_pending_compaction_bytes
rocksdb_estimate_pending_compaction_bytes 0

#TYPE rocksdb_estimate_table_readers_mem gauge
#HELP rocksdb_estimate_table_readers_mem rocksdb_estimate_table_readers_mem
rocksdb_estimate_table_readers_mem 111952

#TYPE rocksdb_is_file_deletions_enabled gauge
#HELP rocksdb_is_file_deletions_enabled rocksdb_is_file_deletions_enabled
rocksdb_is_file_deletions_enabled 1

#TYPE rocksdb_is_write_stopped gauge
#HELP rocksdb_is_write_stopped rocksdb_is_write_stopped
rocksdb_is_write_stopped 0

#TYPE rocksdb_live_sst_files_size gauge
#HELP rocksdb_live_sst_files_size rocksdb_live_sst_files_size
rocksdb_live_sst_files_size 1983584

#TYPE rocksdb_mem_table_flush_pending gauge
#HELP rocksdb_mem_table_flush_pending rocksdb_mem_table_flush_pending
rocksdb_mem_table_flush_pending 0

#TYPE rocksdb_min_log_number_to_keep gauge
#HELP rocksdb_min_log_number_to_keep rocksdb_min_log_number_to_keep
rocksdb_min_log_number_to_keep 35

#TYPE rocksdb_num_deletes_active_mem_table gauge
#HELP rocksdb_num_deletes_active_mem_table rocksdb_num_deletes_active_mem_table
rocksdb_num_deletes_active_mem_table 0

#TYPE rocksdb_num_deletes_imm_mem_tables gauge
#HELP rocksdb_num_deletes_imm_mem_tables rocksdb_num_deletes_imm_mem_tables
rocksdb_num_deletes_imm_mem_tables 0

#TYPE rocksdb_num_entries_active_mem_table gauge
#HELP rocksdb_num_entries_active_mem_table rocksdb_num_entries_active_mem_table
rocksdb_num_entries_active_mem_table 0

#TYPE rocksdb_num_entries_imm_mem_tables gauge
#HELP rocksdb_num_entries_imm_mem_tables rocksdb_num_entries_imm_mem_tables
rocksdb_num_entries_imm_mem_tables 0

#TYPE rocksdb_num_files_at_level0 gauge
#HELP rocksdb_num_files_at_level0 rocksdb_num_files_at_level0
rocksdb_num_files_at_level0 0

#TYPE rocksdb_num_files_at_level1 gauge
#HELP rocksdb_num_files_at_level1 rocksdb_num_files_at_level1
rocksdb_num_files_at_level1 0

#TYPE rocksdb_num_files_at_level2 gauge
#HELP rocksdb_num_files_at_level2 rocksdb_num_files_at_level2
rocksdb_num_files_at_level2 0

#TYPE rocksdb_num_files_at_level3 gauge
#HELP rocksdb_num_files_at_level3 rocksdb_num_files_at_level3
rocksdb_num_files_at_level3 0

#TYPE rocksdb_num_files_at_level4 gauge
#HELP rocksdb_num_files_at_level4 rocksdb_num_files_at_level4
rocksdb_num_files_at_level4 0

#TYPE rocksdb_num_files_at_level5 gauge
#HELP rocksdb_num_files_at_level5 rocksdb_num_files_at_level5
rocksdb_num_files_at_level5 0

#TYPE rocksdb_num_files_at_level6 gauge
#HELP rocksdb_num_files_at_level6 rocksdb_num_files_at_level6
rocksdb_num_files_at_level6 6

#TYPE rocksdb_num_immutable_mem_table gauge
#HELP rocksdb_num_immutable_mem_table rocksdb_num_immutable_mem_table
rocksdb_num_immutable_mem_table 0

#TYPE rocksdb_num_immutable_mem_table_flushed gauge
#HELP rocksdb_num_immutable_mem_table_flushed rocksdb_num_immutable_mem_table_flushed
rocksdb_num_immutable_mem_table_flushed 6

#TYPE rocksdb_num_live_versions gauge
#HELP rocksdb_num_live_versions rocksdb_num_live_versions
rocksdb_num_live_versions 7

#TYPE rocksdb_num_running_compactions gauge
#HELP rocksdb_num_running_compactions rocksdb_num_running_compactions
rocksdb_num_running_compactions 1

#TYPE rocksdb_num_running_flushes gauge
#HELP rocksdb_num_running_flushes rocksdb_num_running_flushes
rocksdb_num_running_flushes 0

#TYPE rocksdb_num_snapshots gauge
#HELP rocksdb_num_snapshots rocksdb_num_snapshots
rocksdb_num_snapshots 0

#TYPE rocksdb_oldest_snapshot_time gauge
#HELP rocksdb_oldest_snapshot_time rocksdb_oldest_snapshot_time
rocksdb_oldest_snapshot_time 0

#TYPE rocksdb_read_only gauge
#HELP rocksdb_read_only rocksdb_read_only
rocksdb_read_only 0

#TYPE rocksdb_size_all_mem_tables gauge
#HELP rocksdb_size_all_mem_tables rocksdb_size_all_mem_tables
rocksdb_size_all_mem_tables 172968664

#TYPE rocksdb_total_sst_files_size gauge
#HELP rocksdb_total_sst_files_size rocksdb_total_sst_files_size
rocksdb_total_sst_files_size 1983584

#TYPE rocksdbengine_throttle_bps gauge
#HELP rocksdbengine_throttle_bps rocksdbengine_throttle_bps
rocksdbengine_throttle_bps 0

</pre>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/BackupRestore/post_admin_backup_restore.md -->
@startDocuBlock post_admin_backup_restore

@brief restores from a local backup

@RESTHEADER{POST /_admin/backup/restore, Restore backup}

@RESTDESCRIPTION
Restores a consistent backup from a
snapshot in time, with a given id. The backup snapshot must reside on
the ArangoDB service locally.

@RESTBODYPARAM{id,string,required,string}
The id of the backup to restore from.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the backup could be restored. Note that there is an
inevitable discrepancy between the single server and the cluster. In a
single server, the request returns successfully, but the restore is
only executed afterwards. In the cluster, the request only returns when
the restore operation has been completed successfully. The cluster
behaviour is obviously the desired one, but in a single instance, one
cannot keep a connection open across a restart.

@RESTRETURNCODE{400}
If the restore command is invoked with bad parameters or any HTTP
method other than `POST`, then an *HTTP 400* is returned. The specifics
are detailed in the returned error document.

@EXAMPLES


<div class="example-container" id="RestBackupRestoreBackup_rocksdb_container">
<div id="RestBackupRestoreBackup_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/restore</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.47Z_c622c824-467e-4360-bb01-e991536cb2d1&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">125</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;previous&quot;</span> : <span class="hljs-string">&quot;/tmp/arangosh_NOKnGO/rocksdb-clusterOrNot/data/backups/DIRECTORY_TO_DELETE&quot;</span> 
  } 
}
</pre>
<div id="RestBackupRestoreBackup_rocksdb_container_collapse" onclick="$('#RestBackupRestoreBackup_rocksdb_long').hide(); $('#RestBackupRestoreBackup_rocksdb_short').show(); window.location.hash='RestBackupRestoreBackup_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupRestoreBackup_rocksdb_short" onclick="$('#RestBackupRestoreBackup_rocksdb_short').hide(); $('#RestBackupRestoreBackup_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/restore</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.47Z_c622c824-467e-4360-bb01-e991536cb2d1&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">125</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





The `result` object returns the `id` of the fail safe hot backup to return to, if necessary. And the all telling `isCluster` boolean attribute.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/BackupRestore/post_admin_backup_upload.md -->
@startDocuBlock post_admin_backup_upload

@brief upload a specific local backup

@RESTHEADER{POST /_admin/backup/upload, Upload a backup to a remote repository}

@RESTDESCRIPTION
Upload a specific local backup to a remote repository, or query
progress on a previously scheduled upload operation, or abort
a running upload operation.

@RESTBODYPARAM{id,string,optional,string}
The identifier for this backup. This is required when an upload
operation is scheduled. In this case leave out the `uploadId`
attribute.

@RESTBODYPARAM{remoteRepository,string,optional,string}
URL of remote repository. This is required when an upload operation is
scheduled. In this case leave out the `uploadId` attribute. Provided repository
URLs are normalized and validated as follows: One single colon must appear
separating the configuration section name and the path. The URL prefix up to
the colon must exist as a key in the config object below. No slashes must
appear before the colon. Multiple back to back slashes are collapsed to one, as
`..` and `.` are applied accordingly. Local repositories must be absolute
paths and must begin with a `/`. Trailing `/` are removed.

@RESTBODYPARAM{config,object,optional,object}
Configuration of remote repository. This is required when an upload
operation is scheduled. In this case leave out the `uploadId`
attribute. See the description of the _arangobackup_ program in the manual
for a description of the `config` object.

@RESTBODYPARAM{uploadId,string,optional,string}
Upload ID to specify for which upload operation progress is queried or
the upload operation to abort.
If you specify this, leave out all the above body parameters.

@RESTBODYPARAM{abort,boolean,optional,}
Set this to `true` if a running upload operation should be aborted. In
this case, the only other body parameter which is needed is `uploadId`.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If all is well, code 200 is returned if progress is inquired or the
operation is aborted.

@RESTRETURNCODE{202}
If all is well, code 202 is returned if a new operation is scheduled.

@RESTRETURNCODE{400}
If the upload command is invoced with bad parameters or any HTTP
method other than `POST`, then an *HTTP 400* is returned.

@RESTRETURNCODE{401}
If the authentication to the rempote repository fails, then an *HTTP
400* is returned.

@RESTRETURNCODE{404}
If a backup corresponding to the identifier `id`  cannot be found, or if
there is no known upload operation with the given `uploadId`.

@EXAMPLES


<div class="example-container" id="RestBackupUploadBackup_rocksdb_container">
<div id="RestBackupUploadBackup_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/upload</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.50Z_1bb3c3b0-a557-4274-9763-5a8726d6f8b4&quot;</span>, 
  <span class="hljs-string">&quot;remoteRepository&quot;</span> : <span class="hljs-string">&quot;local://tmp/backups&quot;</span>, 
  <span class="hljs-string">&quot;config&quot;</span> : { 
    <span class="hljs-string">&quot;local&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;local&quot;</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">56</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;uploadId&quot;</span> : <span class="hljs-string">&quot;70739&quot;</span> 
  } 
}
</pre>
<div id="RestBackupUploadBackup_rocksdb_container_collapse" onclick="$('#RestBackupUploadBackup_rocksdb_long').hide(); $('#RestBackupUploadBackup_rocksdb_short').show(); window.location.hash='RestBackupUploadBackup_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupUploadBackup_rocksdb_short" onclick="$('#RestBackupUploadBackup_rocksdb_short').hide(); $('#RestBackupUploadBackup_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/upload</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.50Z_1bb3c3b0-a557-4274-9763-5a8726d6f8b4&quot;</span>, 
  <span class="hljs-string">&quot;remoteRepository&quot;</span> : <span class="hljs-string">&quot;local://tmp/backups&quot;</span>, 
  <span class="hljs-string">&quot;config&quot;</span> : { 
    <span class="hljs-string">&quot;local&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;local&quot;</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">56</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




The `result` object of the body holds the `uploadId` string attribute which can
be used to follow the upload process.


<div class="example-container" id="RestBackupUploadBackupStarted_rocksdb_container">
<div id="RestBackupUploadBackupStarted_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/upload</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;uploadId&quot;</span> : <span class="hljs-string">&quot;70737&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">222</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;Timestamp&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:50Z&quot;</span>, 
    <span class="hljs-string">&quot;UploadId&quot;</span> : <span class="hljs-string">&quot;70737&quot;</span>, 
    <span class="hljs-string">&quot;Cancelled&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;BackupId&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.50Z_e525e4d8-e9bd-4ce0-b4a2-2ee146f98439&quot;</span>, 
    <span class="hljs-string">&quot;DBServers&quot;</span> : { 
      <span class="hljs-string">&quot;SNGL&quot;</span> : { 
        <span class="hljs-string">&quot;Status&quot;</span> : <span class="hljs-string">&quot;STARTED&quot;</span> 
      } 
    } 
  } 
}
</pre>
<div id="RestBackupUploadBackupStarted_rocksdb_container_collapse" onclick="$('#RestBackupUploadBackupStarted_rocksdb_long').hide(); $('#RestBackupUploadBackupStarted_rocksdb_short').show(); window.location.hash='RestBackupUploadBackupStarted_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupUploadBackupStarted_rocksdb_short" onclick="$('#RestBackupUploadBackupStarted_rocksdb_short').hide(); $('#RestBackupUploadBackupStarted_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/upload</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;uploadId&quot;</span> : <span class="hljs-string">&quot;70737&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">222</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/BackupRestore/post_admin_backup_delete.md -->
@startDocuBlock post_admin_backup_delete

@brief delete a specific local backup

@RESTHEADER{POST /_admin/backup/delete, Delete a backup}

@RESTDESCRIPTION
Delete a specific local backup identified by the given `id`.

@RESTBODYPARAM{id,string,required,string}
The identifier for this backup.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If all is well, this code 200 is returned.

@RESTRETURNCODE{400}
If the delete command is invoked with bad parameters or any HTTP
method other than `POST`, then an *HTTP 400* is returned.

@RESTRETURNCODE{404}
If a backup corresponding to the identifier `id` cannot be found.

@EXAMPLES


<div class="example-container" id="RestBackupDeleteBackup_rocksdb_container">
<div id="RestBackupDeleteBackup_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/delete</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.14Z_fd9d2472-dc17-4478-a843-16a9db8ecfc5&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
  } 
}
</pre>
<div id="RestBackupDeleteBackup_rocksdb_container_collapse" onclick="$('#RestBackupDeleteBackup_rocksdb_long').hide(); $('#RestBackupDeleteBackup_rocksdb_short').show(); window.location.hash='RestBackupDeleteBackup_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupDeleteBackup_rocksdb_short" onclick="$('#RestBackupDeleteBackup_rocksdb_short').hide(); $('#RestBackupDeleteBackup_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/delete</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.14Z_fd9d2472-dc17-4478-a843-16a9db8ecfc5&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">38</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/BackupRestore/post_admin_backup_download.md -->
@startDocuBlock post_admin_backup_download

@brief download a specific local backup

@RESTHEADER{POST /_admin/backup/download, Download a backup from a remote repository}

@RESTDESCRIPTION
Download a specific local backup from a remote repository, or query
progress on a previously scheduled download operation, or abort
a running download operation.

@RESTBODYPARAM{id,string,optional,string}
The identifier for this backup. This is required when a download
operation is scheduled. In this case leave out the `downloadId`
attribute.

@RESTBODYPARAM{remoteRepository,string,required,string}
URL of remote repository. This is required when a download operation is
scheduled. In this case leave out the `downloadId` attribute. Provided
repository URLs are normalized and validated as follows: One single colon must
appear separating the configuration section name and the path. The URL prefix
up to the colon must exist as a key in the config object below. No slashes must
appear before the colon. Multiple back to back slashes are collapsed to one, as
`..` and `.` are applied accordingly. Local repositories must be absolute paths
and must begin with a `/`. Trailing `/` are removed.

@RESTBODYPARAM{config,object,required,object}
Configuration of remote repository. This is required when a download
operation is scheduled. In this case leave out the `downloadId`
attribute. See the description of the _arangobackup_ program in the manual
for a description of the `config` object.

@RESTBODYPARAM{downloadId,string,optional,string}
Download ID to specify for which download operation progress is queried, or
the download operation to abort.
If you specify this, leave out all the above body parameters.

@RESTBODYPARAM{abort,boolean,optional,}
Set this to `true` if a running download operation should be aborted. In
this case, the only other body parameter which is needed is `downloadId`.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If all is well, code 200 is returned if progress is inquired or the
operation is aborted.

@RESTRETURNCODE{202}
If all is well, code 202 is returned if a new operation is scheduled.

@RESTRETURNCODE{400}
If the download command is invoked with bad parameters or any HTTP
method other than `POST`, then an *HTTP 400* is returned.

@RESTRETURNCODE{401}
If the authentication to the rempote repository fails, then an *HTTP
401* is returned.

@RESTRETURNCODE{404}
If a backup corresponding to the identifier `id`  cannot be found, or if
there is no known download operation with the given `downloadId`.

@EXAMPLES


<div class="example-container" id="RestBackupDownloadBackup_rocksdb_container">
<div id="RestBackupDownloadBackup_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/download</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.30Z_e886f9c5-ff9c-4c10-b833-7e7461574982&quot;</span>, 
  <span class="hljs-string">&quot;remoteRepository&quot;</span> : <span class="hljs-string">&quot;local://tmp/backups&quot;</span>, 
  <span class="hljs-string">&quot;config&quot;</span> : { 
    <span class="hljs-string">&quot;local&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;local&quot;</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">58</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">202</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;downloadId&quot;</span> : <span class="hljs-string">&quot;70712&quot;</span> 
  } 
}
</pre>
<div id="RestBackupDownloadBackup_rocksdb_container_collapse" onclick="$('#RestBackupDownloadBackup_rocksdb_long').hide(); $('#RestBackupDownloadBackup_rocksdb_short').show(); window.location.hash='RestBackupDownloadBackup_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupDownloadBackup_rocksdb_short" onclick="$('#RestBackupDownloadBackup_rocksdb_short').hide(); $('#RestBackupDownloadBackup_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/download</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.30Z_e886f9c5-ff9c-4c10-b833-7e7461574982&quot;</span>, 
  <span class="hljs-string">&quot;remoteRepository&quot;</span> : <span class="hljs-string">&quot;local://tmp/backups&quot;</span>, 
  <span class="hljs-string">&quot;config&quot;</span> : { 
    <span class="hljs-string">&quot;local&quot;</span> : { 
      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;local&quot;</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">58</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




The `result` object of the body holds the `downloadId` string attribute which
can be used to follow the download process.


<div class="example-container" id="RestBackupDownloadBackupStarted_rocksdb_container">
<div id="RestBackupDownloadBackupStarted_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/download</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;downloadId&quot;</span> : <span class="hljs-string">&quot;70701&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">224</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;Timestamp&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:30Z&quot;</span>, 
    <span class="hljs-string">&quot;DownloadId&quot;</span> : <span class="hljs-string">&quot;70701&quot;</span>, 
    <span class="hljs-string">&quot;Cancelled&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;BackupId&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.14Z_46f28add-4981-495f-9e81-b7ed02368a1d&quot;</span>, 
    <span class="hljs-string">&quot;DBServers&quot;</span> : { 
      <span class="hljs-string">&quot;SNGL&quot;</span> : { 
        <span class="hljs-string">&quot;Status&quot;</span> : <span class="hljs-string">&quot;STARTED&quot;</span> 
      } 
    } 
  } 
}
</pre>
<div id="RestBackupDownloadBackupStarted_rocksdb_container_collapse" onclick="$('#RestBackupDownloadBackupStarted_rocksdb_long').hide(); $('#RestBackupDownloadBackupStarted_rocksdb_short').show(); window.location.hash='RestBackupDownloadBackupStarted_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupDownloadBackupStarted_rocksdb_short" onclick="$('#RestBackupDownloadBackupStarted_rocksdb_short').hide(); $('#RestBackupDownloadBackupStarted_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/download</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;downloadId&quot;</span> : <span class="hljs-string">&quot;70701&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">224</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/BackupRestore/post_admin_backup_create.md -->
@startDocuBlock post_admin_backup_create

@brief creates a local backup

@RESTHEADER{POST /_admin/backup/create, Create backup}

@RESTDESCRIPTION
Creates a consistent backup "as soon as possible", very much
like a snapshot in time, with a given label. The ambiguity in the
phrase "as soon as possible" refers to the next window during which a
global write lock across all databases can be obtained in order to
guarantee consistency. Note that the backup at first resides on the
same machine and hard drive as the original data. Make sure to upload
it to a remote site for an actual backup.

@RESTBODYPARAM{label,string,optional,string}
The label for this backup. The label is used together with a
timestamp string create a unique backup identifier, `<timestamp>_<label>`.
If no label is specified, the empty string is assumed and a default
UUID is created for this part of the ID.

@RESTBODYPARAM{timeout,number,optional,double}
The time in seconds that the operation tries to get a consistent
snapshot. The default is 120 seconds.

@RESTBODYPARAM{allowInconsistent,boolean,optional,}
If this flag is set to `true` and no global transaction lock can be
acquired within the given timeout, a possibly inconsistent backup
is taken. The default for this flag is `false` and in this case
a timeout results in an HTTP 408 error.

@RESTBODYPARAM{force,boolean,optional,}
If this flag is set to `true` and no global transaction lock can be acquired
within the given timeout, all running transactions are forcefully aborted to
ensure that a consistent backup can be created. This does not include 
JavaScript transactions. It waits for the transactions to be aborted at most 
`timeout` seconds. Thus using `force` the request timeout is doubled.
To abort transactions is almost certainly not what you want for your application. 
In the presence of intermediate commits it can even destroy the atomicity of your
transactions. Use at your own risk, and only if you need a consistent backup at 
all costs. The default and recommended value is `false`. If both 
`allowInconsistent` and `force` are set to `true`, then the latter takes 
precedence and transactions are aborted. This is only available in the cluster.

@RESTRETURNCODES

@RESTRETURNCODE{201}
If all is well, code 201 is returned.

@RESTRETURNCODE{400}
If the create command is invoked with bad parameters or any HTTP
method other than `POST`, then an *HTTP 400* is returned. The specifics
are detailed in the returned error document.

@RESTRETURNCODE{408}
If the operation cannot obtain a global transaction lock
within the timeout, then an *HTTP 408* is returned.

@EXAMPLES


<div class="example-container" id="RestBackupCreateBackup_rocksdb_container">
<div id="RestBackupCreateBackup_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/create</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">185</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.13Z_foo&quot;</span>, 
    <span class="hljs-string">&quot;potentiallyInconsistent&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;sizeInBytes&quot;</span> : <span class="hljs-number">547107</span>, 
    <span class="hljs-string">&quot;datetime&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:13Z&quot;</span>, 
    <span class="hljs-string">&quot;nrDBServers&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;nrFiles&quot;</span> : <span class="hljs-number">21</span> 
  } 
}
</pre>
<div id="RestBackupCreateBackup_rocksdb_container_collapse" onclick="$('#RestBackupCreateBackup_rocksdb_long').hide(); $('#RestBackupCreateBackup_rocksdb_short').show(); window.location.hash='RestBackupCreateBackup_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupCreateBackup_rocksdb_short" onclick="$('#RestBackupCreateBackup_rocksdb_short').hide(); $('#RestBackupCreateBackup_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/create</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;label&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">185</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





The result `body` contains besides the above discussed error codes the `result` object, if `code` is equal to `201`, which holds the unique identifier of this hot backup as the string attibute `id`, the full size in bytes as `sizeInBytes`, the number of idividual files as `nrFiles` and the number of database servers as `nrDBServers`. Single server deployments list potentially misleadingly `nrDBServers: 1`. Furthermore, the body contains a `datetime` time stamp and the flag `potentiallyInconsistent`, which indicates that the backup could inconsistent. This only happens if `allowInconsistent` has happened.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/BackupRestore/post_admin_backup_list.md -->
@startDocuBlock post_admin_backup_list

@brief list all local backups

@RESTHEADER{POST /_admin/backup/list, List backups}

@RESTDESCRIPTION
Lists all locally found backups.

@RESTBODYPARAM{id,string,optional,string}
The body can either be empty (in which case all available backups are
listed), or it can be an object with an attribute `id`, which
is a string. In the latter case the returned list
is restricted to the backup with the given id.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If all is well, code 200 is returned.

@RESTRETURNCODE{400}
If the list command is invoked with bad parameters, then an *HTTP 400*
is returned.

@RESTRETURNCODE{404}
If an `id` or a list of ids was given and the given ids were not found
as identifiers of a backup, an *HTTP 404 NOT FOUND* is returned.

@RESTRETURNCODE{405}
If the list command is invoked with any HTTP
method other than `POST`, then an *HTTP 405 METHOD NOT ALLOWED* is returned.

@EXAMPLES


<div class="example-container" id="RestBackupListBackup_rocksdb_container">
<div id="RestBackupListBackup_rocksdb_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/list</span> &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1050</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;server&quot;</span> : <span class="hljs-string">&quot;SNGL-b6d65728-d8f0-458e-8c6d-819c51f71cae&quot;</span>, 
    <span class="hljs-string">&quot;list&quot;</span> : { 
      <span class="hljs-string">&quot;2022-03-30T23.26.13Z_foo&quot;</span> : { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.13Z_foo&quot;</span>, 
        <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
        <span class="hljs-string">&quot;datetime&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:13Z&quot;</span>, 
        <span class="hljs-string">&quot;keys&quot;</span> : [ ], 
        <span class="hljs-string">&quot;sizeInBytes&quot;</span> : <span class="hljs-number">547107</span>, 
        <span class="hljs-string">&quot;nrFiles&quot;</span> : <span class="hljs-number">21</span>, 
        <span class="hljs-string">&quot;nrDBServers&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;available&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;nrPiecesPresent&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;potentiallyInconsistent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;countIncludesFilesOnly&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;2022-03-30T23.26.46Z_5d8f9dac-11ec-404d-8208-28f66b65e7d5&quot;</span> : { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.46Z_5d8f9dac-11ec-404d-8208-28f66b65e7d5&quot;</span>, 
        <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
        <span class="hljs-string">&quot;datetime&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:46Z&quot;</span>, 
        <span class="hljs-string">&quot;keys&quot;</span> : [ ], 
        <span class="hljs-string">&quot;sizeInBytes&quot;</span> : <span class="hljs-number">559285</span>, 
        <span class="hljs-string">&quot;nrFiles&quot;</span> : <span class="hljs-number">21</span>, 
        <span class="hljs-string">&quot;nrDBServers&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;available&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;nrPiecesPresent&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;potentiallyInconsistent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;countIncludesFilesOnly&quot;</span> : <span class="hljs-literal">true</span> 
      }, 
      <span class="hljs-string">&quot;2022-03-30T23.26.47Z_144b8eae-0620-4238-92fb-6d68b1c0c136&quot;</span> : { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23.26.47Z_144b8eae-0620-4238-92fb-6d68b1c0c136&quot;</span>, 
        <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span>, 
        <span class="hljs-string">&quot;datetime&quot;</span> : <span class="hljs-string">&quot;2022-03-30T23:26:47Z&quot;</span>, 
        <span class="hljs-string">&quot;keys&quot;</span> : [ ], 
        <span class="hljs-string">&quot;sizeInBytes&quot;</span> : <span class="hljs-number">808784</span>, 
        <span class="hljs-string">&quot;nrFiles&quot;</span> : <span class="hljs-number">23</span>, 
        <span class="hljs-string">&quot;nrDBServers&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;available&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;nrPiecesPresent&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;potentiallyInconsistent&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;countIncludesFilesOnly&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    } 
  } 
}
</pre>
<div id="RestBackupListBackup_rocksdb_container_collapse" onclick="$('#RestBackupListBackup_rocksdb_long').hide(); $('#RestBackupListBackup_rocksdb_short').show(); window.location.hash='RestBackupListBackup_rocksdb_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBackupListBackup_rocksdb_short" onclick="$('#RestBackupListBackup_rocksdb_short').hide(); $('#RestBackupListBackup_rocksdb_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_admin/backup/list</span> &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">1050</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





The result consists of a `list` object of hot backups by their `id`, where `id` uniquely identifies a specific hot backup, `version` depicts the version of ArangoDB, which was used to create any individual hot backup and `datetime` displays the time of creation of the hot backup. Further parameters are the size of the backup in bytes as `sizeInBytes`, the number of individual data files as `nrFiles`, the number of db servers at time of creation as `nrDBServers`, the number of backup parts, which are found on the currently reachable db servers as `nrPiecesPresent`. If the backup was created allowing inconsistences, it is so denoted as `potentiallyInconsistent`. The `available` boolean parameter is tightly connected to the backup to be present and ready to be restored on all db servers. It is `true` except, when the number of db servers currently reachable does not match to the number of db servers listed in the backup.
Should the backup be encrypted the sha256 hashes of the user secrets are published here. This will allow you to use the correct
user secret for the encryption-at-rest feature to be able to restore the backup.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/get_api_database_new.md -->
@startDocuBlock get_api_database_new

@brief creates a new database

@RESTHEADER{POST /_api/database, Create database, createDatabase}

@RESTBODYPARAM{name,string,required,string}
Has to contain a valid database name.

@RESTBODYPARAM{options,object,optional,get_api_database_new_OPTIONS}
Optional object which can contain the following attributes:

@RESTSTRUCT{sharding,get_api_database_new_OPTIONS,string,optional,}
The sharding method to use for new collections in this database. Valid values
are: "", "flexible", or "single". The first two are equivalent. _(cluster only)_

@RESTSTRUCT{replicationFactor,get_api_database_new_OPTIONS,integer,optional,}
Default replication factor for new collections created in this database.
Special values include "satellite", which will replicate the collection to
every DB-Server (Enterprise Edition only), and 1, which disables replication.
_(cluster only)_

@RESTSTRUCT{writeConcern,get_api_database_new_OPTIONS,number,optional,}
Default write concern for new collections created in this database.
It determines how many copies of each shard are required to be
in sync on the different DB-Servers. If there are less then these many copies
in the cluster a shard will refuse to write. Writes to shards with enough
up-to-date copies will succeed at the same time however. The value of
*writeConcern* can not be larger than *replicationFactor*. _(cluster only)_

@RESTBODYPARAM{users,array,optional,get_api_database_new_USERS}
An array of user objects. The users will be granted *Administrate* permissions
for the new database. Users that do not exist yet will be created.
If *users* is not specified or does not contain any users, the default user
*root* will be used to ensure that the new database will be accessible after it
is created. The *root* user is created with an empty password should it not
exist. Each user object can contain the following attributes:

@RESTSTRUCT{username,get_api_database_new_USERS,string,required,}
Login name of an existing user or one to be created.

@RESTSTRUCT{passwd,get_api_database_new_USERS,string,optional,password}
The user password as a string. If not specified, it will default to an empty
string. The attribute is ignored for users that already exist.

@RESTSTRUCT{active,get_api_database_new_USERS,boolean,optional,}
A flag indicating whether the user account should be activated or not.
The default value is *true*. If set to *false*, then the user won't be able to
log into the database. The default is *true*. The attribute is ignored for users
that already exist.

@RESTSTRUCT{extra,get_api_database_new_USERS,object,optional,}
A JSON object with extra user information. It is used by the web interface
to store graph viewer settings and saved queries. Should not be set or
modified by end users, as custom attributes will not be preserved.

@RESTDESCRIPTION
Creates a new database

The response is a JSON object with the attribute *result* set to *true*.

**Note**: creating a new database is only possible from within the *_system* database.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the database was created successfully.

@RESTRETURNCODE{400}
is returned if the request parameters are invalid or if a database with the
specified name already exists.

@RESTRETURNCODE{403}
is returned if the request was not executed in the *_system* database.

@RESTRETURNCODE{409}
is returned if a database with the specified name already exists.

@EXAMPLES

Creating a database named *example*.


<div class="example-container" id="RestDatabaseCreate_container">
<div id="RestDatabaseCreate_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/database</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;example&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;sharding&quot;</span> : <span class="hljs-string">&quot;flexible&quot;</span>, 
    <span class="hljs-string">&quot;replicationFactor&quot;</span> : <span class="hljs-number">3</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestDatabaseCreate_container_collapse" onclick="$('#RestDatabaseCreate_long').hide(); $('#RestDatabaseCreate_short').show(); window.location.hash='RestDatabaseCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseCreate_short" onclick="$('#RestDatabaseCreate_short').hide(); $('#RestDatabaseCreate_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/database</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;example&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;sharding&quot;</span> : <span class="hljs-string">&quot;flexible&quot;</span>, 
    <span class="hljs-string">&quot;replicationFactor&quot;</span> : <span class="hljs-number">3</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Creating a database named *mydb* with two users, flexible sharding and
default replication factor of 3 for collections that will be part of
the newly created database.


<div class="example-container" id="RestDatabaseCreateUsers_container">
<div id="RestDatabaseCreateUsers_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/database</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;mydb&quot;</span>, 
  <span class="hljs-string">&quot;users&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span>, 
      <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secret&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span> 
    }, 
    { 
      <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;tester&quot;</span>, 
      <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;test001&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestDatabaseCreateUsers_container_collapse" onclick="$('#RestDatabaseCreateUsers_long').hide(); $('#RestDatabaseCreateUsers_short').show(); window.location.hash='RestDatabaseCreateUsers_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseCreateUsers_short" onclick="$('#RestDatabaseCreateUsers_short').hide(); $('#RestDatabaseCreateUsers_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/database</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;mydb&quot;</span>, 
  <span class="hljs-string">&quot;users&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;admin&quot;</span>, 
      <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;secret&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">true</span> 
    }, 
    { 
      <span class="hljs-string">&quot;username&quot;</span> : <span class="hljs-string">&quot;tester&quot;</span>, 
      <span class="hljs-string">&quot;passwd&quot;</span> : <span class="hljs-string">&quot;test001&quot;</span>, 
      <span class="hljs-string">&quot;active&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/get_api_database_user.md -->
@startDocuBlock get_api_database_user

@brief retrieves a list of all databases the current user can access

@RESTHEADER{GET /_api/database/user, List of accessible databases, getDatabases:user}

@RESTDESCRIPTION
Retrieves the list of all databases the current user can access without
specifying a different username or password.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the list of database was compiled successfully.

@RESTRETURNCODE{400}
is returned if the request is invalid.

@EXAMPLES


<div class="example-container" id="RestDatabaseGetUser_container">
<div id="RestDatabaseGetUser_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database/user</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">47</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-string">&quot;_system&quot;</span> 
  ] 
}
</pre>
<div id="RestDatabaseGetUser_container_collapse" onclick="$('#RestDatabaseGetUser_long').hide(); $('#RestDatabaseGetUser_short').show(); window.location.hash='RestDatabaseGetUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseGetUser_short" onclick="$('#RestDatabaseGetUser_short').hide(); $('#RestDatabaseGetUser_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database/user</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">47</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/get_api_database_list.md -->
@startDocuBlock get_api_database_list

@brief retrieves a list of all existing databases

@RESTHEADER{GET /_api/database, List of databases, getDatabases:all}

@RESTDESCRIPTION
Retrieves the list of all existing databases

**Note**: retrieving the list of databases is only possible from within the *_system* database.

**Note**: You should use the *GET user API* to fetch the list of the available databases now.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the list of database was compiled successfully.

@RESTRETURNCODE{400}
is returned if the request is invalid.

@RESTRETURNCODE{403}
is returned if the request was not executed in the *_system* database.

@EXAMPLES


<div class="example-container" id="RestDatabaseGet_container">
<div id="RestDatabaseGet_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">47</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-string">&quot;_system&quot;</span> 
  ] 
}
</pre>
<div id="RestDatabaseGet_container_collapse" onclick="$('#RestDatabaseGet_long').hide(); $('#RestDatabaseGet_short').show(); window.location.hash='RestDatabaseGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseGet_short" onclick="$('#RestDatabaseGet_short').hide(); $('#RestDatabaseGet_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">47</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/get_api_database_delete.md -->
@startDocuBlock get_api_database_delete

@brief drop an existing database

@RESTHEADER{DELETE /_api/database/{database-name}, Drop database, deleteDatabase}

@RESTURLPARAMETERS

@RESTURLPARAM{database-name,string,required}
The name of the database

@RESTDESCRIPTION
Drops the database along with all data stored in it.

**Note**: dropping a database is only possible from within the *_system* database.
The *_system* database itself cannot be dropped.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the database was dropped successfully.

@RESTRETURNCODE{400}
is returned if the request is malformed.

@RESTRETURNCODE{403}
is returned if the request was not executed in the *_system* database.

@RESTRETURNCODE{404}
is returned if the database could not be found.

@EXAMPLES


<div class="example-container" id="RestDatabaseDrop_container">
<div id="RestDatabaseDrop_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database/example</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestDatabaseDrop_container_collapse" onclick="$('#RestDatabaseDrop_long').hide(); $('#RestDatabaseDrop_short').show(); window.location.hash='RestDatabaseDrop_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseDrop_short" onclick="$('#RestDatabaseDrop_short').hide(); $('#RestDatabaseDrop_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database/example</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">40</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/get_api_database_current.md -->
@startDocuBlock get_api_database_current

@brief retrieves information about the current database

@RESTHEADER{GET /_api/database/current, Information of the database, getDatabases:current}

@RESTDESCRIPTION
Retrieves the properties of the current database

The response is a JSON object with the following attributes:

- *name*: the name of the current database

- *id*: the id of the current database

- *path*: the filesystem path of the current database

- *isSystem*: whether or not the current database is the *_system* database

- *sharding*: the default sharding method for collections created in this database

- *replicationFactor*: the default replication factor for collections in this database

- *writeConcern*: the default write concern for collections in this database

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the information was retrieved successfully.

@RESTRETURNCODE{400}
is returned if the request is invalid.

@RESTRETURNCODE{404}
is returned if the database could not be found.

@EXAMPLES


<div class="example-container" id="RestDatabaseGetInfo_container">
<div id="RestDatabaseGetInfo_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database/current</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">93</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;result&quot;</span> : { 
    <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
    <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;path&quot;</span> : <span class="hljs-string">&quot;none&quot;</span> 
  } 
}
</pre>
<div id="RestDatabaseGetInfo_container_collapse" onclick="$('#RestDatabaseGetInfo_long').hide(); $('#RestDatabaseGetInfo_short').show(); window.location.hash='RestDatabaseGetInfo_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseGetInfo_short" onclick="$('#RestDatabaseGetInfo_short').hide(); $('#RestDatabaseGetInfo_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/database/current</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">93</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/post_api_cursor_delete.md -->
@startDocuBlock post_api_cursor_delete

@brief dispose an existing cursor

@RESTHEADER{DELETE /_api/cursor/{cursor-identifier}, Delete cursor, deleteQueryCursor}

@RESTURLPARAMETERS

@RESTURLPARAM{cursor-identifier,string,required}
The id of the cursor

@RESTDESCRIPTION
Deletes the cursor and frees the resources associated with it.

The cursor will automatically be destroyed on the server when the client has
retrieved all documents from it. The client can also explicitly destroy the
cursor at any earlier time using an HTTP DELETE request. The cursor id must
be included as part of the URL.

Note: the server will also destroy abandoned cursors automatically after a
certain server-controlled timeout to avoid resource leakage.

@RESTRETURNCODES

@RESTRETURNCODE{202}
is returned if the server is aware of the cursor.

@RESTRETURNCODE{404}
is returned if the server is not aware of the cursor. It is also
returned if a cursor is used after it has been destroyed.

@EXAMPLES


<div class="example-container" id="RestCursorDelete_container">
<div id="RestCursorDelete_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">442</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71165&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71165&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylObC---&quot;</span>, 
      <span class="hljs-string">&quot;hello1&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71167&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71167&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylObG---&quot;</span>, 
      <span class="hljs-string">&quot;hello2&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71176&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0003174068406224251</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">7118</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/71176</span>

</pre>
<div id="RestCursorDelete_container_collapse" onclick="$('#RestCursorDelete_long').hide(); $('#RestCursorDelete_short').show(); window.location.hash='RestCursorDelete_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDelete_short" onclick="$('#RestCursorDelete_short').hide(); $('#RestCursorDelete_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">442</span>
server: ArangoDB
x-content-type-options: nosniff

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X DELETE --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/71176</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/put_api_cursor_identifier.md -->
@startDocuBlock put_api_cursor_identifier

@brief return the next results from an existing cursor

@RESTHEADER{PUT /_api/cursor/{cursor-identifier}, Read next batch from cursor (deprecated), modifyQueryCursorPut}

@HINTS
{% hint 'warning' %}
There is a functionally equivalent HTTP POST counterpart to this endpoint, which should
be used preferrably.
{% endhint %}

@RESTURLPARAMETERS

@RESTURLPARAM{cursor-identifier,string,required}
The name of the cursor

@RESTDESCRIPTION
If the cursor is still alive, returns an object with the following
attributes:

- *id*: a *cursor-identifier*
- *result*: a list of documents for the current batch
- *hasMore*: *false* if this was the last batch
- *count*: if present the total number of elements
- *code*: an HTTP status code
- *error*: a boolean flag to indicate whether an error occurred
- *errorNum*: a server error number (if *error* is *true*)
- *errorMessage*: a descriptive error message (if *error* is *true*)
- *extra*: an object with additional information about the query result, with
  the nested objects *stats* and *warnings*. Only delivered as part of the last
  batch in case of a cursor with the *stream* option enabled.

Note that even if *hasMore* returns *true*, the next call might
still return no documents. If, however, *hasMore* is *false*, then
the cursor is exhausted.  Once the *hasMore* attribute has a value of
*false*, the client can stop.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* in case of success.

@RESTRETURNCODE{400}
If the cursor identifier is omitted, the server will respond with *HTTP 404*.

@RESTRETURNCODE{404}
If no cursor with the specified identifier can be found, the server will respond
with *HTTP 404*.

@EXAMPLES

Valid request for next batch


<div class="example-container" id="RestCursorPutForLimitReturnCont_container">
<div id="RestCursorPutForLimitReturnCont_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/71257</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">442</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71250&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71250&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPSO---&quot;</span>, 
      <span class="hljs-string">&quot;hello3&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71252&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71252&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylPSS---&quot;</span>, 
      <span class="hljs-string">&quot;hello4&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71257&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0002680830657482147</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">7118</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestCursorPutForLimitReturnCont_container_collapse" onclick="$('#RestCursorPutForLimitReturnCont_long').hide(); $('#RestCursorPutForLimitReturnCont_short').show(); window.location.hash='RestCursorPutForLimitReturnCont_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorPutForLimitReturnCont_short" onclick="$('#RestCursorPutForLimitReturnCont_short').hide(); $('#RestCursorPutForLimitReturnCont_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/71257</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">442</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Missing identifier


<div class="example-container" id="RestCursorPutMissingCursorIdentifier_container">
<div id="RestCursorPutMissingCursorIdentifier_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">96</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;expecting PUT /_api/cursor/&lt;cursor-id&gt;&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestCursorPutMissingCursorIdentifier_container_collapse" onclick="$('#RestCursorPutMissingCursorIdentifier_long').hide(); $('#RestCursorPutMissingCursorIdentifier_short').show(); window.location.hash='RestCursorPutMissingCursorIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorPutMissingCursorIdentifier_short" onclick="$('#RestCursorPutMissingCursorIdentifier_short').hide(); $('#RestCursorPutMissingCursorIdentifier_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">96</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Unknown identifier


<div class="example-container" id="RestCursorPutInvalidCursorIdentifier_container">
<div id="RestCursorPutInvalidCursorIdentifier_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/123123</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">75</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;cursor not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1600</span> 
}
</pre>
<div id="RestCursorPutInvalidCursorIdentifier_container_collapse" onclick="$('#RestCursorPutInvalidCursorIdentifier_long').hide(); $('#RestCursorPutInvalidCursorIdentifier_short').show(); window.location.hash='RestCursorPutInvalidCursorIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorPutInvalidCursorIdentifier_short" onclick="$('#RestCursorPutInvalidCursorIdentifier_short').hide(); $('#RestCursorPutInvalidCursorIdentifier_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/123123</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">75</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/post_api_cursor_identifier.md -->
@startDocuBlock post_api_cursor_identifier

@brief return the next results from an existing cursor

@RESTHEADER{POST /_api/cursor/{cursor-identifier}, Read next batch from cursor, modifyQueryCursorPost}

@RESTURLPARAMETERS

@RESTURLPARAM{cursor-identifier,string,required}
The name of the cursor

@RESTDESCRIPTION
If the cursor is still alive, returns an object with the following
attributes:

- *id*: a *cursor-identifier*
- *result*: a list of documents for the current batch
- *hasMore*: *false* if this was the last batch
- *count*: if present the total number of elements
- *code*: an HTTP status code
- *error*: a boolean flag to indicate whether an error occurred
- *errorNum*: a server error number (if *error* is *true*)
- *errorMessage*: a descriptive error message (if *error* is *true*)
- *extra*: an object with additional information about the query result, with
  the nested objects *stats* and *warnings*. Only delivered as part of the last
  batch in case of a cursor with the *stream* option enabled.

Note that even if *hasMore* returns *true*, the next call might
still return no documents. If, however, *hasMore* is *false*, then
the cursor is exhausted.  Once the *hasMore* attribute has a value of
*false*, the client can stop.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* in case of success.

@RESTRETURNCODE{400}
If the cursor identifier is omitted, the server will respond with *HTTP 404*.

@RESTRETURNCODE{404}
If no cursor with the specified identifier can be found, the server will respond
with *HTTP 404*.

@EXAMPLES

Valid request for next batch


<div class="example-container" id="RestCursorPostForLimitReturnCont_container">
<div id="RestCursorPostForLimitReturnCont_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/71232</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">442</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71225&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71225&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylOfe--A&quot;</span>, 
      <span class="hljs-string">&quot;hello3&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71227&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71227&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylOfi---&quot;</span>, 
      <span class="hljs-string">&quot;hello4&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71232&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0002637570723891258</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">7118</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestCursorPostForLimitReturnCont_container_collapse" onclick="$('#RestCursorPostForLimitReturnCont_long').hide(); $('#RestCursorPostForLimitReturnCont_short').show(); window.location.hash='RestCursorPostForLimitReturnCont_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorPostForLimitReturnCont_short" onclick="$('#RestCursorPostForLimitReturnCont_short').hide(); $('#RestCursorPostForLimitReturnCont_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/71232</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">442</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Missing identifier


<div class="example-container" id="RestCursorPostMissingCursorIdentifier_container">
<div id="RestCursorPostMissingCursorIdentifier_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">96</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;expecting PUT /_api/cursor/&lt;cursor-id&gt;&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestCursorPostMissingCursorIdentifier_container_collapse" onclick="$('#RestCursorPostMissingCursorIdentifier_long').hide(); $('#RestCursorPostMissingCursorIdentifier_short').show(); window.location.hash='RestCursorPostMissingCursorIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorPostMissingCursorIdentifier_short" onclick="$('#RestCursorPostMissingCursorIdentifier_short').hide(); $('#RestCursorPostMissingCursorIdentifier_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">96</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Unknown identifier


<div class="example-container" id="RestCursorPostInvalidCursorIdentifier_container">
<div id="RestCursorPostInvalidCursorIdentifier_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/123123</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">75</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;cursor not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1600</span> 
}
</pre>
<div id="RestCursorPostInvalidCursorIdentifier_container_collapse" onclick="$('#RestCursorPostInvalidCursorIdentifier_long').hide(); $('#RestCursorPostInvalidCursorIdentifier_short').show(); window.location.hash='RestCursorPostInvalidCursorIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorPostInvalidCursorIdentifier_short" onclick="$('#RestCursorPostInvalidCursorIdentifier_short').hide(); $('#RestCursorPostInvalidCursorIdentifier_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X PUT --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor/123123</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">75</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/post_api_cursor.md -->
@startDocuBlock post_api_cursor

@brief create a cursor and return the first results

@RESTHEADER{POST /_api/cursor, Create cursor, createQueryCursor}

A JSON object describing the query and query parameters.

@RESTBODYPARAM{query,string,required,string}
contains the query string to be executed

@RESTBODYPARAM{count,boolean,optional,}
indicates whether the number of documents in the result set should be returned in
the "count" attribute of the result.
Calculating the "count" attribute might have a performance impact for some queries
in the future so this option is turned off by default, and "count"
is only returned when requested.

@RESTBODYPARAM{batchSize,integer,optional,int64}
maximum number of result documents to be transferred from
the server to the client in one roundtrip. If this attribute is
not set, a server-controlled default value will be used. A *batchSize* value of
*0* is disallowed.

@RESTBODYPARAM{ttl,integer,optional,int64}
The time-to-live for the cursor (in seconds). If the result set is small enough
(less than or equal to `batchSize`) then results are returned right away.
Otherwise they are stored in memory and will be accessible via the cursor with
respect to the `ttl`. The cursor will be removed on the server automatically
after the specified amount of time. This is useful to ensure garbage collection
of cursors that are not fully fetched by clients. If not set, a server-defined
value will be used (default: 30 seconds).

@RESTBODYPARAM{cache,boolean,optional,}
flag to determine whether the AQL query results cache
shall be used. If set to *false*, then any query cache lookup will be skipped
for the query. If set to *true*, it will lead to the query cache being checked
for the query if the query cache mode is either *on* or *demand*.

@RESTBODYPARAM{memoryLimit,integer,optional,int64}
the maximum number of memory (measured in bytes) that the query is allowed to
use. If set, then the query will fail with error "resource limit exceeded" in
case it allocates too much memory. A value of *0* indicates that there is no
memory limit.

@RESTBODYPARAM{bindVars,array,optional,object}
key/value pairs representing the bind parameters.

@RESTBODYPARAM{options,object,optional,post_api_cursor_opts}
key/value object with extra options for the query.

@RESTSTRUCT{fullCount,post_api_cursor_opts,boolean,optional,}
if set to *true* and the query contains a *LIMIT* clause, then the
result will have an *extra* attribute with the sub-attributes *stats*
and *fullCount*, `{ ... , "extra": { "stats": { "fullCount": 123 } } }`.
The *fullCount* attribute will contain the number of documents in the result before the
last top-level LIMIT in the query was applied. It can be used to count the number of
documents that match certain filter criteria, but only return a subset of them, in one go.
It is thus similar to MySQL's *SQL_CALC_FOUND_ROWS* hint. Note that setting the option
will disable a few LIMIT optimizations and may lead to more documents being processed,
and thus make queries run longer. Note that the *fullCount* attribute may only
be present in the result if the query has a top-level LIMIT clause and the LIMIT
clause is actually used in the query.

@RESTSTRUCT{maxPlans,post_api_cursor_opts,integer,optional,int64}
Limits the maximum number of plans that are created by the AQL query optimizer.

@RESTSTRUCT{maxWarningCount,post_api_cursor_opts,integer,optional,int64}
Limits the maximum number of warnings a query will return. The number of warnings
a query will return is limited to 10 by default, but that number can be increased
or decreased by setting this attribute.

@RESTSTRUCT{failOnWarning,post_api_cursor_opts,boolean,optional,}
When set to *true*, the query will throw an exception and abort instead of producing
a warning. This option should be used during development to catch potential issues
early. When the attribute is set to *false*, warnings will not be propagated to
exceptions and will be returned with the query result.
There is also a server configuration option `--query.fail-on-warning` for setting the
default value for *failOnWarning* so it does not need to be set on a per-query level.

@RESTSTRUCT{stream,post_api_cursor_opts,boolean,optional,}
Can be enabled to execute the query lazily. If set to *true*, then the query is
executed as long as necessary to produce up to `batchSize` results. These
results are returned immediately and the query is suspended until the client
asks for the next batch (if there are more results). Depending on the query
this can mean that the first results will be available much faster and that
less memory is needed because the server only needs to store a subset of
results at a time. Read-only queries can benefit the most, unless `SORT`
without index or `COLLECT` are involved that make it necessary to process all
documents before a partial result can be returned. It is advisable to only use
this option for queries without exclusive locks.

Remarks:
- The query will hold resources until it ends (such as RocksDB snapshots, which
  prevents compaction to some degree). Writes will be in memory until the query
  is committed.
- If existing documents are modified, then write locks are held on these
  documents and other queries trying to modify the same documents will fail
  because of this conflict.
- A streaming query may fail late because of a conflict or for other reasons
  after some batches were already returned successfully, possibly rendering the
  results up to that point meaningless.
- The query options `cache`, `count` and `fullCount` are not supported for
  streaming queries.
- Query statistics, profiling data and warnings are delivered as part of the
  last batch.

If the `stream` option is *false* (default), then the complete result of the
query is calculated before any of it is returned to the client. The server
stores the full result in memory (on the contacted Coordinator if in a cluster).
All other resources are freed immediately (locks, RocksDB snapshots). The query
will fail before it returns results in case of a conflict.

@RESTSTRUCT{optimizer,post_api_cursor_opts,object,optional,post_api_cursor_opts_optimizer}
Options related to the query optimizer.

@RESTSTRUCT{rules,post_api_cursor_opts_optimizer,array,optional,string}
A list of to-be-included or to-be-excluded optimizer rules can be put into this
attribute, telling the optimizer to include or exclude specific rules. To disable
a rule, prefix its name with a `-`, to enable a rule, prefix it with a `+`. There is
also a pseudo-rule `all`, which matches all optimizer rules. `-all` disables all rules.

@RESTSTRUCT{profile,post_api_cursor_opts,integer,optional,}
If set to *true* or *1*, then the additional query profiling information will be returned
in the sub-attribute *profile* of the *extra* return attribute, if the query result
is not served from the query cache. Set to *2* the query will include execution stats
per query plan node in sub-attribute *stats.nodes* of the *extra* return attribute.
Additionally the query plan is returned in the sub-attribute *extra.plan*.

@RESTSTRUCT{satelliteSyncWait,post_api_cursor_opts,number,optional,double}
This *Enterprise Edition* parameter allows to configure how long a DB-Server will have time
to bring the SatelliteCollections involved in the query into sync.
The default value is *60.0* (seconds). When the max time has been reached the query
will be stopped.

@RESTSTRUCT{maxRuntime,post_api_cursor_opts,number,optional,double}
The query has to be executed within the given runtime or it will be killed.
The value is specified in seconds. The default value is *0.0* (no timeout).

@RESTSTRUCT{maxTransactionSize,post_api_cursor_opts,integer,optional,int64}
Transaction size limit in bytes. Honored by the RocksDB storage engine only.

@RESTSTRUCT{intermediateCommitSize,post_api_cursor_opts,integer,optional,int64}
Maximum total size of operations after which an intermediate commit is performed
automatically. Honored by the RocksDB storage engine only.

@RESTSTRUCT{intermediateCommitCount,post_api_cursor_opts,integer,optional,int64}
Maximum number of operations after which an intermediate commit is performed
automatically. Honored by the RocksDB storage engine only.

@RESTSTRUCT{skipInaccessibleCollections,post_api_cursor_opts,boolean,optional,}
AQL queries (especially graph traversals) will treat collection to which a user has no access rights as if these collections were empty. Instead of returning a forbidden access error, your queries will execute normally. This is intended to help with certain use-cases: A graph contains several collections and different users execute AQL queries on that graph. You can now naturally limit the accessible results by changing the access rights of users on collections. This feature is only available in the Enterprise Edition.

@RESTDESCRIPTION
The query details include the query string plus optional query options and
bind parameters. These values need to be passed in a JSON representation in
the body of the POST request.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the result set can be created by the server.

@RESTREPLYBODY{error,boolean,required,}
A flag to indicate that an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,integer}
the HTTP status code

@RESTREPLYBODY{result,array,optional,}
an array of result documents (might be empty if query has no results)

@RESTREPLYBODY{hasMore,boolean,required,}
A boolean indicator whether there are more results
available for the cursor on the server

@RESTREPLYBODY{count,integer,optional,int64}
the total number of result documents available (only
available if the query was executed with the *count* attribute set)

@RESTREPLYBODY{id,string,required,string}
id of temporary cursor created on the server (optional, see above)

@RESTREPLYBODY{extra,object,optional,}
an optional JSON object with extra information about the query result
contained in its *stats* sub-attribute. For data-modification queries, the
*extra.stats* sub-attribute will contain the number of modified documents and
the number of documents that could not be modified
due to an error (if *ignoreErrors* query option is specified)

@RESTREPLYBODY{cached,boolean,required,}
a boolean flag indicating whether the query result was served
from the query cache or not. If the query result is served from the query
cache, the *extra* return attribute will not contain any *stats* sub-attribute
and no *profile* sub-attribute.

@RESTRETURNCODE{400}
is returned if the JSON representation is malformed or the query specification is
missing from the request.

If the JSON representation is malformed or the query specification is
missing from the request, the server will respond with *HTTP 400*.

The body of the response will contain a JSON object with additional error
details. The object has the following attributes:

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate that an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message<br>
If the query specification is complete, the server will process the query. If an
error occurs during query processing, the server will respond with *HTTP 400*.
Again, the body of the response will contain details about the error.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* in case a non-existing collection is
accessed in the query.

@RESTRETURNCODE{405}
The server will respond with *HTTP 405* if an unsupported HTTP method is used.

@EXAMPLES

Execute a query and extract the result in a single go


<div class="example-container" id="RestCursorCreateCursorForLimitReturnSingle_container">
<div id="RestCursorCreateCursorForLimitReturnSingle_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 2 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">431</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71145&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71145&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylOYy---&quot;</span>, 
      <span class="hljs-string">&quot;hello1&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71147&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71147&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylOY2---&quot;</span>, 
      <span class="hljs-string">&quot;hello2&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00028080958873033524</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">6764</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorCreateCursorForLimitReturnSingle_container_collapse" onclick="$('#RestCursorCreateCursorForLimitReturnSingle_long').hide(); $('#RestCursorCreateCursorForLimitReturnSingle_short').show(); window.location.hash='RestCursorCreateCursorForLimitReturnSingle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorForLimitReturnSingle_short" onclick="$('#RestCursorCreateCursorForLimitReturnSingle_short').hide(); $('#RestCursorCreateCursorForLimitReturnSingle_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 2 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">431</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Execute a query and extract a part of the result


<div class="example-container" id="RestCursorCreateCursorForLimitReturn_container">
<div id="RestCursorCreateCursorForLimitReturn_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">443</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71125&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71125&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylOXi---&quot;</span>, 
      <span class="hljs-string">&quot;hello1&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    }, 
    { 
      <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;71127&quot;</span>, 
      <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;products/71127&quot;</span>, 
      <span class="hljs-string">&quot;_rev&quot;</span> : <span class="hljs-string">&quot;_d7ylOXm---&quot;</span>, 
      <span class="hljs-string">&quot;hello2&quot;</span> : <span class="hljs-string">&quot;world1&quot;</span> 
    } 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;71136&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00030518975108861923</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">7118</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorCreateCursorForLimitReturn_container_collapse" onclick="$('#RestCursorCreateCursorForLimitReturn_long').hide(); $('#RestCursorCreateCursorForLimitReturn_short').show(); window.location.hash='RestCursorCreateCursorForLimitReturn_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorForLimitReturn_short" onclick="$('#RestCursorCreateCursorForLimitReturn_short').hide(); $('#RestCursorCreateCursorForLimitReturn_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products LIMIT 5 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">443</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Using the query option "fullCount"


<div class="example-container" id="RestCursorCreateCursorOption_container">
<div id="RestCursorCreateCursorOption_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..1000 FILTER i &gt; 500 LIMIT 10 RETURN i&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">332</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-number">501</span>, 
    <span class="hljs-number">502</span>, 
    <span class="hljs-number">503</span>, 
    <span class="hljs-number">504</span>, 
    <span class="hljs-number">505</span>, 
    <span class="hljs-number">506</span>, 
    <span class="hljs-number">507</span>, 
    <span class="hljs-number">508</span>, 
    <span class="hljs-number">509</span>, 
    <span class="hljs-number">510</span> 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">500</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-number">500</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.0008290605619549751</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">39966</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorCreateCursorOption_container_collapse" onclick="$('#RestCursorCreateCursorOption_long').hide(); $('#RestCursorCreateCursorOption_short').show(); window.location.hash='RestCursorCreateCursorOption_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorOption_short" onclick="$('#RestCursorCreateCursorOption_short').hide(); $('#RestCursorCreateCursorOption_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..1000 FILTER i &gt; 500 LIMIT 10 RETURN i&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;fullCount&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">332</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Enabling and disabling optimizer rules


<div class="example-container" id="RestCursorOptimizerRules_container">
<div id="RestCursorOptimizerRules_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..10 LET a = 1 LET b = 2 FILTER a + b == 3 RETURN i&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;maxPlans&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;optimizer&quot;</span> : { 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;-all&quot;</span>, 
        <span class="hljs-string">&quot;+remove-unnecessary-filters&quot;</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">296</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-number">1</span>, 
    <span class="hljs-number">2</span>, 
    <span class="hljs-number">3</span>, 
    <span class="hljs-number">4</span>, 
    <span class="hljs-number">5</span>, 
    <span class="hljs-number">6</span>, 
    <span class="hljs-number">7</span>, 
    <span class="hljs-number">8</span>, 
    <span class="hljs-number">9</span>, 
    <span class="hljs-number">10</span> 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00031836051493883133</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">55264</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorOptimizerRules_container_collapse" onclick="$('#RestCursorOptimizerRules_long').hide(); $('#RestCursorOptimizerRules_short').show(); window.location.hash='RestCursorOptimizerRules_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorOptimizerRules_short" onclick="$('#RestCursorOptimizerRules_short').hide(); $('#RestCursorOptimizerRules_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR i IN 1..10 LET a = 1 LET b = 2 FILTER a + b == 3 RETURN i&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;maxPlans&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;optimizer&quot;</span> : { 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;-all&quot;</span>, 
        <span class="hljs-string">&quot;+remove-unnecessary-filters&quot;</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">296</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Execute instrumented query and return result together with
execution plan and profiling information


<div class="example-container" id="RestCursorProfileQuery_container">
<div id="RestCursorProfileQuery_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;profile&quot;</span> : <span class="hljs-number">2</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2486</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ 
    <span class="hljs-number">1</span> 
  ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.7569035328924656</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">6929</span>, 
      <span class="hljs-string">&quot;nodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;calls&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;items&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;runtime&quot;</span> : <span class="hljs-number">0.000007352791726589203</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;calls&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;items&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;runtime&quot;</span> : <span class="hljs-number">0.2522197999060154</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
          <span class="hljs-string">&quot;calls&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;items&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;runtime&quot;</span> : <span class="hljs-number">0.7565474603325129</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;calls&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;items&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;runtime&quot;</span> : <span class="hljs-number">0.000015780329704284668</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;calls&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;items&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;runtime&quot;</span> : <span class="hljs-number">0.7565577337518334</span> 
        } 
      ] 
    }, 
    <span class="hljs-string">&quot;plan&quot;</span> : { 
      <span class="hljs-string">&quot;nodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
            <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
            <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;json&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">4</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">3</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;function call&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">47</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SLEEP&quot;</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;array&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">41</span>, 
                <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                  { 
                    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                    <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">0.25</span>, 
                    <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;double&quot;</span>, 
                    <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">3</span> 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;s&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">2</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;expression&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;function call&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">47</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;SLEEP&quot;</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;array&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">41</span>, 
                <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                  { 
                    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                    <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                    <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">0.5</span>, 
                    <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;double&quot;</span>, 
                    <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">3</span> 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;t&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;simple&quot;</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">3</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;inVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
          }, 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;move-calculations-up&quot;</span> 
      ], 
      <span class="hljs-string">&quot;collections&quot;</span> : [ ], 
      <span class="hljs-string">&quot;variables&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">3</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;2&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;t&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;s&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        } 
      ], 
      <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
    <span class="hljs-string">&quot;profile&quot;</span> : { 
      <span class="hljs-string">&quot;initializing&quot;</span> : <span class="hljs-number">0.000002302229404449463</span>, 
      <span class="hljs-string">&quot;parsing&quot;</span> : <span class="hljs-number">0.00004660710692405701</span>, 
      <span class="hljs-string">&quot;optimizing ast&quot;</span> : <span class="hljs-number">0.000012292526662349701</span>, 
      <span class="hljs-string">&quot;loading collections&quot;</span> : <span class="hljs-number">0.000004763714969158173</span>, 
      <span class="hljs-string">&quot;instantiating plan&quot;</span> : <span class="hljs-number">0.000020133331418037415</span>, 
      <span class="hljs-string">&quot;optimizing plan&quot;</span> : <span class="hljs-number">0.00010622572153806686</span>, 
      <span class="hljs-string">&quot;executing&quot;</span> : <span class="hljs-number">0.7565735522657633</span>, 
      <span class="hljs-string">&quot;finalizing&quot;</span> : <span class="hljs-number">0.00012796558439731598</span> 
    } 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorProfileQuery_container_collapse" onclick="$('#RestCursorProfileQuery_long').hide(); $('#RestCursorProfileQuery_short').show(); window.location.hash='RestCursorProfileQuery_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorProfileQuery_short" onclick="$('#RestCursorProfileQuery_short').hide(); $('#RestCursorProfileQuery_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;LET s = SLEEP(0.25) LET t = SLEEP(0.5) RETURN 1&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;profile&quot;</span> : <span class="hljs-number">2</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">2486</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Execute a data-modification query and retrieve the number of
modified documents


<div class="example-container" id="RestCursorDeleteQuery_container">
<div id="RestCursorDeleteQuery_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products REMOVE p IN products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">265</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00042635761201381683</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">22560</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorDeleteQuery_container_collapse" onclick="$('#RestCursorDeleteQuery_long').hide(); $('#RestCursorDeleteQuery_short').show(); window.location.hash='RestCursorDeleteQuery_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDeleteQuery_short" onclick="$('#RestCursorDeleteQuery_short').hide(); $('#RestCursorDeleteQuery_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products REMOVE p IN products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">265</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Execute a data-modification query with option *ignoreErrors*


<div class="example-container" id="RestCursorDeleteIgnore_container">
<div id="RestCursorDeleteIgnore_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;REMOVE &#x27;bar&#x27; IN products OPTIONS { ignoreErrors: true }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">265</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;result&quot;</span> : [ ], 
  <span class="hljs-string">&quot;hasMore&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;cached&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;extra&quot;</span> : { 
    <span class="hljs-string">&quot;stats&quot;</span> : { 
      <span class="hljs-string">&quot;writesExecuted&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;writesIgnored&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;scannedFull&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;scannedIndex&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;filtered&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;httpRequests&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00023670494556427002</span>, 
      <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">22192</span> 
    }, 
    <span class="hljs-string">&quot;warnings&quot;</span> : [ ] 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorDeleteIgnore_container_collapse" onclick="$('#RestCursorDeleteIgnore_long').hide(); $('#RestCursorDeleteIgnore_short').show(); window.location.hash='RestCursorDeleteIgnore_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDeleteIgnore_short" onclick="$('#RestCursorDeleteIgnore_short').hide(); $('#RestCursorDeleteIgnore_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;REMOVE &#x27;bar&#x27; IN products OPTIONS { ignoreErrors: true }&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">265</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Bad query - Missing body


<div class="example-container" id="RestCursorCreateCursorMissingBody_container">
<div id="RestCursorCreateCursorMissingBody_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">73</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;query is empty&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1502</span> 
}
</pre>
<div id="RestCursorCreateCursorMissingBody_container_collapse" onclick="$('#RestCursorCreateCursorMissingBody_long').hide(); $('#RestCursorCreateCursorMissingBody_short').show(); window.location.hash='RestCursorCreateCursorMissingBody_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorMissingBody_short" onclick="$('#RestCursorCreateCursorMissingBody_short').hide(); $('#RestCursorCreateCursorMissingBody_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --dump - http://localhost:8529/_api/cursor</span>

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">73</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Bad query - Unknown collection


<div class="example-container" id="RestCursorCreateCursorUnknownCollection_container">
<div id="RestCursorCreateCursorUnknownCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR u IN unknowncoll LIMIT 2 RETURN u&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">121</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;AQL: collection or view not found: unknowncoll (while parsing)&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestCursorCreateCursorUnknownCollection_container_collapse" onclick="$('#RestCursorCreateCursorUnknownCollection_long').hide(); $('#RestCursorCreateCursorUnknownCollection_short').show(); window.location.hash='RestCursorCreateCursorUnknownCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorUnknownCollection_short" onclick="$('#RestCursorCreateCursorUnknownCollection_short').hide(); $('#RestCursorCreateCursorUnknownCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR u IN unknowncoll LIMIT 2 RETURN u&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;batchSize&quot;</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">121</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Bad query - Execute a data-modification query that attempts to remove a non-existing
document


<div class="example-container" id="RestCursorDeleteQueryFail_container">
<div id="RestCursorDeleteQueryFail_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;REMOVE &#x27;foo&#x27; IN products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">100</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;AQL: document not found (while executing)&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestCursorDeleteQueryFail_container_collapse" onclick="$('#RestCursorDeleteQueryFail_long').hide(); $('#RestCursorDeleteQueryFail_short').show(); window.location.hash='RestCursorDeleteQueryFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDeleteQueryFail_short" onclick="$('#RestCursorDeleteQueryFail_short').hide(); $('#RestCursorDeleteQueryFail_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/cursor</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;REMOVE &#x27;foo&#x27; IN products&quot;</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">100</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/import_document.md -->
@startDocuBlock import_document

@brief imports documents from JSON-encoded lists

@RESTHEADER{POST /_api/import#document,imports document values, RestImportHandler#document}

@RESTALLBODYPARAM{documents,string,required}
The body must consist of JSON-encoded arrays of attribute values, with one
line per document. The first row of the request must be a JSON-encoded
array of attribute names. These attribute names are used for the data in the
subsequent lines.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTQUERYPARAM{fromPrefix,string,optional}
An optional prefix for the values in `_from` attributes. If specified, the
value is automatically prepended to each `_from` input value. This allows
specifying just the keys for `_from`.

@RESTQUERYPARAM{toPrefix,string,optional}
An optional prefix for the values in `_to` attributes. If specified, the
value is automatically prepended to each `_to` input value. This allows
specifying just the keys for `_to`.

@RESTQUERYPARAM{overwrite,boolean,optional}
If this parameter has a value of `true` or `yes`, then all data in the
collection will be removed prior to the import. Note that any existing
index definitions will be preserved.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until documents have been synced to disk before returning.

@RESTQUERYPARAM{onDuplicate,string,optional}
Controls what action is carried out in case of a unique key constraint
violation. Possible values are:<br>
- *error*: this will not import the current document because of the unique
  key constraint violation. This is the default setting.
- *update*: this will update an existing document in the database with the
  data specified in the request. Attributes of the existing document that
  are not present in the request will be preserved.
- *replace*: this will replace an existing document in the database with the
  data specified in the request.
- *ignore*: this will not update an existing document and simply ignore the
  error caused by the unique key constraint violation.<br>
Note that *update*, *replace* and *ignore* will only work when the
import document in the request contains the *_key* attribute. *update* and
*replace* may also fail because of secondary unique key constraint
violations.

@RESTQUERYPARAM{complete,boolean,optional}
If set to `true` or `yes`, it will make the whole import fail if any error
occurs. Otherwise the import will continue even if some documents cannot
be imported.

@RESTQUERYPARAM{details,boolean,optional}
If set to `true` or `yes`, the result will include an attribute `details`
with details about documents that could not be imported.

@RESTDESCRIPTION
Creates documents in the collection identified by `collection-name`.
The first line of the request body must contain a JSON-encoded array of
attribute names. All following lines in the request body must contain
JSON-encoded arrays of attribute values. Each line is interpreted as a
separate document, and the values specified will be mapped to the array
of attribute names specified in the first header line.

The response is a JSON object with the following attributes:

- `created`: number of documents imported.

- `errors`: number of documents that were not imported due to an error.

- `empty`: number of empty lines found in the input (will only contain a
  value greater zero for types `documents` or `auto`).

- `updated`: number of updated/replaced documents (in case `onDuplicate`
  was set to either `update` or `replace`).

- `ignored`: number of failed but ignored insert operations (in case
  `onDuplicate` was set to `ignore`).

- `details`: if query parameter `details` is set to true, the result will
  contain a `details` attribute which is an array with more detailed
  information about which documents could not be inserted.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if all documents could be imported successfully.

@RESTRETURNCODE{400}
is returned if `type` contains an invalid value, no `collection` is
specified, the documents are incorrectly encoded, or the request
is malformed.

@RESTRETURNCODE{404}
is returned if `collection` or the `_from` or `_to` attributes of an
imported edge refer to an unknown collection.

@RESTRETURNCODE{409}
is returned if the import would trigger a unique key violation and
`complete` is set to `true`.

@RESTRETURNCODE{500}
is returned if the server cannot auto-generate a document key (out of keys
error) for a document with no user-defined key.

@EXAMPLES

Importing two documents, with attributes `_key`, `value1` and `value2` each. One
line in the import data is empty


<div class="example-container" id="RestImportCsvExample_container">
<div id="RestImportCsvExample_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products</span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]

[ "foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportCsvExample_container_collapse" onclick="$('#RestImportCsvExample_long').hide(); $('#RestImportCsvExample_short').show(); window.location.hash='RestImportCsvExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvExample_short" onclick="$('#RestImportCsvExample_short').hide(); $('#RestImportCsvExample_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products</span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]

[ "foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, with attributes `_from`, `_to` and `name`


<div class="example-container" id="RestImportCsvEdge_container">
<div id="RestImportCsvEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links</span> &lt;&lt;EOF
[ "_from", "_to", "name" ]
[ "products/123","products/234", "some name" ]
[ "products/332", "products/abc", "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportCsvEdge_container_collapse" onclick="$('#RestImportCsvEdge_long').hide(); $('#RestImportCsvEdge_short').show(); window.location.hash='RestImportCsvEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvEdge_short" onclick="$('#RestImportCsvEdge_short').hide(); $('#RestImportCsvEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links</span> &lt;&lt;EOF
[ "_from", "_to", "name" ]
[ "products/123","products/234", "some name" ]
[ "products/332", "products/abc", "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, omitting `_from` or `_to`


<div class="example-container" id="RestImportCsvEdgeInvalid_container">
<div id="RestImportCsvEdgeInvalid_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ "name" ]
[ "some name" ]
[ "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">281</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;details&quot;</span> : [ 
    <span class="hljs-string">&quot;at position 1: missing &#x27;_from&#x27; or &#x27;_to&#x27; attribute, offending document: {\&quot;name\&quot;:\&quot;some name\&quot;}&quot;</span>, 
    <span class="hljs-string">&quot;at position 2: missing &#x27;_from&#x27; or &#x27;_to&#x27; attribute, offending document: {\&quot;name\&quot;:\&quot;other name\&quot;}&quot;</span> 
  ] 
}
</pre>
<div id="RestImportCsvEdgeInvalid_container_collapse" onclick="$('#RestImportCsvEdgeInvalid_long').hide(); $('#RestImportCsvEdgeInvalid_short').show(); window.location.hash='RestImportCsvEdgeInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvEdgeInvalid_short" onclick="$('#RestImportCsvEdgeInvalid_short').hide(); $('#RestImportCsvEdgeInvalid_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ "name" ]
[ "some name" ]
[ "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">281</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, but allow partial imports


<div class="example-container" id="RestImportCsvUniqueContinue_container">
<div id="RestImportCsvUniqueContinue_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">244</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;details&quot;</span> : [ 
    <span class="hljs-string">&quot;at position 1: creating document failed with error &#x27;unique constraint violated&#x27;, offending document: {\&quot;_key\&quot;:\&quot;abc\&quot;,\&quot;value1\&quot;:\&quot;bar\&quot;,\&quot;value2\&quot;:\&quot;baz\&quot;}&quot;</span> 
  ] 
}
</pre>
<div id="RestImportCsvUniqueContinue_container_collapse" onclick="$('#RestImportCsvUniqueContinue_long').hide(); $('#RestImportCsvUniqueContinue_short').show(); window.location.hash='RestImportCsvUniqueContinue_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvUniqueContinue_short" onclick="$('#RestImportCsvUniqueContinue_short').hide(); $('#RestImportCsvUniqueContinue_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">244</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, not allowing partial imports


<div class="example-container" id="RestImportCsvUniqueFail_container">
<div id="RestImportCsvUniqueFail_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;complete=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">85</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">409</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;unique constraint violated&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1210</span> 
}
</pre>
<div id="RestImportCsvUniqueFail_container_collapse" onclick="$('#RestImportCsvUniqueFail_long').hide(); $('#RestImportCsvUniqueFail_short').show(); window.location.hash='RestImportCsvUniqueFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvUniqueFail_short" onclick="$('#RestImportCsvUniqueFail_short').hide(); $('#RestImportCsvUniqueFail_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;complete=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">85</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a non-existing collection


<div class="example-container" id="RestImportCsvInvalidCollection_container">
<div id="RestImportCsvInvalidCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products</span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found: products&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestImportCsvInvalidCollection_container_collapse" onclick="$('#RestImportCsvInvalidCollection_long').hide(); $('#RestImportCsvInvalidCollection_short').show(); window.location.hash='RestImportCsvInvalidCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvInvalidCollection_short" onclick="$('#RestImportCsvInvalidCollection_short').hide(); $('#RestImportCsvInvalidCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products</span> &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a malformed body


<div class="example-container" id="RestImportCsvInvalidBody_container">
<div id="RestImportCsvInvalidBody_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products</span> &lt;&lt;EOF
{ "_key": "foo", "value1": "bar" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">92</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;no JSON array found in second line&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestImportCsvInvalidBody_container_collapse" onclick="$('#RestImportCsvInvalidBody_long').hide(); $('#RestImportCsvInvalidBody_short').show(); window.location.hash='RestImportCsvInvalidBody_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvInvalidBody_short" onclick="$('#RestImportCsvInvalidBody_short').hide(); $('#RestImportCsvInvalidBody_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products</span> &lt;&lt;EOF
{ "_key": "foo", "value1": "bar" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">92</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/batch_processing.md -->
@startDocuBlock batch_processing

@brief executes a batch request

@RESTHEADER{POST /_api/batch,executes a batch request, RestBatchHandler} TODOSWAGGER: contentype

@RESTALLBODYPARAM{body,string,required}
The multipart batch request, consisting of the envelope and the individual
batch parts.

@RESTDESCRIPTION
Executes a batch request. A batch request can contain any number of
other requests that can be sent to ArangoDB in isolation. The benefit of
using batch requests is that batching requests requires less client/server
roundtrips than when sending isolated requests.

All parts of a batch request are executed serially on the server. The
server will return the results of all parts in a single response when all
parts are finished.

Technically, a batch request is a multipart HTTP request, with
content-type `multipart/form-data`. A batch request consists of an
envelope and the individual batch part actions. Batch part actions
are "regular" HTTP requests, including full header and an optional body.
Multiple batch parts are separated by a boundary identifier. The
boundary identifier is declared in the batch envelope. The MIME content-type
for each individual batch part must be `application/x-arango-batchpart`.

Please note that when constructing the individual batch parts, you must
use CRLF (`\r\n`) as the line terminator as in regular HTTP messages.

The response sent by the server will be an `HTTP 200` response, with an
optional error summary header `x-arango-errors`. This header contains the
number of batch part operations that failed with an HTTP error code of at
least 400. This header is only present in the response if the number of
errors is greater than zero.

The response sent by the server is a multipart response, too. It contains
the individual HTTP responses for all batch parts, including the full HTTP
result header (with status code and other potential headers) and an
optional result body. The individual batch parts in the result are
seperated using the same boundary value as specified in the request.

The order of batch parts in the response will be the same as in the
original client request. Client can additionally use the `Content-Id`
MIME header in a batch part to define an individual id for each batch part.
The server will return this id is the batch part responses, too.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the batch was received successfully. HTTP 200 is returned
even if one or multiple batch part actions failed.

@RESTRETURNCODE{400}
is returned if the batch envelope is malformed or incorrectly formatted.
This code will also be returned if the content-type of the overall batch
request or the individual MIME parts is not as expected.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@EXAMPLES

Sending a batch request with five batch parts:

- GET /_api/version

- DELETE /_api/collection/products

- POST /_api/collection/products

- GET /_api/collection/products/figures

- DELETE /_api/collection/products

The boundary (`SomeBoundaryValue`) is passed to the server in the HTTP
`Content-Type` HTTP header.
*Please note the reply is not displayed all accurate.*


<div class="example-container" id="RestBatchMultipartHeader_container">
<div id="RestBatchMultipartHeader_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;Content-Type: multipart/form-data; boundary=SomeBoundaryValue&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/batch</span> &lt;&lt;EOF
--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId1

GET /_api/version HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId2

DELETE /_api/collection/products HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: someId

POST /_api/collection/products HTTP/1.1

{"name": "products" }

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: nextId

GET /_api/collection/products/figures HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: otherId

DELETE /_api/collection/products HTTP/1.1
--SomeBoundaryValue--

EOF

HTTP/1.1 200 OK
content-type: multipart/form-data
connection: Keep-Alive
content-length: 2175
server: ArangoDB
x-arango-errors: 1
x-content-type-options: nosniff

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId1

HTTP/1.1 200 OK
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 61

{ 
  <span class="hljs-string">&quot;server&quot;</span> : <span class="hljs-string">&quot;arango&quot;</span>, 
  <span class="hljs-string">&quot;license&quot;</span> : <span class="hljs-string">&quot;enterprise&quot;</span>, 
  <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;3.7.18&quot;</span> 
}&#x21A9;

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId2

HTTP/1.1 404 Not Found
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 87

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}&#x21A9;

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: someId

HTTP/1.1 200 OK
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 380

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70743&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;70742&quot;</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70743&quot;</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span> 
}&#x21A9;

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: nextId

HTTP/1.1 200 OK
Server: 
Location: /_api/collection/products/figures
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 499

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;writeConcern&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;statusString&quot;</span> : <span class="hljs-string">&quot;loaded&quot;</span>, 
  <span class="hljs-string">&quot;status&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;schema&quot;</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">&quot;globallyUniqueId&quot;</span> : <span class="hljs-string">&quot;h435AD4D6D8D2/70743&quot;</span>, 
  <span class="hljs-string">&quot;tempObjectId&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>, 
  <span class="hljs-string">&quot;figures&quot;</span> : { 
    <span class="hljs-string">&quot;indexes&quot;</span> : { 
      <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">&quot;documentsSize&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;cacheInUse&quot;</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">&quot;cacheSize&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;cacheUsage&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70743&quot;</span>, 
  <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isSmartChild&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;objectId&quot;</span> : <span class="hljs-string">&quot;70742&quot;</span>, 
  <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;keyOptions&quot;</span> : { 
    <span class="hljs-string">&quot;allowUserKeys&quot;</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;traditional&quot;</span>, 
    <span class="hljs-string">&quot;lastValue&quot;</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">&quot;isSystem&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;isDisjoint&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span> 
}&#x21A9;

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: otherId

HTTP/1.1 200 OK
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 39

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;70743&quot;</span> 
}&#x21A9;

--SomeBoundaryValue--
</pre>
<div id="RestBatchMultipartHeader_container_collapse" onclick="$('#RestBatchMultipartHeader_long').hide(); $('#RestBatchMultipartHeader_short').show(); window.location.hash='RestBatchMultipartHeader_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBatchMultipartHeader_short" onclick="$('#RestBatchMultipartHeader_short').hide(); $('#RestBatchMultipartHeader_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;Content-Type: multipart/form-data; boundary=SomeBoundaryValue&#x27;</span> --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/batch</span> &lt;&lt;EOF
--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId1

GET /_api/version HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId2

DELETE /_api/collection/products HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: someId

POST /_api/collection/products HTTP/1.1

{"name": "products" }

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: nextId

GET /_api/collection/products/figures HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: otherId

DELETE /_api/collection/products HTTP/1.1
--SomeBoundaryValue--

EOF

HTTP/1.1 200 OK
content-type: multipart/form-data
connection: Keep-Alive
content-length: 2175
server: ArangoDB
x-arango-errors: 1
x-content-type-options: nosniff

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId1

HTTP/1.1 200 OK
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 61

</pre><div class="example_show_button">Show response body</div>
</div>
</div>









Sending a batch request, setting the boundary implicitly (the server will
in this case try to find the boundary at the beginning of the request body).


<div class="example-container" id="RestBatchImplicitBoundary_container">
<div id="RestBatchImplicitBoundary_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/batch</span> &lt;&lt;EOF
--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

DELETE /_api/collection/notexisting1 HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

DELETE _api/collection/notexisting2 HTTP/1.1
--SomeBoundaryValue--

EOF

HTTP/1.1 200 OK
content-type: unset
connection: Keep-Alive
content-length: 598
server: ArangoDB
x-arango-errors: 2
x-content-type-options: nosniff

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

HTTP/1.1 404 Not Found
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 87

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}&#x21A9;

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

HTTP/1.1 404 Not Found
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 101

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;unknown path &#x27;_api/collection/notexisting2&#x27;&quot;</span> 
}&#x21A9;

--SomeBoundaryValue--
</pre>
<div id="RestBatchImplicitBoundary_container_collapse" onclick="$('#RestBatchImplicitBoundary_long').hide(); $('#RestBatchImplicitBoundary_short').show(); window.location.hash='RestBatchImplicitBoundary_container';" class="example_show_button">Hide response body</div></div>
<div id="RestBatchImplicitBoundary_short" onclick="$('#RestBatchImplicitBoundary_short').hide(); $('#RestBatchImplicitBoundary_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/batch</span> &lt;&lt;EOF
--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

DELETE /_api/collection/notexisting1 HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

DELETE _api/collection/notexisting2 HTTP/1.1
--SomeBoundaryValue--

EOF

HTTP/1.1 200 OK
content-type: unset
connection: Keep-Alive
content-length: 598
server: ArangoDB
x-arango-errors: 2
x-content-type-options: nosniff

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

HTTP/1.1 404 Not Found
Server: 
Connection: Close 
Content-Type: application/json; charset=utf-8
Content-Length: 87

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/post_api_export.md -->
@startDocuBlock post_api_export

@brief export all documents from a collection, using a cursor

@RESTHEADER{POST /_api/export, Create export cursor, createCursorExport}

@RESTBODYPARAM{flush,boolean,required,}
if set to *true*, a WAL flush operation will be executed prior to the
export. The flush operation will start copying documents from the WAL to the
collection's datafiles. There will be an additional wait time of up
to *flushWait* seconds after the flush to allow the WAL collector to change
the adjusted document meta-data to point into the datafiles, too.
The default value is *false* (i.e. no flush) so most recently inserted or
updated
documents from the collection might be missing in the export.

@RESTBODYPARAM{flushWait,integer,required,int64}
maximum wait time in seconds after a flush operation. The default
value is 10. This option only has an effect when *flush* is set to *true*.

@RESTBODYPARAM{count,boolean,required,}
boolean flag that indicates whether the number of documents
in the result set should be returned in the "count" attribute of the result
(optional).
Calculating the "count" attribute might in the future have a performance
impact so this option is turned off by default, and "count" is only returned
when requested.

@RESTBODYPARAM{batchSize,integer,required,int64}
maximum number of result documents to be transferred from
the server to the client in one roundtrip (optional). If this attribute is
not set, a server-controlled default value will be used.

@RESTBODYPARAM{limit,integer,required,int64}
an optional limit value, determining the maximum number of documents to
be included in the cursor. Omitting the *limit* attribute or setting it to 0 will
lead to no limit being used. If a limit is used, it is undefined which documents
from the collection will be included in the export and which will be excluded.
This is because there is no natural order of documents in a collection.

@RESTBODYPARAM{ttl,integer,required,int64}
an optional time-to-live for the cursor (in seconds). The cursor will be
removed on the server automatically after the specified amount of time. This
is useful to ensure garbage collection of cursors that are not fully fetched
by clients. If not set, a server-defined value will be used.

@RESTBODYPARAM{restrict,object,optional,post_api_export_restrictions}
an object containing an array of attribute names that will be
included or excluded when returning result documents. Not specifying
*restrict* will by default return all attributes of each document.

@RESTSTRUCT{type,post_api_export_restrictions,string,required,string}
has to be be set to either *include* or *exclude* depending on which you want to use

@RESTSTRUCT{fields,post_api_export_restrictions,array,required,string}
Contains an array of attribute names to *include* or *exclude*. Matching of attribute names
for *inclusion* or *exclusion* will be done on the top level only.
Specifying names of nested attributes is not supported at the moment.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The name of the collection to export.

@RESTDESCRIPTION
A call to this method creates a cursor containing all documents in the
specified collection. In contrast to other data-producing APIs, the internal
data structures produced by the export API are more lightweight, so it is
the preferred way to retrieve all documents from a collection.

Documents are returned in a similar manner as in the `/_api/cursor` REST API.
If all documents of the collection fit into the first batch, then no cursor
will be created, and the result object's *hasMore* attribute will be set to
*false*. If not all documents fit into the first batch, then the result
object's *hasMore* attribute will be set to *true*, and the *id* attribute
of the result will contain a cursor id.

The order in which the documents are returned is not specified.

By default, only those documents from the collection will be returned that are
stored in the collection's datafiles. Documents that are present in the write-ahead
log (WAL) at the time the export is run will not be exported.

To export these documents as well, the caller can issue a WAL flush request
before calling the export API or set the *flush* attribute. Setting the *flush*
option will trigger a WAL flush before the export so documents get copied from
the WAL to the collection datafiles.

If the result set can be created by the server, the server will respond with
*HTTP 201*. The body of the response will contain a JSON object with the
result set.

The returned JSON object has the following properties:

- *error*: boolean flag to indicate that an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: an array of result documents (might be empty if the collection was empty)

- *hasMore*: a boolean indicator whether there are more results
  available for the cursor on the server

- *count*: the total number of result documents available (only
  available if the query was executed with the *count* attribute set)

- *id*: id of temporary cursor created on the server (optional, see above)

If the JSON representation is malformed or the query specification is
missing from the request, the server will respond with *HTTP 400*.

The body of the response will contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

Clients should always delete an export cursor result as early as possible because a
lingering export cursor will prevent the underlying collection from being
compacted or unloaded. By default, unused cursors will be deleted automatically
after a server-defined idle time, and clients can adjust this idle time by setting
the *ttl* value.

Note: this API is currently not supported on cluster Coordinators.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the result set can be created by the server.

@RESTRETURNCODE{400}
is returned if the JSON representation is malformed or the query specification is
missing from the request.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* in case a non-existing collection is
accessed in the query.

@RESTRETURNCODE{405}
The server will respond with *HTTP 405* if an unsupported HTTP method is used.

@RESTRETURNCODE{501}
The server will respond with *HTTP 501* if this API is called on a cluster
Coordinator.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/import_json.md -->
@startDocuBlock import_json

@brief imports documents from JSON

@RESTHEADER{POST /_api/import#json,imports documents from JSON, RestImportHandler}

@RESTALLBODYPARAM{documents,string,required}
The body must either be a JSON-encoded array of objects or a string with
multiple JSON objects separated by newlines.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{type,string,required}
Determines how the body of the request will be interpreted. `type` can have
the following values:
- `documents`: when this type is used, each line in the request body is
  expected to be an individual JSON-encoded document. Multiple JSON objects
  in the request body need to be separated by newlines.
- `list`: when this type is used, the request body must contain a single
  JSON-encoded array of individual objects to import.
- `auto`: if set, this will automatically determine the body type (either
  `documents` or `list`).

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTQUERYPARAM{fromPrefix,string,optional}
An optional prefix for the values in `_from` attributes. If specified, the
value is automatically prepended to each `_from` input value. This allows
specifying just the keys for `_from`.

@RESTQUERYPARAM{toPrefix,string,optional}
An optional prefix for the values in `_to` attributes. If specified, the
value is automatically prepended to each `_to` input value. This allows
specifying just the keys for `_to`.

@RESTQUERYPARAM{overwrite,boolean,optional}
If this parameter has a value of `true` or `yes`, then all data in the
collection will be removed prior to the import. Note that any existing
index definitions will be preserved.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until documents have been synced to disk before returning.

@RESTQUERYPARAM{onDuplicate,string,optional}
Controls what action is carried out in case of a unique key constraint
violation. Possible values are:<br>
- *error*: this will not import the current document because of the unique
  key constraint violation. This is the default setting.
- *update*: this will update an existing document in the database with the
  data specified in the request. Attributes of the existing document that
  are not present in the request will be preserved.
- *replace*: this will replace an existing document in the database with the
  data specified in the request.
- *ignore*: this will not update an existing document and simply ignore the
  error caused by a unique key constraint violation.<br>
Note that that *update*, *replace* and *ignore* will only work when the
import document in the request contains the *_key* attribute. *update* and
*replace* may also fail because of secondary unique key constraint violations.

@RESTQUERYPARAM{complete,boolean,optional}
If set to `true` or `yes`, it will make the whole import fail if any error
occurs. Otherwise the import will continue even if some documents cannot
be imported.

@RESTQUERYPARAM{details,boolean,optional}
If set to `true` or `yes`, the result will include an attribute `details`
with details about documents that could not be imported.

@RESTDESCRIPTION
Creates documents in the collection identified by `collection-name`.
The JSON representations of the documents must be passed as the body of the
POST request. The request body can either consist of multiple lines, with
each line being a single stand-alone JSON object, or a singe JSON array with
sub-objects.

The response is a JSON object with the following attributes:

- `created`: number of documents imported.

- `errors`: number of documents that were not imported due to an error.

- `empty`: number of empty lines found in the input (will only contain a
  value greater zero for types `documents` or `auto`).

- `updated`: number of updated/replaced documents (in case `onDuplicate`
  was set to either `update` or `replace`).

- `ignored`: number of failed but ignored insert operations (in case
  `onDuplicate` was set to `ignore`).

- `details`: if query parameter `details` is set to true, the result will
  contain a `details` attribute which is an array with more detailed
  information about which documents could not be inserted.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if all documents could be imported successfully.

@RESTRETURNCODE{400}
is returned if `type` contains an invalid value, no `collection` is
specified, the documents are incorrectly encoded, or the request
is malformed.

@RESTRETURNCODE{404}
is returned if `collection` or the `_from` or `_to` attributes of an
imported edge refer to an unknown collection.

@RESTRETURNCODE{409}
is returned if the import would trigger a unique key violation and
`complete` is set to `true`.

@RESTRETURNCODE{500}
is returned if the server cannot auto-generate a document key (out of keys
error) for a document with no user-defined key.

@EXAMPLES

Importing documents with heterogenous attributes from a JSON array


<div class="example-container" id="RestImportJsonList_container">
<div id="RestImportJsonList_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=list</span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;abc&quot;</span>, 
    <span class="hljs-string">&quot;value1&quot;</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">&quot;value2&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
    <span class="hljs-string">&quot;allowed&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;baz&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : { 
      <span class="hljs-string">&quot;detailed&quot;</span> : <span class="hljs-string">&quot;detailed name&quot;</span>, 
      <span class="hljs-string">&quot;short&quot;</span> : <span class="hljs-string">&quot;short name&quot;</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonList_container_collapse" onclick="$('#RestImportJsonList_long').hide(); $('#RestImportJsonList_short').show(); window.location.hash='RestImportJsonList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonList_short" onclick="$('#RestImportJsonList_short').hide(); $('#RestImportJsonList_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=list</span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;abc&quot;</span>, 
    <span class="hljs-string">&quot;value1&quot;</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">&quot;value2&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
    <span class="hljs-string">&quot;allowed&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;baz&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : { 
      <span class="hljs-string">&quot;detailed&quot;</span> : <span class="hljs-string">&quot;detailed name&quot;</span>, 
      <span class="hljs-string">&quot;short&quot;</span> : <span class="hljs-string">&quot;short name&quot;</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing documents from individual JSON lines


<div class="example-container" id="RestImportJsonLines_container">
<div id="RestImportJsonLines_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents</span> &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test","allowed": true }
{ "_key": "foo", "name": "baz" }

{ "name": { "detailed": "detailed name", "short": "short name" } }

EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonLines_container_collapse" onclick="$('#RestImportJsonLines_long').hide(); $('#RestImportJsonLines_short').show(); window.location.hash='RestImportJsonLines_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonLines_short" onclick="$('#RestImportJsonLines_short').hide(); $('#RestImportJsonLines_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents</span> &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test","allowed": true }
{ "_key": "foo", "name": "baz" }

{ "name": { "detailed": "detailed name", "short": "short name" } }

EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using the auto type detection


<div class="example-container" id="RestImportJsonType_container">
<div id="RestImportJsonType_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=auto</span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;abc&quot;</span>, 
    <span class="hljs-string">&quot;value1&quot;</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">&quot;value2&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
    <span class="hljs-string">&quot;allowed&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;baz&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : { 
      <span class="hljs-string">&quot;detailed&quot;</span> : <span class="hljs-string">&quot;detailed name&quot;</span>, 
      <span class="hljs-string">&quot;short&quot;</span> : <span class="hljs-string">&quot;short name&quot;</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonType_container_collapse" onclick="$('#RestImportJsonType_long').hide(); $('#RestImportJsonType_short').show(); window.location.hash='RestImportJsonType_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonType_short" onclick="$('#RestImportJsonType_short').hide(); $('#RestImportJsonType_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=auto</span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;abc&quot;</span>, 
    <span class="hljs-string">&quot;value1&quot;</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">&quot;value2&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
    <span class="hljs-string">&quot;allowed&quot;</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">&quot;_key&quot;</span> : <span class="hljs-string">&quot;foo&quot;</span>, 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;baz&quot;</span> 
  }, 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : { 
      <span class="hljs-string">&quot;detailed&quot;</span> : <span class="hljs-string">&quot;detailed name&quot;</span>, 
      <span class="hljs-string">&quot;short&quot;</span> : <span class="hljs-string">&quot;short name&quot;</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, with attributes `_from`, `_to` and `name`


<div class="example-container" id="RestImportJsonEdge_container">
<div id="RestImportJsonEdge_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&amp;<span class="hljs-built_in">type</span>=documents</span> &lt;&lt;EOF
{ "_from": "products/123", "_to": "products/234" }
{"_from": "products/332", "_to": "products/abc",   "name": "other name" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonEdge_container_collapse" onclick="$('#RestImportJsonEdge_long').hide(); $('#RestImportJsonEdge_short').show(); window.location.hash='RestImportJsonEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonEdge_short" onclick="$('#RestImportJsonEdge_short').hide(); $('#RestImportJsonEdge_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&amp;<span class="hljs-built_in">type</span>=documents</span> &lt;&lt;EOF
{ "_from": "products/123", "_to": "products/234" }
{"_from": "products/332", "_to": "products/abc",   "name": "other name" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">72</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, omitting `_from` or `_to`


<div class="example-container" id="RestImportJsonEdgeInvalid_container">
<div id="RestImportJsonEdgeInvalid_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&amp;<span class="hljs-built_in">type</span>=list&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;some name&quot;</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">182</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;details&quot;</span> : [ 
    <span class="hljs-string">&quot;at position 1: missing &#x27;_from&#x27; or &#x27;_to&#x27; attribute, offending document: {\&quot;name\&quot;:\&quot;some name\&quot;}&quot;</span> 
  ] 
}
</pre>
<div id="RestImportJsonEdgeInvalid_container_collapse" onclick="$('#RestImportJsonEdgeInvalid_long').hide(); $('#RestImportJsonEdgeInvalid_short').show(); window.location.hash='RestImportJsonEdgeInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonEdgeInvalid_short" onclick="$('#RestImportJsonEdgeInvalid_short').hide(); $('#RestImportJsonEdgeInvalid_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&amp;<span class="hljs-built_in">type</span>=list&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;some name&quot;</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">182</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, but allow partial imports


<div class="example-container" id="RestImportJsonUniqueContinue_container">
<div id="RestImportJsonUniqueContinue_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">244</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;created&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;errors&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;empty&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;updated&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;ignored&quot;</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">&quot;details&quot;</span> : [ 
    <span class="hljs-string">&quot;at position 1: creating document failed with error &#x27;unique constraint violated&#x27;, offending document: {\&quot;_key\&quot;:\&quot;abc\&quot;,\&quot;value1\&quot;:\&quot;bar\&quot;,\&quot;value2\&quot;:\&quot;baz\&quot;}&quot;</span> 
  ] 
}
</pre>
<div id="RestImportJsonUniqueContinue_container_collapse" onclick="$('#RestImportJsonUniqueContinue_long').hide(); $('#RestImportJsonUniqueContinue_short').show(); window.location.hash='RestImportJsonUniqueContinue_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonUniqueContinue_short" onclick="$('#RestImportJsonUniqueContinue_short').hide(); $('#RestImportJsonUniqueContinue_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents&amp;details=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">244</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, not allowing partial imports


<div class="example-container" id="RestImportJsonUniqueFail_container">
<div id="RestImportJsonUniqueFail_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents&amp;complete=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">85</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">409</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;unique constraint violated&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1210</span> 
}
</pre>
<div id="RestImportJsonUniqueFail_container_collapse" onclick="$('#RestImportJsonUniqueFail_long').hide(); $('#RestImportJsonUniqueFail_short').show(); window.location.hash='RestImportJsonUniqueFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonUniqueFail_short" onclick="$('#RestImportJsonUniqueFail_short').hide(); $('#RestImportJsonUniqueFail_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents&amp;complete=<span class="hljs-literal">true</span></span> &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">85</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a non-existing collection


<div class="example-container" id="RestImportJsonInvalidCollection_container">
<div id="RestImportJsonInvalidCollection_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents</span> &lt;&lt;EOF
{ "name": "test" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;collection or view not found: products&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestImportJsonInvalidCollection_container_collapse" onclick="$('#RestImportJsonInvalidCollection_long').hide(); $('#RestImportJsonInvalidCollection_short').show(); window.location.hash='RestImportJsonInvalidCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonInvalidCollection_short" onclick="$('#RestImportJsonInvalidCollection_short').hide(); $('#RestImportJsonInvalidCollection_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=documents</span> &lt;&lt;EOF
{ "name": "test" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">97</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a malformed body


<div class="example-container" id="RestImportJsonInvalidBody_container">
<div id="RestImportJsonInvalidBody_long" style="display: none;">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=list</span> &lt;&lt;EOF
{ }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">95</span>
server: ArangoDB
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;errorMessage&quot;</span> : <span class="hljs-string">&quot;expecting a JSON array in the request&quot;</span>, 
  <span class="hljs-string">&quot;errorNum&quot;</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestImportJsonInvalidBody_container_collapse" onclick="$('#RestImportJsonInvalidBody_long').hide(); $('#RestImportJsonInvalidBody_short').show(); window.location.hash='RestImportJsonInvalidBody_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonInvalidBody_short" onclick="$('#RestImportJsonInvalidBody_short').hide(); $('#RestImportJsonInvalidBody_long').show();">
<pre>
<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&amp;<span class="hljs-built_in">type</span>=list</span> &lt;&lt;EOF
{ }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json
connection: Keep-Alive
content-length: <span class="hljs-number">95</span>
server: ArangoDB
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock

