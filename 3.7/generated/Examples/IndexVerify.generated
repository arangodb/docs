arangosh&gt; <span class="hljs-keyword">var</span> explain = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/aql/explainer&quot;</span>).explain;
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;skiplist&quot;</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> ] });
{ 
  <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;fields&quot;</span> : [ 
    <span class="hljs-string">&quot;a&quot;</span>, 
    <span class="hljs-string">&quot;b&quot;</span> 
  ], 
  <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;example/70628&quot;</span>, 
  <span class="hljs-string">&quot;isNewlyCreated&quot;</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1731177766791938048&quot;</span>, 
  <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;skiplist&quot;</span>, 
  <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; explain(<span class="hljs-string">&quot;FOR doc IN example FILTER doc.a &lt; 23 RETURN doc&quot;</span>, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
Query <span class="hljs-built_in">String</span> (<span class="hljs-number">47</span> chars, <span class="hljs-attr">cacheable</span>: <span class="hljs-literal">true</span>):
 FOR doc IN example FILTER doc.a &lt; <span class="hljs-number">23</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">6</span>   IndexNode          <span class="hljs-number">0</span>     - FOR doc IN example   <span class="hljs-comment">/* skiplist index scan */</span>    
  <span class="hljs-number">5</span>   ReturnNode         <span class="hljs-number">0</span>       - RETURN doc

Indexes used:
 By   Name                      Type       Collection   Unique   Sparse   Selectivity   Fields         Ranges
  <span class="hljs-number">6</span>   idx_1731177766791938048   skiplist   example      <span class="hljs-literal">false</span>    <span class="hljs-literal">false</span>       <span class="hljs-number">100.00</span> %   [ <span class="hljs-string">`a`</span>, <span class="hljs-string">`b`</span> ]   (doc.<span class="hljs-string">`a`</span> &lt; <span class="hljs-number">23</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   use-indexes
  <span class="hljs-number">2</span>   remove-filter-covered-by-index
  <span class="hljs-number">3</span>   remove-unnecessary-calculations-<span class="hljs-number">2</span>


