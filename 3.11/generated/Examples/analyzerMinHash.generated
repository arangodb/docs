arangosh&gt; <span class="hljs-keyword">var</span> analyzers = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@arangodb/analyzers&quot;</span>);
arangosh&gt; <span class="hljs-keyword">var</span> analyzerMinHash = analyzers.save(<span class="hljs-string">&quot;minhash5&quot;</span>, <span class="hljs-string">&quot;minhash&quot;</span>, { <span class="hljs-attr">analyzer</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;segmentation&quot;</span>, <span class="hljs-attr">properties</span>: { <span class="hljs-attr">break</span>: <span class="hljs-string">&quot;alpha&quot;</span>, <span class="hljs-attr">case</span>: <span class="hljs-string">&quot;lower&quot;</span> } }, <span class="hljs-attr">numHashes</span>: <span class="hljs-number">5</span> }, []);
arangosh&gt; <span class="hljs-keyword">var</span> analyzerSegment = analyzers.save(<span class="hljs-string">&quot;segment&quot;</span>, <span class="hljs-string">&quot;segmentation&quot;</span>, { <span class="hljs-attr">break</span>: <span class="hljs-string">&quot;alpha&quot;</span>, <span class="hljs-attr">case</span>: <span class="hljs-string">&quot;lower&quot;</span> }, []);
arangosh&gt; db._query(<span class="hljs-string">`
........&gt;   LET str1 = &quot;The quick brown fox jumps over the lazy dog.&quot;
........&gt;   LET str2 = &quot;The fox jumps over the crazy dog.&quot;
........&gt;   RETURN {
........&gt;     approx: JACCARD(TOKENS(str1, &quot;minhash5&quot;), TOKENS(str2, &quot;minhash5&quot;)),
........&gt;     actual: JACCARD(TOKENS(str1, &quot;segment&quot;), TOKENS(str2, &quot;segment&quot;))
........&gt; }`</span>).toArray();
[ 
  { 
    <span class="hljs-string">&quot;approx&quot;</span> : <span class="hljs-number">0.42857142857142855</span>, 
    <span class="hljs-string">&quot;actual&quot;</span> : <span class="hljs-number">0.5555555555555556</span> 
  } 
]
