arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/smart-graph"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> relation = graph_module._relation(<span class="hljs-string">"edges"</span>, <span class="hljs-string">"vertices"</span>, <span class="hljs-string">"vertices"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [relation], [], {<span class="hljs-attr">smartGraphAttribute</span>: <span class="hljs-string">"region"</span>, <span class="hljs-attr">numberOfShards</span>: <span class="hljs-number">9</span>});
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">"edges"</span>);
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">"vertices"</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">"myGraph"</span>, <span class="hljs-literal">true</span>); <span class="hljs-comment">// does not drop any collections</span>
arangosh&gt; db._drop(<span class="hljs-string">"edges"</span>); <span class="hljs-comment">// drop before sharding-defining 'vertices' collection</span>
arangosh&gt; db._drop(<span class="hljs-string">"vertices"</span>);
