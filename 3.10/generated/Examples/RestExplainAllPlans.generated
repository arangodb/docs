<span class="hljs-meta">shell&gt;</span><span class="bash"> curl -X POST --header <span class="hljs-string">&#x27;accept: application/json&#x27;</span> --data-binary @- --dump - http://localhost:8529/_api/explain</span> &lt;&lt;EOF
{ 
  <span class="hljs-string">&quot;query&quot;</span> : <span class="hljs-string">&quot;FOR p IN products FILTER p.id == 25 RETURN p&quot;</span>, 
  <span class="hljs-string">&quot;options&quot;</span> : { 
    <span class="hljs-string">&quot;allPlans&quot;</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json
cache-control: no-cache, no-store, must-revalidate, pre-check=<span class="hljs-number">0</span>, post-check=<span class="hljs-number">0</span>, max-age=<span class="hljs-number">0</span>, s-maxage=<span class="hljs-number">0</span>
connection: Keep-Alive
content-length: <span class="hljs-number">2057</span>
content-security-policy: frame-ancestors <span class="hljs-string">&#x27;self&#x27;</span>; form-action <span class="hljs-string">&#x27;self&#x27;</span>;
expires: <span class="hljs-number">0</span>
pragma: no-cache
server: ArangoDB
strict-transport-security: max-age=<span class="hljs-number">31536000</span> ; includeSubDomains
x-arango-queue-time-seconds: <span class="hljs-number">0.000000</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">&quot;plans&quot;</span> : [ 
    { 
      <span class="hljs-string">&quot;nodes&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;outVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
          }, 
          <span class="hljs-string">&quot;projections&quot;</span> : [ ], 
          <span class="hljs-string">&quot;filterProjections&quot;</span> : [ ], 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;readOwnWrites&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;useCache&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;maxProjections&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
          <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
          <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
          <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;indexes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;69680&quot;</span>, 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1761065989575802880&quot;</span>, 
              <span class="hljs-string">&quot;fields&quot;</span> : [ 
                <span class="hljs-string">&quot;id&quot;</span> 
              ], 
              <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;estimates&quot;</span> : <span class="hljs-literal">true</span>, 
              <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span> 
            } 
          ], 
          <span class="hljs-string">&quot;condition&quot;</span> : { 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
            <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
              { 
                <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
                <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
                <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                  { 
                    <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare ==&quot;</span>, 
                    <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">25</span>, 
                    <span class="hljs-string">&quot;excludesNull&quot;</span> : <span class="hljs-literal">false</span>, 
                    <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                      { 
                        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                        <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;id&quot;</span>, 
                        <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                          { 
                            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                            <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
                            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                          } 
                        ] 
                      }, 
                      { 
                        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                        <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                        <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">25</span>, 
                        <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                        <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                      } 
                    ] 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">&quot;allCoveredByOneIndex&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;lookahead&quot;</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
          <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
            <span class="hljs-number">6</span> 
          ], 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;inVariable&quot;</span> : { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
            <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
          }, 
          <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;rules&quot;</span> : [ 
        <span class="hljs-string">&quot;use-indexes&quot;</span>, 
        <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
        <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span> 
      ], 
      <span class="hljs-string">&quot;collections&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;products&quot;</span>, 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
        } 
      ], 
      <span class="hljs-string">&quot;variables&quot;</span> : [ 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;p&quot;</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
    } 
  ], 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">43</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">&quot;peakMemoryUsage&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;executionTime&quot;</span> : <span class="hljs-number">0.00018750783056020737</span> 
  }, 
  <span class="hljs-string">&quot;error&quot;</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">200</span> 
}
