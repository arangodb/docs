arangosh&gt; stmt = db._createStatement(<span class="hljs-string">&quot;FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value&quot;</span>);
[object ArangoStatement]
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">&quot;plan&quot;</span> : { 
    <span class="hljs-string">&quot;nodes&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;SingletonNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;IndexNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">12.643856189774723</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
          <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;projections&quot;</span> : [ 
          <span class="hljs-string">&quot;value&quot;</span> 
        ], 
        <span class="hljs-string">&quot;filterProjections&quot;</span> : [ ], 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;producesResult&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;readOwnWrites&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;useCache&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;maxProjections&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;database&quot;</span> : <span class="hljs-string">&quot;_system&quot;</span>, 
        <span class="hljs-string">&quot;collection&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;satellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatellite&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isSatelliteOf&quot;</span> : <span class="hljs-literal">null</span>, 
        <span class="hljs-string">&quot;needsGatherNodeSort&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexCoversProjections&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;indexes&quot;</span> : [ 
          { 
            <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-string">&quot;60626&quot;</span>, 
            <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;persistent&quot;</span>, 
            <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;idx_1745412980050231296&quot;</span>, 
            <span class="hljs-string">&quot;fields&quot;</span> : [ 
              <span class="hljs-string">&quot;value&quot;</span> 
            ], 
            <span class="hljs-string">&quot;selectivityEstimate&quot;</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">&quot;unique&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;sparse&quot;</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">&quot;deduplicate&quot;</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">&quot;estimates&quot;</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">&quot;cacheEnabled&quot;</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">&quot;condition&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary or&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;n-ary and&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">62</span>, 
              <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                { 
                  <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;compare &gt;&quot;</span>, 
                  <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">29</span>, 
                  <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
                      <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
                        { 
                          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
                          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
                          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
                          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
                      <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">40</span>, 
                      <span class="hljs-string">&quot;value&quot;</span> : <span class="hljs-number">97</span>, 
                      <span class="hljs-string">&quot;vType&quot;</span> : <span class="hljs-string">&quot;int&quot;</span>, 
                      <span class="hljs-string">&quot;vTypeID&quot;</span> : <span class="hljs-number">2</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;allCoveredByOneIndex&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;sorted&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;ascending&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;reverse&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;evalFCalls&quot;</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">&quot;waitForSync&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;limit&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;lookahead&quot;</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;CalculationNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">112.64385618977472</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;expression&quot;</span> : { 
          <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;attribute access&quot;</span>, 
          <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">35</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;value&quot;</span>, 
          <span class="hljs-string">&quot;subNodes&quot;</span> : [ 
            { 
              <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;reference&quot;</span>, 
              <span class="hljs-string">&quot;typeID&quot;</span> : <span class="hljs-number">45</span>, 
              <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
              <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">&quot;outVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;canThrow&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;expressionType&quot;</span> : <span class="hljs-string">&quot;attribute&quot;</span> 
      }, 
      { 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;ReturnNode&quot;</span>, 
        <span class="hljs-string">&quot;dependencies&quot;</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
        <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">&quot;inVariable&quot;</span> : { 
          <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
          <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
        }, 
        <span class="hljs-string">&quot;count&quot;</span> : <span class="hljs-literal">true</span> 
      } 
    ], 
    <span class="hljs-string">&quot;rules&quot;</span> : [ 
      <span class="hljs-string">&quot;move-calculations-up&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up&quot;</span>, 
      <span class="hljs-string">&quot;remove-redundant-calculations&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations&quot;</span>, 
      <span class="hljs-string">&quot;move-calculations-up-2&quot;</span>, 
      <span class="hljs-string">&quot;move-filters-up-2&quot;</span>, 
      <span class="hljs-string">&quot;use-indexes&quot;</span>, 
      <span class="hljs-string">&quot;remove-filter-covered-by-index&quot;</span>, 
      <span class="hljs-string">&quot;use-index-for-sort&quot;</span>, 
      <span class="hljs-string">&quot;remove-unnecessary-calculations-2&quot;</span>, 
      <span class="hljs-string">&quot;reduce-extraction-to-projection&quot;</span> 
    ], 
    <span class="hljs-string">&quot;collections&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test&quot;</span>, 
        <span class="hljs-string">&quot;type&quot;</span> : <span class="hljs-string">&quot;read&quot;</span> 
      } 
    ], 
    <span class="hljs-string">&quot;variables&quot;</span> : [ 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;5&quot;</span>, 
        <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;3&quot;</span>, 
        <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;1&quot;</span>, 
        <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">&quot;id&quot;</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;i&quot;</span>, 
        <span class="hljs-string">&quot;isFullDocumentFromCollection&quot;</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">&quot;isDataFromCollection&quot;</span> : <span class="hljs-literal">false</span> 
      } 
    ], 
    <span class="hljs-string">&quot;estimatedCost&quot;</span> : <span class="hljs-number">212.64385618977474</span>, 
    <span class="hljs-string">&quot;estimatedNrItems&quot;</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">&quot;isModificationQuery&quot;</span> : <span class="hljs-literal">false</span> 
  }, 
  <span class="hljs-string">&quot;warnings&quot;</span> : [ ], 
  <span class="hljs-string">&quot;stats&quot;</span> : { 
    <span class="hljs-string">&quot;rulesExecuted&quot;</span> : <span class="hljs-number">44</span>, 
    <span class="hljs-string">&quot;rulesSkipped&quot;</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">&quot;plansCreated&quot;</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">&quot;cacheable&quot;</span> : <span class="hljs-literal">true</span> 
}
