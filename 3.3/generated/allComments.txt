@startDocuBlock errorCodes 
################################################################################

## General errors

################################################################################



ERROR_NO_ERROR,0,"no error","No error has occurred."

ERROR_FAILED,1,"failed","Will be raised when a general error occurred."

ERROR_SYS_ERROR,2,"system error","Will be raised when operating system error occurred."

ERROR_OUT_OF_MEMORY,3,"out of memory","Will be raised when there is a memory shortage."

ERROR_INTERNAL,4,"internal error","Will be raised when an internal error occurred."

ERROR_ILLEGAL_NUMBER,5,"illegal number","Will be raised when an illegal representation of a number was given."

ERROR_NUMERIC_OVERFLOW,6,"numeric overflow","Will be raised when a numeric overflow occurred."

ERROR_ILLEGAL_OPTION,7,"illegal option","Will be raised when an unknown option was supplied by the user."

ERROR_DEAD_PID,8,"dead process identifier","Will be raised when a PID without a living process was found."

ERROR_NOT_IMPLEMENTED,9,"not implemented","Will be raised when hitting an unimplemented feature."

ERROR_BAD_PARAMETER,10,"bad parameter","Will be raised when the parameter does not fulfill the requirements."

ERROR_FORBIDDEN,11,"forbidden","Will be raised when you are missing permission for the operation."

ERROR_OUT_OF_MEMORY_MMAP,12,"out of memory in mmap","Will be raised when there is a memory shortage."

ERROR_CORRUPTED_CSV,13,"csv is corrupt","Will be raised when encountering a corrupt csv line."

ERROR_FILE_NOT_FOUND,14,"file not found","Will be raised when a file is not found."

ERROR_CANNOT_WRITE_FILE,15,"cannot write file","Will be raised when a file cannot be written."

ERROR_CANNOT_OVERWRITE_FILE,16,"cannot overwrite file","Will be raised when an attempt is made to overwrite an existing file."

ERROR_TYPE_ERROR,17,"type error","Will be raised when a type error is unencountered."

ERROR_LOCK_TIMEOUT,18,"lock timeout","Will be raised when there's a timeout waiting for a lock."

ERROR_CANNOT_CREATE_DIRECTORY,19,"cannot create directory","Will be raised when an attempt to create a directory fails."

ERROR_CANNOT_CREATE_TEMP_FILE,20,"cannot create temporary file","Will be raised when an attempt to create a temporary file fails."

ERROR_REQUEST_CANCELED,21,"canceled request","Will be raised when a request is canceled by the user."

ERROR_DEBUG,22,"intentional debug error","Will be raised intentionally during debugging."

ERROR_IP_ADDRESS_INVALID,25,"IP address is invalid","Will be raised when the structure of an IP address is invalid."

ERROR_FILE_EXISTS,27,"file exists","Will be raised when a file already exists."

ERROR_LOCKED,28,"locked","Will be raised when a resource or an operation is locked."

ERROR_DEADLOCK,29,"deadlock detected","Will be raised when a deadlock is detected when accessing collections."

ERROR_SHUTTING_DOWN,30,"shutdown in progress","Will be raised when a call cannot succeed because a server shutdown is already in progress."

ERROR_ONLY_ENTERPRISE,31,"only enterprise version","Will be raised when an enterprise-feature is requested from the community edition."

ERROR_RESOURCE_LIMIT,32,"resource limit exceeded","Will be raised when the resources used by an operation exceed the configured maximum value."



################################################################################

## HTTP error status codes

################################################################################



ERROR_HTTP_BAD_PARAMETER,400,"bad parameter","Will be raised when the HTTP request does not fulfill the requirements."

ERROR_HTTP_UNAUTHORIZED,401,"unauthorized","Will be raised when authorization is required but the user is not authorized."

ERROR_HTTP_FORBIDDEN,403,"forbidden","Will be raised when the operation is forbidden."

ERROR_HTTP_NOT_FOUND,404,"not found","Will be raised when an URI is unknown."

ERROR_HTTP_METHOD_NOT_ALLOWED,405,"method not supported","Will be raised when an unsupported HTTP method is used for an operation."

ERROR_HTTP_NOT_ACCEPTABLE,406,"request not acceptable","Will be raised when an unsupported HTTP content type is used for an operation, or if a request is not acceptable for a leader or follower."

ERROR_HTTP_PRECONDITION_FAILED,412,"precondition failed","Will be raised when a precondition for an HTTP request is not met."

ERROR_HTTP_SERVER_ERROR,500,"internal server error","Will be raised when an internal server is encountered."

ERROR_HTTP_SERVICE_UNAVAILABLE,503,"service unavailable","Will be raised when a service is temporarily unavailable."

ERROR_HTTP_GATEWAY_TIMEOUT,504,"gateway timeout","Will be raised when a service contacted by ArangoDB does not respond in a timely manner."



################################################################################

## HTTP processing errors

################################################################################



ERROR_HTTP_CORRUPTED_JSON,600,"invalid JSON object","Will be raised when a string representation of a JSON object is corrupt."

ERROR_HTTP_SUPERFLUOUS_SUFFICES,601,"superfluous URL suffices","Will be raised when the URL contains superfluous suffices."



################################################################################

## Internal ArangoDB storage errors

## For errors that occur because of a programming error.

################################################################################



ERROR_ARANGO_ILLEGAL_STATE,1000,"illegal state","Internal error that will be raised when the datafile is not in the required state."

ERROR_ARANGO_DATAFILE_SEALED,1002,"datafile sealed","Internal error that will be raised when trying to write to a datafile."

ERROR_ARANGO_READ_ONLY,1004,"read only","Internal error that will be raised when trying to write to a read-only datafile or collection."

ERROR_ARANGO_DUPLICATE_IDENTIFIER,1005,"duplicate identifier","Internal error that will be raised when a identifier duplicate is detected."

ERROR_ARANGO_DATAFILE_UNREADABLE,1006,"datafile unreadable","Internal error that will be raised when a datafile is unreadable."

ERROR_ARANGO_DATAFILE_EMPTY,1007,"datafile empty","Internal error that will be raised when a datafile is empty."

ERROR_ARANGO_RECOVERY,1008,"logfile recovery error","Will be raised when an error occurred during WAL log file recovery."

ERROR_ARANGO_DATAFILE_STATISTICS_NOT_FOUND,1009,"datafile statistics not found","Will be raised when a required datafile statistics object was not found."



################################################################################

## External ArangoDB storage errors

## For errors that occur because of an outside event.

################################################################################



ERROR_ARANGO_CORRUPTED_DATAFILE,1100,"corrupted datafile","Will be raised when a corruption is detected in a datafile."

ERROR_ARANGO_ILLEGAL_PARAMETER_FILE,1101,"illegal or unreadable parameter file","Will be raised if a parameter file is corrupted or cannot be read."

ERROR_ARANGO_CORRUPTED_COLLECTION,1102,"corrupted collection","Will be raised when a collection contains one or more corrupted data files."

ERROR_ARANGO_MMAP_FAILED,1103,"mmap failed","Will be raised when the system call mmap failed."

ERROR_ARANGO_FILESYSTEM_FULL,1104,"filesystem full","Will be raised when the filesystem is full."

ERROR_ARANGO_NO_JOURNAL,1105,"no journal","Will be raised when a journal cannot be created."

ERROR_ARANGO_DATAFILE_ALREADY_EXISTS,1106,"cannot create/rename datafile because it already exists","Will be raised when the datafile cannot be created or renamed because a file of the same name already exists."

ERROR_ARANGO_DATADIR_LOCKED,1107,"database directory is locked","Will be raised when the database directory is locked by a different process."

ERROR_ARANGO_COLLECTION_DIRECTORY_ALREADY_EXISTS,1108,"cannot create/rename collection because directory already exists","Will be raised when the collection cannot be created because a directory of the same name already exists."

ERROR_ARANGO_MSYNC_FAILED,1109,"msync failed","Will be raised when the system call msync failed."

ERROR_ARANGO_DATADIR_UNLOCKABLE,1110,"cannot lock database directory","Will be raised when the server cannot lock the database directory on startup."

ERROR_ARANGO_SYNC_TIMEOUT,1111,"sync timeout","Will be raised when the server waited too long for a datafile to be synced to disk."



################################################################################

## General ArangoDB storage errors

## For errors that occur when fulfilling a user request.

################################################################################



ERROR_ARANGO_CONFLICT,1200,"conflict","Will be raised when updating or deleting a document and a conflict has been detected."

ERROR_ARANGO_DATADIR_INVALID,1201,"invalid database directory","Will be raised when a non-existing database directory was specified when starting the database."

ERROR_ARANGO_DOCUMENT_NOT_FOUND,1202,"document not found","Will be raised when a document with a given identifier or handle is unknown."

ERROR_ARANGO_COLLECTION_NOT_FOUND,1203,"collection not found","Will be raised when a collection with the given identifier or name is unknown."

ERROR_ARANGO_COLLECTION_PARAMETER_MISSING,1204,"parameter 'collection' not found","Will be raised when the collection parameter is missing."

ERROR_ARANGO_DOCUMENT_HANDLE_BAD,1205,"illegal document handle","Will be raised when a document handle is corrupt."

ERROR_ARANGO_MAXIMAL_SIZE_TOO_SMALL,1206,"maximal size of journal too small","Will be raised when the maximal size of the journal is too small."

ERROR_ARANGO_DUPLICATE_NAME,1207,"duplicate name","Will be raised when a name duplicate is detected."

ERROR_ARANGO_ILLEGAL_NAME,1208,"illegal name","Will be raised when an illegal name is detected."

ERROR_ARANGO_NO_INDEX,1209,"no suitable index known","Will be raised when no suitable index for the query is known."

ERROR_ARANGO_UNIQUE_CONSTRAINT_VIOLATED,1210,"unique constraint violated","Will be raised when there is a unique constraint violation."

ERROR_ARANGO_VIEW_NOT_FOUND,1211,"view not found","Will be raised when a view with the given identifier or name is unknown."

ERROR_ARANGO_INDEX_NOT_FOUND,1212,"index not found","Will be raised when an index with a given identifier is unknown."

ERROR_ARANGO_CROSS_COLLECTION_REQUEST,1213,"cross collection request not allowed","Will be raised when a cross-collection is requested."

ERROR_ARANGO_INDEX_HANDLE_BAD,1214,"illegal index handle","Will be raised when a index handle is corrupt."

ERROR_ARANGO_DOCUMENT_TOO_LARGE,1216,"document too large","Will be raised when the document cannot fit into any datafile because of it is too large."

ERROR_ARANGO_COLLECTION_NOT_UNLOADED,1217,"collection must be unloaded","Will be raised when a collection should be unloaded, but has a different status."

ERROR_ARANGO_COLLECTION_TYPE_INVALID,1218,"collection type invalid","Will be raised when an invalid collection type is used in a request."

ERROR_ARANGO_VALIDATION_FAILED,1219,"validator failed","Will be raised when the validation of an attribute of a structure failed."

ERROR_ARANGO_ATTRIBUTE_PARSER_FAILED,1220,"parsing attribute name definition failed","Will be raised when parsing an attribute name definition failed."

ERROR_ARANGO_DOCUMENT_KEY_BAD,1221,"illegal document key","Will be raised when a document key is corrupt."

ERROR_ARANGO_DOCUMENT_KEY_UNEXPECTED,1222,"unexpected document key","Will be raised when a user-defined document key is supplied for collections with auto key generation."

ERROR_ARANGO_DATADIR_NOT_WRITABLE,1224,"server database directory not writable","Will be raised when the server's database directory is not writable for the current user."

ERROR_ARANGO_OUT_OF_KEYS,1225,"out of keys","Will be raised when a key generator runs out of keys."

ERROR_ARANGO_DOCUMENT_KEY_MISSING,1226,"missing document key","Will be raised when a document key is missing."

ERROR_ARANGO_DOCUMENT_TYPE_INVALID,1227,"invalid document type","Will be raised when there is an attempt to create a document with an invalid type."

ERROR_ARANGO_DATABASE_NOT_FOUND,1228,"database not found","Will be raised when a non-existing database is accessed."

ERROR_ARANGO_DATABASE_NAME_INVALID,1229,"database name invalid","Will be raised when an invalid database name is used."

ERROR_ARANGO_USE_SYSTEM_DATABASE,1230,"operation only allowed in system database","Will be raised when an operation is requested in a database other than the system database."

ERROR_ARANGO_ENDPOINT_NOT_FOUND,1231,"endpoint not found","Will be raised when there is an attempt to delete a non-existing endpoint."

ERROR_ARANGO_INVALID_KEY_GENERATOR,1232,"invalid key generator","Will be raised when an invalid key generator description is used."

ERROR_ARANGO_INVALID_EDGE_ATTRIBUTE,1233,"edge attribute missing or invalid","will be raised when the _from or _to values of an edge are undefined or contain an invalid value."

ERROR_ARANGO_INDEX_DOCUMENT_ATTRIBUTE_MISSING,1234,"index insertion warning - attribute missing in document","Will be raised when an attempt to insert a document into an index is caused by in the document not having one or more attributes which the index is built on."

ERROR_ARANGO_INDEX_CREATION_FAILED,1235,"index creation failed","Will be raised when an attempt to create an index has failed."

ERROR_ARANGO_WRITE_THROTTLE_TIMEOUT,1236,"write-throttling timeout","Will be raised when the server is write-throttled and a write operation has waited too long for the server to process queued operations."

ERROR_ARANGO_COLLECTION_TYPE_MISMATCH,1237,"collection type mismatch","Will be raised when a collection has a different type from what has been expected."

ERROR_ARANGO_COLLECTION_NOT_LOADED,1238,"collection not loaded","Will be raised when a collection is accessed that is not yet loaded."

ERROR_ARANGO_DOCUMENT_REV_BAD,1239,"illegal document revision","Will be raised when a document revision is corrupt or is missing where needed."



################################################################################

## Checked ArangoDB storage errors

## For errors that occur but are anticipated.

################################################################################



ERROR_ARANGO_DATAFILE_FULL,1300,"datafile full","Will be raised when the datafile reaches its limit."

ERROR_ARANGO_EMPTY_DATADIR,1301,"server database directory is empty","Will be raised when encountering an empty server database directory."

ERROR_ARANGO_TRY_AGAIN,1302,"operation should be tried again","Will be raised when an operation should be retried."

ERROR_ARANGO_BUSY,1303,"engine is busy","Will be raised when storage engine is busy."

ERROR_ARANGO_MERGE_IN_PROGRESS,1304,"merge in progress","Will be raised when storage engine has a datafile merge in progress and cannot complete the operation."

ERROR_ARANGO_IO_ERROR,1305,"storage engine I/O error","Will be raised when storage engine encounters an I/O error."



################################################################################

## ArangoDB replication errors

################################################################################



ERROR_REPLICATION_NO_RESPONSE,1400,"no response","Will be raised when the replication applier does not receive any or an incomplete response from the master."

ERROR_REPLICATION_INVALID_RESPONSE,1401,"invalid response","Will be raised when the replication applier receives an invalid response from the master."

ERROR_REPLICATION_MASTER_ERROR,1402,"master error","Will be raised when the replication applier receives a server error from the master."

ERROR_REPLICATION_MASTER_INCOMPATIBLE,1403,"master incompatible","Will be raised when the replication applier connects to a master that has an incompatible version."

ERROR_REPLICATION_MASTER_CHANGE,1404,"master change","Will be raised when the replication applier connects to a different master than before."

ERROR_REPLICATION_LOOP,1405,"loop detected","Will be raised when the replication applier is asked to connect to itself for replication."

ERROR_REPLICATION_UNEXPECTED_MARKER,1406,"unexpected marker","Will be raised when an unexpected marker is found in the replication log stream."

ERROR_REPLICATION_INVALID_APPLIER_STATE,1407,"invalid applier state","Will be raised when an invalid replication applier state file is found."

ERROR_REPLICATION_UNEXPECTED_TRANSACTION,1408,"invalid transaction","Will be raised when an unexpected transaction id is found."

ERROR_REPLICATION_INVALID_APPLIER_CONFIGURATION,1410,"invalid replication applier configuration","Will be raised when the configuration for the replication applier is invalid."

ERROR_REPLICATION_RUNNING,1411,"cannot perform operation while applier is running","Will be raised when there is an attempt to perform an operation while the replication applier is running."

ERROR_REPLICATION_APPLIER_STOPPED,1412,"replication stopped","Special error code used to indicate the replication applier was stopped by a user."

ERROR_REPLICATION_NO_START_TICK,1413,"no start tick","Will be raised when the replication applier is started without a known start tick value."

ERROR_REPLICATION_START_TICK_NOT_PRESENT,1414,"start tick not present","Will be raised when the replication applier fetches data using a start tick, but that start tick is not present on the logger server anymore."

ERROR_REPLICATION_WRONG_CHECKSUM,1416,"wrong checksum","Will be raised when a new born follower submits a wrong checksum"

ERROR_REPLICATION_SHARD_NONEMPTY,1417,"shard not empty","Will be raised when a shard is not empty and the follower tries a shortcut"



################################################################################

## ArangoDB cluster errors

################################################################################



ERROR_CLUSTER_NO_AGENCY,1450,"could not connect to agency","Will be raised when none of the agency servers can be connected to."

ERROR_CLUSTER_NO_COORDINATOR_HEADER,1451,"missing coordinator header","Will be raised when a DB server in a cluster receives a HTTP request without a coordinator header."

ERROR_CLUSTER_COULD_NOT_LOCK_PLAN,1452,"could not lock plan in agency","Will be raised when a coordinator in a cluster cannot lock the Plan hierarchy in the agency."

ERROR_CLUSTER_COLLECTION_ID_EXISTS,1453,"collection ID already exists","Will be raised when a coordinator in a cluster tries to create a collection and the collection ID already exists."

ERROR_CLUSTER_COULD_NOT_CREATE_COLLECTION_IN_PLAN,1454,"could not create collection in plan","Will be raised when a coordinator in a cluster cannot create an entry for a new collection in the Plan hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_READ_CURRENT_VERSION,1455,"could not read version in current in agency","Will be raised when a coordinator in a cluster cannot read the Version entry in the Current hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_CREATE_COLLECTION,1456,"could not create collection","Will be raised when a coordinator in a cluster notices that some DBServers report problems when creating shards for a new collection."

ERROR_CLUSTER_TIMEOUT,1457,"timeout in cluster operation","Will be raised when a coordinator in a cluster runs into a timeout for some cluster wide operation."

ERROR_CLUSTER_COULD_NOT_REMOVE_COLLECTION_IN_PLAN,1458,"could not remove collection from plan","Will be raised when a coordinator in a cluster cannot remove an entry for a collection in the Plan hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_REMOVE_COLLECTION_IN_CURRENT,1459,"could not remove collection from current","Will be raised when a coordinator in a cluster cannot remove an entry for a collection in the Current hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_CREATE_DATABASE_IN_PLAN,1460,"could not create database in plan","Will be raised when a coordinator in a cluster cannot create an entry for a new database in the Plan hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_CREATE_DATABASE,1461,"could not create database","Will be raised when a coordinator in a cluster notices that some DBServers report problems when creating databases for a new cluster wide database."

ERROR_CLUSTER_COULD_NOT_REMOVE_DATABASE_IN_PLAN,1462,"could not remove database from plan","Will be raised when a coordinator in a cluster cannot remove an entry for a database in the Plan hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_REMOVE_DATABASE_IN_CURRENT,1463,"could not remove database from current","Will be raised when a coordinator in a cluster cannot remove an entry for a database in the Current hierarchy in the agency."

ERROR_CLUSTER_SHARD_GONE,1464,"no responsible shard found","Will be raised when a coordinator in a cluster cannot determine the shard that is responsible for a given document."

ERROR_CLUSTER_CONNECTION_LOST,1465,"cluster internal HTTP connection broken","Will be raised when a coordinator in a cluster loses an HTTP connection to a DBserver in the cluster whilst transferring data."

ERROR_CLUSTER_MUST_NOT_SPECIFY_KEY,1466,"must not specify _key for this collection","Will be raised when a coordinator in a cluster finds that the _key attribute was specified in a sharded collection the uses not only _key as sharding attribute."

ERROR_CLUSTER_GOT_CONTRADICTING_ANSWERS,1467,"got contradicting answers from different shards","Will be raised if a coordinator in a cluster gets conflicting results from different shards, which should never happen."

ERROR_CLUSTER_NOT_ALL_SHARDING_ATTRIBUTES_GIVEN,1468,"not all sharding attributes given","Will be raised if a coordinator tries to find out which shard is responsible for a partial document, but cannot do this because not all sharding attributes are specified."

ERROR_CLUSTER_MUST_NOT_CHANGE_SHARDING_ATTRIBUTES,1469,"must not change the value of a shard key attribute","Will be raised if there is an attempt to update the value of a shard attribute."

ERROR_CLUSTER_UNSUPPORTED,1470,"unsupported operation or parameter","Will be raised when there is an attempt to carry out an operation that is not supported in the context of a sharded collection."

ERROR_CLUSTER_ONLY_ON_COORDINATOR,1471,"this operation is only valid on a coordinator in a cluster","Will be raised if there is an attempt to run a coordinator-only operation on a different type of node."

ERROR_CLUSTER_READING_PLAN_AGENCY,1472,"error reading Plan in agency","Will be raised if a coordinator or DBserver cannot read the Plan in the agency."

ERROR_CLUSTER_COULD_NOT_TRUNCATE_COLLECTION,1473,"could not truncate collection","Will be raised if a coordinator cannot truncate all shards of a cluster collection."

ERROR_CLUSTER_AQL_COMMUNICATION,1474,"error in cluster internal communication for AQL","Will be raised if the internal communication of the cluster for AQL produces an error."

ERROR_ARANGO_DOCUMENT_NOT_FOUND_OR_SHARDING_ATTRIBUTES_CHANGED,1475,"document not found or sharding attributes changed","Will be raised when a document with a given identifier or handle is unknown, or if the sharding attributes have been changed in a REPLACE operation in the cluster."

ERROR_CLUSTER_COULD_NOT_DETERMINE_ID,1476,"could not determine my ID from my local info","Will be raised if a cluster server at startup could not determine its own ID from the local info provided."

ERROR_CLUSTER_ONLY_ON_DBSERVER,1477,"this operation is only valid on a DBserver in a cluster","Will be raised if there is an attempt to run a DBserver-only operation on a different type of node."

ERROR_CLUSTER_BACKEND_UNAVAILABLE,1478,"A cluster backend which was required for the operation could not be reached","Will be raised if a required db server can't be reached."

ERROR_CLUSTER_UNKNOWN_CALLBACK_ENDPOINT,1479,"An endpoint couldn't be found","An endpoint couldn't be found"

ERROR_CLUSTER_AGENCY_STRUCTURE_INVALID,1480,"Invalid agency structure","The structure in the agency is invalid"

ERROR_CLUSTER_AQL_COLLECTION_OUT_OF_SYNC,1481,"collection is out of sync","Will be raised if a collection needed during query execution is out of sync. This currently can only happen when using satellite collections"

ERROR_CLUSTER_COULD_NOT_CREATE_INDEX_IN_PLAN,1482,"could not create index in plan","Will be raised when a coordinator in a cluster cannot create an entry for a new index in the Plan hierarchy in the agency."

ERROR_CLUSTER_COULD_NOT_DROP_INDEX_IN_PLAN,1483,"could not drop index in plan","Will be raised when a coordinator in a cluster cannot remove an index from the Plan hierarchy in the agency."

ERROR_CLUSTER_CHAIN_OF_DISTRIBUTESHARDSLIKE,1484,"chain of distributeShardsLike references","Will be raised if one tries to create a collection with a distributeShardsLike attribute which points to another collection that also has one."

ERROR_CLUSTER_MUST_NOT_DROP_COLL_OTHER_DISTRIBUTESHARDSLIKE,1485,"must not drop collection while another has a distributeShardsLike attribute pointing to it","Will be raised if one tries to drop a collection to which another collection points with its distributeShardsLike attribute."

ERROR_CLUSTER_UNKNOWN_DISTRIBUTESHARDSLIKE,1486,"must not have a distributeShardsLike attribute pointing to an unknown collection","Will be raised if one tries to create a collection which points to an unknown collection in its distributeShardsLike attribute."

ERROR_CLUSTER_INSUFFICIENT_DBSERVERS,1487,"the number of current dbservers is lower than the requested replicationFactor","Will be raised if one tries to create a collection with a replicationFactor greater than the available number of DBServers."

ERROR_CLUSTER_COULD_NOT_DROP_FOLLOWER,1488,"a follower could not be dropped in agency","Will be raised if a follower that ought to be dropped could not be dropped in the agency (under Current)."

ERROR_CLUSTER_SHARD_LEADER_REFUSES_REPLICATION,1489,"a shard leader refuses to perform a replication operation","Will be raised if a replication operation is refused by a shard leader."

ERROR_CLUSTER_SHARD_FOLLOWER_REFUSES_OPERATION,1490,"a shard follower refuses to perform an operation that is not a replication","Will be raised if a non-replication operation is refused by a shard follower."

ERROR_CLUSTER_SHARD_LEADER_RESIGNED,1491,"a (former) shard leader refuses to perform an operation, because it has resigned in the meantime","Will be raised if a non-replication operation is refused by a former shard leader that has found out that it is no longer the leader."

ERROR_CLUSTER_AGENCY_COMMUNICATION_FAILED,1492,"some agency operation failed","Will be raised if after various retries an agency operation could not be performed successfully."

ERROR_CLUSTER_DISTRIBUTE_SHARDS_LIKE_REPLICATION_FACTOR,1493,"conflicting replication factor with distributeShardsLike parameter assignment","Will be raised if intended replication factor does not match that of the prototype shard given in distributeShardsLike parameter."

ERROR_CLUSTER_DISTRIBUTE_SHARDS_LIKE_NUMBER_OF_SHARDS,1494,"conflicting shard number with distributeShardsLike parameter assignment","Will be raised if intended number of shards does not match that of the prototype shard given in distributeShardsLike parameter."

ERROR_CLUSTER_LEADERSHIP_CHALLENGE_ONGOING,1495,"leadership challenge is ongoing","Will be raised when servers are currently competing for leadership, and the result is still unknown."

ERROR_CLUSTER_NOT_LEADER,1496,"not a leader","Will be raised when an operation is sent to a non-leading server."

ERROR_CLUSTER_COULD_NOT_DROP_COLLECTION,1499,"could not drop collection in plan","Will be raised when a coordinator in a cluster cannot drop a collection entry in the Plan hierarchy in the agency."



################################################################################

## ArangoDB query errors

################################################################################



ERROR_QUERY_KILLED,1500,"query killed","Will be raised when a running query is killed by an explicit admin command."

ERROR_QUERY_PARSE,1501,"%s","Will be raised when query is parsed and is found to be syntactically invalid."

ERROR_QUERY_EMPTY,1502,"query is empty","Will be raised when an empty query is specified."

ERROR_QUERY_SCRIPT,1503,"runtime error '%s'","Will be raised when a runtime error is caused by the query."

ERROR_QUERY_NUMBER_OUT_OF_RANGE,1504,"number out of range","Will be raised when a number is outside the expected range."

ERROR_QUERY_VARIABLE_NAME_INVALID,1510,"variable name '%s' has an invalid format","Will be raised when an invalid variable name is used."

ERROR_QUERY_VARIABLE_REDECLARED,1511,"variable '%s' is assigned multiple times","Will be raised when a variable gets re-assigned in a query."

ERROR_QUERY_VARIABLE_NAME_UNKNOWN,1512,"unknown variable '%s'","Will be raised when an unknown variable is used or the variable is undefined the context it is used."

ERROR_QUERY_COLLECTION_LOCK_FAILED,1521,"unable to read-lock collection %s","Will be raised when a read lock on the collection cannot be acquired."

ERROR_QUERY_TOO_MANY_COLLECTIONS,1522,"too many collections/shards","Will be raised when the number of collections or shards in a query is beyond the allowed value."

ERROR_QUERY_DOCUMENT_ATTRIBUTE_REDECLARED,1530,"document attribute '%s' is assigned multiple times","Will be raised when a document attribute is re-assigned."

ERROR_QUERY_FUNCTION_NAME_UNKNOWN,1540,"usage of unknown function '%s()'","Will be raised when an undefined function is called."

ERROR_QUERY_FUNCTION_ARGUMENT_NUMBER_MISMATCH,1541,"invalid number of arguments for function '%s()', expected number of arguments: minimum: %d, maximum: %d","Will be raised when the number of arguments used in a function call does not match the expected number of arguments for the function."

ERROR_QUERY_FUNCTION_ARGUMENT_TYPE_MISMATCH,1542,"invalid argument type in call to function '%s()'","Will be raised when the type of an argument used in a function call does not match the expected argument type."

ERROR_QUERY_INVALID_REGEX,1543,"invalid regex value","Will be raised when an invalid regex argument value is used in a call to a function that expects a regex."

ERROR_QUERY_BIND_PARAMETERS_INVALID,1550,"invalid structure of bind parameters","Will be raised when the structure of bind parameters passed has an unexpected format."

ERROR_QUERY_BIND_PARAMETER_MISSING,1551,"no value specified for declared bind parameter '%s'","Will be raised when a bind parameter was declared in the query but the query is being executed with no value for that parameter."

ERROR_QUERY_BIND_PARAMETER_UNDECLARED,1552,"bind parameter '%s' was not declared in the query","Will be raised when a value gets specified for an undeclared bind parameter."

ERROR_QUERY_BIND_PARAMETER_TYPE,1553,"bind parameter '%s' has an invalid value or type","Will be raised when a bind parameter has an invalid value or type."

ERROR_QUERY_INVALID_LOGICAL_VALUE,1560,"invalid logical value","Will be raised when a non-boolean value is used in a logical operation."

ERROR_QUERY_INVALID_ARITHMETIC_VALUE,1561,"invalid arithmetic value","Will be raised when a non-numeric value is used in an arithmetic operation."

ERROR_QUERY_DIVISION_BY_ZERO,1562,"division by zero","Will be raised when there is an attempt to divide by zero."

ERROR_QUERY_ARRAY_EXPECTED,1563,"array expected","Will be raised when a non-array operand is used for an operation that expects an array argument operand."

ERROR_QUERY_FAIL_CALLED,1569,"FAIL(%s) called","Will be raised when the function FAIL() is called from inside a query."

ERROR_QUERY_GEO_INDEX_MISSING,1570,"no suitable geo index found for geo restriction on '%s'","Will be raised when a geo restriction was specified but no suitable geo index is found to resolve it."

ERROR_QUERY_FULLTEXT_INDEX_MISSING,1571,"no suitable fulltext index found for fulltext query on '%s'","Will be raised when a fulltext query is performed on a collection without a suitable fulltext index."

ERROR_QUERY_INVALID_DATE_VALUE,1572,"invalid date value","Will be raised when a value cannot be converted to a date."

ERROR_QUERY_MULTI_MODIFY,1573,"multi-modify query","Will be raised when an AQL query contains more than one data-modifying operation."

ERROR_QUERY_INVALID_AGGREGATE_EXPRESSION,1574,"invalid aggregate expression","Will be raised when an AQL query contains an invalid aggregate expression."

ERROR_QUERY_COMPILE_TIME_OPTIONS,1575,"query options must be readable at query compile time","Will be raised when an AQL data-modification query contains options that cannot be figured out at query compile time."

ERROR_QUERY_EXCEPTION_OPTIONS,1576,"query options expected","Will be raised when an AQL data-modification query contains an invalid options specification."

ERROR_QUERY_COLLECTION_USED_IN_EXPRESSION,1577,"collection '%s' used as expression operand","Will be raised when a collection is used as an operand in an AQL expression."

ERROR_QUERY_DISALLOWED_DYNAMIC_CALL,1578,"disallowed dynamic call to '%s'","Will be raised when a dynamic function call is made to a function that cannot be called dynamically."

ERROR_QUERY_ACCESS_AFTER_MODIFICATION,1579,"access after data-modification by %s","Will be raised when collection data are accessed after a data-modification operation."



################################################################################

## AQL user function errors

################################################################################



ERROR_QUERY_FUNCTION_INVALID_NAME,1580,"invalid user function name","Will be raised when a user function with an invalid name is registered."

ERROR_QUERY_FUNCTION_INVALID_CODE,1581,"invalid user function code","Will be raised when a user function is registered with invalid code."

ERROR_QUERY_FUNCTION_NOT_FOUND,1582,"user function '%s()' not found","Will be raised when a user function is accessed but not found."

ERROR_QUERY_FUNCTION_RUNTIME_ERROR,1583,"user function runtime error: %s","Will be raised when a user function throws a runtime exception."



################################################################################

## AQL query registry errors

################################################################################



ERROR_QUERY_BAD_JSON_PLAN,1590,"bad execution plan JSON","Will be raised when an HTTP API for a query got an invalid JSON object."

ERROR_QUERY_NOT_FOUND,1591,"query ID not found","Will be raised when an Id of a query is not found by the HTTP API."

ERROR_QUERY_IN_USE,1592,"query with this ID is in use","Will be raised when an Id of a query is found by the HTTP API but the query is in use."



################################################################################

## ArangoDB cursor errors

################################################################################



ERROR_CURSOR_NOT_FOUND,1600,"cursor not found","Will be raised when a cursor is requested via its id but a cursor with that id cannot be found."

ERROR_CURSOR_BUSY,1601,"cursor is busy","Will be raised when a cursor is requested via its id but a concurrent request is still using the cursor."



################################################################################

## ArangoDB transaction errors

################################################################################



ERROR_TRANSACTION_INTERNAL,1650,"internal transaction error","Will be raised when a wrong usage of transactions is detected. this is an internal error and indicates a bug in ArangoDB."

ERROR_TRANSACTION_NESTED,1651,"nested transactions detected","Will be raised when transactions are nested."

ERROR_TRANSACTION_UNREGISTERED_COLLECTION,1652,"unregistered collection used in transaction","Will be raised when a collection is used in the middle of a transaction but was not registered at transaction start."

ERROR_TRANSACTION_DISALLOWED_OPERATION,1653,"disallowed operation inside transaction","Will be raised when a disallowed operation is carried out in a transaction."

ERROR_TRANSACTION_ABORTED,1654,"transaction aborted","Will be raised when a transaction was aborted."



################################################################################

## User management errors

################################################################################



ERROR_USER_INVALID_NAME,1700,"invalid user name","Will be raised when an invalid user name is used."

ERROR_USER_INVALID_PASSWORD,1701,"invalid password","Will be raised when an invalid password is used."

ERROR_USER_DUPLICATE,1702,"duplicate user","Will be raised when a user name already exists."

ERROR_USER_NOT_FOUND,1703,"user not found","Will be raised when a user name is updated that does not exist."

ERROR_USER_CHANGE_PASSWORD,1704,"user must change his password","Will be raised when the user must change his password."

ERROR_USER_EXTERNAL,1705,"user is external","Will be raised when the user is authenicated by an external server."



################################################################################

## Service management errors (legacy)

## These have been superceded by the Foxx management errors in public APIs.

################################################################################



ERROR_SERVICE_INVALID_NAME,1750,"invalid service name","Will be raised when an invalid service name is specified."

ERROR_SERVICE_INVALID_MOUNT,1751,"invalid mount","Will be raised when an invalid mount is specified."

ERROR_SERVICE_DOWNLOAD_FAILED,1752,"service download failed","Will be raised when a service download from the central repository failed."

ERROR_SERVICE_UPLOAD_FAILED,1753,"service upload failed","Will be raised when a service upload from the client to the ArangoDB server failed."



################################################################################

## LDAP errors

################################################################################



ERROR_LDAP_CANNOT_INIT,1800,"cannot init a LDAP connection","can not init a LDAP connection"

ERROR_LDAP_CANNOT_SET_OPTION,1801,"cannot set a LDAP option","can not set a LDAP option"

ERROR_LDAP_CANNOT_BIND,1802,"cannot bind to a LDAP server","can not bind to a LDAP server"

ERROR_LDAP_CANNOT_UNBIND,1803,"cannot unbind from a LDAP server","can not unbind from a LDAP server"

ERROR_LDAP_CANNOT_SEARCH,1804,"cannot issue a LDAP search","can not search the LDAP server"

ERROR_LDAP_CANNOT_START_TLS,1805,"cannot start a TLS LDAP session","can not star a TLS LDAP session"

ERROR_LDAP_FOUND_NO_OBJECTS,1806,"LDAP didn't found any objects","LDAP didn't found any objects with the specified search query"

ERROR_LDAP_NOT_ONE_USER_FOUND,1807,"LDAP found zero ore more than one user","LDAP found zero ore more than one user"

ERROR_LDAP_USER_NOT_IDENTIFIED,1808,"LDAP found a user, but its not the desired one","LDAP found a user, but its not the desired one"

ERROR_LDAP_INVALID_MODE,1820,"invalid ldap mode","cant distinguish a valid mode for provided ldap configuration"



################################################################################

## Task errors

################################################################################



ERROR_TASK_INVALID_ID,1850,"invalid task id","Will be raised when a task is created with an invalid id."

ERROR_TASK_DUPLICATE_ID,1851,"duplicate task id","Will be raised when a task id is created with a duplicate id."

ERROR_TASK_NOT_FOUND,1852,"task not found","Will be raised when a task with the specified id could not be found."



################################################################################

## Graph / traversal errors

################################################################################



ERROR_GRAPH_INVALID_GRAPH,1901,"invalid graph","Will be raised when an invalid name is passed to the server."

ERROR_GRAPH_COULD_NOT_CREATE_GRAPH,1902,"could not create graph","Will be raised when an invalid name, vertices or edges is passed to the server."

ERROR_GRAPH_INVALID_VERTEX,1903,"invalid vertex","Will be raised when an invalid vertex id is passed to the server."

ERROR_GRAPH_COULD_NOT_CREATE_VERTEX,1904,"could not create vertex","Will be raised when the vertex could not be created."

ERROR_GRAPH_COULD_NOT_CHANGE_VERTEX,1905,"could not change vertex","Will be raised when the vertex could not be changed."

ERROR_GRAPH_INVALID_EDGE,1906,"invalid edge","Will be raised when an invalid edge id is passed to the server."

ERROR_GRAPH_COULD_NOT_CREATE_EDGE,1907,"could not create edge","Will be raised when the edge could not be created."

ERROR_GRAPH_COULD_NOT_CHANGE_EDGE,1908,"could not change edge","Will be raised when the edge could not be changed."

ERROR_GRAPH_TOO_MANY_ITERATIONS,1909,"too many iterations - try increasing the value of 'maxIterations'","Will be raised when too many iterations are done in a graph traversal."

ERROR_GRAPH_INVALID_FILTER_RESULT,1910,"invalid filter result","Will be raised when an invalid filter result is returned in a graph traversal."

ERROR_GRAPH_COLLECTION_MULTI_USE,1920,"multi use of edge collection in edge def","an edge collection may only be used once in one edge definition of a graph.",

ERROR_GRAPH_COLLECTION_USE_IN_MULTI_GRAPHS,1921,"edge collection already used in edge def"," is already used by another graph in a different edge definition.",

ERROR_GRAPH_CREATE_MISSING_NAME,1922,"missing graph name","a graph name is required to create a graph.",

ERROR_GRAPH_CREATE_MALFORMED_EDGE_DEFINITION,1923,"malformed edge definition","the edge definition is malformed. It has to be an array of objects.",

ERROR_GRAPH_NOT_FOUND,1924,"graph not found","a graph with this name could not be found.",

ERROR_GRAPH_DUPLICATE,1925,"graph already exists","a graph with this name already exists.",

ERROR_GRAPH_VERTEX_COL_DOES_NOT_EXIST,1926,"vertex collection does not exist or is not part of the graph","the specified vertex collection does not exist or is not part of the graph.",

ERROR_GRAPH_WRONG_COLLECTION_TYPE_VERTEX,1927,"not a vertex collection","the collection is not a vertex collection.",

ERROR_GRAPH_NOT_IN_ORPHAN_COLLECTION,1928,"not in orphan collection","Vertex collection not in orphan collection of the graph.",

ERROR_GRAPH_COLLECTION_USED_IN_EDGE_DEF,1929,"collection already used in edge def","The collection is already used in an edge definition of the graph.",

ERROR_GRAPH_EDGE_COLLECTION_NOT_USED,1930,"edge collection not used in graph","The edge collection is not used in any edge definition of the graph.",

ERROR_GRAPH_NO_GRAPH_COLLECTION,1932,"collection _graphs does not exist","collection _graphs does not exist.",

ERROR_GRAPH_INVALID_EXAMPLE_ARRAY_OBJECT_STRING,1933,"Invalid example type. Has to be String, Array or Object","Invalid example type. Has to be String, Array or Object.",

ERROR_GRAPH_INVALID_EXAMPLE_ARRAY_OBJECT,1934,"Invalid example type. Has to be Array or Object","Invalid example type. Has to be Array or Object.",

ERROR_GRAPH_INVALID_NUMBER_OF_ARGUMENTS,1935,"Invalid number of arguments. Expected: ","Invalid number of arguments. Expected: ",

ERROR_GRAPH_INVALID_PARAMETER,1936,"Invalid parameter type.","Invalid parameter type.",

ERROR_GRAPH_INVALID_ID,1937,"Invalid id","Invalid id",

ERROR_GRAPH_COLLECTION_USED_IN_ORPHANS,1938,"collection used in orphans","The collection is already used in the orphans of the graph.",

ERROR_GRAPH_EDGE_COL_DOES_NOT_EXIST,1939,"edge collection does not exist or is not part of the graph","the specified edge collection does not exist or is not part of the graph.",

ERROR_GRAPH_EMPTY,1940,"empty graph","The requested graph has no edge collections."



################################################################################

## Session errors

################################################################################



ERROR_SESSION_UNKNOWN,1950,"unknown session","Will be raised when an invalid/unknown session id is passed to the server."

ERROR_SESSION_EXPIRED,1951,"session expired","Will be raised when a session is expired."



################################################################################

## Simple Client errors

################################################################################



SIMPLE_CLIENT_UNKNOWN_ERROR,2000,"unknown client error","This error should not happen."

SIMPLE_CLIENT_COULD_NOT_CONNECT,2001,"could not connect to server","Will be raised when the client could not connect to the server."

SIMPLE_CLIENT_COULD_NOT_WRITE,2002,"could not write to server","Will be raised when the client could not write data."

SIMPLE_CLIENT_COULD_NOT_READ,2003,"could not read from server","Will be raised when the client could not read data."



################################################################################

## Communicator errors

################################################################################



COMMUNICATOR_REQUEST_ABORTED,2100,"Request aborted","Request was aborted."

COMMUNICATOR_DISABLED,2101,"Communication was disabled","Communication was disabled."



################################################################################

## Foxx management errors

################################################################################



ERROR_MALFORMED_MANIFEST_FILE,3000,"failed to parse manifest file","The service manifest file is not well-formed JSON."

ERROR_INVALID_SERVICE_MANIFEST,3001,"manifest file is invalid","The service manifest contains invalid values."

ERROR_SERVICE_FILES_MISSING,3002,"service files missing","The service folder or bundle does not exist on this server."

ERROR_SERVICE_FILES_OUTDATED,3003,"service files outdated","The local service bundle does not match the checksum in the database."

ERROR_INVALID_FOXX_OPTIONS,3004,"service options are invalid","The service options contain invalid values."

ERROR_INVALID_MOUNTPOINT,3007,"invalid mountpath","The service mountpath contains invalid characters."

ERROR_SERVICE_NOT_FOUND,3009,"service not found","No service found at the given mountpath."

ERROR_SERVICE_NEEDS_CONFIGURATION,3010,"service needs configuration","The service is missing configuration or dependencies."

ERROR_SERVICE_MOUNTPOINT_CONFLICT,3011,"service already exists","A service already exists at the given mountpath."

ERROR_SERVICE_MANIFEST_NOT_FOUND,3012,"missing manifest file","The service directory does not contain a manifest file."

ERROR_SERVICE_OPTIONS_MALFORMED,3013,"failed to parse service options","The service options are not well-formed JSON."

ERROR_SERVICE_SOURCE_NOT_FOUND,3014,"source path not found","The source path does not match a file or directory."

ERROR_SERVICE_SOURCE_ERROR,3015,"error resolving source","The source path could not be resolved."

ERROR_SERVICE_UNKNOWN_SCRIPT,3016,"unknown script","The service does not have a script with this name."



################################################################################

## JavaScript module loader errors

################################################################################



ERROR_MODULE_NOT_FOUND,3100,"cannot locate module","The module path could not be resolved."

ERROR_MODULE_SYNTAX_ERROR,3101,"syntax error in module","The module could not be parsed because of a syntax error."

ERROR_MODULE_FAILURE,3103,"failed to invoke module","Failed to invoke the module in its context."



################################################################################

## Enterprise errors

################################################################################



ERROR_NO_SMART_COLLECTION,4000,"collection is not smart","The requested collection needs to be smart, but it ain't"

ERROR_NO_SMART_GRAPH_ATTRIBUTE,4001,"smart graph attribute not given","The given document does not have the smart graph attribute set."

ERROR_CANNOT_DROP_SMART_COLLECTION,4002,"cannot drop this smart collection","This smart collection cannot be dropped, it dictates sharding in the graph."

ERROR_KEY_MUST_BE_PREFIXED_WITH_SMART_GRAPH_ATTRIBUTE,4003,"in smart vertex collections _key must be prefixed with the value of the smart graph attribute","In a smart vertex collection _key must be prefixed with the value of the smart graph attribute."

ERROR_ILLEGAL_SMART_GRAPH_ATTRIBUTE,4004,"attribute cannot be used as smart graph attribute","The given smartGraph attribute is illegal and connot be used for sharding. All system attributes are forbidden."



################################################################################

## Cluster repair errors

################################################################################



ERROR_CLUSTER_REPAIRS_FAILED,5000,"error during cluster repairs","General error during cluster repairs"

ERROR_CLUSTER_REPAIRS_NOT_ENOUGH_HEALTHY,5001,"not enough (healthy) db servers","Will be raised when, during repairDistributeShardsLike, there must be a free db server to move a shard, but there is no candidate or none is healthy."

ERROR_CLUSTER_REPAIRS_REPLICATION_FACTOR_VIOLATED,5002,"replication factor violated during cluster repairs","Will be raised on various inconsistencies regarding the replication factor"

ERROR_CLUSTER_REPAIRS_NO_DBSERVERS,5003,"no dbservers during cluster repairs","Will be raised if a collection that is fixed has some shard without DB Servers"

ERROR_CLUSTER_REPAIRS_MISMATCHING_LEADERS,5004,"mismatching leaders during cluster repairs","Will be raised if a shard in collection and its prototype in the corresponding distributeShardsLike collection have mismatching leaders (when they should already have been fixed)"

ERROR_CLUSTER_REPAIRS_MISMATCHING_FOLLOWERS,5005,"mismatching followers during cluster repairs","Will be raised if a shard in collection and its prototype in the corresponding distributeShardsLike collection don't have the same followers (when they should already have been adjusted)"

ERROR_CLUSTER_REPAIRS_INCONSISTENT_ATTRIBUTES,5006,"inconsistent attributes during cluster repairs","Will be raised if a collection that is fixed does (not) have distributeShardsLike when it is expected, or does (not) have repairingDistributeShardsLike when it is expected"

ERROR_CLUSTER_REPAIRS_MISMATCHING_SHARDS,5007,"mismatching shards during cluster repairs","Will be raised if in a collection and its distributeShardsLike prototype collection some shard and its prototype have an unequal number of DB Servers"

ERROR_CLUSTER_REPAIRS_JOB_FAILED,5008,"move shard job failed during cluster repairs","Will be raised if a move shard job in the agency failed during cluster repairs"

ERROR_CLUSTER_REPAIRS_JOB_DISAPPEARED,5009,"move shard job disappeared during cluster repairs","Will be raised if a move shard job in the agency cannot be found anymore before it finished"

ERROR_CLUSTER_REPAIRS_OPERATION_FAILED,5010,"agency transaction failed during cluster repairs","Will be raised if an agency transaction failed during either sending or executing it."



################################################################################

## Agency errors

################################################################################



ERROR_AGENCY_INQUIRY_SYNTAX,20001,"Illegal inquiry syntax","Inquiry handles a list of string clientIds: [<clientId>,...]."

ERROR_AGENCY_INFORM_MUST_BE_OBJECT,20011,"Inform message must be an object.","The inform message in the agency must be an object."

ERROR_AGENCY_INFORM_MUST_CONTAIN_TERM,20012,"Inform message must contain uint parameter 'term'","The inform message in the agency must contain a uint parameter 'term'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_ID,20013,"Inform message must contain string parameter 'id'","The inform message in the agency must contain a string parameter 'id'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_ACTIVE,20014,"Inform message must contain array 'active'","The inform message in the agency must contain an array 'active'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_POOL,20015,"Inform message must contain object 'pool'","The inform message in the agency must contain an object 'pool'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_MIN_PING,20016,"Inform message must contain object 'min ping'","The inform message in the agency must contain an object 'min ping'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_MAX_PING,20017,"Inform message must contain object 'max ping'","The inform message in the agency must contain an object 'max ping'."

ERROR_AGENCY_INFORM_MUST_CONTAIN_TIMEOUT_MULT,20018,"Inform message must contain object 'timeoutMult'","The inform message in the agency must contain an object 'timeoutMult'."

ERROR_AGENCY_INQUIRE_CLIENT_ID_MUST_BE_STRING,20020,"Inquiry failed","Inquiry by clientId failed"

ERROR_AGENCY_CANNOT_REBUILD_DBS,20021,"Cannot rebuild readDB and spearHead","Will be raised if the readDB or the spearHead cannot be rebuilt from the replicated log."



################################################################################

## Supervision errors

################################################################################



ERROR_SUPERVISION_GENERAL_FAILURE,20501,"general supervision failure","General supervision failure."



################################################################################

## Dispatcher errors

################################################################################



ERROR_DISPATCHER_IS_STOPPING,21001,"dispatcher stopped","Will be returned if a shutdown is in progress."

ERROR_QUEUE_UNKNOWN,21002,"named queue does not exist","Will be returned if a queue with this name does not exist."

ERROR_QUEUE_FULL,21003,"named queue is full","Will be returned if a queue with this name is full."

@endDocuBlock 

<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-skiplist.md -->
    @startDocuBlockInline ensureUniqueSkiplistSingle


<div class="example-container" id="ensureUniqueSkiplistSingle_container">
<a class="anchorjs-link " href="#ensureUniqueSkiplistSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureUniqueSkiplistSingle_long" style="Display: none;">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"myId"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"myId"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"ids/16437"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16440"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16440"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7btq--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">456</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16444"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16444"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7btq--B"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">789</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16447"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16447"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7btu--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index <span class="hljs-number">16437</span> <span class="hljs-keyword">of</span> type skiplist over [<span class="hljs-string">"myId"</span>]; conflicting key: <span class="hljs-number">16440</span>]
</pre>
<div id="ensureUniqueSkiplistSingle_container_collapse" onclick="$('#ensureUniqueSkiplistSingle_long').hide(); $('#ensureUniqueSkiplistSingle_short').show(); window.location.hash='ensureUniqueSkiplistSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniqueSkiplistSingle_short" onclick="$('#ensureUniqueSkiplistSingle_short').hide(); $('#ensureUniqueSkiplistSingle_long').show();">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"myId"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">456</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">789</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniqueSkiplistSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-skiplist.md -->
    @startDocuBlockInline ensureUniqueSkiplistMultiColumn


<div class="example-container" id="ensureUniqueSkiplistMultiColumn_container">
<a class="anchorjs-link " href="#ensureUniqueSkiplistMultiColumn_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureUniqueSkiplistMultiColumn_long" style="Display: none;">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"name.first"</span>, <span class="hljs-string">"name.last"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"name.first"</span>, 
    <span class="hljs-string">"name.last"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"ids/16416"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16419"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16419"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bri--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"jens"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16423"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16423"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bri--B"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16426"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16426"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7brm--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index <span class="hljs-number">16416</span> <span class="hljs-keyword">of</span> type skiplist over [<span class="hljs-string">"name.first"</span>,<span class="hljs-string">"name.last"</span>]; conflicting key: <span class="hljs-number">16419</span>]
</pre>
<div id="ensureUniqueSkiplistMultiColumn_container_collapse" onclick="$('#ensureUniqueSkiplistMultiColumn_long').hide(); $('#ensureUniqueSkiplistMultiColumn_short').show(); window.location.hash='ensureUniqueSkiplistMultiColumn_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniqueSkiplistMultiColumn_short" onclick="$('#ensureUniqueSkiplistMultiColumn_short').hide(); $('#ensureUniqueSkiplistMultiColumn_long').show();">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"name.first"</span>, <span class="hljs-string">"name.last"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"jens"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniqueSkiplistMultiColumn


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-skiplist.md -->
    @startDocuBlockInline ensureSkiplist


<div class="example-container" id="ensureSkiplist_container">
<a class="anchorjs-link " href="#ensureSkiplist_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureSkiplist_long" style="Display: none;">
<pre>
arangosh&gt; db.names.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"first"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"first"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"names/16282"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16285"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16285"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bc2--_"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16289"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16289"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bc2--B"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"John"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16292"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16292"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bc6--_"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16295"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16295"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bc6--B"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16298"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16298"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bc6--D"</span> 
}
</pre>
<div id="ensureSkiplist_container_collapse" onclick="$('#ensureSkiplist_long').hide(); $('#ensureSkiplist_short').show(); window.location.hash='ensureSkiplist_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureSkiplist_short" onclick="$('#ensureSkiplist_short').hide(); $('#ensureSkiplist_long').show();">
<pre>
arangosh&gt; db.names.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"first"</span> ] });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"John"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureSkiplist


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-skiplist.md -->
    @startDocuBlockInline ensureSkiplistArray


<div class="example-container" id="ensureSkiplistArray_container">
<a class="anchorjs-link " href="#ensureSkiplistArray_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureSkiplistArray_long" style="Display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a[*]"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a[*]"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/16305"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ] });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16308"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16308"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7be6--_"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">3</span> ] });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16312"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16312"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bf---_"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-literal">null</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16315"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16315"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bf---B"</span> 
}
</pre>
<div id="ensureSkiplistArray_container_collapse" onclick="$('#ensureSkiplistArray_long').hide(); $('#ensureSkiplistArray_short').show(); window.location.hash='ensureSkiplistArray_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureSkiplistArray_short" onclick="$('#ensureSkiplistArray_short').hide(); $('#ensureSkiplistArray_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a[*]"</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">3</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-literal">null</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureSkiplistArray


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-persistent.md -->
    @startDocuBlockInline ensureUniquePersistentSingle


<div class="example-container" id="ensureUniquePersistentSingle_container">
<a class="anchorjs-link " href="#ensureUniquePersistentSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureUniquePersistentSingle_long" style="Display: none;">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"persistent"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"myId"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"myId"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"ids/16359"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16362"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16362"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7blK--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">456</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16366"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16366"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7blO--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">789</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16369"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16369"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7blO--B"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index <span class="hljs-number">16359</span> <span class="hljs-keyword">of</span> type persistent over [<span class="hljs-string">"myId"</span>]; conflicting key: <span class="hljs-number">16362</span>]
</pre>
<div id="ensureUniquePersistentSingle_container_collapse" onclick="$('#ensureUniquePersistentSingle_long').hide(); $('#ensureUniquePersistentSingle_short').show(); window.location.hash='ensureUniquePersistentSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniquePersistentSingle_short" onclick="$('#ensureUniquePersistentSingle_short').hide(); $('#ensureUniquePersistentSingle_long').show();">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"persistent"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"myId"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">456</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">789</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"myId"</span>: <span class="hljs-number">123</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniquePersistentSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-persistent.md -->
    @startDocuBlockInline ensureUniquePersistentMultiColmun


<div class="example-container" id="ensureUniquePersistentMultiColmun_container">
<a class="anchorjs-link " href="#ensureUniquePersistentMultiColmun_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureUniquePersistentMultiColmun_long" style="Display: none;">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"persistent"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"name.first"</span>, <span class="hljs-string">"name.last"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"name.first"</span>, 
    <span class="hljs-string">"name.last"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"ids/16340"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16343"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16343"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bjG--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"jens"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16347"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16347"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bjK--_"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"ids/16350"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16350"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bjK--B"</span> 
}
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index <span class="hljs-number">16340</span> <span class="hljs-keyword">of</span> type persistent over [<span class="hljs-string">"name.first"</span>,<span class="hljs-string">"name.last"</span>]; conflicting key: <span class="hljs-number">16343</span>]
</pre>
<div id="ensureUniquePersistentMultiColmun_container_collapse" onclick="$('#ensureUniquePersistentMultiColmun_long').hide(); $('#ensureUniquePersistentMultiColmun_short').show(); window.location.hash='ensureUniquePersistentMultiColmun_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniquePersistentMultiColmun_short" onclick="$('#ensureUniquePersistentMultiColmun_short').hide(); $('#ensureUniquePersistentMultiColmun_long').show();">
<pre>
arangosh&gt; db.ids.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"persistent"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"name.first"</span>, <span class="hljs-string">"name.last"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"jens"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"jensen"</span> }});
arangosh&gt; db.ids.save({ <span class="hljs-string">"name"</span> : { <span class="hljs-string">"first"</span> : <span class="hljs-string">"hans"</span>, <span class="hljs-string">"last"</span>: <span class="hljs-string">"hansen"</span> }});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniquePersistentMultiColmun


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-persistent.md -->
    @startDocuBlockInline ensurePersistent


<div class="example-container" id="ensurePersistent_container">
<a class="anchorjs-link " href="#ensurePersistent_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensurePersistent_long" style="Display: none;">
<pre>
arangosh&gt; db.names.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"persistent"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"first"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"first"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"names/16259"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16262"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16262"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bay--_"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16266"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16266"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bay--B"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"John"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16269"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16269"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ba2--_"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16272"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16272"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ba2--B"</span> 
}
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"names/16275"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16275"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ba2--D"</span> 
}
</pre>
<div id="ensurePersistent_container_collapse" onclick="$('#ensurePersistent_long').hide(); $('#ensurePersistent_short').show(); window.location.hash='ensurePersistent_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensurePersistent_short" onclick="$('#ensurePersistent_short').hide(); $('#ensurePersistent_long').show();">
<pre>
arangosh&gt; db.names.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"persistent"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"first"</span> ] });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"John"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tim"</span> });
arangosh&gt; db.names.save({ <span class="hljs-string">"first"</span> : <span class="hljs-string">"Tom"</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensurePersistent


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-fulltext-queries.md -->
    @startDocuBlockInline collectionFulltext


<div class="example-container" id="collectionFulltext_container">
<a class="anchorjs-link " href="#collectionFulltext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionFulltext_long" style="Display: none;">
<pre>
arangosh&gt; db.emails.ensureFulltextIndex(<span class="hljs-string">"content"</span>);
{ 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"content"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"emails/15573"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"minLength"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">"Hello Alice, how are you doing? Regards, Bob"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"emails/15576"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15576"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ac6--_"</span> 
}
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">"Hello Charlie, do Alice and Bob know about it?"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"emails/15580"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15580"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ac6--B"</span> 
}
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>: <span class="hljs-string">"I think they don't know. Regards, Eve"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"emails/15583"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15583"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ad---_"</span> 
}
arangosh&gt; db.emails.fulltext(<span class="hljs-string">"content"</span>, <span class="hljs-string">"charlie,|eve"</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15580"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"emails/15580"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ac6--B"</span>, 
    <span class="hljs-string">"content"</span> : <span class="hljs-string">"Hello Charlie, do Alice and Bob know about it?"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15583"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"emails/15583"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ad---_"</span>, 
    <span class="hljs-string">"content"</span> : <span class="hljs-string">"I think they don't know. Regards, Eve"</span> 
  } 
]
</pre>
<div id="collectionFulltext_container_collapse" onclick="$('#collectionFulltext_long').hide(); $('#collectionFulltext_short').show(); window.location.hash='collectionFulltext_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFulltext_short" onclick="$('#collectionFulltext_short').hide(); $('#collectionFulltext_long').show();">
<pre>
arangosh&gt; db.emails.ensureFulltextIndex(<span class="hljs-string">"content"</span>);
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">"Hello Alice, how are you doing? Regards, Bob"</span>});
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>:
........&gt; <span class="hljs-string">"Hello Charlie, do Alice and Bob know about it?"</span>});
arangosh&gt; db.emails.save({ <span class="hljs-attr">content</span>: <span class="hljs-string">"I think they don't know. Regards, Eve"</span> });
arangosh&gt; db.emails.fulltext(<span class="hljs-string">"content"</span>, <span class="hljs-string">"charlie,|eve"</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFulltext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh-output.md -->
    @startDocuBlockInline lastExpressionResult


<div class="example-container" id="lastExpressionResult_container">
<a class="anchorjs-link " href="#lastExpressionResult_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="lastExpressionResult_long">
<pre>
arangosh&gt; <span class="hljs-number">42</span> * <span class="hljs-number">23</span>
<span class="hljs-number">966</span>
</pre>
</div>
</div>

    @endDocuBlock lastExpressionResult


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh-output.md -->
    @startDocuBlockInline lastExpressionResultCaptured


<div class="example-container" id="lastExpressionResultCaptured_container">
<a class="anchorjs-link " href="#lastExpressionResultCaptured_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="lastExpressionResultCaptured_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> calculationResult = <span class="hljs-number">42</span> * <span class="hljs-number">23</span>
</pre>
</div>
</div>

    @endDocuBlock lastExpressionResultCaptured


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh-output.md -->
    @startDocuBlockInline printFunction


<div class="example-container" id="printFunction_container">
<a class="anchorjs-link " href="#printFunction_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="printFunction_long" style="Display: none;">
<pre>
arangosh&gt; print({ <span class="hljs-attr">a</span>: <span class="hljs-string">"123"</span>, <span class="hljs-attr">b</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>], <span class="hljs-attr">c</span>: <span class="hljs-string">"test"</span> });
{ 
  <span class="hljs-string">"a"</span> : <span class="hljs-string">"123"</span>, 
  <span class="hljs-string">"b"</span> : [ 
    <span class="hljs-number">1</span>, 
    <span class="hljs-number">2</span>, 
    <span class="hljs-number">3</span> 
  ], 
  <span class="hljs-string">"c"</span> : <span class="hljs-string">"test"</span> 
}
</pre>
<div id="printFunction_container_collapse" onclick="$('#printFunction_long').hide(); $('#printFunction_short').show(); window.location.hash='printFunction_container';" class="example_show_button">Hide execution results</div></div>
<div id="printFunction_short" onclick="$('#printFunction_short').hide(); $('#printFunction_long').show();">
<pre>
arangosh&gt; print({ <span class="hljs-attr">a</span>: <span class="hljs-string">"123"</span>, <span class="hljs-attr">b</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>], <span class="hljs-attr">c</span>: <span class="hljs-string">"test"</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock printFunction


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh-output.md -->
    @startDocuBlockInline usingToArray


<div class="example-container" id="usingToArray_container">
<a class="anchorjs-link " href="#usingToArray_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="usingToArray_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"five"</span>)
[ArangoCollection <span class="hljs-number">36767</span>, <span class="hljs-string">"five"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.five.save({<span class="hljs-attr">value</span>:i})
arangosh&gt; db.five.toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36775"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36775"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j56--B"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36771"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36771"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j56--_"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36778"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36778"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j56--D"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36781"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36781"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j56--F"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">3</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36784"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36784"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j6---_"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">4</span> 
  } 
]
</pre>
<div id="usingToArray_container_collapse" onclick="$('#usingToArray_long').hide(); $('#usingToArray_short').show(); window.location.hash='usingToArray_container';" class="example_show_button">Hide execution results</div></div>
<div id="usingToArray_short" onclick="$('#usingToArray_short').hide(); $('#usingToArray_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"five"</span>)
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.five.save({<span class="hljs-attr">value</span>:i})
arangosh&gt; db.five.toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock usingToArray


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-html-example.md -->
    @startDocuBlockInline HTML_01_routingCreateHtml


<div class="example-container" id="HTML_01_routingCreateHtml_container">
<a class="anchorjs-link " href="#HTML_01_routingCreateHtml_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HTML_01_routingCreateHtml_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: { 
........&gt;    match: <span class="hljs-string">"/hello/world"</span> 
........&gt;  },
........&gt;  content: { 
........&gt;    contentType: <span class="hljs-string">"text/html"</span>, 
........&gt;    body: <span class="hljs-string">"&lt;html&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;"</span> 
........&gt;  }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/7894"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7894"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LG2--_"</span> 
}
</pre>
<div id="HTML_01_routingCreateHtml_container_collapse" onclick="$('#HTML_01_routingCreateHtml_long').hide(); $('#HTML_01_routingCreateHtml_short').show(); window.location.hash='HTML_01_routingCreateHtml_container';" class="example_show_button">Hide execution results</div></div>
<div id="HTML_01_routingCreateHtml_short" onclick="$('#HTML_01_routingCreateHtml_short').hide(); $('#HTML_01_routingCreateHtml_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: { 
........&gt;    match: <span class="hljs-string">"/hello/world"</span> 
........&gt;  },
........&gt;  content: { 
........&gt;    contentType: <span class="hljs-string">"text/html"</span>, 
........&gt;    body: <span class="hljs-string">"&lt;html&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;"</span> 
........&gt;  }
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock HTML_01_routingCreateHtml


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-html-example.md -->
    @startDocuBlockInline HTML_02_routingReload


<div class="example-container" id="HTML_02_routingReload_container">
<a class="anchorjs-link " href="#HTML_02_routingReload_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HTML_02_routingReload_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
</div>
</div>

    @endDocuBlock HTML_02_routingReload


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-html-example.md -->
    @startDocuBlockInline HTML_03_routingCurlHtml


<div class="example-container" id="HTML_03_routingCurlHtml_container">
<a class="anchorjs-link " href="#HTML_03_routingCurlHtml_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HTML_03_routingCurlHtml_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/world

HTTP/1.1 200 OK
content-type: text/html
x-content-type-options: nosniff

"<html><body>Hello World</body></html>"
</pre>
</div>
</div>

    @endDocuBlock HTML_03_routingCurlHtml


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-html-example.md -->
    @startDocuBlockInline HTML_04_routingCreateMultiPath


<div class="example-container" id="HTML_04_routingCreateMultiPath_container">
<a class="anchorjs-link " href="#HTML_04_routingCreateMultiPath_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HTML_04_routingCreateMultiPath_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/hello/world"</span> },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 1"</span>} });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/7908"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7908"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LJa--_"</span> 
}
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/hello/:name"</span>, <span class="hljs-attr">constraint</span>: { <span class="hljs-attr">name</span>: <span class="hljs-string">"/[a-z]+/"</span> } },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 2"</span>} });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/7912"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7912"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LJa--B"</span> 
}
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/:something/world"</span> },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 3"</span>} });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/7915"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7915"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LJe--_"</span> 
}
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/hi/*"</span> },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 4"</span>} });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/7918"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7918"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LJe--B"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="HTML_04_routingCreateMultiPath_container_collapse" onclick="$('#HTML_04_routingCreateMultiPath_long').hide(); $('#HTML_04_routingCreateMultiPath_short').show(); window.location.hash='HTML_04_routingCreateMultiPath_container';" class="example_show_button">Hide execution results</div></div>
<div id="HTML_04_routingCreateMultiPath_short" onclick="$('#HTML_04_routingCreateMultiPath_short').hide(); $('#HTML_04_routingCreateMultiPath_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/hello/world"</span> },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 1"</span>} });
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/hello/:name"</span>, <span class="hljs-attr">constraint</span>: { <span class="hljs-attr">name</span>: <span class="hljs-string">"/[a-z]+/"</span> } },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 2"</span>} });
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/:something/world"</span> },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 3"</span>} });
arangosh&gt; db._routing.save({ 
........&gt;  url: { <span class="hljs-attr">match</span>: <span class="hljs-string">"/hi/*"</span> },
........&gt; content: { <span class="hljs-attr">contentType</span>: <span class="hljs-string">"text/plain"</span>, <span class="hljs-attr">body</span>: <span class="hljs-string">"Match No 4"</span>} });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock HTML_04_routingCreateMultiPath


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-html-example.md -->
    @startDocuBlockInline HTML_05_routingGetMultiPath


<div class="example-container" id="HTML_05_routingGetMultiPath_container">
<a class="anchorjs-link " href="#HTML_05_routingGetMultiPath_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HTML_05_routingGetMultiPath_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/world

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"Match No 1"
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/emil

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"Match No 2"
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/your/world

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"Match No 3"
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hi/you

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"Match No 4"
</pre>
</div>
</div>

    @endDocuBlock HTML_05_routingGetMultiPath


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh.md -->
    @startDocuBlockInline shellUseDB


<div class="example-container" id="shellUseDB_container">
<a class="anchorjs-link " href="#shellUseDB_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="shellUseDB_long">
<pre>
arangosh&gt; db._createDatabase(<span class="hljs-string">"myapp"</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._useDatabase(<span class="hljs-string">"myapp"</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._useDatabase(<span class="hljs-string">"_system"</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._dropDatabase(<span class="hljs-string">"myapp"</span>);
<span class="hljs-literal">true</span>
</pre>
</div>
</div>

    @endDocuBlock shellUseDB


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh.md -->
    @startDocuBlockInline shellHelp


<div class="example-container" id="shellHelp_container">
<a class="anchorjs-link " href="#shellHelp_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="shellHelp_long" style="Display: none;">
<pre>
arangosh&gt; db._help(); 

--------------------------- ArangoDatabase (db) help ---------------------------
Administration Functions:                                                 
  _help()                               <span class="hljs-keyword">this</span> help                         
  _flushCache()                         flush and refill collection cache 
                                                                          
Collection Functions:                                                     
  _collections()                        list all collections              
  _collection(&lt;name&gt;)                   get collection by identifier/name 
  _create(&lt;name&gt;, &lt;properties&gt;)         creates a new collection          
  _createEdgeCollection(&lt;name&gt;)         creates a new edge collection     
  _drop(&lt;name&gt;)                         delete a collection               
                                                                          
Document Functions:                                                       
  _document(&lt;id&gt;)                       get document by handle (_id)      
  _replace(&lt;id&gt;, &lt;data&gt;, &lt;overwrite&gt;)   overwrite document                
  _update(&lt;id&gt;, &lt;data&gt;, &lt;overwrite&gt;,    partially update document         
          &lt;keepNull&gt;)                                                     
  _remove(&lt;id&gt;)                         delete document                   
  _exists(&lt;id&gt;)                         checks whether a document exists  
  _truncate()                           delete all documents              
                                                                          
Database Management Functions:                                            
  _createDatabase(&lt;name&gt;)               creates a new database            
  _dropDatabase(&lt;name&gt;)                 drops an existing database        
  _useDatabase(&lt;name&gt;)                  switches into an existing database
  _drop(&lt;name&gt;)                         delete a collection               
  _name()                               name of the current database      
                                                                          
Query / Transaction Functions:                                            
  _executeTransaction(&lt;transaction&gt;)    execute transaction               
  _query(&lt;query&gt;)                       execute AQL query                 
  _createStatement(&lt;data&gt;)              create and return AQL query       
                                                                          
View Functions:                                                           
  _views()                                  list all views                
  _view(&lt;name&gt;)                             get view by name              
  _createView(&lt;name&gt;, &lt;type&gt;, &lt;properties&gt;) creates a new view            
</pre>
<div id="shellHelp_container_collapse" onclick="$('#shellHelp_long').hide(); $('#shellHelp_short').show(); window.location.hash='shellHelp_container';" class="example_show_button">Hide execution results</div></div>
<div id="shellHelp_short" onclick="$('#shellHelp_short').hide(); $('#shellHelp_long').show();">
<pre>
arangosh&gt; db._help(); 
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock shellHelp


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-arangosh.md -->
    @startDocuBlockInline shellPaste


<div class="example-container" id="shellPaste_container">
<a class="anchorjs-link " href="#shellPaste_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="shellPaste_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++) {
........&gt;         <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).print(<span class="hljs-string">"Hello world "</span> + i + <span class="hljs-string">"!\n"</span>);
........&gt; }
Hello world <span class="hljs-number">0</span>!

Hello world <span class="hljs-number">1</span>!

Hello world <span class="hljs-number">2</span>!

Hello world <span class="hljs-number">3</span>!

Hello world <span class="hljs-number">4</span>!

Hello world <span class="hljs-number">5</span>!

Hello world <span class="hljs-number">6</span>!

Hello world <span class="hljs-number">7</span>!

Hello world <span class="hljs-number">8</span>!

Hello world <span class="hljs-number">9</span>!

</pre>
<div id="shellPaste_container_collapse" onclick="$('#shellPaste_long').hide(); $('#shellPaste_short').show(); window.location.hash='shellPaste_container';" class="example_show_button">Hide execution results</div></div>
<div id="shellPaste_short" onclick="$('#shellPaste_short').hide(); $('#shellPaste_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i ++) {
........&gt;         <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).print(<span class="hljs-string">"Hello world "</span> + i + <span class="hljs-string">"!\n"</span>);
........&gt; }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock shellPaste


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline collectionGetIndexes


<div class="example-container" id="collectionGetIndexes_container">
<a class="anchorjs-link " href="#collectionGetIndexes_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionGetIndexes_long" style="Display: none;">
<pre>
arangosh&gt; db.test.ensureHashIndex(<span class="hljs-string">"hashListAttribute"</span>,
........&gt; <span class="hljs-string">"hashListSecondAttribute.subAttribute"</span>);
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"hashListAttribute"</span>, 
    <span class="hljs-string">"hashListSecondAttribute.subAttribute"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/15599"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.getIndexes();
[ 
  { 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"_key"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/0"</span>, 
    <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"skiplistAttribute"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/15593"</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"skiplistUniqueAttribute"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/15596"</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"hashListAttribute"</span>, 
      <span class="hljs-string">"hashListSecondAttribute.subAttribute"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/15599"</span>, 
    <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
  } 
]
</pre>
<div id="collectionGetIndexes_container_collapse" onclick="$('#collectionGetIndexes_long').hide(); $('#collectionGetIndexes_short').show(); window.location.hash='collectionGetIndexes_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionGetIndexes_short" onclick="$('#collectionGetIndexes_short').hide(); $('#collectionGetIndexes_long').show();">
<pre>
arangosh&gt; db.test.ensureHashIndex(<span class="hljs-string">"hashListAttribute"</span>,
........&gt; <span class="hljs-string">"hashListSecondAttribute.subAttribute"</span>);
arangosh&gt; db.test.getIndexes();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionGetIndexes


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline collectionEnsureIndex


<div class="example-container" id="collectionEnsureIndex_container">
<a class="anchorjs-link " href="#collectionEnsureIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionEnsureIndex_long" style="Display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span> ], <span class="hljs-attr">sparse</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/15543"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/15546"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="collectionEnsureIndex_container_collapse" onclick="$('#collectionEnsureIndex_long').hide(); $('#collectionEnsureIndex_short').show(); window.location.hash='collectionEnsureIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionEnsureIndex_short" onclick="$('#collectionEnsureIndex_short').hide(); $('#collectionEnsureIndex_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span> ], <span class="hljs-attr">sparse</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionEnsureIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline col_dropIndex


<div class="example-container" id="col_dropIndex_container">
<a class="anchorjs-link " href="#col_dropIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="col_dropIndex_long" style="Display: none;">
<pre>
arangosh&gt; db.example.ensureSkiplist(<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>);
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/15405"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
[ 
  { 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"_key"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/0"</span>, 
    <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"a"</span>, 
      <span class="hljs-string">"b"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/15405"</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
  } 
]
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">0</span>])
<span class="hljs-literal">false</span>
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
<span class="hljs-literal">true</span>
arangosh&gt; indexInfo = db.example.getIndexes();
[ 
  { 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"_key"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/0"</span>, 
    <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  } 
]
</pre>
<div id="col_dropIndex_container_collapse" onclick="$('#col_dropIndex_long').hide(); $('#col_dropIndex_short').show(); window.location.hash='col_dropIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="col_dropIndex_short" onclick="$('#col_dropIndex_short').hide(); $('#col_dropIndex_long').show();">
<pre>
arangosh&gt; db.example.ensureSkiplist(<span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">0</span>])
arangosh&gt; db.example.dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
arangosh&gt; indexInfo = db.example.getIndexes();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock col_dropIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline LoadIndexesIntoMemory


<div class="example-container" id="loadIndexesIntoMemory_container">
<a class="anchorjs-link " href="#loadIndexesIntoMemory_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="loadIndexesIntoMemory_long">
<pre>
arangosh&gt; db.example.loadIndexesIntoMemory();
{ 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>

    @endDocuBlock LoadIndexesIntoMemory


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline IndexHandle


<div class="example-container" id="IndexHandle_container">
<a class="anchorjs-link " href="#IndexHandle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="IndexHandle_long" style="Display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/9576"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
arangosh&gt; indexInfo;
[ 
  <span class="hljs-string">"example/0"</span>, 
  <span class="hljs-string">"example/9576"</span> 
]
arangosh&gt; db._index(indexInfo[<span class="hljs-number">0</span>])
{ 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"_key"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/0"</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
arangosh&gt; db._index(indexInfo[<span class="hljs-number">1</span>])
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/9576"</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="IndexHandle_container_collapse" onclick="$('#IndexHandle_long').hide(); $('#IndexHandle_short').show(); window.location.hash='IndexHandle_container';" class="example_show_button">Hide execution results</div></div>
<div id="IndexHandle_short" onclick="$('#IndexHandle_short').hide(); $('#IndexHandle_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ] });
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
arangosh&gt; indexInfo;
arangosh&gt; db._index(indexInfo[<span class="hljs-number">0</span>])
arangosh&gt; db._index(indexInfo[<span class="hljs-number">1</span>])
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock IndexHandle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline dropIndex


<div class="example-container" id="dropIndex_container">
<a class="anchorjs-link " href="#dropIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="dropIndex_long" style="Display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/16183"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
[ 
  { 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"_key"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/0"</span>, 
    <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"a"</span>, 
      <span class="hljs-string">"b"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/16183"</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
  } 
]
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">0</span>])
<span class="hljs-literal">false</span>
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
<span class="hljs-literal">true</span>
arangosh&gt; indexInfo = db.example.getIndexes();
[ 
  { 
    <span class="hljs-string">"fields"</span> : [ 
      <span class="hljs-string">"_key"</span> 
    ], 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/0"</span>, 
    <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
    <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
  } 
]
</pre>
<div id="dropIndex_container_collapse" onclick="$('#dropIndex_long').hide(); $('#dropIndex_short').show(); window.location.hash='dropIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="dropIndex_short" onclick="$('#dropIndex_short').hide(); $('#dropIndex_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ] });
arangosh&gt; <span class="hljs-keyword">var</span> indexInfo = db.example.getIndexes();
arangosh&gt; indexInfo;
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">0</span>])
arangosh&gt; db._dropIndex(indexInfo[<span class="hljs-number">1</span>].id)
arangosh&gt; indexInfo = db.example.getIndexes();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock dropIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-working-with-indexes.md -->
    @startDocuBlockInline IndexVerify


<div class="example-container" id="IndexVerify_container">
<a class="anchorjs-link " href="#IndexVerify_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="IndexVerify_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> explain = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/explainer"</span>).explain;
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/9586"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; explain(<span class="hljs-string">"FOR doc IN example FILTER doc.a &lt; 23 RETURN doc"</span>, {<span class="hljs-attr">colors</span>:<span class="hljs-literal">false</span>});
Query string:
 FOR doc IN example FILTER doc.a &lt; <span class="hljs-number">23</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">6</span>   IndexNode          <span class="hljs-number">1</span>     - FOR doc IN example   <span class="hljs-comment">/* skiplist index scan */</span>
  <span class="hljs-number">5</span>   ReturnNode         <span class="hljs-number">1</span>       - RETURN doc

Indexes used:
 By   Type       Collection   Unique   Sparse   Selectivity   Fields         Ranges
  <span class="hljs-number">6</span>   skiplist   example      <span class="hljs-literal">false</span>    <span class="hljs-literal">false</span>            n/a   [ <span class="hljs-string">`a`</span>, <span class="hljs-string">`b`</span> ]   (doc.<span class="hljs-string">`a`</span> &lt; <span class="hljs-number">23</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   use-indexes
  <span class="hljs-number">2</span>   remove-filter-covered-by-index
  <span class="hljs-number">3</span>   remove-unnecessary-calculations<span class="hljs-number">-2</span>


</pre>
<div id="IndexVerify_container_collapse" onclick="$('#IndexVerify_long').hide(); $('#IndexVerify_short').show(); window.location.hash='IndexVerify_container';" class="example_show_button">Hide execution results</div></div>
<div id="IndexVerify_short" onclick="$('#IndexVerify_short').hide(); $('#IndexVerify_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> explain = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/explainer"</span>).explain;
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b"</span> ] });
arangosh&gt; explain(<span class="hljs-string">"FOR doc IN example FILTER doc.a &lt; 23 RETURN doc"</span>, {<span class="hljs-attr">colors</span>:<span class="hljs-literal">false</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock IndexVerify


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-access.md -->
    @startDocuBlockInline cursorHasNext


<div class="example-container" id="cursorHasNext_container">
<a class="anchorjs-link " href="#cursorHasNext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="cursorHasNext_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> a = db.five.all();
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15784"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/15784"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7auu--B"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"two"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15780"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/15780"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7auu--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"one"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15787"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/15787"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7auu--D"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15793"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/15793"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7auy--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"five"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15790"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/15790"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7auu--F"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"four"</span> 
}
</pre>
<div id="cursorHasNext_container_collapse" onclick="$('#cursorHasNext_long').hide(); $('#cursorHasNext_short').show(); window.location.hash='cursorHasNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="cursorHasNext_short" onclick="$('#cursorHasNext_short').hide(); $('#cursorHasNext_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> a = db.five.all();
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock cursorHasNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-access.md -->
    @startDocuBlockInline cursorNext


<div class="example-container" id="cursorNext_container">
<a class="anchorjs-link " href="#cursorNext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="cursorNext_long" style="Display: none;">
<pre>
arangosh&gt; db.five.all().next();
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15808"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/15808"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7av2--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
}
</pre>
<div id="cursorNext_container_collapse" onclick="$('#cursorNext_long').hide(); $('#cursorNext_short').show(); window.location.hash='cursorNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="cursorNext_short" onclick="$('#cursorNext_short').hide(); $('#cursorNext_long').show();">
<pre>
arangosh&gt; db.five.all().next();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock cursorNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-access.md -->
    @startDocuBlockInline executeQueryNoBatchSize


<div class="example-container" id="executeQueryNoBatchSize_container">
<a class="anchorjs-link " href="#executeQueryNoBatchSize_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="executeQueryNoBatchSize_long" style="Display: none;">
<pre>
arangosh&gt; result = db.users.all().toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16499"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16499"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7by6--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helmut"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16502"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16502"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7by6--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16495"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16495"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7by6--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> 
  } 
]
arangosh&gt; q = db.users.all(); q.execute(); result = [ ]; <span class="hljs-keyword">while</span> (q.hasNext()) { result.push(q.next()); }
SimpleQueryAll(users)
</pre>
<div id="executeQueryNoBatchSize_container_collapse" onclick="$('#executeQueryNoBatchSize_long').hide(); $('#executeQueryNoBatchSize_short').show(); window.location.hash='executeQueryNoBatchSize_container';" class="example_show_button">Hide execution results</div></div>
<div id="executeQueryNoBatchSize_short" onclick="$('#executeQueryNoBatchSize_short').hide(); $('#executeQueryNoBatchSize_long').show();">
<pre>
arangosh&gt; result = db.users.all().toArray();
arangosh&gt; q = db.users.all(); q.execute(); result = [ ]; <span class="hljs-keyword">while</span> (q.hasNext()) { result.push(q.next()); }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock executeQueryNoBatchSize


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-access.md -->
    @startDocuBlockInline executeQueryBatchSize


<div class="example-container" id="executeQueryBatchSize_container">
<a class="anchorjs-link " href="#executeQueryBatchSize_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="executeQueryBatchSize_long" style="Display: none;">
<pre>
arangosh&gt; q = db.users.all(); q.setBatchSize(<span class="hljs-number">20</span>); q.execute(); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16479"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16479"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bx2--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16486"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16486"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bx6--B"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16483"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16483"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bx6--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helmut"</span> 
}
SimpleQueryAll(users)
arangosh&gt; q = db.users.all(); q.execute(<span class="hljs-number">20</span>); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16479"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16479"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bx2--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16486"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16486"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bx6--B"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> 
}
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16483"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/16483"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bx6--_"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helmut"</span> 
}
SimpleQueryAll(users)
</pre>
<div id="executeQueryBatchSize_container_collapse" onclick="$('#executeQueryBatchSize_long').hide(); $('#executeQueryBatchSize_short').show(); window.location.hash='executeQueryBatchSize_container';" class="example_show_button">Hide execution results</div></div>
<div id="executeQueryBatchSize_short" onclick="$('#executeQueryBatchSize_short').hide(); $('#executeQueryBatchSize_long').show();">
<pre>
arangosh&gt; q = db.users.all(); q.setBatchSize(<span class="hljs-number">20</span>); q.execute(); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
arangosh&gt; q = db.users.all(); q.execute(<span class="hljs-number">20</span>); <span class="hljs-keyword">while</span> (q.hasNext()) { print(q.next()); }
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock executeQueryBatchSize


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionDrop


<div class="example-container" id="collectionDrop_container">
<a class="anchorjs-link " href="#collectionDrop_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDrop_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15531</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.drop();
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">15531</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionDropSystem


<div class="example-container" id="collectionDropSystem_container">
<a class="anchorjs-link " href="#collectionDropSystem_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDropSystem_long">
<pre>
arangosh&gt; col = db._example;
[ArangoCollection <span class="hljs-number">15535</span>, <span class="hljs-string">"_example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.drop({ <span class="hljs-attr">isSystem</span>: <span class="hljs-literal">true</span> });
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">15535</span>, <span class="hljs-string">"_example"</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDropSystem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionTruncate


<div class="example-container" id="collectionTruncate_container">
<a class="anchorjs-link " href="#collectionTruncate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionTruncate_long" style="Display: none;">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15692</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.save({ <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15696"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15696"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ape--_"</span> 
}
arangosh&gt; col.count();
<span class="hljs-number">1</span>
arangosh&gt; col.truncate();
arangosh&gt; col.count();
<span class="hljs-number">0</span>
</pre>
<div id="collectionTruncate_container_collapse" onclick="$('#collectionTruncate_long').hide(); $('#collectionTruncate_short').show(); window.location.hash='collectionTruncate_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionTruncate_short" onclick="$('#collectionTruncate_short').hide(); $('#collectionTruncate_long').show();">
<pre>
arangosh&gt; col = db.example;
arangosh&gt; col.save({ <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> });
arangosh&gt; col.count();
arangosh&gt; col.truncate();
arangosh&gt; col.count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionTruncate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionFigures


<div class="example-container" id="collectionFigures_container">
<a class="anchorjs-link " href="#collectionFigures_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionFigures_long" style="Display: none;">
<pre>
arangosh&gt; db.demo.figures()
{ 
  <span class="hljs-string">"indexes"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"size"</span> : <span class="hljs-number">32128</span> 
  }, 
  <span class="hljs-string">"documentReferences"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"waitingFor"</span> : <span class="hljs-string">"-"</span>, 
  <span class="hljs-string">"alive"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"size"</span> : <span class="hljs-number">184</span> 
  }, 
  <span class="hljs-string">"dead"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"size"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"deletion"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"compactionStatus"</span> : { 
    <span class="hljs-string">"message"</span> : <span class="hljs-string">"skipped compaction because collection has no datafiles"</span>, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:43Z"</span>, 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"filesCombined"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"bytesRead"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"bytesWritten"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"datafiles"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"fileSize"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"journals"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"fileSize"</span> : <span class="hljs-number">33554432</span> 
  }, 
  <span class="hljs-string">"compactors"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"fileSize"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"revisions"</span> : { 
    <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"size"</span> : <span class="hljs-number">48192</span> 
  }, 
  <span class="hljs-string">"lastTick"</span> : <span class="hljs-number">96</span>, 
  <span class="hljs-string">"uncollectedLogfileEntries"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="collectionFigures_container_collapse" onclick="$('#collectionFigures_long').hide(); $('#collectionFigures_short').show(); window.location.hash='collectionFigures_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFigures_short" onclick="$('#collectionFigures_short').hide(); $('#collectionFigures_long').show();">
<pre>
arangosh&gt; db.demo.figures()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFigures


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionLoad


<div class="example-container" id="collectionLoad_container">
<a class="anchorjs-link " href="#collectionLoad_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionLoad_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15603</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.load();
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">15603</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionLoad


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline CollectionUnload


<div class="example-container" id="CollectionUnload_container">
<a class="anchorjs-link " href="#CollectionUnload_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="CollectionUnload_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">7427</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.unload();
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">7427</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status unloaded)]
</pre>
</div>
</div>

    @endDocuBlock CollectionUnload


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-collection-methods.md -->
    @startDocuBlockInline collectionRename


<div class="example-container" id="collectionRename_container">
<a class="anchorjs-link " href="#collectionRename_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionRename_long">
<pre>
arangosh&gt; c = db.example;
[ArangoCollection <span class="hljs-number">15686</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; c.rename(<span class="hljs-string">"better-example"</span>);
arangosh&gt; c;
[ArangoCollection <span class="hljs-number">15686</span>, <span class="hljs-string">"better-example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionRename


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs.md -->
    @startDocuBlockInline generalGraphCreateGraphHowTo1


<div class="example-container" id="generalGraphCreateGraphHowTo1_container">
<a class="anchorjs-link " href="#generalGraphCreateGraphHowTo1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphCreateGraphHowTo1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>);
arangosh&gt; graph;
{[Graph] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphHowTo1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs.md -->
    @startDocuBlockInline generalGraphCreateGraphHowTo2


<div class="example-container" id="generalGraphCreateGraphHowTo2_container">
<a class="anchorjs-link " href="#generalGraphCreateGraphHowTo2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphCreateGraphHowTo2_long" style="Display: none;">
<pre>
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"shop"</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"customer"</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"pet"</span>);
arangosh&gt; graph;
{[Graph] 
  <span class="hljs-string">"shop"</span> : [ArangoCollection <span class="hljs-number">16567</span>, <span class="hljs-string">"shop"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"customer"</span> : [ArangoCollection <span class="hljs-number">16573</span>, <span class="hljs-string">"customer"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"pet"</span> : [ArangoCollection <span class="hljs-number">16579</span>, <span class="hljs-string">"pet"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="generalGraphCreateGraphHowTo2_container_collapse" onclick="$('#generalGraphCreateGraphHowTo2_long').hide(); $('#generalGraphCreateGraphHowTo2_short').show(); window.location.hash='generalGraphCreateGraphHowTo2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphCreateGraphHowTo2_short" onclick="$('#generalGraphCreateGraphHowTo2_short').hide(); $('#generalGraphCreateGraphHowTo2_long').show();">
<pre>
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"shop"</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"customer"</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"pet"</span>);
arangosh&gt; graph;
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphHowTo2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs.md -->
    @startDocuBlockInline generalGraphCreateGraphHowTo3


<div class="example-container" id="generalGraphCreateGraphHowTo3_container">
<a class="anchorjs-link " href="#generalGraphCreateGraphHowTo3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphCreateGraphHowTo3_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> rel = graph_module._relation(<span class="hljs-string">"isCustomer"</span>, [<span class="hljs-string">"shop"</span>], [<span class="hljs-string">"customer"</span>]);
arangosh&gt; graph._extendEdgeDefinitions(rel);
arangosh&gt; graph;
{[Graph] 
  <span class="hljs-string">"isCustomer"</span> : [ArangoCollection <span class="hljs-number">16620</span>, <span class="hljs-string">"isCustomer"</span> (type edge, status loaded)], 
  <span class="hljs-string">"shop"</span> : [ArangoCollection <span class="hljs-number">16612</span>, <span class="hljs-string">"shop"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"customer"</span> : [ArangoCollection <span class="hljs-number">16616</span>, <span class="hljs-string">"customer"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"pet"</span> : [ArangoCollection <span class="hljs-number">16605</span>, <span class="hljs-string">"pet"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="generalGraphCreateGraphHowTo3_container_collapse" onclick="$('#generalGraphCreateGraphHowTo3_long').hide(); $('#generalGraphCreateGraphHowTo3_short').show(); window.location.hash='generalGraphCreateGraphHowTo3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphCreateGraphHowTo3_short" onclick="$('#generalGraphCreateGraphHowTo3_short').hide(); $('#generalGraphCreateGraphHowTo3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> rel = graph_module._relation(<span class="hljs-string">"isCustomer"</span>, [<span class="hljs-string">"shop"</span>], [<span class="hljs-string">"customer"</span>]);
arangosh&gt; graph._extendEdgeDefinitions(rel);
arangosh&gt; graph;
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphHowTo3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-vertex-centric.md -->
    @startDocuBlockInline ensureVertexCentricHashIndex


<div class="example-container" id="ensureVertexCentricHashIndex_container">
<a class="anchorjs-link " href="#ensureVertexCentricHashIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureVertexCentricHashIndex_long" style="Display: none;">
<pre>
arangosh&gt; db.collection.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"_from"</span>, <span class="hljs-string">"type"</span> ] })
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"_from"</span>, 
    <span class="hljs-string">"type"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"collection/16456"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="ensureVertexCentricHashIndex_container_collapse" onclick="$('#ensureVertexCentricHashIndex_long').hide(); $('#ensureVertexCentricHashIndex_short').show(); window.location.hash='ensureVertexCentricHashIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureVertexCentricHashIndex_short" onclick="$('#ensureVertexCentricHashIndex_short').hide(); $('#ensureVertexCentricHashIndex_long').show();">
<pre>
arangosh&gt; db.collection.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"_from"</span>, <span class="hljs-string">"type"</span> ] })
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureVertexCentricHashIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_01_routingCreateJsonHelloWorld


<div class="example-container" id="JSON_01_routingCreateJsonHelloWorld_container">
<a class="anchorjs-link " href="#JSON_01_routingCreateJsonHelloWorld_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_01_routingCreateJsonHelloWorld_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/hello/json"</span>, 
........&gt;  content: { 
........&gt;  contentType: <span class="hljs-string">"application/json"</span>, 
........&gt;    body: <span class="hljs-string">'{"hello" : "world"}'</span>
........&gt;  }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9605"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9605"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7NCq--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="JSON_01_routingCreateJsonHelloWorld_container_collapse" onclick="$('#JSON_01_routingCreateJsonHelloWorld_long').hide(); $('#JSON_01_routingCreateJsonHelloWorld_short').show(); window.location.hash='JSON_01_routingCreateJsonHelloWorld_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_01_routingCreateJsonHelloWorld_short" onclick="$('#JSON_01_routingCreateJsonHelloWorld_short').hide(); $('#JSON_01_routingCreateJsonHelloWorld_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/hello/json"</span>, 
........&gt;  content: { 
........&gt;  contentType: <span class="hljs-string">"application/json"</span>, 
........&gt;    body: <span class="hljs-string">'{"hello" : "world"}'</span>
........&gt;  }
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_01_routingCreateJsonHelloWorld


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_02_routingCurlJsonHelloWorld


<div class="example-container" id="JSON_02_routingCurlJsonHelloWorld_container">
<a class="anchorjs-link " href="#JSON_02_routingCurlJsonHelloWorld_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_02_routingCurlJsonHelloWorld_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/json

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"hello"</span> : <span class="hljs-string">"world"</span> 
}
</pre>
</div>
</div>

    @endDocuBlock JSON_02_routingCurlJsonHelloWorld


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_03_routingCleanupJsonHelloWorld


<div class="example-container" id="JSON_03_routingCleanupJsonHelloWorld_container">
<a class="anchorjs-link " href="#JSON_03_routingCleanupJsonHelloWorld_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_03_routingCleanupJsonHelloWorld_long">
<pre>
</pre>
</div>
</div>

    @endDocuBlock JSON_03_routingCleanupJsonHelloWorld


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_05a_routingCreateContentTypeHelloWorld


<div class="example-container" id="JSON_05a_routingCreateContentTypeHelloWorld_container">
<a class="anchorjs-link " href="#JSON_05a_routingCreateContentTypeHelloWorld_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_05a_routingCreateContentTypeHelloWorld_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;  url: <span class="hljs-string">"/hello/contentType"</span>,
........&gt;  content: {
........&gt;    contentType: <span class="hljs-string">"text/html"</span>,
........&gt;    body: <span class="hljs-string">"&lt;html&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;"</span>
........&gt;  }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9619"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9619"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7NkO--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="JSON_05a_routingCreateContentTypeHelloWorld_container_collapse" onclick="$('#JSON_05a_routingCreateContentTypeHelloWorld_long').hide(); $('#JSON_05a_routingCreateContentTypeHelloWorld_short').show(); window.location.hash='JSON_05a_routingCreateContentTypeHelloWorld_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_05a_routingCreateContentTypeHelloWorld_short" onclick="$('#JSON_05a_routingCreateContentTypeHelloWorld_short').hide(); $('#JSON_05a_routingCreateContentTypeHelloWorld_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;  url: <span class="hljs-string">"/hello/contentType"</span>,
........&gt;  content: {
........&gt;    contentType: <span class="hljs-string">"text/html"</span>,
........&gt;    body: <span class="hljs-string">"&lt;html&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;"</span>
........&gt;  }
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_05a_routingCreateContentTypeHelloWorld


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_05b_routingCurlContentTypeHelloWorld


<div class="example-container" id="JSON_05b_routingCurlContentTypeHelloWorld_container">
<a class="anchorjs-link " href="#JSON_05b_routingCurlContentTypeHelloWorld_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_05b_routingCurlContentTypeHelloWorld_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/contentType

HTTP/1.1 200 OK
content-type: text/html
x-content-type-options: nosniff

"<html><body>Hello World</body></html>"
</pre>
</div>
</div>

    @endDocuBlock JSON_05b_routingCurlContentTypeHelloWorld


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_05c_routingCleanupContentTypeHelloWorld


<div class="example-container" id="JSON_05c_routingCleanupContentTypeHelloWorld_container">
<a class="anchorjs-link " href="#JSON_05c_routingCleanupContentTypeHelloWorld_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_05c_routingCleanupContentTypeHelloWorld_long">
<pre>
</pre>
</div>
</div>

    @endDocuBlock JSON_05c_routingCleanupContentTypeHelloWorld


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_06_routingCreateHelloEcho


<div class="example-container" id="JSON_06_routingCreateHelloEcho_container">
<a class="anchorjs-link " href="#JSON_06_routingCreateHelloEcho_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_06_routingCreateHelloEcho_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;    url: <span class="hljs-string">"/hello/echo"</span>,
........&gt;    action: { 
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span> 
........&gt;  } 
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9633"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9633"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7NmC--_"</span> 
}
</pre>
<div id="JSON_06_routingCreateHelloEcho_container_collapse" onclick="$('#JSON_06_routingCreateHelloEcho_long').hide(); $('#JSON_06_routingCreateHelloEcho_short').show(); window.location.hash='JSON_06_routingCreateHelloEcho_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_06_routingCreateHelloEcho_short" onclick="$('#JSON_06_routingCreateHelloEcho_short').hide(); $('#JSON_06_routingCreateHelloEcho_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;    url: <span class="hljs-string">"/hello/echo"</span>,
........&gt;    action: { 
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span> 
........&gt;  } 
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_06_routingCreateHelloEcho


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_07_fetchroutingCreateHelloEcho


<div class="example-container" id="JSON_07_fetchroutingCreateHelloEcho_container">
<a class="anchorjs-link " href="#JSON_07_fetchroutingCreateHelloEcho_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_07_fetchroutingCreateHelloEcho_long" style="Display: none;">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/hello/echo"</span>)
{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/hello/echo"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
</pre>
<div id="JSON_07_fetchroutingCreateHelloEcho_container_collapse" onclick="$('#JSON_07_fetchroutingCreateHelloEcho_long').hide(); $('#JSON_07_fetchroutingCreateHelloEcho_short').show(); window.location.hash='JSON_07_fetchroutingCreateHelloEcho_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_07_fetchroutingCreateHelloEcho_short" onclick="$('#JSON_07_fetchroutingCreateHelloEcho_short').hide(); $('#JSON_07_fetchroutingCreateHelloEcho_long').show();">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/hello/echo"</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_07_fetchroutingCreateHelloEcho


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_08_routingCleanupHelloEcho


<div class="example-container" id="JSON_08_routingCleanupHelloEcho_container">
<a class="anchorjs-link " href="#JSON_08_routingCleanupHelloEcho_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_08_routingCleanupHelloEcho_long">
<pre>
</pre>
</div>
</div>

    @endDocuBlock JSON_08_routingCleanupHelloEcho


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_09_routingCreateEchoController


<div class="example-container" id="JSON_09_routingCreateEchoController_container">
<a class="anchorjs-link " href="#JSON_09_routingCreateEchoController_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_09_routingCreateEchoController_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/hello/echo"</span>,
........&gt;  action: { 
........&gt;    controller: <span class="hljs-string">"@arangodb/actions/echoController"</span> 
........&gt;  } 
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9647"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9647"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7No---_"</span> 
}
</pre>
<div id="JSON_09_routingCreateEchoController_container_collapse" onclick="$('#JSON_09_routingCreateEchoController_long').hide(); $('#JSON_09_routingCreateEchoController_short').show(); window.location.hash='JSON_09_routingCreateEchoController_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_09_routingCreateEchoController_short" onclick="$('#JSON_09_routingCreateEchoController_short').hide(); $('#JSON_09_routingCreateEchoController_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/hello/echo"</span>,
........&gt;  action: { 
........&gt;    controller: <span class="hljs-string">"@arangodb/actions/echoController"</span> 
........&gt;  } 
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_09_routingCreateEchoController


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_10_fetchroutingCreateEchoController


<div class="example-container" id="JSON_10_fetchroutingCreateEchoController_container">
<a class="anchorjs-link " href="#JSON_10_fetchroutingCreateEchoController_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_10_fetchroutingCreateEchoController_long" style="Display: none;">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/hello/echo"</span>)
{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/hello/echo"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
</pre>
<div id="JSON_10_fetchroutingCreateEchoController_container_collapse" onclick="$('#JSON_10_fetchroutingCreateEchoController_long').hide(); $('#JSON_10_fetchroutingCreateEchoController_short').show(); window.location.hash='JSON_10_fetchroutingCreateEchoController_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_10_fetchroutingCreateEchoController_short" onclick="$('#JSON_10_fetchroutingCreateEchoController_short').hide(); $('#JSON_10_fetchroutingCreateEchoController_long').show();">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/hello/echo"</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_10_fetchroutingCreateEchoController


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_11_routingCleanupEchoController


<div class="example-container" id="JSON_11_routingCleanupEchoController_container">
<a class="anchorjs-link " href="#JSON_11_routingCleanupEchoController_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_11_routingCleanupEchoController_long">
<pre>
</pre>
</div>
</div>

    @endDocuBlock JSON_11_routingCleanupEchoController


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_12a_routingCreateEchoFunction


<div class="example-container" id="JSON_12a_routingCreateEchoFunction_container">
<a class="anchorjs-link " href="#JSON_12a_routingCreateEchoFunction_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_12a_routingCreateEchoFunction_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/hello/echo"</span>,
........&gt;  action: { 
........&gt;    callback: <span class="hljs-string">"function(req,res) {res.statusCode=200; res.body='Hello'}"</span> 
........&gt;  } 
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9661"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9661"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Np2--_"</span> 
}
</pre>
<div id="JSON_12a_routingCreateEchoFunction_container_collapse" onclick="$('#JSON_12a_routingCreateEchoFunction_long').hide(); $('#JSON_12a_routingCreateEchoFunction_short').show(); window.location.hash='JSON_12a_routingCreateEchoFunction_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_12a_routingCreateEchoFunction_short" onclick="$('#JSON_12a_routingCreateEchoFunction_short').hide(); $('#JSON_12a_routingCreateEchoFunction_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/hello/echo"</span>,
........&gt;  action: { 
........&gt;    callback: <span class="hljs-string">"function(req,res) {res.statusCode=200; res.body='Hello'}"</span> 
........&gt;  } 
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_12a_routingCreateEchoFunction


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_12b_fetchroutingEchoFunction


<div class="example-container" id="JSON_12b_fetchroutingEchoFunction_container">
<a class="anchorjs-link " href="#JSON_12b_fetchroutingEchoFunction_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_12b_fetchroutingEchoFunction_long">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"hello/echo"</span>)
arangosh&gt; db._query(<span class="hljs-string">"FOR route IN _routing FILTER route.url == '/hello/echo' REMOVE route in _routing"</span>)
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
</div>
</div>

    @endDocuBlock JSON_12b_fetchroutingEchoFunction


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_13_routingCreateEchoAction


<div class="example-container" id="JSON_13_routingCreateEchoAction_container">
<a class="anchorjs-link " href="#JSON_13_routingCreateEchoAction_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_13_routingCreateEchoAction_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/echo"</span>,
........&gt;  action: { 
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span> 
........&gt;  }
........&gt; })
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9675"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9675"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7NrS--_"</span> 
}
</pre>
<div id="JSON_13_routingCreateEchoAction_container_collapse" onclick="$('#JSON_13_routingCreateEchoAction_long').hide(); $('#JSON_13_routingCreateEchoAction_short').show(); window.location.hash='JSON_13_routingCreateEchoAction_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_13_routingCreateEchoAction_short" onclick="$('#JSON_13_routingCreateEchoAction_short').hide(); $('#JSON_13_routingCreateEchoAction_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/echo"</span>,
........&gt;  action: { 
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span> 
........&gt;  }
........&gt; })
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_13_routingCreateEchoAction


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_14_fetchroutingRequestHelloEcho


<div class="example-container" id="JSON_14_fetchroutingRequestHelloEcho_container">
<a class="anchorjs-link " href="#JSON_14_fetchroutingRequestHelloEcho_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_14_fetchroutingRequestHelloEcho_long" style="Display: none;">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/hello/echo"</span>)
{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"unknown path '/hello/echo'"</span> 
}
arangosh&gt; db._query(<span class="hljs-string">"FOR route IN _routing FILTER route.url == '/hello/echo' REMOVE route in _routing"</span>)
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="JSON_14_fetchroutingRequestHelloEcho_container_collapse" onclick="$('#JSON_14_fetchroutingRequestHelloEcho_long').hide(); $('#JSON_14_fetchroutingRequestHelloEcho_short').show(); window.location.hash='JSON_14_fetchroutingRequestHelloEcho_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_14_fetchroutingRequestHelloEcho_short" onclick="$('#JSON_14_fetchroutingRequestHelloEcho_short').hide(); $('#JSON_14_fetchroutingRequestHelloEcho_long').show();">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/hello/echo"</span>)
arangosh&gt; db._query(<span class="hljs-string">"FOR route IN _routing FILTER route.url == '/hello/echo' REMOVE route in _routing"</span>)
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_14_fetchroutingRequestHelloEcho


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_15_routingCreateEchoRequestOptions


<div class="example-container" id="JSON_15_routingCreateEchoRequestOptions_container">
<a class="anchorjs-link " href="#JSON_15_routingCreateEchoRequestOptions_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_15_routingCreateEchoRequestOptions_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/echo"</span>,
........&gt;  action: {
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>,
........&gt;    options: { 
........&gt;      <span class="hljs-string">"Hello"</span>: <span class="hljs-string">"World"</span> 
........&gt;    }
........&gt;  } 
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9685"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9685"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ns2--_"</span> 
}
</pre>
<div id="JSON_15_routingCreateEchoRequestOptions_container_collapse" onclick="$('#JSON_15_routingCreateEchoRequestOptions_long').hide(); $('#JSON_15_routingCreateEchoRequestOptions_short').show(); window.location.hash='JSON_15_routingCreateEchoRequestOptions_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_15_routingCreateEchoRequestOptions_short" onclick="$('#JSON_15_routingCreateEchoRequestOptions_short').hide(); $('#JSON_15_routingCreateEchoRequestOptions_long').show();">
<pre>
arangosh&gt; db._routing.save({ 
........&gt;  url: <span class="hljs-string">"/echo"</span>,
........&gt;  action: {
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>,
........&gt;    options: { 
........&gt;      <span class="hljs-string">"Hello"</span>: <span class="hljs-string">"World"</span> 
........&gt;    }
........&gt;  } 
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_15_routingCreateEchoRequestOptions


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-json-example.md -->
    @startDocuBlockInline JSON_16_fetchroutingEchoRequestOptions


<div class="example-container" id="JSON_16_fetchroutingEchoRequestOptions_container">
<a class="anchorjs-link " href="#JSON_16_fetchroutingEchoRequestOptions_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSON_16_fetchroutingEchoRequestOptions_long" style="Display: none;">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/echo"</span>)
{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/echo"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> 
  } 
}
arangosh&gt; db._query(<span class="hljs-string">"FOR route IN _routing FILTER route.url == '/echo' REMOVE route in _routing"</span>)
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="JSON_16_fetchroutingEchoRequestOptions_container_collapse" onclick="$('#JSON_16_fetchroutingEchoRequestOptions_long').hide(); $('#JSON_16_fetchroutingEchoRequestOptions_short').show(); window.location.hash='JSON_16_fetchroutingEchoRequestOptions_container';" class="example_show_button">Hide execution results</div></div>
<div id="JSON_16_fetchroutingEchoRequestOptions_short" onclick="$('#JSON_16_fetchroutingEchoRequestOptions_short').hide(); $('#JSON_16_fetchroutingEchoRequestOptions_long').show();">
<pre>
arangosh&gt; arango.GET(<span class="hljs-string">"/echo"</span>)
arangosh&gt; db._query(<span class="hljs-string">"FOR route IN _routing FILTER route.url == '/echo' REMOVE route in _routing"</span>)
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock JSON_16_fetchroutingEchoRequestOptions


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexCreateForArrayAttribute1


<div class="example-container" id="geoIndexCreateForArrayAttribute1_container">
<a class="anchorjs-link " href="#geoIndexCreateForArrayAttribute1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="geoIndexCreateForArrayAttribute1_long" style="Display: none;">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"loc"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"loc"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"geo/24779"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geo.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">loc</span>: [ i, j ] });
........&gt;     }
........&gt; }
arangosh&gt; db.geo.count();
<span class="hljs-number">703</span>
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">3</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"25836"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/25836"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7idC--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"25839"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/25839"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7idC--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/10"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">10</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"25725"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/25725"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7icq--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/0"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">0</span> 
    ] 
  } 
]
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).count();
<span class="hljs-literal">null</span>
</pre>
<div id="geoIndexCreateForArrayAttribute1_container_collapse" onclick="$('#geoIndexCreateForArrayAttribute1_long').hide(); $('#geoIndexCreateForArrayAttribute1_short').show(); window.location.hash='geoIndexCreateForArrayAttribute1_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexCreateForArrayAttribute1_short" onclick="$('#geoIndexCreateForArrayAttribute1_short').hide(); $('#geoIndexCreateForArrayAttribute1_long').show();">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"loc"</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geo.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">loc</span>: [ i, j ] });
........&gt;     }
........&gt; }
arangosh&gt; db.geo.count();
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">3</span>).toArray();
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexCreateForArrayAttribute1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexCreateForArrayAttribute2


<div class="example-container" id="geoIndexCreateForArrayAttribute2_container">
<a class="anchorjs-link " href="#geoIndexCreateForArrayAttribute2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="geoIndexCreateForArrayAttribute2_long" style="Display: none;">
<pre>
arangosh&gt; db.geo2.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"location.latitude"</span>, <span class="hljs-string">"location.longitude"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"location.latitude"</span>, 
    <span class="hljs-string">"location.longitude"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"geo2/26906"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo2"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geo2.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">location</span>: { <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j } });
........&gt;     }
........&gt; }
arangosh&gt; db.geo2.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">3</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"27963"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo2/27963"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7inC--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span>, 
    <span class="hljs-string">"location"</span> : { 
      <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span> 
    } 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"27966"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo2/27966"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7inC--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/10"</span>, 
    <span class="hljs-string">"location"</span> : { 
      <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"longitude"</span> : <span class="hljs-number">10</span> 
    } 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"27852"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo2/27852"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7imq--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/0"</span>, 
    <span class="hljs-string">"location"</span> : { 
      <span class="hljs-string">"latitude"</span> : <span class="hljs-number">-10</span>, 
      <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span> 
    } 
  } 
]
</pre>
<div id="geoIndexCreateForArrayAttribute2_container_collapse" onclick="$('#geoIndexCreateForArrayAttribute2_long').hide(); $('#geoIndexCreateForArrayAttribute2_short').show(); window.location.hash='geoIndexCreateForArrayAttribute2_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexCreateForArrayAttribute2_short" onclick="$('#geoIndexCreateForArrayAttribute2_short').hide(); $('#geoIndexCreateForArrayAttribute2_long').show();">
<pre>
arangosh&gt; db.geo2.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"location.latitude"</span>, <span class="hljs-string">"location.longitude"</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geo2.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">location</span>: { <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j } });
........&gt;     }
........&gt; }
arangosh&gt; db.geo2.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">3</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexCreateForArrayAttribute2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexSortOptimization


<div class="example-container" id="geoIndexSortOptimization_container">
<a class="anchorjs-link " href="#geoIndexSortOptimization_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="geoIndexSortOptimization_long" style="Display: none;">
<pre>
arangosh&gt; db.geoSort.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"latitude"</span>, <span class="hljs-string">"longitude"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"latitude"</span>, 
    <span class="hljs-string">"longitude"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"geoSort/33276"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo2"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoSort.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc in geoSort SORT DISTANCE(doc.latitude, doc.longitude, 0, 0) LIMIT 5 RETURN doc"</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
Query string:
 FOR doc <span class="hljs-keyword">in</span> geoSort SORT DISTANCE(doc.latitude, doc.longitude, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) LIMIT <span class="hljs-number">5</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">7</span>   IndexNode        <span class="hljs-number">703</span>     - FOR doc IN geoSort   <span class="hljs-comment">/* geo2 index scan */</span>
  <span class="hljs-number">5</span>   LimitNode          <span class="hljs-number">5</span>       - LIMIT <span class="hljs-number">0</span>, <span class="hljs-number">5</span>
  <span class="hljs-number">6</span>   ReturnNode         <span class="hljs-number">5</span>       - RETURN doc

Indexes used:
 By   Type   Collection   Unique   Sparse   Selectivity   Fields                        Ranges
  <span class="hljs-number">7</span>   geo2   geoSort      <span class="hljs-literal">false</span>    <span class="hljs-literal">true</span>             n/a   [ <span class="hljs-string">`latitude`</span>, <span class="hljs-string">`longitude`</span> ]   NEAR(doc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   geo-index-optimizer
  <span class="hljs-number">2</span>   remove-unnecessary-calculations<span class="hljs-number">-2</span>


arangosh&gt; db._query(query);
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"34333"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geoSort/34333"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jJm--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span>, 
    <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"34222"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geoSort/34222"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jJC--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/0"</span>, 
    <span class="hljs-string">"latitude"</span> : <span class="hljs-number">-10</span>, 
    <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"34330"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geoSort/34330"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jJi--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/-10"</span>, 
    <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"longitude"</span> : <span class="hljs-number">-10</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"34336"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geoSort/34336"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jJm--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/10"</span>, 
    <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"longitude"</span> : <span class="hljs-number">10</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"34444"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geoSort/34444"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jKC--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/10/0"</span>, 
    <span class="hljs-string">"latitude"</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span> 
  } 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="geoIndexSortOptimization_container_collapse" onclick="$('#geoIndexSortOptimization_long').hide(); $('#geoIndexSortOptimization_short').show(); window.location.hash='geoIndexSortOptimization_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexSortOptimization_short" onclick="$('#geoIndexSortOptimization_short').hide(); $('#geoIndexSortOptimization_long').show();">
<pre>
arangosh&gt; db.geoSort.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"latitude"</span>, <span class="hljs-string">"longitude"</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoSort.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc in geoSort SORT DISTANCE(doc.latitude, doc.longitude, 0, 0) LIMIT 5 RETURN doc"</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
arangosh&gt; db._query(query);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexSortOptimization


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-geo.md -->
    @startDocuBlockInline geoIndexFilterOptimization


<div class="example-container" id="geoIndexFilterOptimization_container">
<a class="anchorjs-link " href="#geoIndexFilterOptimization_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="geoIndexFilterOptimization_long" style="Display: none;">
<pre>
arangosh&gt; db.geoFilter.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"latitude"</span>, <span class="hljs-string">"longitude"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"latitude"</span>, 
    <span class="hljs-string">"longitude"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"geoFilter/29027"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo2"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoFilter.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc in geoFilter FILTER DISTANCE(doc.latitude, doc.longitude, 0, 0) &lt; 2000 RETURN doc"</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
Query string:
 FOR doc <span class="hljs-keyword">in</span> geoFilter FILTER DISTANCE(doc.latitude, doc.longitude, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) &lt; <span class="hljs-number">2000</span> RETURN doc

Execution plan:
 Id   NodeType        Est.   Comment
  <span class="hljs-number">1</span>   SingletonNode      <span class="hljs-number">1</span>   * ROOT
  <span class="hljs-number">6</span>   IndexNode        <span class="hljs-number">703</span>     - FOR doc IN geoFilter   <span class="hljs-comment">/* geo2 index scan */</span>
  <span class="hljs-number">5</span>   ReturnNode       <span class="hljs-number">703</span>       - RETURN doc

Indexes used:
 By   Type   Collection   Unique   Sparse   Selectivity   Fields                        Ranges
  <span class="hljs-number">6</span>   geo2   geoFilter    <span class="hljs-literal">false</span>    <span class="hljs-literal">true</span>             n/a   [ <span class="hljs-string">`latitude`</span>, <span class="hljs-string">`longitude`</span> ]   WITHIN(doc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2000</span>, <span class="hljs-literal">false</span>)

Optimization rules applied:
 Id   RuleName
  <span class="hljs-number">1</span>   geo-index-optimizer
  <span class="hljs-number">2</span>   remove-unnecessary-calculations<span class="hljs-number">-2</span>


arangosh&gt; db._query(query);
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"30084"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geoFilter/30084"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ixG--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span>, 
    <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span> 
  } 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="geoIndexFilterOptimization_container_collapse" onclick="$('#geoIndexFilterOptimization_long').hide(); $('#geoIndexFilterOptimization_short').show(); window.location.hash='geoIndexFilterOptimization_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexFilterOptimization_short" onclick="$('#geoIndexFilterOptimization_short').hide(); $('#geoIndexFilterOptimization_long').show();">
<pre>
arangosh&gt; db.geoFilter.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"latitude"</span>, <span class="hljs-string">"longitude"</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;     <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;         db.geoFilter.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">latitude</span> : i, <span class="hljs-attr">longitude</span> : j });
........&gt;     }
........&gt; }
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc in geoFilter FILTER DISTANCE(doc.latitude, doc.longitude, 0, 0) &lt; 2000 RETURN doc"</span>
arangosh&gt; db._explain(query, {}, {<span class="hljs-attr">colors</span>: <span class="hljs-literal">false</span>});
arangosh&gt; db._query(query);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock geoIndexFilterOptimization


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_01a_routingCreateOwnTest


<div class="example-container" id="MOD_01a_routingCreateOwnTest_container">
<a class="anchorjs-link " href="#MOD_01a_routingCreateOwnTest_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_01a_routingCreateOwnTest_long" style="Display: none;">
<pre>
arangosh&gt; db._modules.save({
........&gt;  path: <span class="hljs-string">"/db:/ownTest"</span>,
........&gt;  content:
........&gt;     <span class="hljs-string">"exports.do = function(req, res, options, next) {"</span>+
........&gt;     <span class="hljs-string">"  res.body = 'test';"</span> +
........&gt;     <span class="hljs-string">"  res.responseCode = 200;"</span> +
........&gt;     <span class="hljs-string">"  res.contentType = 'text/plain';"</span> +
........&gt;     <span class="hljs-string">"};"</span>
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_modules/9699"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9699"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Nui--_"</span> 
}
</pre>
<div id="MOD_01a_routingCreateOwnTest_container_collapse" onclick="$('#MOD_01a_routingCreateOwnTest_long').hide(); $('#MOD_01a_routingCreateOwnTest_short').show(); window.location.hash='MOD_01a_routingCreateOwnTest_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_01a_routingCreateOwnTest_short" onclick="$('#MOD_01a_routingCreateOwnTest_short').hide(); $('#MOD_01a_routingCreateOwnTest_long').show();">
<pre>
arangosh&gt; db._modules.save({
........&gt;  path: <span class="hljs-string">"/db:/ownTest"</span>,
........&gt;  content:
........&gt;     <span class="hljs-string">"exports.do = function(req, res, options, next) {"</span>+
........&gt;     <span class="hljs-string">"  res.body = 'test';"</span> +
........&gt;     <span class="hljs-string">"  res.responseCode = 200;"</span> +
........&gt;     <span class="hljs-string">"  res.contentType = 'text/plain';"</span> +
........&gt;     <span class="hljs-string">"};"</span>
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_01a_routingCreateOwnTest


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_01b_routingEnableOwnTest


<div class="example-container" id="MOD_01b_routingEnableOwnTest_container">
<a class="anchorjs-link " href="#MOD_01b_routingEnableOwnTest_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_01b_routingEnableOwnTest_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;  url: <span class="hljs-string">"/ourtest"</span>, 
........&gt;  action: {
........&gt;    controller: <span class="hljs-string">"db://ownTest"</span>
........&gt;  }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9703"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9703"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Nuq--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="MOD_01b_routingEnableOwnTest_container_collapse" onclick="$('#MOD_01b_routingEnableOwnTest_long').hide(); $('#MOD_01b_routingEnableOwnTest_short').show(); window.location.hash='MOD_01b_routingEnableOwnTest_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_01b_routingEnableOwnTest_short" onclick="$('#MOD_01b_routingEnableOwnTest_short').hide(); $('#MOD_01b_routingEnableOwnTest_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;  url: <span class="hljs-string">"/ourtest"</span>, 
........&gt;  action: {
........&gt;    controller: <span class="hljs-string">"db://ownTest"</span>
........&gt;  }
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_01b_routingEnableOwnTest


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_01c_routingCurlOwnTest


<div class="example-container" id="MOD_01c_routingCurlOwnTest_container">
<a class="anchorjs-link " href="#MOD_01c_routingCurlOwnTest_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_01c_routingCurlOwnTest_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/ourtest

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"test"
</pre>
</div>
</div>

    @endDocuBlock MOD_01c_routingCurlOwnTest


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_05_routingModifyReload


<div class="example-container" id="MOD_05_routingModifyReload_container">
<a class="anchorjs-link " href="#MOD_05_routingModifyReload_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_05_routingModifyReload_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
</div>
</div>

    @endDocuBlock MOD_05_routingModifyReload


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_06a_routingRedirect


<div class="example-container" id="MOD_06a_routingRedirect_container">
<a class="anchorjs-link " href="#MOD_06a_routingRedirect_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_06a_routingRedirect_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;  url: <span class="hljs-string">"/redirectMe"</span>,
........&gt;  action: {
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/redirectRequest"</span>,
........&gt;    options: {
........&gt;      permanently: <span class="hljs-literal">true</span>,
........&gt;      destination: <span class="hljs-string">"/somewhere.else/"</span>
........&gt;    }
........&gt;  }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9724"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9724"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7NwS--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="MOD_06a_routingRedirect_container_collapse" onclick="$('#MOD_06a_routingRedirect_long').hide(); $('#MOD_06a_routingRedirect_short').show(); window.location.hash='MOD_06a_routingRedirect_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_06a_routingRedirect_short" onclick="$('#MOD_06a_routingRedirect_short').hide(); $('#MOD_06a_routingRedirect_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;  url: <span class="hljs-string">"/redirectMe"</span>,
........&gt;  action: {
........&gt;    <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/redirectRequest"</span>,
........&gt;    options: {
........&gt;      permanently: <span class="hljs-literal">true</span>,
........&gt;      destination: <span class="hljs-string">"/somewhere.else/"</span>
........&gt;    }
........&gt;  }
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_06a_routingRedirect


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_06b_routingCurlRedirect


<div class="example-container" id="MOD_06b_routingCurlRedirect_container">
<a class="anchorjs-link " href="#MOD_06b_routingCurlRedirect_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_06b_routingCurlRedirect_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/redirectMe

HTTP/1.1 301 Moved Permanently
content-type: text/html
x-content-type-options: nosniff
location: /somewhere.else/

"<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Moved<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Moved<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>This page has moved to <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">\</span>"/<span class="hljs-attr">somewhere.else</span>/\"&gt;</span>/somewhere.else/<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>"
</pre>
</div>
</div>

    @endDocuBlock MOD_06b_routingCurlRedirect


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_07a_routingMulti


<div class="example-container" id="MOD_07a_routingMulti_container">
<a class="anchorjs-link " href="#MOD_07a_routingMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_07a_routingMulti_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;  routes: [
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url1"</span>,
........&gt;      content: <span class="hljs-string">"route 1"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url2"</span>,
........&gt;      content: <span class="hljs-string">"route 2"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url3"</span>,
........&gt;      content: <span class="hljs-string">"route 3"</span>
........&gt;    }
........&gt;  ]
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9738"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9738"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Nx6--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="MOD_07a_routingMulti_container_collapse" onclick="$('#MOD_07a_routingMulti_long').hide(); $('#MOD_07a_routingMulti_short').show(); window.location.hash='MOD_07a_routingMulti_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_07a_routingMulti_short" onclick="$('#MOD_07a_routingMulti_short').hide(); $('#MOD_07a_routingMulti_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;  routes: [
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url1"</span>,
........&gt;      content: <span class="hljs-string">"route 1"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url2"</span>,
........&gt;      content: <span class="hljs-string">"route 2"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url3"</span>,
........&gt;      content: <span class="hljs-string">"route 3"</span>
........&gt;    }
........&gt;  ]
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_07a_routingMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_07b_routingCurlMulti


<div class="example-container" id="MOD_07b_routingCurlMulti_container">
<a class="anchorjs-link " href="#MOD_07b_routingCurlMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_07b_routingCurlMulti_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/url2

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"route 2"
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/url3

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"route 3"
</pre>
</div>
</div>

    @endDocuBlock MOD_07b_routingCurlMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_07c_routingMulti


<div class="example-container" id="MOD_07c_routingMulti_container">
<a class="anchorjs-link " href="#MOD_07c_routingMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_07c_routingMulti_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;  urlPrefix: <span class="hljs-string">"/test"</span>,
........&gt;  routes: [
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url1"</span>,
........&gt;      content: <span class="hljs-string">"route 1"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url2"</span>,
........&gt;      content: <span class="hljs-string">"route 2"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url3"</span>,
........&gt;      content: <span class="hljs-string">"route 3"</span>
........&gt;    }
........&gt;  ]
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9752"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9752"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7NzS--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="MOD_07c_routingMulti_container_collapse" onclick="$('#MOD_07c_routingMulti_long').hide(); $('#MOD_07c_routingMulti_short').show(); window.location.hash='MOD_07c_routingMulti_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_07c_routingMulti_short" onclick="$('#MOD_07c_routingMulti_short').hide(); $('#MOD_07c_routingMulti_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;  urlPrefix: <span class="hljs-string">"/test"</span>,
........&gt;  routes: [
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url1"</span>,
........&gt;      content: <span class="hljs-string">"route 1"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url2"</span>,
........&gt;      content: <span class="hljs-string">"route 2"</span>
........&gt;    },
........&gt;    {
........&gt;      url: <span class="hljs-string">"/url3"</span>,
........&gt;      content: <span class="hljs-string">"route 3"</span>
........&gt;    }
........&gt;  ]
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_07c_routingMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_07d_routingCurlMulti


<div class="example-container" id="MOD_07d_routingCurlMulti_container">
<a class="anchorjs-link " href="#MOD_07d_routingCurlMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_07d_routingCurlMulti_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/test/url1

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"route 1"
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/test/url2

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"route 2"
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/test/url3

HTTP/1.1 200 OK
content-type: text/plain
x-content-type-options: nosniff

"route 3"
</pre>
</div>
</div>

    @endDocuBlock MOD_07d_routingCurlMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_08a_routingCreateOwnConsoleLog


<div class="example-container" id="MOD_08a_routingCreateOwnConsoleLog_container">
<a class="anchorjs-link " href="#MOD_08a_routingCreateOwnConsoleLog_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_08a_routingCreateOwnConsoleLog_long" style="Display: none;">
<pre>
arangosh&gt; db._modules.save({
........&gt;  path: <span class="hljs-string">"/db:/OwnMiddlewareTest"</span>,
........&gt;  content:
........&gt;     <span class="hljs-string">"exports.logRequest = function (req, res, options, next) {"</span> +
........&gt;     <span class="hljs-string">"    console = require('console'); "</span> + 
........&gt;     <span class="hljs-string">"    console.log('received request: %s', JSON.stringify(req));"</span> +
........&gt;     <span class="hljs-string">"    next();"</span> +
........&gt;     <span class="hljs-string">"    console.log('produced response: %s', JSON.stringify(res));"</span> +
........&gt;     <span class="hljs-string">"};"</span>
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_modules/9766"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9766"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7N1O--_"</span> 
}
</pre>
<div id="MOD_08a_routingCreateOwnConsoleLog_container_collapse" onclick="$('#MOD_08a_routingCreateOwnConsoleLog_long').hide(); $('#MOD_08a_routingCreateOwnConsoleLog_short').show(); window.location.hash='MOD_08a_routingCreateOwnConsoleLog_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_08a_routingCreateOwnConsoleLog_short" onclick="$('#MOD_08a_routingCreateOwnConsoleLog_short').hide(); $('#MOD_08a_routingCreateOwnConsoleLog_long').show();">
<pre>
arangosh&gt; db._modules.save({
........&gt;  path: <span class="hljs-string">"/db:/OwnMiddlewareTest"</span>,
........&gt;  content:
........&gt;     <span class="hljs-string">"exports.logRequest = function (req, res, options, next) {"</span> +
........&gt;     <span class="hljs-string">"    console = require('console'); "</span> + 
........&gt;     <span class="hljs-string">"    console.log('received request: %s', JSON.stringify(req));"</span> +
........&gt;     <span class="hljs-string">"    next();"</span> +
........&gt;     <span class="hljs-string">"    console.log('produced response: %s', JSON.stringify(res));"</span> +
........&gt;     <span class="hljs-string">"};"</span>
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_08a_routingCreateOwnConsoleLog


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_08b_routingCreateRouteToOwnConsoleLog


<div class="example-container" id="MOD_08b_routingCreateRouteToOwnConsoleLog_container">
<a class="anchorjs-link " href="#MOD_08b_routingCreateRouteToOwnConsoleLog_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_08b_routingCreateRouteToOwnConsoleLog_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;  middleware: [
........&gt;    {
........&gt;      url: {
........&gt;        match: <span class="hljs-string">"/subdirectory/*"</span>
........&gt;      },
........&gt;      action: {
........&gt;        <span class="hljs-keyword">do</span>: <span class="hljs-string">"db://OwnMiddlewareTest/logRequest"</span>
........&gt;      }
........&gt;    }
........&gt;  ]
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9770"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9770"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7N1W--_"</span> 
}
</pre>
<div id="MOD_08b_routingCreateRouteToOwnConsoleLog_container_collapse" onclick="$('#MOD_08b_routingCreateRouteToOwnConsoleLog_long').hide(); $('#MOD_08b_routingCreateRouteToOwnConsoleLog_short').show(); window.location.hash='MOD_08b_routingCreateRouteToOwnConsoleLog_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_08b_routingCreateRouteToOwnConsoleLog_short" onclick="$('#MOD_08b_routingCreateRouteToOwnConsoleLog_short').hide(); $('#MOD_08b_routingCreateRouteToOwnConsoleLog_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;  middleware: [
........&gt;    {
........&gt;      url: {
........&gt;        match: <span class="hljs-string">"/subdirectory/*"</span>
........&gt;      },
........&gt;      action: {
........&gt;        <span class="hljs-keyword">do</span>: <span class="hljs-string">"db://OwnMiddlewareTest/logRequest"</span>
........&gt;      }
........&gt;    }
........&gt;  ]
........&gt; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_08b_routingCreateRouteToOwnConsoleLog


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_08c_routingCreateRouteToOwnConsoleLog


<div class="example-container" id="MOD_08c_routingCreateRouteToOwnConsoleLog_container">
<a class="anchorjs-link " href="#MOD_08c_routingCreateRouteToOwnConsoleLog_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_08c_routingCreateRouteToOwnConsoleLog_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;    url: <span class="hljs-string">"/subdirectory/ourtest/1"</span>,
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9774"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9774"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7N1a--_"</span> 
}
arangosh&gt; db._routing.save({
........&gt;    url: <span class="hljs-string">"/subdirectory/ourtest/2"</span>,
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9777"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9777"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7N1a--B"</span> 
}
arangosh&gt; db._routing.save({
........&gt;    url: <span class="hljs-string">"/subdirectory/ourtest/3"</span>,
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9780"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9780"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7N1e--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="MOD_08c_routingCreateRouteToOwnConsoleLog_container_collapse" onclick="$('#MOD_08c_routingCreateRouteToOwnConsoleLog_long').hide(); $('#MOD_08c_routingCreateRouteToOwnConsoleLog_short').show(); window.location.hash='MOD_08c_routingCreateRouteToOwnConsoleLog_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_08c_routingCreateRouteToOwnConsoleLog_short" onclick="$('#MOD_08c_routingCreateRouteToOwnConsoleLog_short').hide(); $('#MOD_08c_routingCreateRouteToOwnConsoleLog_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;    url: <span class="hljs-string">"/subdirectory/ourtest/1"</span>,
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
arangosh&gt; db._routing.save({
........&gt;    url: <span class="hljs-string">"/subdirectory/ourtest/2"</span>,
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
arangosh&gt; db._routing.save({
........&gt;    url: <span class="hljs-string">"/subdirectory/ourtest/3"</span>,
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_08c_routingCreateRouteToOwnConsoleLog


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_08d_routingCurlToOwnConsoleLog


<div class="example-container" id="MOD_08d_routingCurlToOwnConsoleLog_container">
<a class="anchorjs-link " href="#MOD_08d_routingCurlToOwnConsoleLog_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_08d_routingCurlToOwnConsoleLog_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/subdirectory/ourtest/1

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/subdirectory/ourtest/1"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"accept"</span> : <span class="hljs-string">"application/json"</span>, 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/subdirectory/ourtest/2

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/subdirectory/ourtest/2"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"accept"</span> : <span class="hljs-string">"application/json"</span>, 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/subdirectory/ourtest/3

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/subdirectory/ourtest/3"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"accept"</span> : <span class="hljs-string">"application/json"</span>, 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
</pre>
<div id="MOD_08d_routingCurlToOwnConsoleLog_container_collapse" onclick="$('#MOD_08d_routingCurlToOwnConsoleLog_long').hide(); $('#MOD_08d_routingCurlToOwnConsoleLog_short').show(); window.location.hash='MOD_08d_routingCurlToOwnConsoleLog_container';" class="example_show_button">Hide response body</div></div>
<div id="MOD_08d_routingCurlToOwnConsoleLog_short" onclick="$('#MOD_08d_routingCurlToOwnConsoleLog_short').hide(); $('#MOD_08d_routingCurlToOwnConsoleLog_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/subdirectory/ourtest/1

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/subdirectory/ourtest/2

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/subdirectory/ourtest/3

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>

    @endDocuBlock MOD_08d_routingCurlToOwnConsoleLog


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_09_routingReload


<div class="example-container" id="MOD_09_routingReload_container">
<a class="anchorjs-link " href="#MOD_09_routingReload_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_09_routingReload_long">
<pre>
</pre>
</div>
</div>

    @endDocuBlock MOD_09_routingReload


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_09a_routingSpecifyMethods


<div class="example-container" id="MOD_09a_routingSpecifyMethods_container">
<a class="anchorjs-link " href="#MOD_09a_routingSpecifyMethods_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_09a_routingSpecifyMethods_long" style="Display: none;">
<pre>
arangosh&gt; db._routing.save({
........&gt;    url: {
........&gt;      match: <span class="hljs-string">"/hello/world"</span>,
........&gt;      methods: [ <span class="hljs-string">"get"</span>, <span class="hljs-string">"post"</span>, <span class="hljs-string">"put"</span> ]
........&gt;    },
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_routing/9815"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9815"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7N32--_"</span> 
}
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre>
<div id="MOD_09a_routingSpecifyMethods_container_collapse" onclick="$('#MOD_09a_routingSpecifyMethods_long').hide(); $('#MOD_09a_routingSpecifyMethods_short').show(); window.location.hash='MOD_09a_routingSpecifyMethods_container';" class="example_show_button">Hide execution results</div></div>
<div id="MOD_09a_routingSpecifyMethods_short" onclick="$('#MOD_09a_routingSpecifyMethods_short').hide(); $('#MOD_09a_routingSpecifyMethods_long').show();">
<pre>
arangosh&gt; db._routing.save({
........&gt;    url: {
........&gt;      match: <span class="hljs-string">"/hello/world"</span>,
........&gt;      methods: [ <span class="hljs-string">"get"</span>, <span class="hljs-string">"post"</span>, <span class="hljs-string">"put"</span> ]
........&gt;    },
........&gt;    action: {
........&gt;      <span class="hljs-keyword">do</span>: <span class="hljs-string">"@arangodb/actions/echoRequest"</span>
........&gt;    }
........&gt; });
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).reloadRouting()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock MOD_09a_routingSpecifyMethods


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-actions-modifying.md -->
    @startDocuBlockInline MOD_09b_routingCurlSpecifyMethods


<div class="example-container" id="MOD_09b_routingCurlSpecifyMethods_container">
<a class="anchorjs-link " href="#MOD_09b_routingCurlSpecifyMethods_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="MOD_09b_routingCurlSpecifyMethods_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/world

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/hello/world"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"accept"</span> : <span class="hljs-string">"application/json"</span>, 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"GET"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/hello/world &lt;&lt;EOF
{hello: 'world'}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/hello/world"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"accept"</span> : <span class="hljs-string">"application/json"</span>, 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"content-length"</span> : <span class="hljs-string">"16"</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"POST"</span>, 
    <span class="hljs-string">"requestBody"</span> : <span class="hljs-string">"{hello: 'world'}"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/hello/world &lt;&lt;EOF
{hello: 'world'}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"request"</span> : { 
    <span class="hljs-string">"authorized"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"user"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"url"</span> : <span class="hljs-string">"/hello/world"</span>, 
    <span class="hljs-string">"protocol"</span> : <span class="hljs-string">"http"</span>, 
    <span class="hljs-string">"server"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48236</span> 
    }, 
    <span class="hljs-string">"client"</span> : { 
      <span class="hljs-string">"address"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"port"</span> : <span class="hljs-number">48962</span>, 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"158074491122979"</span> 
    }, 
    <span class="hljs-string">"internals"</span> : { 
    }, 
    <span class="hljs-string">"headers"</span> : { 
      <span class="hljs-string">"accept"</span> : <span class="hljs-string">"application/json"</span>, 
      <span class="hljs-string">"authorization"</span> : <span class="hljs-string">"Basic cm9vdDo="</span>, 
      <span class="hljs-string">"content-length"</span> : <span class="hljs-string">"16"</span>, 
      <span class="hljs-string">"connection"</span> : <span class="hljs-string">"Keep-Alive"</span>, 
      <span class="hljs-string">"user-agent"</span> : <span class="hljs-string">"ArangoDB"</span>, 
      <span class="hljs-string">"host"</span> : <span class="hljs-string">"127.0.0.1"</span>, 
      <span class="hljs-string">"accept-encoding"</span> : <span class="hljs-string">"deflate"</span> 
    }, 
    <span class="hljs-string">"requestType"</span> : <span class="hljs-string">"PUT"</span>, 
    <span class="hljs-string">"requestBody"</span> : <span class="hljs-string">"{hello: 'world'}"</span>, 
    <span class="hljs-string">"parameters"</span> : { 
    }, 
    <span class="hljs-string">"cookies"</span> : { 
    }, 
    <span class="hljs-string">"urlParameters"</span> : { 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
  } 
}
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/hello/world

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"unknown path '/hello/world'"</span> 
}
</pre>
<div id="MOD_09b_routingCurlSpecifyMethods_container_collapse" onclick="$('#MOD_09b_routingCurlSpecifyMethods_long').hide(); $('#MOD_09b_routingCurlSpecifyMethods_short').show(); window.location.hash='MOD_09b_routingCurlSpecifyMethods_container';" class="example_show_button">Hide response body</div></div>
<div id="MOD_09b_routingCurlSpecifyMethods_short" onclick="$('#MOD_09b_routingCurlSpecifyMethods_short').hide(); $('#MOD_09b_routingCurlSpecifyMethods_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/hello/world

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/hello/world &lt;&lt;EOF
{hello: 'world'}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/hello/world &lt;&lt;EOF
{hello: 'world'}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/hello/world

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





    @endDocuBlock MOD_09b_routingCurlSpecifyMethods


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-wal.md -->
    @startDocuBlockInline WalPropertiesGet


<div class="example-container" id="WalPropertiesGet_container">
<a class="anchorjs-link " href="#WalPropertiesGet_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="WalPropertiesGet_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).wal.properties();
{ 
  <span class="hljs-string">"allowOversizeEntries"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"logfileSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"historicLogfiles"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"reserveLogfiles"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"syncInterval"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"throttleWait"</span> : <span class="hljs-number">15000</span>, 
  <span class="hljs-string">"throttleWhenPending"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="WalPropertiesGet_container_collapse" onclick="$('#WalPropertiesGet_long').hide(); $('#WalPropertiesGet_short').show(); window.location.hash='WalPropertiesGet_container';" class="example_show_button">Hide execution results</div></div>
<div id="WalPropertiesGet_short" onclick="$('#WalPropertiesGet_short').hide(); $('#WalPropertiesGet_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).wal.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock WalPropertiesGet


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-wal.md -->
    @startDocuBlockInline WalPropertiesSet


<div class="example-container" id="WalPropertiesSet_container">
<a class="anchorjs-link " href="#WalPropertiesSet_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="WalPropertiesSet_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).wal.properties({ 
........&gt;    allowOverSizeEntries: <span class="hljs-literal">true</span>,
........&gt; logfileSize: <span class="hljs-number">32</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span> });
{ 
  <span class="hljs-string">"allowOversizeEntries"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"logfileSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"historicLogfiles"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"reserveLogfiles"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"syncInterval"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"throttleWait"</span> : <span class="hljs-number">15000</span>, 
  <span class="hljs-string">"throttleWhenPending"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="WalPropertiesSet_container_collapse" onclick="$('#WalPropertiesSet_long').hide(); $('#WalPropertiesSet_short').show(); window.location.hash='WalPropertiesSet_container';" class="example_show_button">Hide execution results</div></div>
<div id="WalPropertiesSet_short" onclick="$('#WalPropertiesSet_short').hide(); $('#WalPropertiesSet_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).wal.properties({ 
........&gt;    allowOverSizeEntries: <span class="hljs-literal">true</span>,
........&gt; logfileSize: <span class="hljs-number">32</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock WalPropertiesSet


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-wal.md -->
    @startDocuBlockInline WalFlush


<div class="example-container" id="WalFlush_container">
<a class="anchorjs-link " href="#WalFlush_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="WalFlush_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"internal"</span>).wal.flush();
</pre>
</div>
</div>

    @endDocuBlock WalFlush


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbName


<div class="example-container" id="dbName_container">
<a class="anchorjs-link " href="#dbName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="dbName_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db._name();
_system
</pre>
</div>
</div>

@endDocuBlock dbName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbId


<div class="example-container" id="dbId_container">
<a class="anchorjs-link " href="#dbId_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="dbId_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db._id();
<span class="hljs-number">1</span>
</pre>
</div>
</div>

@endDocuBlock dbId


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-databases-working-with.md -->
@startDocuBlockInline dbPath


<div class="example-container" id="dbPath_container">
<a class="anchorjs-link " href="#dbPath_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="dbPath_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db._path();
<span class="hljs-regexp">/tmp/</span>arangosh_fbeCmF/tmp<span class="hljs-number">-46</span><span class="hljs-number">-1143880553</span>/data/databases/database<span class="hljs-number">-1</span>
</pre>
</div>
</div>

@endDocuBlock dbPath


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeDefinitionsSimple


<div class="example-container" id="generalGraphEdgeDefinitionsSimple_container">
<a class="anchorjs-link " href="#generalGraphEdgeDefinitionsSimple_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeDefinitionsSimple_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">"lives_in"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"city"</span>);
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"lives_in"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"user"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"city"</span> 
  ] 
}
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">"knows"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"user"</span>);
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"knows"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"user"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"user"</span> 
  ] 
}
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation, undirected_relation);
[ 
  { 
    <span class="hljs-string">"collection"</span> : <span class="hljs-string">"lives_in"</span>, 
    <span class="hljs-string">"from"</span> : [ 
      <span class="hljs-string">"user"</span> 
    ], 
    <span class="hljs-string">"to"</span> : [ 
      <span class="hljs-string">"city"</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"collection"</span> : <span class="hljs-string">"knows"</span>, 
    <span class="hljs-string">"from"</span> : [ 
      <span class="hljs-string">"user"</span> 
    ], 
    <span class="hljs-string">"to"</span> : [ 
      <span class="hljs-string">"user"</span> 
    ] 
  } 
]
</pre>
<div id="generalGraphEdgeDefinitionsSimple_container_collapse" onclick="$('#generalGraphEdgeDefinitionsSimple_long').hide(); $('#generalGraphEdgeDefinitionsSimple_short').show(); window.location.hash='generalGraphEdgeDefinitionsSimple_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeDefinitionsSimple_short" onclick="$('#generalGraphEdgeDefinitionsSimple_short').hide(); $('#generalGraphEdgeDefinitionsSimple_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">"lives_in"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"city"</span>);
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">"knows"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"user"</span>);
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation, undirected_relation);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeDefinitionsSimple


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeDefinitionsExtend


<div class="example-container" id="generalGraphEdgeDefinitionsExtend_container">
<a class="anchorjs-link " href="#generalGraphEdgeDefinitionsExtend_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeDefinitionsExtend_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">"lives_in"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"city"</span>);
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"lives_in"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"user"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"city"</span> 
  ] 
}
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">"knows"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"user"</span>);
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"knows"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"user"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"user"</span> 
  ] 
}
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation);
[ 
  { 
    <span class="hljs-string">"collection"</span> : <span class="hljs-string">"lives_in"</span>, 
    <span class="hljs-string">"from"</span> : [ 
      <span class="hljs-string">"user"</span> 
    ], 
    <span class="hljs-string">"to"</span> : [ 
      <span class="hljs-string">"city"</span> 
    ] 
  } 
]
arangosh&gt; edgedefinitions = graph_module._extendEdgeDefinitions(undirected_relation);
</pre>
<div id="generalGraphEdgeDefinitionsExtend_container_collapse" onclick="$('#generalGraphEdgeDefinitionsExtend_long').hide(); $('#generalGraphEdgeDefinitionsExtend_short').show(); window.location.hash='generalGraphEdgeDefinitionsExtend_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeDefinitionsExtend_short" onclick="$('#generalGraphEdgeDefinitionsExtend_short').hide(); $('#generalGraphEdgeDefinitionsExtend_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; directed_relation = graph_module._relation(<span class="hljs-string">"lives_in"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"city"</span>);
arangosh&gt; undirected_relation = graph_module._relation(<span class="hljs-string">"knows"</span>, <span class="hljs-string">"user"</span>, <span class="hljs-string">"user"</span>);
arangosh&gt; edgedefinitions = graph_module._edgeDefinitions(directed_relation);
arangosh&gt; edgedefinitions = graph_module._extendEdgeDefinitions(undirected_relation);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeDefinitionsExtend


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphRelationDefinitionSave


<div class="example-container" id="generalGraphRelationDefinitionSave_container">
<a class="anchorjs-link " href="#generalGraphRelationDefinitionSave_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphRelationDefinitionSave_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">"has_bought"</span>, [<span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Company"</span>], [<span class="hljs-string">"Groceries"</span>, <span class="hljs-string">"Electronics"</span>]);
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"has_bought"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"Customer"</span>, 
    <span class="hljs-string">"Company"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"Groceries"</span>, 
    <span class="hljs-string">"Electronics"</span> 
  ] 
}
</pre>
<div id="generalGraphRelationDefinitionSave_container_collapse" onclick="$('#generalGraphRelationDefinitionSave_long').hide(); $('#generalGraphRelationDefinitionSave_short').show(); window.location.hash='generalGraphRelationDefinitionSave_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphRelationDefinitionSave_short" onclick="$('#generalGraphRelationDefinitionSave_short').hide(); $('#generalGraphRelationDefinitionSave_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">"has_bought"</span>, [<span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Company"</span>], [<span class="hljs-string">"Groceries"</span>, <span class="hljs-string">"Electronics"</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphRelationDefinitionSave


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphRelationDefinitionSingle


<div class="example-container" id="generalGraphRelationDefinitionSingle_container">
<a class="anchorjs-link " href="#generalGraphRelationDefinitionSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphRelationDefinitionSingle_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">"has_bought"</span>, <span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Product"</span>);
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"has_bought"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"Customer"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"Product"</span> 
  ] 
}
</pre>
<div id="generalGraphRelationDefinitionSingle_container_collapse" onclick="$('#generalGraphRelationDefinitionSingle_long').hide(); $('#generalGraphRelationDefinitionSingle_short').show(); window.location.hash='generalGraphRelationDefinitionSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphRelationDefinitionSingle_short" onclick="$('#generalGraphRelationDefinitionSingle_short').hide(); $('#generalGraphRelationDefinitionSingle_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._relation(<span class="hljs-string">"has_bought"</span>, <span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Product"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphRelationDefinitionSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphCreateGraphNoData


<div class="example-container" id="generalGraphCreateGraphNoData_container">
<a class="anchorjs-link " href="#generalGraphCreateGraphNoData_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphCreateGraphNoData_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph = graph_module._create(<span class="hljs-string">"myGraph"</span>);
{[Graph] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphNoData


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphCreateGraphSingle


<div class="example-container" id="generalGraphCreateGraphSingle_container">
<a class="anchorjs-link " href="#generalGraphCreateGraphSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphCreateGraphSingle_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = [ { <span class="hljs-attr">collection</span>: <span class="hljs-string">"edges"</span>, <span class="hljs-string">"from"</span>: [ <span class="hljs-string">"vertices"</span> ], <span class="hljs-string">"to"</span> : [ <span class="hljs-string">"vertices"</span> ] } ];
arangosh&gt; graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, edgeDefinitions);
{[Graph] 
  <span class="hljs-string">"edges"</span> : [ArangoCollection <span class="hljs-number">16663</span>, <span class="hljs-string">"edges"</span> (type edge, status loaded)], 
  <span class="hljs-string">"vertices"</span> : [ArangoCollection <span class="hljs-number">16658</span>, <span class="hljs-string">"vertices"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphCreateGraphSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphCreateGraph2


<div class="example-container" id="generalGraphCreateGraph2_container">
<a class="anchorjs-link " href="#generalGraphCreateGraph2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphCreateGraph2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph = graph_module._create(<span class="hljs-string">"myGraph"</span>,
........&gt; [graph_module._relation(<span class="hljs-string">"myRelation"</span>, [<span class="hljs-string">"male"</span>, <span class="hljs-string">"female"</span>], [<span class="hljs-string">"male"</span>, <span class="hljs-string">"female"</span>])], [<span class="hljs-string">"sessions"</span>]);
{[Graph] 
  <span class="hljs-string">"myRelation"</span> : [ArangoCollection <span class="hljs-number">16519</span>, <span class="hljs-string">"myRelation"</span> (type edge, status loaded)], 
  <span class="hljs-string">"female"</span> : [ArangoCollection <span class="hljs-number">16513</span>, <span class="hljs-string">"female"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"male"</span> : [ArangoCollection <span class="hljs-number">16509</span>, <span class="hljs-string">"male"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"sessions"</span> : [ArangoCollection <span class="hljs-number">16523</span>, <span class="hljs-string">"sessions"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="generalGraphCreateGraph2_container_collapse" onclick="$('#generalGraphCreateGraph2_long').hide(); $('#generalGraphCreateGraph2_short').show(); window.location.hash='generalGraphCreateGraph2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphCreateGraph2_short" onclick="$('#generalGraphCreateGraph2_short').hide(); $('#generalGraphCreateGraph2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph = graph_module._create(<span class="hljs-string">"myGraph"</span>,
........&gt; [graph_module._relation(<span class="hljs-string">"myRelation"</span>, [<span class="hljs-string">"male"</span>, <span class="hljs-string">"female"</span>], [<span class="hljs-string">"male"</span>, <span class="hljs-string">"female"</span>])], [<span class="hljs-string">"sessions"</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphCreateGraph2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph_create_graph_example1


<div class="example-container" id="general_graph_create_graph_example1_container">
<a class="anchorjs-link " href="#general_graph_create_graph_example1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph_create_graph_example1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions();
arangosh&gt; graph_module._extendEdgeDefinitions(edgeDefinitions, graph_module._relation(<span class="hljs-string">"friend_of"</span>, <span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Customer"</span>));
arangosh&gt; graph_module._extendEdgeDefinitions(
........&gt; edgeDefinitions, graph_module._relation(
........&gt; <span class="hljs-string">"has_bought"</span>, [<span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Company"</span>], [<span class="hljs-string">"Groceries"</span>, <span class="hljs-string">"Electronics"</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">"myStore"</span>, edgeDefinitions);
{[Graph] 
  <span class="hljs-string">"friend_of"</span> : [ArangoCollection <span class="hljs-number">22571</span>, <span class="hljs-string">"friend_of"</span> (type edge, status loaded)], 
  <span class="hljs-string">"Customer"</span> : [ArangoCollection <span class="hljs-number">22566</span>, <span class="hljs-string">"Customer"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"has_bought"</span> : [ArangoCollection <span class="hljs-number">22588</span>, <span class="hljs-string">"has_bought"</span> (type edge, status loaded)], 
  <span class="hljs-string">"Company"</span> : [ArangoCollection <span class="hljs-number">22576</span>, <span class="hljs-string">"Company"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"Electronics"</span> : [ArangoCollection <span class="hljs-number">22584</span>, <span class="hljs-string">"Electronics"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"Groceries"</span> : [ArangoCollection <span class="hljs-number">22580</span>, <span class="hljs-string">"Groceries"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="general_graph_create_graph_example1_container_collapse" onclick="$('#general_graph_create_graph_example1_long').hide(); $('#general_graph_create_graph_example1_short').show(); window.location.hash='general_graph_create_graph_example1_container';" class="example_show_button">Hide execution results</div></div>
<div id="general_graph_create_graph_example1_short" onclick="$('#general_graph_create_graph_example1_short').hide(); $('#general_graph_create_graph_example1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions();
arangosh&gt; graph_module._extendEdgeDefinitions(edgeDefinitions, graph_module._relation(<span class="hljs-string">"friend_of"</span>, <span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Customer"</span>));
arangosh&gt; graph_module._extendEdgeDefinitions(
........&gt; edgeDefinitions, graph_module._relation(
........&gt; <span class="hljs-string">"has_bought"</span>, [<span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Company"</span>], [<span class="hljs-string">"Groceries"</span>, <span class="hljs-string">"Electronics"</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">"myStore"</span>, edgeDefinitions);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock general_graph_create_graph_example1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph_create_graph_example2


<div class="example-container" id="general_graph_create_graph_example2_container">
<a class="anchorjs-link " href="#general_graph_create_graph_example2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph_create_graph_example2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt;  <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions(
........&gt;  graph_module._relation(<span class="hljs-string">"friend_of"</span>, [<span class="hljs-string">"Customer"</span>], [<span class="hljs-string">"Customer"</span>]), graph_module._relation(
........&gt; <span class="hljs-string">"has_bought"</span>, [<span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Company"</span>], [<span class="hljs-string">"Groceries"</span>, <span class="hljs-string">"Electronics"</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">"myStore"</span>, edgeDefinitions);
{[Graph] 
  <span class="hljs-string">"friend_of"</span> : [ArangoCollection <span class="hljs-number">22613</span>, <span class="hljs-string">"friend_of"</span> (type edge, status loaded)], 
  <span class="hljs-string">"Customer"</span> : [ArangoCollection <span class="hljs-number">22608</span>, <span class="hljs-string">"Customer"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"has_bought"</span> : [ArangoCollection <span class="hljs-number">22630</span>, <span class="hljs-string">"has_bought"</span> (type edge, status loaded)], 
  <span class="hljs-string">"Company"</span> : [ArangoCollection <span class="hljs-number">22617</span>, <span class="hljs-string">"Company"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"Electronics"</span> : [ArangoCollection <span class="hljs-number">22622</span>, <span class="hljs-string">"Electronics"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"Groceries"</span> : [ArangoCollection <span class="hljs-number">22626</span>, <span class="hljs-string">"Groceries"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="general_graph_create_graph_example2_container_collapse" onclick="$('#general_graph_create_graph_example2_long').hide(); $('#general_graph_create_graph_example2_short').show(); window.location.hash='general_graph_create_graph_example2_container';" class="example_show_button">Hide execution results</div></div>
<div id="general_graph_create_graph_example2_short" onclick="$('#general_graph_create_graph_example2_short').hide(); $('#general_graph_create_graph_example2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt;  <span class="hljs-keyword">var</span> edgeDefinitions = graph_module._edgeDefinitions(
........&gt;  graph_module._relation(<span class="hljs-string">"friend_of"</span>, [<span class="hljs-string">"Customer"</span>], [<span class="hljs-string">"Customer"</span>]), graph_module._relation(
........&gt; <span class="hljs-string">"has_bought"</span>, [<span class="hljs-string">"Customer"</span>, <span class="hljs-string">"Company"</span>], [<span class="hljs-string">"Groceries"</span>, <span class="hljs-string">"Electronics"</span>]));
arangosh&gt; graph_module._create(<span class="hljs-string">"myStore"</span>, edgeDefinitions);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock general_graph_create_graph_example2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphList


<div class="example-container" id="generalGraphList_container">
<a class="anchorjs-link " href="#generalGraphList_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphList_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._list();
[ ]
</pre>
</div>
</div>

    @endDocuBlock generalGraphList


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphLoadGraph


<div class="example-container" id="generalGraphLoadGraph_container">
<a class="anchorjs-link " href="#generalGraphLoadGraph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphLoadGraph_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph = graph_module._graph(<span class="hljs-string">"social"</span>);
{[Graph] 
  <span class="hljs-string">"relation"</span> : [ArangoCollection <span class="hljs-number">17292</span>, <span class="hljs-string">"relation"</span> (type edge, status loaded)], 
  <span class="hljs-string">"female"</span> : [ArangoCollection <span class="hljs-number">17286</span>, <span class="hljs-string">"female"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  <span class="hljs-string">"male"</span> : [ArangoCollection <span class="hljs-number">17289</span>, <span class="hljs-string">"male"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
}
</pre>
<div id="generalGraphLoadGraph_container_collapse" onclick="$('#generalGraphLoadGraph_long').hide(); $('#generalGraphLoadGraph_short').show(); window.location.hash='generalGraphLoadGraph_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphLoadGraph_short" onclick="$('#generalGraphLoadGraph_short').hide(); $('#generalGraphLoadGraph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph = graph_module._graph(<span class="hljs-string">"social"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphLoadGraph


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphDropGraphKeep


<div class="example-container" id="generalGraphDropGraphKeep_container">
<a class="anchorjs-link " href="#generalGraphDropGraphKeep_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphDropGraphKeep_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">"social"</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._collection(<span class="hljs-string">"female"</span>);
[ArangoCollection <span class="hljs-number">16750</span>, <span class="hljs-string">"female"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._collection(<span class="hljs-string">"male"</span>);
[ArangoCollection <span class="hljs-number">16753</span>, <span class="hljs-string">"male"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._collection(<span class="hljs-string">"relation"</span>);
[ArangoCollection <span class="hljs-number">16756</span>, <span class="hljs-string">"relation"</span> (type edge, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock generalGraphDropGraphKeep


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphDropGraphDropCollections


<div class="example-container" id="generalGraphDropGraphDropCollections_container">
<a class="anchorjs-link " href="#generalGraphDropGraphDropCollections_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphDropGraphDropCollections_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; graph_module._drop(<span class="hljs-string">"social"</span>, <span class="hljs-literal">true</span>);
<span class="hljs-literal">true</span>
arangosh&gt; db._collection(<span class="hljs-string">"female"</span>);
<span class="hljs-literal">null</span>
arangosh&gt; db._collection(<span class="hljs-string">"male"</span>);
<span class="hljs-literal">null</span>
arangosh&gt; db._collection(<span class="hljs-string">"relation"</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphDropGraphDropCollections


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__extendEdgeDefinitions


<div class="example-container" id="general_graph__extendEdgeDefinitions_container">
<a class="anchorjs-link " href="#general_graph__extendEdgeDefinitions_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__extendEdgeDefinitions_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> ed2 = graph_module._relation(<span class="hljs-string">"myEC2"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC3"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1]);
arangosh&gt; graph._extendEdgeDefinitions(ed2);
</pre>
</div>
</div>

    @endDocuBlock general_graph__extendEdgeDefinitions


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__editEdgeDefinition


<div class="example-container" id="general_graph__editEdgeDefinition_container">
<a class="anchorjs-link " href="#general_graph__editEdgeDefinition_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__editEdgeDefinition_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> original = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> modified = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC2"</span>], [<span class="hljs-string">"myVC3"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [original]);
arangosh&gt; graph._editEdgeDefinitions(modified);
</pre>
</div>
</div>

    @endDocuBlock general_graph__editEdgeDefinition


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__deleteEdgeDefinitionNoDrop


<div class="example-container" id="general_graph__deleteEdgeDefinitionNoDrop_container">
<a class="anchorjs-link " href="#general_graph__deleteEdgeDefinitionNoDrop_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__deleteEdgeDefinitionNoDrop_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> ed2 = graph_module._relation(<span class="hljs-string">"myEC2"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC3"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1, ed2]);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">"myEC1"</span>);
arangosh&gt; db._collection(<span class="hljs-string">"myEC1"</span>);
[ArangoCollection <span class="hljs-number">22273</span>, <span class="hljs-string">"myEC1"</span> (type edge, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock general_graph__deleteEdgeDefinitionNoDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__deleteEdgeDefinitionWithDrop


<div class="example-container" id="general_graph__deleteEdgeDefinitionWithDrop_container">
<a class="anchorjs-link " href="#general_graph__deleteEdgeDefinitionWithDrop_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__deleteEdgeDefinitionWithDrop_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> ed2 = graph_module._relation(<span class="hljs-string">"myEC2"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC3"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1, ed2]);
arangosh&gt; graph._deleteEdgeDefinition(<span class="hljs-string">"myEC1"</span>, <span class="hljs-literal">true</span>);
arangosh&gt; db._collection(<span class="hljs-string">"myEC1"</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock general_graph__deleteEdgeDefinitionWithDrop


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__addVertexCollection


<div class="example-container" id="general_graph__addVertexCollection_container">
<a class="anchorjs-link " href="#general_graph__addVertexCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__addVertexCollection_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"myVC3"</span>, <span class="hljs-literal">true</span>);
</pre>
</div>
</div>

    @endDocuBlock general_graph__addVertexCollection


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__orphanCollections


<div class="example-container" id="general_graph__orphanCollections_container">
<a class="anchorjs-link " href="#general_graph__orphanCollections_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__orphanCollections_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"myVC3"</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">"myVC3"</span> 
]
</pre>
</div>
</div>

    @endDocuBlock general_graph__orphanCollections


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline general_graph__removeVertexCollections


<div class="example-container" id="general_graph__removeVertexCollections_container">
<a class="anchorjs-link " href="#general_graph__removeVertexCollections_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="general_graph__removeVertexCollections_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"myVC3"</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"myVC4"</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">"myVC3"</span>, 
  <span class="hljs-string">"myVC4"</span> 
]
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">"myVC3"</span>);
arangosh&gt; graph._orphanCollections();
[ 
  <span class="hljs-string">"myVC4"</span> 
]
</pre>
<div id="general_graph__removeVertexCollections_container_collapse" onclick="$('#general_graph__removeVertexCollections_long').hide(); $('#general_graph__removeVertexCollections_short').show(); window.location.hash='general_graph__removeVertexCollections_container';" class="example_show_button">Hide execution results</div></div>
<div id="general_graph__removeVertexCollections_short" onclick="$('#general_graph__removeVertexCollections_short').hide(); $('#general_graph__removeVertexCollections_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> graph_module = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/general-graph"</span>)
arangosh&gt; <span class="hljs-keyword">var</span> ed1 = graph_module._relation(<span class="hljs-string">"myEC1"</span>, [<span class="hljs-string">"myVC1"</span>], [<span class="hljs-string">"myVC2"</span>]);
arangosh&gt; <span class="hljs-keyword">var</span> graph = graph_module._create(<span class="hljs-string">"myGraph"</span>, [ed1]);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"myVC3"</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._addVertexCollection(<span class="hljs-string">"myVC4"</span>, <span class="hljs-literal">true</span>);
arangosh&gt; graph._orphanCollections();
arangosh&gt; graph._removeVertexCollection(<span class="hljs-string">"myVC3"</span>);
arangosh&gt; graph._orphanCollections();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock general_graph__removeVertexCollections


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionSave


<div class="example-container" id="generalGraphVertexCollectionSave_container">
<a class="anchorjs-link " href="#generalGraphVertexCollectionSave_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphVertexCollectionSave_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">"Floyd"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"floyd"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/floyd"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"floyd"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ha---_"</span> 
}
</pre>
<div id="generalGraphVertexCollectionSave_container_collapse" onclick="$('#generalGraphVertexCollectionSave_long').hide(); $('#generalGraphVertexCollectionSave_short').show(); window.location.hash='generalGraphVertexCollectionSave_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionSave_short" onclick="$('#generalGraphVertexCollectionSave_short').hide(); $('#generalGraphVertexCollectionSave_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">"Floyd"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"floyd"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionSave


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionReplace


<div class="example-container" id="generalGraphVertexCollectionReplace_container">
<a class="anchorjs-link " href="#generalGraphVertexCollectionReplace_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphVertexCollectionReplace_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">neym</span>: <span class="hljs-string">"Jon"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"john"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/john"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"john"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hWm--D"</span> 
}
arangosh&gt; graph.male.replace(<span class="hljs-string">"male/john"</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">"John"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/john"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"john"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hWq--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7hWm--D"</span> 
}
</pre>
<div id="generalGraphVertexCollectionReplace_container_collapse" onclick="$('#generalGraphVertexCollectionReplace_long').hide(); $('#generalGraphVertexCollectionReplace_short').show(); window.location.hash='generalGraphVertexCollectionReplace_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionReplace_short" onclick="$('#generalGraphVertexCollectionReplace_short').hide(); $('#generalGraphVertexCollectionReplace_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">neym</span>: <span class="hljs-string">"Jon"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"john"</span>});
arangosh&gt; graph.male.replace(<span class="hljs-string">"male/john"</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">"John"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionReplace


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionUpdate


<div class="example-container" id="generalGraphVertexCollectionUpdate_container">
<a class="anchorjs-link " href="#generalGraphVertexCollectionUpdate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphVertexCollectionUpdate_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.female.save({<span class="hljs-attr">name</span>: <span class="hljs-string">"Lynda"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"linda"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/linda"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"linda"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hdW--B"</span> 
}
arangosh&gt; graph.female.update(<span class="hljs-string">"female/linda"</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">"Linda"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"linda"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/linda"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"linda"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hdW--D"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7hdW--B"</span> 
}
</pre>
<div id="generalGraphVertexCollectionUpdate_container_collapse" onclick="$('#generalGraphVertexCollectionUpdate_long').hide(); $('#generalGraphVertexCollectionUpdate_short').show(); window.location.hash='generalGraphVertexCollectionUpdate_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionUpdate_short" onclick="$('#generalGraphVertexCollectionUpdate_short').hide(); $('#generalGraphVertexCollectionUpdate_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.female.save({<span class="hljs-attr">name</span>: <span class="hljs-string">"Lynda"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"linda"</span>});
arangosh&gt; graph.female.update(<span class="hljs-string">"female/linda"</span>, {<span class="hljs-attr">name</span>: <span class="hljs-string">"Linda"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"linda"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionUpdate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphVertexCollectionRemove


<div class="example-container" id="generalGraphVertexCollectionRemove_container">
<a class="anchorjs-link " href="#generalGraphVertexCollectionRemove_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphVertexCollectionRemove_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">"Kermit"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"kermit"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/kermit"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"kermit"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hS2--_"</span> 
}
arangosh&gt; db._exists(<span class="hljs-string">"male/kermit"</span>)
<span class="hljs-literal">true</span>
arangosh&gt; graph.male.remove(<span class="hljs-string">"male/kermit"</span>)
<span class="hljs-literal">true</span>
arangosh&gt; db._exists(<span class="hljs-string">"male/kermit"</span>)
<span class="hljs-literal">false</span>
</pre>
<div id="generalGraphVertexCollectionRemove_container_collapse" onclick="$('#generalGraphVertexCollectionRemove_long').hide(); $('#generalGraphVertexCollectionRemove_short').show(); window.location.hash='generalGraphVertexCollectionRemove_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphVertexCollectionRemove_short" onclick="$('#generalGraphVertexCollectionRemove_short').hide(); $('#generalGraphVertexCollectionRemove_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.male.save({<span class="hljs-attr">name</span>: <span class="hljs-string">"Kermit"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"kermit"</span>});
arangosh&gt; db._exists(<span class="hljs-string">"male/kermit"</span>)
arangosh&gt; graph.male.remove(<span class="hljs-string">"male/kermit"</span>)
arangosh&gt; db._exists(<span class="hljs-string">"male/kermit"</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphVertexCollectionRemove


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionSave1


<div class="example-container" id="generalGraphEdgeCollectionSave1_container">
<a class="anchorjs-link " href="#generalGraphEdgeCollectionSave1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeCollectionSave1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"male/bob"</span>, <span class="hljs-string">"female/alice"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"married"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"bobAndAlice"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/bobAndAlice"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bobAndAlice"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cSK--B"</span> 
}
</pre>
<div id="generalGraphEdgeCollectionSave1_container_collapse" onclick="$('#generalGraphEdgeCollectionSave1_long').hide(); $('#generalGraphEdgeCollectionSave1_short').show(); window.location.hash='generalGraphEdgeCollectionSave1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionSave1_short" onclick="$('#generalGraphEdgeCollectionSave1_short').hide(); $('#generalGraphEdgeCollectionSave1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"male/bob"</span>, <span class="hljs-string">"female/alice"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"married"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"bobAndAlice"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionSave1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionSave2


<div class="example-container" id="generalGraphEdgeCollectionSave2_container">
<a class="anchorjs-link " href="#generalGraphEdgeCollectionSave2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeCollectionSave2_long">
<pre>
arangosh&gt; var examples = require("@arangodb/graph-examples/example-graph.js");
arangosh&gt; var graph = examples.loadGraph("social");
arangosh&gt; graph.relation.save(
........&gt;  "relation/aliceAndBob",
........&gt;   "female/alice",
........&gt; {type: "married", _key: "bobAndAlice"});
[ArangoError 1906: invalid edge between relation/aliceAndBob and female/alice. Doesn't conform to any edge definition]
</pre>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionSave2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionReplace


<div class="example-container" id="generalGraphEdgeCollectionReplace_container">
<a class="anchorjs-link " href="#generalGraphEdgeCollectionReplace_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeCollectionReplace_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"female/alice"</span>, <span class="hljs-string">"female/diana"</span>, {<span class="hljs-attr">typo</span>: <span class="hljs-string">"nose"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/aliceAndDiana"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"aliceAndDiana"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cOW--D"</span> 
}
arangosh&gt; graph.relation.replace(<span class="hljs-string">"relation/aliceAndDiana"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"knows"</span>, <span class="hljs-attr">_from</span>: <span class="hljs-string">"female/alice"</span>, <span class="hljs-attr">_to</span>: <span class="hljs-string">"female/diana"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/aliceAndDiana"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"aliceAndDiana"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cOW--F"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7cOW--D"</span> 
}
</pre>
<div id="generalGraphEdgeCollectionReplace_container_collapse" onclick="$('#generalGraphEdgeCollectionReplace_long').hide(); $('#generalGraphEdgeCollectionReplace_short').show(); window.location.hash='generalGraphEdgeCollectionReplace_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionReplace_short" onclick="$('#generalGraphEdgeCollectionReplace_short').hide(); $('#generalGraphEdgeCollectionReplace_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"female/alice"</span>, <span class="hljs-string">"female/diana"</span>, {<span class="hljs-attr">typo</span>: <span class="hljs-string">"nose"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
arangosh&gt; graph.relation.replace(<span class="hljs-string">"relation/aliceAndDiana"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"knows"</span>, <span class="hljs-attr">_from</span>: <span class="hljs-string">"female/alice"</span>, <span class="hljs-attr">_to</span>: <span class="hljs-string">"female/diana"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionReplace


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionUpdate


<div class="example-container" id="generalGraphEdgeCollectionUpdate_container">
<a class="anchorjs-link " href="#generalGraphEdgeCollectionUpdate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeCollectionUpdate_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"female/alice"</span>, <span class="hljs-string">"female/diana"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"knows"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/aliceAndDiana"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"aliceAndDiana"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cZK--B"</span> 
}
arangosh&gt; graph.relation.update(<span class="hljs-string">"relation/aliceAndDiana"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"quarreled"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/aliceAndDiana"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"aliceAndDiana"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cZK--D"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7cZK--B"</span> 
}
</pre>
<div id="generalGraphEdgeCollectionUpdate_container_collapse" onclick="$('#generalGraphEdgeCollectionUpdate_long').hide(); $('#generalGraphEdgeCollectionUpdate_short').show(); window.location.hash='generalGraphEdgeCollectionUpdate_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionUpdate_short" onclick="$('#generalGraphEdgeCollectionUpdate_short').hide(); $('#generalGraphEdgeCollectionUpdate_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"female/alice"</span>, <span class="hljs-string">"female/diana"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"knows"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
arangosh&gt; graph.relation.update(<span class="hljs-string">"relation/aliceAndDiana"</span>, {<span class="hljs-attr">type</span>: <span class="hljs-string">"quarreled"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionUpdate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-management.md -->
    @startDocuBlockInline generalGraphEdgeCollectionRemove


<div class="example-container" id="generalGraphEdgeCollectionRemove_container">
<a class="anchorjs-link " href="#generalGraphEdgeCollectionRemove_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphEdgeCollectionRemove_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"female/alice"</span>, <span class="hljs-string">"female/diana"</span>, {<span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/aliceAndDiana"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"aliceAndDiana"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cKq--_"</span> 
}
arangosh&gt; db._exists(<span class="hljs-string">"relation/aliceAndDiana"</span>)
<span class="hljs-literal">true</span>
arangosh&gt; graph.relation.remove(<span class="hljs-string">"relation/aliceAndDiana"</span>)
<span class="hljs-literal">true</span>
arangosh&gt; db._exists(<span class="hljs-string">"relation/aliceAndDiana"</span>)
<span class="hljs-literal">false</span>
</pre>
<div id="generalGraphEdgeCollectionRemove_container_collapse" onclick="$('#generalGraphEdgeCollectionRemove_long').hide(); $('#generalGraphEdgeCollectionRemove_short').show(); window.location.hash='generalGraphEdgeCollectionRemove_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphEdgeCollectionRemove_short" onclick="$('#generalGraphEdgeCollectionRemove_short').hide(); $('#generalGraphEdgeCollectionRemove_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; graph.relation.save(<span class="hljs-string">"female/alice"</span>, <span class="hljs-string">"female/diana"</span>, {<span class="hljs-attr">_key</span>: <span class="hljs-string">"aliceAndDiana"</span>});
arangosh&gt; db._exists(<span class="hljs-string">"relation/aliceAndDiana"</span>)
arangosh&gt; graph.relation.remove(<span class="hljs-string">"relation/aliceAndDiana"</span>)
arangosh&gt; db._exists(<span class="hljs-string">"relation/aliceAndDiana"</span>)
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphEdgeCollectionRemove


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_02_saveUser


<div class="example-container" id="USER_02_saveUser_container">
<a class="anchorjs-link " href="#USER_02_saveUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_02_saveUser_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">'@arangodb/users'</span>).save(<span class="hljs-string">'my-user'</span>, <span class="hljs-string">'my-secret-password'</span>);
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"my-user"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="USER_02_saveUser_container_collapse" onclick="$('#USER_02_saveUser_long').hide(); $('#USER_02_saveUser_short').show(); window.location.hash='USER_02_saveUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_02_saveUser_short" onclick="$('#USER_02_saveUser_short').hide(); $('#USER_02_saveUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">'@arangodb/users'</span>).save(<span class="hljs-string">'my-user'</span>, <span class="hljs-string">'my-secret-password'</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_02_saveUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_03_replaceUser


<div class="example-container" id="USER_03_replaceUser_container">
<a class="anchorjs-link " href="#USER_03_replaceUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_03_replaceUser_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).replace(<span class="hljs-string">"my-user"</span>, <span class="hljs-string">"my-changed-password"</span>);
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"my-user"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="USER_03_replaceUser_container_collapse" onclick="$('#USER_03_replaceUser_long').hide(); $('#USER_03_replaceUser_short').show(); window.location.hash='USER_03_replaceUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_03_replaceUser_short" onclick="$('#USER_03_replaceUser_short').hide(); $('#USER_03_replaceUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).replace(<span class="hljs-string">"my-user"</span>, <span class="hljs-string">"my-changed-password"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_03_replaceUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_04_updateUser


<div class="example-container" id="USER_04_updateUser_container">
<a class="anchorjs-link " href="#USER_04_updateUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_04_updateUser_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).update(<span class="hljs-string">"my-user"</span>, <span class="hljs-string">"my-secret-password"</span>);
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"my-user"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="USER_04_updateUser_container_collapse" onclick="$('#USER_04_updateUser_long').hide(); $('#USER_04_updateUser_short').show(); window.location.hash='USER_04_updateUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_04_updateUser_short" onclick="$('#USER_04_updateUser_short').hide(); $('#USER_04_updateUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).update(<span class="hljs-string">"my-user"</span>, <span class="hljs-string">"my-secret-password"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_04_updateUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_05_isValidUser


<div class="example-container" id="USER_05_isValidUser_container">
<a class="anchorjs-link " href="#USER_05_isValidUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_05_isValidUser_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).isValid(<span class="hljs-string">"my-user"</span>, <span class="hljs-string">"my-secret-password"</span>);
<span class="hljs-literal">true</span>
</pre>
</div>
</div>

    @endDocuBlock USER_05_isValidUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_07_removeUser


<div class="example-container" id="USER_07_removeUser_container">
<a class="anchorjs-link " href="#USER_07_removeUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_07_removeUser_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).remove(<span class="hljs-string">"my-user"</span>);
</pre>
</div>
</div>

    @endDocuBlock USER_07_removeUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_04_documentUser


<div class="example-container" id="USER_04_documentUser_container">
<a class="anchorjs-link " href="#USER_04_documentUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_04_documentUser_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).document(<span class="hljs-string">"my-user"</span>);
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"my-user"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="USER_04_documentUser_container_collapse" onclick="$('#USER_04_documentUser_long').hide(); $('#USER_04_documentUser_short').show(); window.location.hash='USER_04_documentUser_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_04_documentUser_short" onclick="$('#USER_04_documentUser_short').hide(); $('#USER_04_documentUser_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).document(<span class="hljs-string">"my-user"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_04_documentUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_06_AllUsers


<div class="example-container" id="USER_06_AllUsers_container">
<a class="anchorjs-link " href="#USER_06_AllUsers_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_06_AllUsers_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).all();
[ 
  { 
    <span class="hljs-string">"user"</span> : <span class="hljs-string">"root"</span>, 
    <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"extra"</span> : { 
    } 
  }, 
  { 
    <span class="hljs-string">"user"</span> : <span class="hljs-string">"tester"</span>, 
    <span class="hljs-string">"active"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"extra"</span> : { 
    } 
  }, 
  { 
    <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin"</span>, 
    <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"extra"</span> : { 
    } 
  }, 
  { 
    <span class="hljs-string">"user"</span> : <span class="hljs-string">"my-user"</span>, 
    <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"extra"</span> : { 
    } 
  } 
]
</pre>
<div id="USER_06_AllUsers_container_collapse" onclick="$('#USER_06_AllUsers_long').hide(); $('#USER_06_AllUsers_short').show(); window.location.hash='USER_06_AllUsers_container';" class="example_show_button">Hide execution results</div></div>
<div id="USER_06_AllUsers_short" onclick="$('#USER_06_AllUsers_short').hide(); $('#USER_06_AllUsers_long').show();">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).all();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock USER_06_AllUsers


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_03_reloadUser


<div class="example-container" id="USER_03_reloadUser_container">
<a class="anchorjs-link " href="#USER_03_reloadUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_03_reloadUser_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).reload();
</pre>
</div>
</div>

    @endDocuBlock USER_03_reloadUser


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/administration-managing-users-in-arangosh.md -->
    @startDocuBlockInline USER_05_permission


<div class="example-container" id="USER_05_permission_container">
<a class="anchorjs-link " href="#USER_05_permission_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="USER_05_permission_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/users"</span>).permission(<span class="hljs-string">"my-user"</span>, <span class="hljs-string">"testdb"</span>);
rw
</pre>
</div>
</div>

    @endDocuBlock USER_05_permission


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-hash.md -->
    @startDocuBlockInline ensureUniqueConstraint


<div class="example-container" id="ensureUniqueConstraint_container">
<a class="anchorjs-link " href="#ensureUniqueConstraint_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureUniqueConstraint_long" style="Display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b.c"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b.c"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/16322"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16325"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16325"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bhC--_"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index <span class="hljs-number">16322</span> <span class="hljs-keyword">of</span> type hash over [<span class="hljs-string">"a"</span>,<span class="hljs-string">"b.c"</span>]; conflicting key: <span class="hljs-number">16325</span>]
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-literal">null</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16331"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16331"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bhG--B"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
[ArangoError <span class="hljs-number">1210</span>: unique constraint violated - <span class="hljs-keyword">in</span> index <span class="hljs-number">16322</span> <span class="hljs-keyword">of</span> type hash over [<span class="hljs-string">"a"</span>,<span class="hljs-string">"b.c"</span>]; conflicting key: <span class="hljs-number">16331</span>]
</pre>
<div id="ensureUniqueConstraint_container_collapse" onclick="$('#ensureUniqueConstraint_long').hide(); $('#ensureUniqueConstraint_short').show(); window.location.hash='ensureUniqueConstraint_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureUniqueConstraint_short" onclick="$('#ensureUniqueConstraint_short').hide(); $('#ensureUniqueConstraint_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span>, <span class="hljs-string">"b.c"</span> ], <span class="hljs-attr">unique</span>: <span class="hljs-literal">true</span> });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-literal">null</span> } });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureUniqueConstraint


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-hash.md -->
    @startDocuBlockInline ensureHashIndex


<div class="example-container" id="ensureHashIndex_container">
<a class="anchorjs-link " href="#ensureHashIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureHashIndex_long" style="Display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/16225"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16228"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16228"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bWi--_"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16232"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16232"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bWm--_"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-literal">null</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16235"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16235"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bWm--B"</span> 
}
</pre>
<div id="ensureHashIndex_container_collapse" onclick="$('#ensureHashIndex_long').hide(); $('#ensureHashIndex_short').show(); window.location.hash='ensureHashIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureHashIndex_short" onclick="$('#ensureHashIndex_short').hide(); $('#ensureHashIndex_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a"</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-literal">null</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureHashIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-hash.md -->
    @startDocuBlockInline ensureHashIndexArray


<div class="example-container" id="ensureHashIndexArray_container">
<a class="anchorjs-link " href="#ensureHashIndexArray_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureHashIndexArray_long" style="Display: none;">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a[*]"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a[*]"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"test/16242"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ] });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16245"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16245"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bYq--_"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">3</span> ] });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16249"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16249"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bYq--B"</span> 
}
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-literal">null</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/16252"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16252"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bYu--_"</span> 
}
</pre>
<div id="ensureHashIndexArray_container_collapse" onclick="$('#ensureHashIndexArray_long').hide(); $('#ensureHashIndexArray_short').show(); window.location.hash='ensureHashIndexArray_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureHashIndexArray_short" onclick="$('#ensureHashIndexArray_short').hide(); $('#ensureHashIndexArray_long').show();">
<pre>
arangosh&gt; db.test.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"hash"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"a[*]"</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">2</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : [ <span class="hljs-number">1</span>, <span class="hljs-number">3</span> ] });
arangosh&gt; db.test.save({ <span class="hljs-attr">a</span> : <span class="hljs-literal">null</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureHashIndexArray


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/indexing-fulltext.md -->
    @startDocuBlockInline ensureFulltextIndex


<div class="example-container" id="ensureFulltextIndex_container">
<a class="anchorjs-link " href="#ensureFulltextIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="ensureFulltextIndex_long" style="Display: none;">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"fulltext"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"text"</span> ], <span class="hljs-attr">minLength</span>: <span class="hljs-number">3</span> });
{ 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"text"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/16195"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"minLength"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"the quick brown"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16198"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16198"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUe--_"</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"quick brown fox"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">2</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16202"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16202"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUe--B"</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"brown fox jums"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16205"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16205"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUe--D"</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"fox jumps over"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">4</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16208"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16208"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUi--_"</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"jumps over the"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">5</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16211"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16211"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUi--B"</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"over the lazy"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">6</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16214"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16214"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUm--_"</span> 
}
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"the lazy dog"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">7</span> } });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16217"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16217"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUm--B"</span> 
}
arangosh&gt; db._query(<span class="hljs-string">"FOR document IN FULLTEXT(example, 'text', 'the') RETURN document"</span>);
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16198"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16198"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUe--_"</span>, 
    <span class="hljs-string">"text"</span> : <span class="hljs-string">"the quick brown"</span>, 
    <span class="hljs-string">"b"</span> : { 
      <span class="hljs-string">"c"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16211"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16211"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUi--B"</span>, 
    <span class="hljs-string">"text"</span> : <span class="hljs-string">"jumps over the"</span>, 
    <span class="hljs-string">"b"</span> : { 
      <span class="hljs-string">"c"</span> : <span class="hljs-number">5</span> 
    } 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16214"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16214"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUm--_"</span>, 
    <span class="hljs-string">"text"</span> : <span class="hljs-string">"over the lazy"</span>, 
    <span class="hljs-string">"b"</span> : { 
      <span class="hljs-string">"c"</span> : <span class="hljs-number">6</span> 
    } 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16217"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16217"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bUm--B"</span>, 
    <span class="hljs-string">"text"</span> : <span class="hljs-string">"the lazy dog"</span>, 
    <span class="hljs-string">"b"</span> : { 
      <span class="hljs-string">"c"</span> : <span class="hljs-number">7</span> 
    } 
  } 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="ensureFulltextIndex_container_collapse" onclick="$('#ensureFulltextIndex_long').hide(); $('#ensureFulltextIndex_short').show(); window.location.hash='ensureFulltextIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="ensureFulltextIndex_short" onclick="$('#ensureFulltextIndex_short').hide(); $('#ensureFulltextIndex_long').show();">
<pre>
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"fulltext"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"text"</span> ], <span class="hljs-attr">minLength</span>: <span class="hljs-number">3</span> });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"the quick brown"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">1</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"quick brown fox"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">2</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"brown fox jums"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"fox jumps over"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">4</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"jumps over the"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">5</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"over the lazy"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">6</span> } });
arangosh&gt; db.example.save({ <span class="hljs-attr">text</span> : <span class="hljs-string">"the lazy dog"</span>, <span class="hljs-attr">b</span> : { <span class="hljs-attr">c</span> : <span class="hljs-number">7</span> } });
arangosh&gt; db._query(<span class="hljs-string">"FOR document IN FULLTEXT(example, 'text', 'the') RETURN document"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock ensureFulltextIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowTo1

      arangosh> var graph_module = require("@arangodb/smart-graph");
      arangosh> var graph = graph_module._create("myGraph", [], [], {smartGraphAttribute: "region", numberOfShards: 9});
      arangosh> graph;
      [ SmartGraph myGraph EdgeDefinitions: [ ] VertexCollections: [ ] ]
    @endDocuBlock smartGraphCreateGraphHowTo1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowTo2

      arangosh> graph._addVertexCollection("shop");
      arangosh> graph._addVertexCollection("customer");
      arangosh> graph._addVertexCollection("pet");
      arangosh> graph;
      [ SmartGraph myGraph EdgeDefinitions: [ ] VertexCollections: [ "shop", "customer", "pet" ] ]
    @endDocuBlock smartGraphCreateGraphHowTo2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-smart-graphs.md -->
    @startDocuBlockInline smartGraphCreateGraphHowTo3

      arangosh> var rel = graph_module._relation("isCustomer", ["shop"], ["customer"]);
      arangosh> graph._extendEdgeDefinitions(rel);
      arangosh> graph;
      [ SmartGraph myGraph EdgeDefinitions: [   "isCustomer: [shop] -> [customer]" ] VertexCollections: [ "pet" ] ]
    @endDocuBlock smartGraphCreateGraphHowTo3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 001_collectionAll


<div class="example-container" id="001_collectionAll_container">
<a class="anchorjs-link " href="#001_collectionAll_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="001_collectionAll_long" style="Display: none;">
<pre>
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"one"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/104"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"104"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J1u--_"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"two"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/108"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"108"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J12--_"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"three"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/111"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"111"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J12--B"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"four"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/114"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"114"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J12--D"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"five"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/117"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"117"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J16--_"</span> 
}
arangosh&gt; db.five.all().toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"114"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/114"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J12--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"four"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"117"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/117"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J16--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"five"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"108"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/108"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J12--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"two"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"111"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/111"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J12--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"104"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/104"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J1u--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"one"</span> 
  } 
]
</pre>
<div id="001_collectionAll_container_collapse" onclick="$('#001_collectionAll_long').hide(); $('#001_collectionAll_short').show(); window.location.hash='001_collectionAll_container';" class="example_show_button">Hide execution results</div></div>
<div id="001_collectionAll_short" onclick="$('#001_collectionAll_short').hide(); $('#001_collectionAll_long').show();">
<pre>
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"one"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"two"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"three"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"four"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"five"</span> });
arangosh&gt; db.five.all().toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 001_collectionAll


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 002_collectionAllNext


<div class="example-container" id="002_collectionAllNext_container">
<a class="anchorjs-link " href="#002_collectionAllNext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="002_collectionAllNext_long" style="Display: none;">
<pre>
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"one"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/126"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"126"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3a--_"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"two"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/130"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"130"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3a--B"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"three"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/133"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"133"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3e--_"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"four"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/136"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"136"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3e--B"</span> 
}
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"five"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/139"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"139"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3e--D"</span> 
}
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"139"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/139"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3e--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"five"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"136"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/136"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J3e--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"four"</span> 
  } 
]
</pre>
<div id="002_collectionAllNext_container_collapse" onclick="$('#002_collectionAllNext_long').hide(); $('#002_collectionAllNext_short').show(); window.location.hash='002_collectionAllNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="002_collectionAllNext_short" onclick="$('#002_collectionAllNext_short').hide(); $('#002_collectionAllNext_long').show();">
<pre>
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"one"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"two"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"three"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"four"</span> });
arangosh&gt; db.five.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"five"</span> });
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 002_collectionAllNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 003_collectionByExample


<div class="example-container" id="003_collectionByExample_container">
<a class="anchorjs-link " href="#003_collectionByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="003_collectionByExample_long" style="Display: none;">
<pre>
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Gerhard"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/147"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"147"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4a--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Helmut"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/151"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"151"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4e--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Angela"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/154"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"154"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4e--B"</span> 
}
arangosh&gt; db.users.all().toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"151"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/151"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4e--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helmut"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"147"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/147"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4a--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"154"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/154"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4e--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> 
  } 
]
arangosh&gt; db.users.byExample({ <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/20"</span> }).toArray();
[ ]
arangosh&gt; db.users.byExample({ <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> }).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"147"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/147"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J4a--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> 
  } 
]
arangosh&gt; db.users.byExample({ <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helmut"</span>, <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/15"</span> }).toArray();
[ ]
</pre>
<div id="003_collectionByExample_container_collapse" onclick="$('#003_collectionByExample_long').hide(); $('#003_collectionByExample_short').show(); window.location.hash='003_collectionByExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="003_collectionByExample_short" onclick="$('#003_collectionByExample_short').hide(); $('#003_collectionByExample_long').show();">
<pre>
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Gerhard"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Helmut"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Angela"</span> });
arangosh&gt; db.users.all().toArray();
arangosh&gt; db.users.byExample({ <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/20"</span> }).toArray();
arangosh&gt; db.users.byExample({ <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gerhard"</span> }).toArray();
arangosh&gt; db.users.byExample({ <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helmut"</span>, <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/15"</span> }).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 003_collectionByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 004_collectionByExampleNext


<div class="example-container" id="004_collectionByExampleNext_container">
<a class="anchorjs-link " href="#004_collectionByExampleNext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="004_collectionByExampleNext_long" style="Display: none;">
<pre>
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Gerhard"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/165"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"165"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J5e--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Helmut"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/169"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"169"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J5i--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Angela"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/172"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"172"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J5i--B"</span> 
}
arangosh&gt; <span class="hljs-keyword">var</span> a = db.users.byExample( {<span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> } );
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"172"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/172"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J5i--B"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> 
}
</pre>
<div id="004_collectionByExampleNext_container_collapse" onclick="$('#004_collectionByExampleNext_long').hide(); $('#004_collectionByExampleNext_short').show(); window.location.hash='004_collectionByExampleNext_container';" class="example_show_button">Hide execution results</div></div>
<div id="004_collectionByExampleNext_short" onclick="$('#004_collectionByExampleNext_short').hide(); $('#004_collectionByExampleNext_long').show();">
<pre>
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Gerhard"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Helmut"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"Angela"</span> });
arangosh&gt; <span class="hljs-keyword">var</span> a = db.users.byExample( {<span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> } );
arangosh&gt; <span class="hljs-keyword">while</span> (a.hasNext()) print(a.next());
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 004_collectionByExampleNext


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionFirstExample


<div class="example-container" id="collectionFirstExample_container">
<a class="anchorjs-link " href="#collectionFirstExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionFirstExample_long" style="Display: none;">
<pre>
arangosh&gt; db.users.firstExample(<span class="hljs-string">"name"</span>, <span class="hljs-string">"Angela"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15565"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/15565"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7aa2--B"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angela"</span> 
}
</pre>
<div id="collectionFirstExample_container_collapse" onclick="$('#collectionFirstExample_long').hide(); $('#collectionFirstExample_short').show(); window.location.hash='collectionFirstExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionFirstExample_short" onclick="$('#collectionFirstExample_short').hide(); $('#collectionFirstExample_long').show();">
<pre>
arangosh&gt; db.users.firstExample(<span class="hljs-string">"name"</span>, <span class="hljs-string">"Angela"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionFirstExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 005_collectionRange


<div class="example-container" id="005_collectionRange_container">
<a class="anchorjs-link " href="#005_collectionRange_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="005_collectionRange_long" style="Display: none;">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"age"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"age"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"old/180"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/183"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"183"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J7i--_"</span> 
}
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/187"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"187"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J7m--_"</span> 
}
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/190"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"190"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J7m--B"</span> 
}
arangosh&gt; db.old.range(<span class="hljs-string">"age"</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"183"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/183"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J7i--_"</span>, 
    <span class="hljs-string">"age"</span> : <span class="hljs-number">15</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"187"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/187"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J7m--_"</span>, 
    <span class="hljs-string">"age"</span> : <span class="hljs-number">25</span> 
  } 
]
</pre>
<div id="005_collectionRange_container_collapse" onclick="$('#005_collectionRange_long').hide(); $('#005_collectionRange_short').show(); window.location.hash='005_collectionRange_container';" class="example_show_button">Hide execution results</div></div>
<div id="005_collectionRange_short" onclick="$('#005_collectionRange_short').hide(); $('#005_collectionRange_long').show();">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"age"</span> ] });
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
arangosh&gt; db.old.range(<span class="hljs-string">"age"</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 005_collectionRange


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 006_collectionClosedRange


<div class="example-container" id="006_collectionClosedRange_container">
<a class="anchorjs-link " href="#006_collectionClosedRange_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="006_collectionClosedRange_long" style="Display: none;">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"age"</span> ] });
{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"age"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"old/199"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/202"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"202"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J9q--_"</span> 
}
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/206"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"206"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J9q--B"</span> 
}
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/209"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"209"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J9u--_"</span> 
}
arangosh&gt; db.old.closedRange(<span class="hljs-string">"age"</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"202"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/202"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J9q--_"</span>, 
    <span class="hljs-string">"age"</span> : <span class="hljs-number">15</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"206"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/206"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J9q--B"</span>, 
    <span class="hljs-string">"age"</span> : <span class="hljs-number">25</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"209"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"old/209"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7J9u--_"</span>, 
    <span class="hljs-string">"age"</span> : <span class="hljs-number">30</span> 
  } 
]
</pre>
<div id="006_collectionClosedRange_container_collapse" onclick="$('#006_collectionClosedRange_long').hide(); $('#006_collectionClosedRange_short').show(); window.location.hash='006_collectionClosedRange_container';" class="example_show_button">Hide execution results</div></div>
<div id="006_collectionClosedRange_short" onclick="$('#006_collectionClosedRange_short').hide(); $('#006_collectionClosedRange_long').show();">
<pre>
arangosh&gt; db.old.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"skiplist"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"age"</span> ] });
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">15</span> });
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> });
arangosh&gt; db.old.save({ <span class="hljs-attr">age</span>: <span class="hljs-number">30</span> });
arangosh&gt; db.old.closedRange(<span class="hljs-string">"age"</span>, <span class="hljs-number">10</span>, <span class="hljs-number">30</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 006_collectionClosedRange


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionCount


<div class="example-container" id="collectionCount_container">
<a class="anchorjs-link " href="#collectionCount_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionCount_long">
<pre>
arangosh&gt; db.users.count();
<span class="hljs-number">0</span>
</pre>
</div>
</div>

    @endDocuBlock collectionCount


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidPlain


<div class="example-container" id="documentsCollectionNameValidPlain_container">
<a class="anchorjs-link " href="#documentsCollectionNameValidPlain_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionNameValidPlain_long" style="Display: none;">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">"example/2873916"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"2873916"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/2873916"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7b_G--_"</span> 
}
</pre>
<div id="documentsCollectionNameValidPlain_container_collapse" onclick="$('#documentsCollectionNameValidPlain_long').hide(); $('#documentsCollectionNameValidPlain_short').show(); window.location.hash='documentsCollectionNameValidPlain_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidPlain_short" onclick="$('#documentsCollectionNameValidPlain_short').hide(); $('#documentsCollectionNameValidPlain_long').show();">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">"example/2873916"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidPlain


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidByKey


<div class="example-container" id="documentsCollectionNameValidByKey_container">
<a class="anchorjs-link " href="#documentsCollectionNameValidByKey_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionNameValidByKey_long" style="Display: none;">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">"2873916"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"2873916"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/2873916"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a8---_"</span> 
}
</pre>
<div id="documentsCollectionNameValidByKey_container_collapse" onclick="$('#documentsCollectionNameValidByKey_long').hide(); $('#documentsCollectionNameValidByKey_short').show(); window.location.hash='documentsCollectionNameValidByKey_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidByKey_short" onclick="$('#documentsCollectionNameValidByKey_short').hide(); $('#documentsCollectionNameValidByKey_long').show();">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">"2873916"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidByKey


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidByObject


<div class="example-container" id="documentsCollectionNameValidByObject_container">
<a class="anchorjs-link " href="#documentsCollectionNameValidByObject_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionNameValidByObject_long" style="Display: none;">
<pre>
arangosh&gt; db.example.document({<span class="hljs-attr">_id</span>: <span class="hljs-string">"example/2873916"</span>});
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"2873916"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/2873916"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a9C--_"</span> 
}
</pre>
<div id="documentsCollectionNameValidByObject_container_collapse" onclick="$('#documentsCollectionNameValidByObject_long').hide(); $('#documentsCollectionNameValidByObject_short').show(); window.location.hash='documentsCollectionNameValidByObject_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidByObject_short" onclick="$('#documentsCollectionNameValidByObject_short').hide(); $('#documentsCollectionNameValidByObject_long').show();">
<pre>
arangosh&gt; db.example.document({<span class="hljs-attr">_id</span>: <span class="hljs-string">"example/2873916"</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidByObject


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameValidMulti


<div class="example-container" id="documentsCollectionNameValidMulti_container">
<a class="anchorjs-link " href="#documentsCollectionNameValidMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionNameValidMulti_long" style="Display: none;">
<pre>
arangosh&gt; db.example.document([<span class="hljs-string">"2873916"</span>,<span class="hljs-string">"2873917"</span>]);
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"2873916"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/2873916"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7b-C--_"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"2873917"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/2873917"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7b-C--B"</span> 
  } 
]
</pre>
<div id="documentsCollectionNameValidMulti_container_collapse" onclick="$('#documentsCollectionNameValidMulti_long').hide(); $('#documentsCollectionNameValidMulti_short').show(); window.location.hash='documentsCollectionNameValidMulti_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionNameValidMulti_short" onclick="$('#documentsCollectionNameValidMulti_short').hide(); $('#documentsCollectionNameValidMulti_long').show();">
<pre>
arangosh&gt; db.example.document([<span class="hljs-string">"2873916"</span>,<span class="hljs-string">"2873917"</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionNameValidMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameUnknown


<div class="example-container" id="documentsCollectionNameUnknown_container">
<a class="anchorjs-link " href="#documentsCollectionNameUnknown_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionNameUnknown_long">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">"example/4472917"</span>);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
</div>
</div>

    @endDocuBlock documentsCollectionNameUnknown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionNameHandle


<div class="example-container" id="documentsCollectionNameHandle_container">
<a class="anchorjs-link " href="#documentsCollectionNameHandle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionNameHandle_long">
<pre>
arangosh&gt; db.example.document(<span class="hljs-string">""</span>);
[ArangoError <span class="hljs-number">1205</span>: illegal <span class="hljs-built_in">document</span> handle]
</pre>
</div>
</div>

    @endDocuBlock documentsCollectionNameHandle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionLookupByKeys


<div class="example-container" id="collectionLookupByKeys_container">
<a class="anchorjs-link " href="#collectionLookupByKeys_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionLookupByKeys_long" style="Display: none;">
<pre>
arangosh&gt; keys = [ ];
[ ]
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"test"</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">"test"</span> + i);
........&gt; }
arangosh&gt; db.example.documents(keys);
{ 
  <span class="hljs-string">"documents"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test0"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test0"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajO--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">0</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test1"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test1"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajO--B"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test2"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test2"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajS--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">2</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test3"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test3"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajS--B"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">3</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test4"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test4"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajS--D"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">4</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test5"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test5"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajS--F"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">5</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test6"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test6"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajW--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">6</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test7"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test7"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajW--B"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">7</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test8"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test8"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajW--D"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">8</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test9"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/test9"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ajW--F"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">9</span> 
    } 
  ] 
}
</pre>
<div id="collectionLookupByKeys_container_collapse" onclick="$('#collectionLookupByKeys_long').hide(); $('#collectionLookupByKeys_short').show(); window.location.hash='collectionLookupByKeys_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionLookupByKeys_short" onclick="$('#collectionLookupByKeys_short').hide(); $('#collectionLookupByKeys_long').show();">
<pre>
arangosh&gt; keys = [ ];
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"test"</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">"test"</span> + i);
........&gt; }
arangosh&gt; db.example.documents(keys);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionLookupByKeys


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionInsertSingle


<div class="example-container" id="documentsCollectionInsertSingle_container">
<a class="anchorjs-link " href="#documentsCollectionInsertSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionInsertSingle_long" style="Display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15902"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15902"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a3u--_"</span> 
}
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> }, {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15906"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15906"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a3u--B"</span> 
}
</pre>
<div id="documentsCollectionInsertSingle_container_collapse" onclick="$('#documentsCollectionInsertSingle_long').hide(); $('#documentsCollectionInsertSingle_short').show(); window.location.hash='documentsCollectionInsertSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionInsertSingle_short" onclick="$('#documentsCollectionInsertSingle_short').hide(); $('#documentsCollectionInsertSingle_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> });
arangosh&gt; db.example.insert({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> }, {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionInsertSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionInsertMulti


<div class="example-container" id="documentsCollectionInsertMulti_container">
<a class="anchorjs-link " href="#documentsCollectionInsertMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionInsertMulti_long" style="Display: none;">
<pre>
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">"there"</span>}])
[ 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15882"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15882"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a2K--_"</span> 
  }, 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15886"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15886"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a2K--B"</span> 
  } 
]
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> }, {}], {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
[ 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15890"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15890"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a2K--D"</span> 
  }, 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15894"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15894"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a2K--F"</span> 
  } 
]
</pre>
<div id="documentsCollectionInsertMulti_container_collapse" onclick="$('#documentsCollectionInsertMulti_long').hide(); $('#documentsCollectionInsertMulti_short').show(); window.location.hash='documentsCollectionInsertMulti_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionInsertMulti_short" onclick="$('#documentsCollectionInsertMulti_short').hide(); $('#documentsCollectionInsertMulti_long').show();">
<pre>
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">"there"</span>}])
arangosh&gt; db.example.insert([{ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> }, {}], {<span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionInsertMulti


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionReplace1


<div class="example-container" id="documentsCollectionReplace1_container">
<a class="anchorjs-link " href="#documentsCollectionReplace1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionReplace1_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16013"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16013"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bES--_"</span> 
}
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16013"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16013"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bES--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bES--_"</span> 
}
arangosh&gt; a3 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
[ArangoError <span class="hljs-number">1200</span>: precondition failed]
</pre>
<div id="documentsCollectionReplace1_container_collapse" onclick="$('#documentsCollectionReplace1_long').hide(); $('#documentsCollectionReplace1_short').show(); window.location.hash='documentsCollectionReplace1_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionReplace1_short" onclick="$('#documentsCollectionReplace1_short').hide(); $('#documentsCollectionReplace1_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; a3 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionReplace1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollectionReplaceHandle


<div class="example-container" id="documentsCollectionReplaceHandle_container">
<a class="anchorjs-link " href="#documentsCollectionReplaceHandle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionReplaceHandle_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/3903045"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"3903045"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bFW--B"</span> 
}
arangosh&gt; a2 = db.example.replace(<span class="hljs-string">"example/3903044"</span>, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/3903044"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"3903044"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bFa--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bFW--_"</span> 
}
</pre>
<div id="documentsCollectionReplaceHandle_container_collapse" onclick="$('#documentsCollectionReplaceHandle_long').hide(); $('#documentsCollectionReplaceHandle_short').show(); window.location.hash='documentsCollectionReplaceHandle_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionReplaceHandle_short" onclick="$('#documentsCollectionReplaceHandle_short').hide(); $('#documentsCollectionReplaceHandle_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db.example.replace(<span class="hljs-string">"example/3903044"</span>, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionReplaceHandle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateDocument


<div class="example-container" id="documentsCollection_UpdateDocument_container">
<a class="anchorjs-link " href="#documentsCollection_UpdateDocument_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollection_UpdateDocument_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16100"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16100"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bKi--_"</span> 
}
arangosh&gt; a2 = db.example.update(a1, {<span class="hljs-string">"b"</span> : <span class="hljs-number">2</span>, <span class="hljs-string">"c"</span> : <span class="hljs-number">3</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16100"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16100"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bKi--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bKi--_"</span> 
}
arangosh&gt; a3 = db.example.update(a1, {<span class="hljs-string">"d"</span> : <span class="hljs-number">4</span>});
[ArangoError <span class="hljs-number">1200</span>: precondition failed]
arangosh&gt; a4 = db.example.update(a2, {<span class="hljs-string">"e"</span> : <span class="hljs-number">5</span>, <span class="hljs-string">"f"</span> : <span class="hljs-number">6</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16100"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16100"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bKm--A"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bKi--B"</span> 
}
arangosh&gt; db.example.document(a4);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16100"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16100"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bKm--A"</span>, 
  <span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"c"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"b"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"f"</span> : <span class="hljs-number">6</span>, 
  <span class="hljs-string">"e"</span> : <span class="hljs-number">5</span> 
}
arangosh&gt; a5 = db.example.update(a4, {<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">c</span> : <span class="hljs-number">9</span>, <span class="hljs-attr">e</span> : <span class="hljs-number">42</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16100"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16100"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bKq--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bKm--A"</span> 
}
arangosh&gt; db.example.document(a5);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16100"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16100"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bKq--_"</span>, 
  <span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"c"</span> : <span class="hljs-number">9</span>, 
  <span class="hljs-string">"b"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"f"</span> : <span class="hljs-number">6</span>, 
  <span class="hljs-string">"e"</span> : <span class="hljs-number">42</span> 
}
</pre>
<div id="documentsCollection_UpdateDocument_container_collapse" onclick="$('#documentsCollection_UpdateDocument_long').hide(); $('#documentsCollection_UpdateDocument_short').show(); window.location.hash='documentsCollection_UpdateDocument_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateDocument_short" onclick="$('#documentsCollection_UpdateDocument_short').hide(); $('#documentsCollection_UpdateDocument_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>});
arangosh&gt; a2 = db.example.update(a1, {<span class="hljs-string">"b"</span> : <span class="hljs-number">2</span>, <span class="hljs-string">"c"</span> : <span class="hljs-number">3</span>});
arangosh&gt; a3 = db.example.update(a1, {<span class="hljs-string">"d"</span> : <span class="hljs-number">4</span>});
arangosh&gt; a4 = db.example.update(a2, {<span class="hljs-string">"e"</span> : <span class="hljs-number">5</span>, <span class="hljs-string">"f"</span> : <span class="hljs-number">6</span> });
arangosh&gt; db.example.document(a4);
arangosh&gt; a5 = db.example.update(a4, {<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">c</span> : <span class="hljs-number">9</span>, <span class="hljs-attr">e</span> : <span class="hljs-number">42</span> });
arangosh&gt; db.example.document(a5);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateDocument


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateHandleSingle


<div class="example-container" id="documentsCollection_UpdateHandleSingle_container">
<a class="anchorjs-link " href="#documentsCollection_UpdateHandleSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollection_UpdateHandleSingle_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/18612116"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"18612116"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bNq--B"</span> 
}
arangosh&gt; a2 = db.example.update(<span class="hljs-string">"example/18612115"</span>, { <span class="hljs-string">"x"</span> : <span class="hljs-number">1</span>, <span class="hljs-string">"y"</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/18612115"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"18612115"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bNu--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bNq--_"</span> 
}
</pre>
<div id="documentsCollection_UpdateHandleSingle_container_collapse" onclick="$('#documentsCollection_UpdateHandleSingle_long').hide(); $('#documentsCollection_UpdateHandleSingle_short').show(); window.location.hash='documentsCollection_UpdateHandleSingle_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateHandleSingle_short" onclick="$('#documentsCollection_UpdateHandleSingle_short').hide(); $('#documentsCollection_UpdateHandleSingle_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>});
arangosh&gt; a2 = db.example.update(<span class="hljs-string">"example/18612115"</span>, { <span class="hljs-string">"x"</span> : <span class="hljs-number">1</span>, <span class="hljs-string">"y"</span> : <span class="hljs-number">2</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateHandleSingle


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateHandleKeepNull


<div class="example-container" id="documentsCollection_UpdateHandleKeepNull_container">
<a class="anchorjs-link " href="#documentsCollection_UpdateHandleKeepNull_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollection_UpdateHandleKeepNull_long" style="Display: none;">
<pre>
arangosh&gt; db.example.insert({<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988372"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988372"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMq--_"</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">"example/19988371"</span>,
........&gt; { <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">"c"</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">"d"</span> : <span class="hljs-number">3</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988371"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988371"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMq--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bMm--_"</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">"example/19988371"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988371"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988371"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMq--B"</span>, 
  <span class="hljs-string">"d"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"c"</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">"example/19988371"</span>, { <span class="hljs-string">"a"</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988371"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988371"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMu--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bMq--B"</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">"example/19988371"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988371"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988371"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMu--_"</span>, 
  <span class="hljs-string">"d"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"c"</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">"example/19988371"</span>,
........&gt; { <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">"c"</span>: <span class="hljs-literal">null</span>, <span class="hljs-string">"d"</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988371"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988371"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMu--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bMu--_"</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">"example/19988371"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"19988371"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/19988371"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bMu--B"</span> 
}
</pre>
<div id="documentsCollection_UpdateHandleKeepNull_container_collapse" onclick="$('#documentsCollection_UpdateHandleKeepNull_long').hide(); $('#documentsCollection_UpdateHandleKeepNull_short').show(); window.location.hash='documentsCollection_UpdateHandleKeepNull_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateHandleKeepNull_short" onclick="$('#documentsCollection_UpdateHandleKeepNull_short').hide(); $('#documentsCollection_UpdateHandleKeepNull_long').show();">
<pre>
arangosh&gt; db.example.insert({<span class="hljs-string">"a"</span> : <span class="hljs-number">1</span>});
arangosh&gt; db.example.update(<span class="hljs-string">"example/19988371"</span>,
........&gt; { <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">"c"</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">"d"</span> : <span class="hljs-number">3</span> });
arangosh&gt; db.example.document(<span class="hljs-string">"example/19988371"</span>);
arangosh&gt; db.example.update(<span class="hljs-string">"example/19988371"</span>, { <span class="hljs-string">"a"</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.document(<span class="hljs-string">"example/19988371"</span>);
arangosh&gt; db.example.update(<span class="hljs-string">"example/19988371"</span>,
........&gt; { <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span>, <span class="hljs-string">"c"</span>: <span class="hljs-literal">null</span>, <span class="hljs-string">"d"</span> : <span class="hljs-literal">null</span> }, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.document(<span class="hljs-string">"example/19988371"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateHandleKeepNull


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentsCollection_UpdateHandleArray


<div class="example-container" id="documentsCollection_UpdateHandleArray_container">
<a class="anchorjs-link " href="#documentsCollection_UpdateHandleArray_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollection_UpdateHandleArray_long" style="Display: none;">
<pre>
arangosh&gt;  db.example.insert({<span class="hljs-string">"a"</span> : { <span class="hljs-string">"one"</span> : <span class="hljs-number">1</span>, <span class="hljs-string">"two"</span> : <span class="hljs-number">2</span>, <span class="hljs-string">"three"</span> : <span class="hljs-number">3</span> },
........&gt; <span class="hljs-string">"b"</span> : { }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/20774804"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20774804"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bLm--B"</span> 
}
arangosh&gt; db.example.update(<span class="hljs-string">"example/20774803"</span>, {<span class="hljs-string">"a"</span> : { <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> },
........&gt; <span class="hljs-string">"b"</span> : { <span class="hljs-string">"b1"</span> : <span class="hljs-number">1</span> }});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/20774803"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20774803"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bLq--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bLm--_"</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">"example/20774803"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20774803"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/20774803"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bLq--_"</span>, 
  <span class="hljs-string">"b"</span> : { 
    <span class="hljs-string">"b1"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"a"</span> : { 
    <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> 
  } 
}
arangosh&gt; db.example.update(<span class="hljs-string">"example/20774803"</span>, { <span class="hljs-string">"a"</span> : { <span class="hljs-string">"one"</span> : <span class="hljs-literal">null</span> },
........&gt;                                         <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span> },
........&gt; <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/20774803"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20774803"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bLq--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bLq--_"</span> 
}
arangosh&gt; db.example.document(<span class="hljs-string">"example/20774803"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20774803"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/20774803"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bLq--B"</span>, 
  <span class="hljs-string">"a"</span> : { 
    <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> 
  } 
}
</pre>
<div id="documentsCollection_UpdateHandleArray_container_collapse" onclick="$('#documentsCollection_UpdateHandleArray_long').hide(); $('#documentsCollection_UpdateHandleArray_short').show(); window.location.hash='documentsCollection_UpdateHandleArray_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollection_UpdateHandleArray_short" onclick="$('#documentsCollection_UpdateHandleArray_short').hide(); $('#documentsCollection_UpdateHandleArray_long').show();">
<pre>
arangosh&gt;  db.example.insert({<span class="hljs-string">"a"</span> : { <span class="hljs-string">"one"</span> : <span class="hljs-number">1</span>, <span class="hljs-string">"two"</span> : <span class="hljs-number">2</span>, <span class="hljs-string">"three"</span> : <span class="hljs-number">3</span> },
........&gt; <span class="hljs-string">"b"</span> : { }});
arangosh&gt; db.example.update(<span class="hljs-string">"example/20774803"</span>, {<span class="hljs-string">"a"</span> : { <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> },
........&gt; <span class="hljs-string">"b"</span> : { <span class="hljs-string">"b1"</span> : <span class="hljs-number">1</span> }});
arangosh&gt; db.example.document(<span class="hljs-string">"example/20774803"</span>);
arangosh&gt; db.example.update(<span class="hljs-string">"example/20774803"</span>, { <span class="hljs-string">"a"</span> : { <span class="hljs-string">"one"</span> : <span class="hljs-literal">null</span> },
........&gt;                                         <span class="hljs-string">"b"</span> : <span class="hljs-literal">null</span> },
........&gt; <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.document(<span class="hljs-string">"example/20774803"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollection_UpdateHandleArray


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentDocumentRemoveSimple


<div class="example-container" id="documentDocumentRemoveSimple_container">
<a class="anchorjs-link " href="#documentDocumentRemoveSimple_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentDocumentRemoveSimple_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15848"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15848"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7az---_"</span> 
}
arangosh&gt; db.example.document(a1);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15848"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15848"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7az---_"</span>, 
  <span class="hljs-string">"a"</span> : <span class="hljs-number">1</span> 
}
arangosh&gt; db.example.remove(a1);
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15848"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15848"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7az---_"</span> 
}
arangosh&gt; db.example.document(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentDocumentRemoveSimple_container_collapse" onclick="$('#documentDocumentRemoveSimple_long').hide(); $('#documentDocumentRemoveSimple_short').show(); window.location.hash='documentDocumentRemoveSimple_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentDocumentRemoveSimple_short" onclick="$('#documentDocumentRemoveSimple_short').hide(); $('#documentDocumentRemoveSimple_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; db.example.document(a1);
arangosh&gt; db.example.remove(a1);
arangosh&gt; db.example.document(a1);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentDocumentRemoveSimple


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline documentDocumentRemoveConflict


<div class="example-container" id="documentDocumentRemoveConflict_container">
<a class="anchorjs-link " href="#documentDocumentRemoveConflict_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentDocumentRemoveConflict_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15834"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15834"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ay---_"</span> 
}
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15834"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15834"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ay---B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7ay---_"</span> 
}
arangosh&gt; db.example.remove(a1);
[ArangoError <span class="hljs-number">1200</span>: precondition failed]
arangosh&gt; db.example.remove(a1, <span class="hljs-literal">true</span>);
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15834"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15834"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ay---B"</span> 
}
arangosh&gt; db.example.document(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentDocumentRemoveConflict_container_collapse" onclick="$('#documentDocumentRemoveConflict_long').hide(); $('#documentDocumentRemoveConflict_short').show(); window.location.hash='documentDocumentRemoveConflict_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentDocumentRemoveConflict_short" onclick="$('#documentDocumentRemoveConflict_short').hide(); $('#documentDocumentRemoveConflict_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db.example.replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; db.example.remove(a1);
arangosh&gt; db.example.remove(a1, <span class="hljs-literal">true</span>);
arangosh&gt; db.example.document(a1);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentDocumentRemoveConflict


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline collectionRemoveByKeys


<div class="example-container" id="collectionRemoveByKeys_container">
<a class="anchorjs-link " href="#collectionRemoveByKeys_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionRemoveByKeys_long" style="Display: none;">
<pre>
arangosh&gt; keys = [ ];
[ ]
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"test"</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">"test"</span> + i);
........&gt; }
arangosh&gt; db.example.removeByKeys(keys);
{ 
  <span class="hljs-string">"removed"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="collectionRemoveByKeys_container_collapse" onclick="$('#collectionRemoveByKeys_long').hide(); $('#collectionRemoveByKeys_short').show(); window.location.hash='collectionRemoveByKeys_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionRemoveByKeys_short" onclick="$('#collectionRemoveByKeys_short').hide(); $('#collectionRemoveByKeys_long').show();">
<pre>
arangosh&gt; keys = [ ];
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i) {
........&gt;   db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"test"</span> + i, <span class="hljs-attr">value</span>: i });
........&gt;   keys.push(<span class="hljs-string">"test"</span> + i);
........&gt; }
arangosh&gt; db.example.removeByKeys(keys);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionRemoveByKeys


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 010_documentsCollectionRemoveByExample


<div class="example-container" id="010_documentsCollectionRemoveByExample_container">
<a class="anchorjs-link " href="#010_documentsCollectionRemoveByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="010_documentsCollectionRemoveByExample_long">
<pre>
arangosh&gt; db.example.removeByExample( {<span class="hljs-attr">Hello</span> : <span class="hljs-string">"world"</span>} );
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock 010_documentsCollectionRemoveByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 011_documentsCollectionReplaceByExample


<div class="example-container" id="011_documentsCollectionReplaceByExample_container">
<a class="anchorjs-link " href="#011_documentsCollectionReplaceByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="011_documentsCollectionReplaceByExample_long" style="Display: none;">
<pre>
arangosh&gt; db.example.save({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"world"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/6595"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"6595"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KZy--_"</span> 
}
arangosh&gt; db.example.replaceByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">"world"</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">"mars"</span>}, <span class="hljs-literal">false</span>, <span class="hljs-number">5</span>);
<span class="hljs-number">1</span>
</pre>
<div id="011_documentsCollectionReplaceByExample_container_collapse" onclick="$('#011_documentsCollectionReplaceByExample_long').hide(); $('#011_documentsCollectionReplaceByExample_short').show(); window.location.hash='011_documentsCollectionReplaceByExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="011_documentsCollectionReplaceByExample_short" onclick="$('#011_documentsCollectionReplaceByExample_short').hide(); $('#011_documentsCollectionReplaceByExample_long').show();">
<pre>
arangosh&gt; db.example.save({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"world"</span> });
arangosh&gt; db.example.replaceByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">"world"</span> }, {<span class="hljs-attr">Hello</span>: <span class="hljs-string">"mars"</span>}, <span class="hljs-literal">false</span>, <span class="hljs-number">5</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 011_documentsCollectionReplaceByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline 012_documentsCollectionUpdateByExample


<div class="example-container" id="012_documentsCollectionUpdateByExample_container">
<a class="anchorjs-link " href="#012_documentsCollectionUpdateByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="012_documentsCollectionUpdateByExample_long" style="Display: none;">
<pre>
arangosh&gt; db.example.save({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"world"</span>, <span class="hljs-attr">foo</span> : <span class="hljs-string">"bar"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/6608"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"6608"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ka2--_"</span> 
}
arangosh&gt; db.example.updateByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">"world"</span> }, { <span class="hljs-attr">Hello</span>: <span class="hljs-string">"foo"</span>, <span class="hljs-attr">World</span>: <span class="hljs-string">"bar"</span> }, <span class="hljs-literal">false</span>);
<span class="hljs-number">1</span>
arangosh&gt; db.example.byExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">"foo"</span> }).toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"6608"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/6608"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ka6--_"</span>, 
    <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"World"</span> : <span class="hljs-string">"bar"</span> 
  } 
]
</pre>
<div id="012_documentsCollectionUpdateByExample_container_collapse" onclick="$('#012_documentsCollectionUpdateByExample_long').hide(); $('#012_documentsCollectionUpdateByExample_short').show(); window.location.hash='012_documentsCollectionUpdateByExample_container';" class="example_show_button">Hide execution results</div></div>
<div id="012_documentsCollectionUpdateByExample_short" onclick="$('#012_documentsCollectionUpdateByExample_short').hide(); $('#012_documentsCollectionUpdateByExample_long').show();">
<pre>
arangosh&gt; db.example.save({ <span class="hljs-attr">Hello</span> : <span class="hljs-string">"world"</span>, <span class="hljs-attr">foo</span> : <span class="hljs-string">"bar"</span> });
arangosh&gt; db.example.updateByExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">"world"</span> }, { <span class="hljs-attr">Hello</span>: <span class="hljs-string">"foo"</span>, <span class="hljs-attr">World</span>: <span class="hljs-string">"bar"</span> }, <span class="hljs-literal">false</span>);
arangosh&gt; db.example.byExample({ <span class="hljs-attr">Hello</span>: <span class="hljs-string">"foo"</span> }).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 012_documentsCollectionUpdateByExample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline dbVersion


<div class="example-container" id="dbVersion_container">
<a class="anchorjs-link " href="#dbVersion_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="dbVersion_long">
<pre>
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db._version();
<span class="hljs-number">3.3</span><span class="hljs-number">.25</span>
</pre>
</div>
</div>

    @endDocuBlock dbVersion


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline EDGCOL_02_Relation


<div class="example-container" id="EDGCOL_02_Relation_container">
<a class="anchorjs-link " href="#EDGCOL_02_Relation_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="EDGCOL_02_Relation_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"vertex"</span>);
[ArangoCollection <span class="hljs-number">7451</span>, <span class="hljs-string">"vertex"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">"relation"</span>);
[ArangoCollection <span class="hljs-number">7454</span>, <span class="hljs-string">"relation"</span> (type edge, status loaded)]
arangosh&gt; <span class="hljs-keyword">var</span> myGraph = {};
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 1"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"vertex/7458"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7458"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K0i--_"</span> 
}
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 2"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"vertex/7462"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7462"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K0i--B"</span> 
}
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">"knows"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7465"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7465"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K0m--_"</span> 
}
arangosh&gt; db._document(myGraph.e1);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7465"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7465"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertex/7458"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertex/7462"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K0m--_"</span>, 
  <span class="hljs-string">"label"</span> : <span class="hljs-string">"knows"</span> 
}
arangosh&gt; db.relation.edges(myGraph.e1._id);
[ ]
</pre>
<div id="EDGCOL_02_Relation_container_collapse" onclick="$('#EDGCOL_02_Relation_long').hide(); $('#EDGCOL_02_Relation_short').show(); window.location.hash='EDGCOL_02_Relation_container';" class="example_show_button">Hide execution results</div></div>
<div id="EDGCOL_02_Relation_short" onclick="$('#EDGCOL_02_Relation_short').hide(); $('#EDGCOL_02_Relation_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"vertex"</span>);
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">"relation"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> myGraph = {};
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 1"</span> });
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 2"</span> });
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">"knows"</span>});
arangosh&gt; db._document(myGraph.e1);
arangosh&gt; db.relation.edges(myGraph.e1._id);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock EDGCOL_02_Relation


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline EDGCOL_02_inEdges


<div class="example-container" id="EDGCOL_02_inEdges_container">
<a class="anchorjs-link " href="#EDGCOL_02_inEdges_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="EDGCOL_02_inEdges_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"vertex"</span>);
[ArangoCollection <span class="hljs-number">7472</span>, <span class="hljs-string">"vertex"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">"relation"</span>);
[ArangoCollection <span class="hljs-number">7475</span>, <span class="hljs-string">"relation"</span> (type edge, status loaded)]
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 1"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"vertex/7479"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7479"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K2m--_"</span> 
}
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 2"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"vertex/7483"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7483"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K2m--B"</span> 
}
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">"knows"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7486"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7486"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K2q--_"</span> 
}
arangosh&gt; db._document(myGraph.e1);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7486"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7486"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertex/7479"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertex/7483"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K2q--_"</span>, 
  <span class="hljs-string">"label"</span> : <span class="hljs-string">"knows"</span> 
}
arangosh&gt; db.relation.inEdges(myGraph.v1._id);
[ ]
arangosh&gt; db.relation.inEdges(myGraph.v2._id);
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7486"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7486"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertex/7479"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertex/7483"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K2q--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"knows"</span> 
  } 
]
</pre>
<div id="EDGCOL_02_inEdges_container_collapse" onclick="$('#EDGCOL_02_inEdges_long').hide(); $('#EDGCOL_02_inEdges_short').show(); window.location.hash='EDGCOL_02_inEdges_container';" class="example_show_button">Hide execution results</div></div>
<div id="EDGCOL_02_inEdges_short" onclick="$('#EDGCOL_02_inEdges_short').hide(); $('#EDGCOL_02_inEdges_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"vertex"</span>);
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">"relation"</span>);
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 1"</span> });
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 2"</span> });
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">"knows"</span>});
arangosh&gt; db._document(myGraph.e1);
arangosh&gt; db.relation.inEdges(myGraph.v1._id);
arangosh&gt; db.relation.inEdges(myGraph.v2._id);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock EDGCOL_02_inEdges


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline EDGCOL_02_outEdges


<div class="example-container" id="EDGCOL_02_outEdges_container">
<a class="anchorjs-link " href="#EDGCOL_02_outEdges_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="EDGCOL_02_outEdges_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"vertex"</span>);
[ArangoCollection <span class="hljs-number">7494</span>, <span class="hljs-string">"vertex"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">"relation"</span>);
[ArangoCollection <span class="hljs-number">7497</span>, <span class="hljs-string">"relation"</span> (type edge, status loaded)]
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 1"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"vertex/7501"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7501"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K4q--_"</span> 
}
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 2"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"vertex/7505"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7505"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K4q--B"</span> 
}
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">"knows"</span>});
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7508"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7508"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K4q--D"</span> 
}
arangosh&gt; db._document(myGraph.e1);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7508"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7508"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertex/7501"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertex/7505"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K4q--D"</span>, 
  <span class="hljs-string">"label"</span> : <span class="hljs-string">"knows"</span> 
}
arangosh&gt; db.relation.outEdges(myGraph.v1._id);
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7508"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7508"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertex/7501"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertex/7505"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K4q--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"knows"</span> 
  } 
]
arangosh&gt; db.relation.outEdges(myGraph.v2._id);
[ ]
</pre>
<div id="EDGCOL_02_outEdges_container_collapse" onclick="$('#EDGCOL_02_outEdges_long').hide(); $('#EDGCOL_02_outEdges_short').show(); window.location.hash='EDGCOL_02_outEdges_container';" class="example_show_button">Hide execution results</div></div>
<div id="EDGCOL_02_outEdges_short" onclick="$('#EDGCOL_02_outEdges_short').hide(); $('#EDGCOL_02_outEdges_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"vertex"</span>);
arangosh&gt; db._createEdgeCollection(<span class="hljs-string">"relation"</span>);
arangosh&gt; myGraph.v1 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 1"</span> });
arangosh&gt; myGraph.v2 = db.vertex.insert({ <span class="hljs-attr">name</span> : <span class="hljs-string">"vertex 2"</span> });
arangosh&gt; myGraph.e1 = db.relation.insert(myGraph.v1, myGraph.v2,
........&gt; { <span class="hljs-attr">label</span> : <span class="hljs-string">"knows"</span>});
arangosh&gt; db._document(myGraph.e1);
arangosh&gt; db.relation.outEdges(myGraph.v1._id);
arangosh&gt; db.relation.outEdges(myGraph.v2._id);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock EDGCOL_02_outEdges


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-document-methods.md -->
    @startDocuBlockInline accessViaGeoIndex


<div class="example-container" id="accessViaGeoIndex_container">
<a class="anchorjs-link " href="#accessViaGeoIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="accessViaGeoIndex_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.example.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"home"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"home"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"example/15396"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; items = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
........&gt; db.example.index(items[<span class="hljs-number">1</span>]);
[ 
  <span class="hljs-string">"example/0"</span>, 
  <span class="hljs-string">"example/15396"</span> 
]
</pre>
<div id="accessViaGeoIndex_container_collapse" onclick="$('#accessViaGeoIndex_long').hide(); $('#accessViaGeoIndex_short').show(); window.location.hash='accessViaGeoIndex_container';" class="example_show_button">Hide execution results</div></div>
<div id="accessViaGeoIndex_short" onclick="$('#accessViaGeoIndex_short').hide(); $('#accessViaGeoIndex_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.example.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.example.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"home"</span> ] });
arangosh&gt; items = db.example.getIndexes().map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>) </span>{ <span class="hljs-keyword">return</span> x.id; });
........&gt; db.example.index(items[<span class="hljs-number">1</span>]);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


    @endDocuBlock accessViaGeoIndex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsDocumentName


<div class="example-container" id="documentsDocumentName_container">
<a class="anchorjs-link " href="#documentsDocumentName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsDocumentName_long" style="Display: none;">
<pre>
arangosh&gt; db._document(<span class="hljs-string">"example/12345"</span>);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12345"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/12345"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bOu--_"</span> 
}
</pre>
<div id="documentsDocumentName_container_collapse" onclick="$('#documentsDocumentName_long').hide(); $('#documentsDocumentName_short').show(); window.location.hash='documentsDocumentName_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsDocumentName_short" onclick="$('#documentsDocumentName_short').hide(); $('#documentsDocumentName_long').show();">
<pre>
arangosh&gt; db._document(<span class="hljs-string">"example/12345"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsDocumentName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsDocumentReplace


<div class="example-container" id="documentsDocumentReplace_container">
<a class="anchorjs-link " href="#documentsDocumentReplace_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsDocumentReplace_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16172"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16172"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bPu--_"</span> 
}
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/16172"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"16172"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bPy--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bPu--_"</span> 
}
arangosh&gt; a3 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
[ArangoError <span class="hljs-number">1200</span>: precondition failed]
</pre>
<div id="documentsDocumentReplace_container_collapse" onclick="$('#documentsDocumentReplace_long').hide(); $('#documentsDocumentReplace_short').show(); window.location.hash='documentsDocumentReplace_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsDocumentReplace_short" onclick="$('#documentsDocumentReplace_short').hide(); $('#documentsDocumentReplace_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; a3 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">3</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsDocumentReplace


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentDocumentUpdate


<div class="example-container" id="documentDocumentUpdate_container">
<a class="anchorjs-link " href="#documentDocumentUpdate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentDocumentUpdate_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15860"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15860"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a0C--_"</span> 
}
arangosh&gt; a2 = db._update(a1, { <span class="hljs-attr">b</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15860"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15860"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7a0G--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7a0C--_"</span> 
}
arangosh&gt; a3 = db._update(a1, { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> });
[ArangoError <span class="hljs-number">1200</span>: precondition failed]
</pre>
<div id="documentDocumentUpdate_container_collapse" onclick="$('#documentDocumentUpdate_long').hide(); $('#documentDocumentUpdate_short').show(); window.location.hash='documentDocumentUpdate_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentDocumentUpdate_short" onclick="$('#documentDocumentUpdate_short').hide(); $('#documentDocumentUpdate_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db._update(a1, { <span class="hljs-attr">b</span> : <span class="hljs-number">2</span> });
arangosh&gt; a3 = db._update(a1, { <span class="hljs-attr">c</span> : <span class="hljs-number">3</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentDocumentUpdate


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsCollectionRemoveSuccess


<div class="example-container" id="documentsCollectionRemoveSuccess_container">
<a class="anchorjs-link " href="#documentsCollectionRemoveSuccess_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionRemoveSuccess_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15990"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15990"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bCO--_"</span> 
}
arangosh&gt; db._remove(a1);
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15990"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15990"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bCO--_"</span> 
}
arangosh&gt; db._remove(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>});
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentsCollectionRemoveSuccess_container_collapse" onclick="$('#documentsCollectionRemoveSuccess_long').hide(); $('#documentsCollectionRemoveSuccess_short').show(); window.location.hash='documentsCollectionRemoveSuccess_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionRemoveSuccess_short" onclick="$('#documentsCollectionRemoveSuccess_short').hide(); $('#documentsCollectionRemoveSuccess_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; db._remove(a1);
arangosh&gt; db._remove(a1);
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionRemoveSuccess


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsCollectionRemoveConflict


<div class="example-container" id="documentsCollectionRemoveConflict_container">
<a class="anchorjs-link " href="#documentsCollectionRemoveConflict_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionRemoveConflict_long" style="Display: none;">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15967"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15967"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bAK--_"</span> 
}
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15967"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15967"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bAK--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7bAK--_"</span> 
}
arangosh&gt; db._remove(a1);
[ArangoError <span class="hljs-number">1200</span>: precondition failed]
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>} );
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15967"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15967"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bAK--B"</span> 
}
arangosh&gt; db._document(a1);
[ArangoError <span class="hljs-number">1202</span>: <span class="hljs-built_in">document</span> not found]
</pre>
<div id="documentsCollectionRemoveConflict_container_collapse" onclick="$('#documentsCollectionRemoveConflict_long').hide(); $('#documentsCollectionRemoveConflict_short').show(); window.location.hash='documentsCollectionRemoveConflict_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionRemoveConflict_short" onclick="$('#documentsCollectionRemoveConflict_short').hide(); $('#documentsCollectionRemoveConflict_long').show();">
<pre>
arangosh&gt; a1 = db.example.insert({ <span class="hljs-attr">a</span> : <span class="hljs-number">1</span> });
arangosh&gt; a2 = db._replace(a1, { <span class="hljs-attr">a</span> : <span class="hljs-number">2</span> });
arangosh&gt; db._remove(a1);
arangosh&gt; db._remove(a1, {<span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>} );
arangosh&gt; db._document(a1);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionRemoveConflict


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-documents-database-methods.md -->
    @startDocuBlockInline documentsCollectionRemoveSignature


<div class="example-container" id="documentsCollectionRemoveSignature_container">
<a class="anchorjs-link " href="#documentsCollectionRemoveSignature_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="documentsCollectionRemoveSignature_long" style="Display: none;">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"11265325374"</span>, <span class="hljs-attr">a</span>:  <span class="hljs-number">1</span> } );
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/11265325374"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11265325374"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bBK--_"</span> 
}
arangosh&gt; db.example.remove(<span class="hljs-string">"example/11265325374"</span>,
........&gt; { <span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">false</span>})
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/11265325374"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11265325374"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7bBK--_"</span> 
}
</pre>
<div id="documentsCollectionRemoveSignature_container_collapse" onclick="$('#documentsCollectionRemoveSignature_long').hide(); $('#documentsCollectionRemoveSignature_short').show(); window.location.hash='documentsCollectionRemoveSignature_container';" class="example_show_button">Hide execution results</div></div>
<div id="documentsCollectionRemoveSignature_short" onclick="$('#documentsCollectionRemoveSignature_short').hide(); $('#documentsCollectionRemoveSignature_long').show();">
<pre>
arangosh&gt; db.example.insert({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"11265325374"</span>, <span class="hljs-attr">a</span>:  <span class="hljs-number">1</span> } );
arangosh&gt; db.example.remove(<span class="hljs-string">"example/11265325374"</span>,
........&gt; { <span class="hljs-attr">overwrite</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">waitForSync</span>: <span class="hljs-literal">false</span>})
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock documentsCollectionRemoveSignature


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_01_properyOfQueries


<div class="example-container" id="QUERY_01_properyOfQueries_container">
<a class="anchorjs-link " href="#QUERY_01_properyOfQueries_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="QUERY_01_properyOfQueries_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> queries = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/queries"</span>);
arangosh&gt; queries.properties();
{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"enabled"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"trackSlowQueries"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"trackBindVars"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"maxSlowQueries"</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">"slowQueryThreshold"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"maxQueryStringLength"</span> : <span class="hljs-number">4096</span> 
}
arangosh&gt; queries.properties({<span class="hljs-attr">slowQueryThreshold</span>: <span class="hljs-number">1</span>});
{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"enabled"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"trackSlowQueries"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"trackBindVars"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"maxSlowQueries"</span> : <span class="hljs-number">64</span>, 
  <span class="hljs-string">"slowQueryThreshold"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"maxQueryStringLength"</span> : <span class="hljs-number">4096</span> 
}
</pre>
<div id="QUERY_01_properyOfQueries_container_collapse" onclick="$('#QUERY_01_properyOfQueries_long').hide(); $('#QUERY_01_properyOfQueries_short').show(); window.location.hash='QUERY_01_properyOfQueries_container';" class="example_show_button">Hide execution results</div></div>
<div id="QUERY_01_properyOfQueries_short" onclick="$('#QUERY_01_properyOfQueries_short').hide(); $('#QUERY_01_properyOfQueries_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> queries = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/queries"</span>);
arangosh&gt; queries.properties();
arangosh&gt; queries.properties({<span class="hljs-attr">slowQueryThreshold</span>: <span class="hljs-number">1</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock QUERY_01_properyOfQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_02_listQueries


<div class="example-container" id="QUERY_02_listQueries_container">
<a class="anchorjs-link " href="#QUERY_02_listQueries_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="QUERY_02_listQueries_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> theQuery = <span class="hljs-string">'FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong'</span>;
arangosh&gt; <span class="hljs-keyword">var</span> tasks = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/tasks"</span>);
arangosh&gt; tasks.register({
........&gt;  id: <span class="hljs-string">"mytask-1"</span>,
........&gt;  name: <span class="hljs-string">"this is a sample task to spawn a slow aql query"</span>,
........&gt;  command: <span class="hljs-string">"require('@arangodb').db._query('"</span> + theQuery + <span class="hljs-string">"');"</span>
........&gt; });
{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"mytask-1"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"this is a sample task to spawn a slow aql query"</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744916.9343235</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"timed"</span>, 
  <span class="hljs-string">"offset"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { require('@arangodb').db._query('FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong'); } )(params);"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
arangosh&gt; queries.current();
[ 
  { 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"266"</span>, 
    <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong"</span>, 
    <span class="hljs-string">"bindVars"</span> : { 
    }, 
    <span class="hljs-string">"started"</span> : <span class="hljs-string">"2020-02-03T15:48:37Z"</span>, 
    <span class="hljs-string">"runTime"</span> : <span class="hljs-number">0.5519864559173584</span>, 
    <span class="hljs-string">"state"</span> : <span class="hljs-string">"executing"</span> 
  } 
]
</pre>
<div id="QUERY_02_listQueries_container_collapse" onclick="$('#QUERY_02_listQueries_long').hide(); $('#QUERY_02_listQueries_short').show(); window.location.hash='QUERY_02_listQueries_container';" class="example_show_button">Hide execution results</div></div>
<div id="QUERY_02_listQueries_short" onclick="$('#QUERY_02_listQueries_short').hide(); $('#QUERY_02_listQueries_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> theQuery = <span class="hljs-string">'FOR sleepLoooong IN 1..5 LET sleepLoooonger = SLEEP(1000) RETURN sleepLoooong'</span>;
arangosh&gt; <span class="hljs-keyword">var</span> tasks = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/tasks"</span>);
arangosh&gt; tasks.register({
........&gt;  id: <span class="hljs-string">"mytask-1"</span>,
........&gt;  name: <span class="hljs-string">"this is a sample task to spawn a slow aql query"</span>,
........&gt;  command: <span class="hljs-string">"require('@arangodb').db._query('"</span> + theQuery + <span class="hljs-string">"');"</span>
........&gt; });
arangosh&gt; queries.current();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock QUERY_02_listQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_03_listSlowQueries


<div class="example-container" id="QUERY_03_listSlowQueries_container">
<a class="anchorjs-link " href="#QUERY_03_listSlowQueries_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="QUERY_03_listSlowQueries_long">
<pre>
arangosh&gt; queries.slow();
[ ]
</pre>
</div>
</div>

    @endDocuBlock QUERY_03_listSlowQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_04_clearSlowQueries


<div class="example-container" id="QUERY_04_clearSlowQueries_container">
<a class="anchorjs-link " href="#QUERY_04_clearSlowQueries_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="QUERY_04_clearSlowQueries_long">
<pre>
arangosh&gt; queries.clearSlow();
{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
arangosh&gt; queries.slow();
[ ]
</pre>
</div>
</div>

    @endDocuBlock QUERY_04_clearSlowQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-java-script-modules-queries.md -->
    @startDocuBlockInline QUERY_05_killQueries


<div class="example-container" id="QUERY_05_killQueries_container">
<a class="anchorjs-link " href="#QUERY_05_killQueries_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="QUERY_05_killQueries_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> runningQueries = queries.current().filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">query</span>) </span>{
........&gt;   <span class="hljs-keyword">return</span> query.query === theQuery;
........&gt; });
arangosh&gt; queries.kill(runningQueries[<span class="hljs-number">0</span>].id);
{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
</div>
</div>

    @endDocuBlock QUERY_05_killQueries


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline queryLimit


<div class="example-container" id="queryLimit_container">
<a class="anchorjs-link " href="#queryLimit_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="queryLimit_long" style="Display: none;">
<pre>
arangosh&gt; db.five.all().toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36699"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36699"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvK--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"two"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36702"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36702"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvK--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36705"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36705"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvO--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"four"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36695"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36695"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvK--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"one"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36708"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36708"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvO--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"five"</span> 
  } 
]
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36699"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36699"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvK--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"two"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36702"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36702"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jvK--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
  } 
]
</pre>
<div id="queryLimit_container_collapse" onclick="$('#queryLimit_long').hide(); $('#queryLimit_short').show(); window.location.hash='queryLimit_container';" class="example_show_button">Hide execution results</div></div>
<div id="queryLimit_short" onclick="$('#queryLimit_short').hide(); $('#queryLimit_long').show();">
<pre>
arangosh&gt; db.five.all().toArray();
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock queryLimit


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline querySkip


<div class="example-container" id="querySkip_container">
<a class="anchorjs-link " href="#querySkip_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="querySkip_long" style="Display: none;">
<pre>
arangosh&gt; db.five.all().toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36717"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36717"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwO--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"one"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36727"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36727"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwS--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"four"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36730"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36730"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwS--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"five"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36721"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36721"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwO--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"two"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36724"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36724"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwO--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
  } 
]
arangosh&gt; db.five.all().skip(<span class="hljs-number">3</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36721"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36721"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwO--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"two"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36724"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"five/36724"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jwO--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"three"</span> 
  } 
]
</pre>
<div id="querySkip_container_collapse" onclick="$('#querySkip_long').hide(); $('#querySkip_short').show(); window.location.hash='querySkip_container';" class="example_show_button">Hide execution results</div></div>
<div id="querySkip_short" onclick="$('#querySkip_short').hide(); $('#querySkip_long').show();">
<pre>
arangosh&gt; db.five.all().toArray();
arangosh&gt; db.five.all().skip(<span class="hljs-number">3</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock querySkip


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline cursorCountUnLimited


<div class="example-container" id="cursorCountUnLimited_container">
<a class="anchorjs-link " href="#cursorCountUnLimited_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="cursorCountUnLimited_long">
<pre>
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).count();
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock cursorCountUnLimited


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/appendix-deprecated-simple-queries-pagination.md -->
    @startDocuBlockInline cursorCountLimit


<div class="example-container" id="cursorCountLimit_container">
<a class="anchorjs-link " href="#cursorCountLimit_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="cursorCountLimit_long">
<pre>
arangosh&gt; db.five.all().limit(<span class="hljs-number">2</span>).count(<span class="hljs-literal">true</span>);
<span class="hljs-number">2</span>
</pre>
</div>
</div>

    @endDocuBlock cursorCountLimit


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseNameKnown


<div class="example-container" id="collectionDatabaseNameKnown_container">
<a class="anchorjs-link " href="#collectionDatabaseNameKnown_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseNameKnown_long">
<pre>
arangosh&gt; db._collection(<span class="hljs-string">"demo"</span>);
[ArangoCollection <span class="hljs-number">91</span>, <span class="hljs-string">"demo"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseNameKnown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseNameUnknown


<div class="example-container" id="collectionDatabaseNameUnknown_container">
<a class="anchorjs-link " href="#collectionDatabaseNameUnknown_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseNameUnknown_long">
<pre>
arangosh&gt; db._collection(<span class="hljs-string">"unknown"</span>);
<span class="hljs-literal">null</span>
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseNameUnknown


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateSuccess


<div class="example-container" id="collectionDatabaseCreateSuccess_container">
<a class="anchorjs-link " href="#collectionDatabaseCreateSuccess_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseCreateSuccess_long" style="Display: none;">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">"users"</span>);
[ArangoCollection <span class="hljs-number">15457</span>, <span class="hljs-string">"users"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; c.properties();
{ 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span> 
}
</pre>
<div id="collectionDatabaseCreateSuccess_container_collapse" onclick="$('#collectionDatabaseCreateSuccess_long').hide(); $('#collectionDatabaseCreateSuccess_short').show(); window.location.hash='collectionDatabaseCreateSuccess_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateSuccess_short" onclick="$('#collectionDatabaseCreateSuccess_short').hide(); $('#collectionDatabaseCreateSuccess_long').show();">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">"users"</span>);
arangosh&gt; c.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateSuccess


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateProperties


<div class="example-container" id="collectionDatabaseCreateProperties_container">
<a class="anchorjs-link " href="#collectionDatabaseCreateProperties_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseCreateProperties_long" style="Display: none;">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">"users"</span>, { <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span>,
........&gt; journalSize : <span class="hljs-number">1024</span> * <span class="hljs-number">1204</span>});
[ArangoCollection <span class="hljs-number">15439</span>, <span class="hljs-string">"users"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; c.properties();
{ 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1232896</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span> 
}
</pre>
<div id="collectionDatabaseCreateProperties_container_collapse" onclick="$('#collectionDatabaseCreateProperties_long').hide(); $('#collectionDatabaseCreateProperties_short').show(); window.location.hash='collectionDatabaseCreateProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateProperties_short" onclick="$('#collectionDatabaseCreateProperties_short').hide(); $('#collectionDatabaseCreateProperties_long').show();">
<pre>
arangosh&gt; c = db._create(<span class="hljs-string">"users"</span>, { <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span>,
........&gt; journalSize : <span class="hljs-number">1024</span> * <span class="hljs-number">1204</span>});
arangosh&gt; c.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateProperties


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateKey


<div class="example-container" id="collectionDatabaseCreateKey_container">
<a class="anchorjs-link " href="#collectionDatabaseCreateKey_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseCreateKey_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"users"</span>,
........&gt; { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">"autoincrement"</span>, <span class="hljs-attr">offset</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">increment</span>: <span class="hljs-number">5</span> } });
[ArangoCollection <span class="hljs-number">15428</span>, <span class="hljs-string">"users"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 1"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/10"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZVS--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 2"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/15"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZVW--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 3"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/20"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZVW--B"</span> 
}
</pre>
<div id="collectionDatabaseCreateKey_container_collapse" onclick="$('#collectionDatabaseCreateKey_long').hide(); $('#collectionDatabaseCreateKey_short').show(); window.location.hash='collectionDatabaseCreateKey_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateKey_short" onclick="$('#collectionDatabaseCreateKey_short').hide(); $('#collectionDatabaseCreateKey_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"users"</span>,
........&gt; { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">"autoincrement"</span>, <span class="hljs-attr">offset</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">increment</span>: <span class="hljs-number">5</span> } });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 1"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 2"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 3"</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateKey


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCreateSpecialKey


<div class="example-container" id="collectionDatabaseCreateSpecialKey_container">
<a class="anchorjs-link " href="#collectionDatabaseCreateSpecialKey_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseCreateSpecialKey_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"users"</span>, { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">allowUserKeys</span>: <span class="hljs-literal">false</span> } });
[ArangoCollection <span class="hljs-number">15444</span>, <span class="hljs-string">"users"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 1"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/15448"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15448"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZXa--_"</span> 
}
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 2"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"myuser"</span> });
[ArangoError <span class="hljs-number">1222</span>: unexpected <span class="hljs-built_in">document</span> key]
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 3"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"users/15454"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15454"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZXe--_"</span> 
}
</pre>
<div id="collectionDatabaseCreateSpecialKey_container_collapse" onclick="$('#collectionDatabaseCreateSpecialKey_long').hide(); $('#collectionDatabaseCreateSpecialKey_short').show(); window.location.hash='collectionDatabaseCreateSpecialKey_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseCreateSpecialKey_short" onclick="$('#collectionDatabaseCreateSpecialKey_short').hide(); $('#collectionDatabaseCreateSpecialKey_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"users"</span>, { <span class="hljs-attr">keyOptions</span>: { <span class="hljs-attr">allowUserKeys</span>: <span class="hljs-literal">false</span> } });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 1"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 2"</span>, <span class="hljs-attr">_key</span>: <span class="hljs-string">"myuser"</span> });
arangosh&gt; db.users.save({ <span class="hljs-attr">name</span>: <span class="hljs-string">"user 3"</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseCreateSpecialKey


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionsDatabaseName


<div class="example-container" id="collectionsDatabaseName_container">
<a class="anchorjs-link " href="#collectionsDatabaseName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionsDatabaseName_long" style="Display: none;">
<pre>
arangosh&gt; db._collections();
[ 
  [ArangoCollection <span class="hljs-number">60</span>, <span class="hljs-string">"_appbundles"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">55</span>, <span class="hljs-string">"_apps"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">26</span>, <span class="hljs-string">"_aqlfunctions"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">43</span>, <span class="hljs-string">"_frontend"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">2</span>, <span class="hljs-string">"_graphs"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">47</span>, <span class="hljs-string">"_jobs"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">11</span>, <span class="hljs-string">"_modules"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">45</span>, <span class="hljs-string">"_queues"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">13</span>, <span class="hljs-string">"_routing"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">33</span>, <span class="hljs-string">"_statistics"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">38</span>, <span class="hljs-string">"_statistics15"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">28</span>, <span class="hljs-string">"_statisticsRaw"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">6</span>, <span class="hljs-string">"_users"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">97</span>, <span class="hljs-string">"animals"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">91</span>, <span class="hljs-string">"demo"</span> (type <span class="hljs-built_in">document</span>, status loaded)], 
  [ArangoCollection <span class="hljs-number">15709</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)] 
]
</pre>
<div id="collectionsDatabaseName_container_collapse" onclick="$('#collectionsDatabaseName_long').hide(); $('#collectionsDatabaseName_short').show(); window.location.hash='collectionsDatabaseName_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionsDatabaseName_short" onclick="$('#collectionsDatabaseName_short').hide(); $('#collectionsDatabaseName_long').show();">
<pre>
arangosh&gt; db._collections();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionsDatabaseName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseCollectionName


<div class="example-container" id="collectionDatabaseCollectionName_container">
<a class="anchorjs-link " href="#collectionDatabaseCollectionName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseCollectionName_long">
<pre>
arangosh&gt; db.example;
[ArangoCollection <span class="hljs-number">15419</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseCollectionName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseDropByObject


<div class="example-container" id="collectionDatabaseDropByObject_container">
<a class="anchorjs-link " href="#collectionDatabaseDropByObject_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseDropByObject_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15466</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._drop(col);
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">15466</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseDropByObject


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseDropName


<div class="example-container" id="collectionDatabaseDropName_container">
<a class="anchorjs-link " href="#collectionDatabaseDropName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseDropName_long">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15472</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._drop(<span class="hljs-string">"example"</span>);
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">15472</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseDropName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseDropSystem


<div class="example-container" id="collectionDatabaseDropSystem_container">
<a class="anchorjs-link " href="#collectionDatabaseDropSystem_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseDropSystem_long">
<pre>
arangosh&gt; col = db._example;
[ArangoCollection <span class="hljs-number">15476</span>, <span class="hljs-string">"_example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db._drop(<span class="hljs-string">"_example"</span>, { <span class="hljs-attr">isSystem</span>: <span class="hljs-literal">true</span> });
arangosh&gt; col;
[ArangoCollection <span class="hljs-number">15476</span>, <span class="hljs-string">"_example"</span> (type <span class="hljs-built_in">document</span>, status deleted)]
</pre>
</div>
</div>

    @endDocuBlock collectionDatabaseDropSystem


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseTruncateByObject


<div class="example-container" id="collectionDatabaseTruncateByObject_container">
<a class="anchorjs-link " href="#collectionDatabaseTruncateByObject_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseTruncateByObject_long" style="Display: none;">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15497</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.save({ <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15501"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15501"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Zey--_"</span> 
}
arangosh&gt; col.count();
<span class="hljs-number">1</span>
arangosh&gt; db._truncate(col);
arangosh&gt; col.count();
<span class="hljs-number">0</span>
</pre>
<div id="collectionDatabaseTruncateByObject_container_collapse" onclick="$('#collectionDatabaseTruncateByObject_long').hide(); $('#collectionDatabaseTruncateByObject_short').show(); window.location.hash='collectionDatabaseTruncateByObject_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseTruncateByObject_short" onclick="$('#collectionDatabaseTruncateByObject_short').hide(); $('#collectionDatabaseTruncateByObject_long').show();">
<pre>
arangosh&gt; col = db.example;
arangosh&gt; col.save({ <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> });
arangosh&gt; col.count();
arangosh&gt; db._truncate(col);
arangosh&gt; col.count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseTruncateByObject


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/data-modeling-collections-database-methods.md -->
    @startDocuBlockInline collectionDatabaseTruncateName


<div class="example-container" id="collectionDatabaseTruncateName_container">
<a class="anchorjs-link " href="#collectionDatabaseTruncateName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionDatabaseTruncateName_long" style="Display: none;">
<pre>
arangosh&gt; col = db.example;
[ArangoCollection <span class="hljs-number">15514</span>, <span class="hljs-string">"example"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; col.save({ <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> });
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"example/15518"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"15518"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Zf2--_"</span> 
}
arangosh&gt; col.count();
<span class="hljs-number">1</span>
arangosh&gt; db._truncate(<span class="hljs-string">"example"</span>);
arangosh&gt; col.count();
<span class="hljs-number">0</span>
</pre>
<div id="collectionDatabaseTruncateName_container_collapse" onclick="$('#collectionDatabaseTruncateName_long').hide(); $('#collectionDatabaseTruncateName_short').show(); window.location.hash='collectionDatabaseTruncateName_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionDatabaseTruncateName_short" onclick="$('#collectionDatabaseTruncateName_short').hide(); $('#collectionDatabaseTruncateName_long').show();">
<pre>
arangosh&gt; col = db.example;
arangosh&gt; col.save({ <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> });
arangosh&gt; col.count();
arangosh&gt; db._truncate(<span class="hljs-string">"example"</span>);
arangosh&gt; col.count();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock collectionDatabaseTruncateName


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_knows_sample


<div class="example-container" id="graph_create_knows_sample_container">
<a class="anchorjs-link " href="#graph_create_knows_sample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="graph_create_knows_sample_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"knows_graph"</span>);
arangosh&gt; db.persons.toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYW--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYW--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYW--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYW--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYW--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
  } 
]
arangosh&gt; db.knows.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35541"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/35541"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYa--_"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35554"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/35554"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYe--_"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35548"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/35548"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYa--D"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35545"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/35545"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYa--B"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35551"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/35551"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jYa--F"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">"knows_graph"</span>);
<span class="hljs-literal">true</span>
</pre>
<div id="graph_create_knows_sample_container_collapse" onclick="$('#graph_create_knows_sample_long').hide(); $('#graph_create_knows_sample_short').show(); window.location.hash='graph_create_knows_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_knows_sample_short" onclick="$('#graph_create_knows_sample_short').hide(); $('#graph_create_knows_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"knows_graph"</span>);
arangosh&gt; db.persons.toArray()
arangosh&gt; db.knows.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">"knows_graph"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_knows_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_social_sample


<div class="example-container" id="graph_create_social_sample_container">
<a class="anchorjs-link " href="#graph_create_social_sample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="graph_create_social_sample_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; db.female.toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbS--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbO--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
  } 
]
arangosh&gt; db.male.toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbS--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbS--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
  } 
]
arangosh&gt; db.relation.toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35610"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/35610"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/charly"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbW--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35616"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/35616"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/bob"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbW--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35613"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/35613"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/charly"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbW--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"charly"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35606"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/35606"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jbS--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">"social"</span>);
<span class="hljs-literal">true</span>
</pre>
<div id="graph_create_social_sample_container_collapse" onclick="$('#graph_create_social_sample_long').hide(); $('#graph_create_social_sample_short').show(); window.location.hash='graph_create_social_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_social_sample_short" onclick="$('#graph_create_social_sample_short').hide(); $('#graph_create_social_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; db.female.toArray()
arangosh&gt; db.male.toArray()
arangosh&gt; db.relation.toArray()
arangosh&gt; examples.dropGraph(<span class="hljs-string">"social"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_social_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_cities_sample


<div class="example-container" id="graph_create_cities_sample_container">
<a class="anchorjs-link " href="#graph_create_cities_sample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="graph_create_cities_sample_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; db.frenchCity.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Lyon"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jRu--F"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">80000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">45.76</span>, 
      <span class="hljs-number">4.84</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Paris"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jRy--_"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">4000000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">48.8567</span>, 
      <span class="hljs-number">2.3508</span> 
    ] 
  } 
]
arangosh&gt; db.germanCity.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Cologne"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jRu--B"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">50.9364</span>, 
      <span class="hljs-number">6.9528</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Hamburg"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jRu--D"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">53.5653</span>, 
      <span class="hljs-number">10.0014</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Berlin"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jRu--_"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">3000000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">52.5167</span>, 
      <span class="hljs-number">13.3833</span> 
    ] 
  } 
]
arangosh&gt; db.germanHighway.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35446"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/35446"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTq--B"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">400</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35449"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/35449"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTq--D"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">500</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35442"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/35442"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTq--_"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">850</span> 
  } 
]
arangosh&gt; db.frenchHighway.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35452"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchHighway/35452"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTq--F"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">550</span> 
  } 
]
arangosh&gt; db.internationalHighway.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35460"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/35460"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTu--B"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1200</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35456"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/35456"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTu--_"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1100</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35469"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/35469"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTy--B"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">700</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35466"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/35466"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTy--_"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1300</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35472"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/35472"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTy--D"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">550</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35463"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/35463"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jTu--D"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">900</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">"routeplanner"</span>);
<span class="hljs-literal">true</span>
</pre>
<div id="graph_create_cities_sample_container_collapse" onclick="$('#graph_create_cities_sample_long').hide(); $('#graph_create_cities_sample_short').show(); window.location.hash='graph_create_cities_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_cities_sample_short" onclick="$('#graph_create_cities_sample_short').hide(); $('#graph_create_cities_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; db.frenchCity.toArray();
arangosh&gt; db.germanCity.toArray();
arangosh&gt; db.germanHighway.toArray();
arangosh&gt; db.frenchHighway.toArray();
arangosh&gt; db.internationalHighway.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">"routeplanner"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_cities_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_traversal_sample


<div class="example-container" id="graph_create_traversal_sample_container">
<a class="anchorjs-link " href="#graph_create_traversal_sample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="graph_create_traversal_sample_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"traversalGraph"</span>);
arangosh&gt; db.circles.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"I"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/I"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jea--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"9"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"G"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jea--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"7"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"F"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/F"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jeW--F"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"6"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"A"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jeS--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"1"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"E"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jeW--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"5"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jeW--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"3"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/D"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jeW--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"4"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"J"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jea--F"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"10"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jeS--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"2"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"H"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jea--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"8"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"K"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/K"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jee--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"11"</span> 
  } 
]
arangosh&gt; db.edges.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35703"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35703"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/I"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jem--B"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_blub"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35697"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35697"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jei--F"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_foo"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35694"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35694"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/F"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jei--D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_schubi"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35706"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35706"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jem--D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_zip"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35691"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35691"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jei--B"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blub"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35685"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35685"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jee--D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blarg"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35700"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35700"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jem--_"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_blob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35688"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35688"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/D"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jei--_"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blorg"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35709"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35709"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/K"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jem--F"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_zup"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35681"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/35681"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jee--B"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_bar"</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">"traversalGraph"</span>);
<span class="hljs-literal">true</span>
</pre>
<div id="graph_create_traversal_sample_container_collapse" onclick="$('#graph_create_traversal_sample_long').hide(); $('#graph_create_traversal_sample_short').show(); window.location.hash='graph_create_traversal_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_traversal_sample_short" onclick="$('#graph_create_traversal_sample_short').hide(); $('#graph_create_traversal_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"traversalGraph"</span>);
arangosh&gt; db.circles.toArray();
arangosh&gt; db.edges.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">"traversalGraph"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_traversal_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs.md -->
    @startDocuBlockInline graph_create_world_sample


<div class="example-container" id="graph_create_world_sample_container">
<a class="anchorjs-link " href="#graph_create_world_sample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="graph_create_world_sample_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"worldCountry"</span>);
arangosh&gt; db.worldVertices.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-ottawa"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-ottawa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiK--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Ottawa"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-yaounde"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-yaounde"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiW--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Yaounde"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-algiers"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-algiers"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhy--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Algiers"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"continent-south-america"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhO--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"South America"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"continent"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-andorra-la-vella"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-andorra-la-vella"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhy--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Andorra la Vella"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-people-s-republic-of-china"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-people-s-republic-of-china"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhy--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"People's Republic of China"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"CHN"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-tirana"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-tirana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiS--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Tirana"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-cote-d-ivoire"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-cote-d-ivoire"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhm--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Cote d'Ivoire"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"CIV"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-sofia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-sofia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiS--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Sofia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-bridgetown"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-bridgetown"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh6--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bridgetown"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-chad"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-chad"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhi--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Chad"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"TCD"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-thimphu"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-thimphu"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiS--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Thimphu"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-santiago"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-santiago"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiO--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Santiago"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-manama"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-manama"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiG--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Manama"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-zagreb"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-zagreb"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiW--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Zagreb"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-brazil"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-brazil"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jha--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Brazil"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BRA"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-burundi"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-burundi"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhe--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Burundi"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BDI"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-la-paz"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-la-paz"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiC--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"La Paz"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-germany"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-germany"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhu--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Germany"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"DEU"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-botswana"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-botswana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jha--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Botswana"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BWA"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-phnom-penh"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-phnom-penh"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiK--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Phnom Penh"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-croatia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-croatia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhm--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Croatia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"HRV"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-eritrea"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-eritrea"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhq--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eritrea"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"ERI"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-angola"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-angola"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Angola"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"AGO"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bahrain"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bahrain"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhW--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bahrain"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BHR"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-argentina"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-argentina"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Argentina"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"ARG"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-canberra"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-canberra"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji---B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Canberra"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-bujumbura"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-bujumbura"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh6--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bujumbura"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bangladesh"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bangladesh"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhW--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bangladesh"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BGD"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-ecuador"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-ecuador"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhq--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Ecuador"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"ECU"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"continent-africa"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhK--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Africa"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"continent"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-cambodia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-cambodia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhe--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Cambodia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"KHM"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-chile"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-chile"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhm--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Chile"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"CHL"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bolivia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bolivia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jha--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bolivia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BOL"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-belgium"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-belgium"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhW--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Belgium"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BEL"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-copenhagen"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-copenhagen"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji---D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Copenhagen"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-cameroon"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-cameroon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhi--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Cameroon"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"CMR"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-gaborone"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-gaborone"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiC--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Gaborone"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"continent-australia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/continent-australia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhK--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Australia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"continent"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"world"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhG--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"World"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"root"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-yamoussoukro"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-yamoussoukro"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiW--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Yamoussoukro"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-brasilia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-brasilia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh6--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Brasilia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-antigua-and-barbuda"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-antigua-and-barbuda"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Antigua and Barbuda"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"ATG"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-bandar-seri-begawan"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-bandar-seri-begawan"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhy--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bandar Seri Begawan"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-dhaka"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-dhaka"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji---F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dhaka"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-saint-john-s"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-saint-john-s"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiO--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Saint John's"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-burkina-faso"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-burkina-faso"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhe--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Burkina Faso"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BFA"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-prague"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-prague"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiO--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Prague"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-czech-republic"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-czech-republic"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhq--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Czech Republic"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"CZE"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-egypt"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-egypt"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhq--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Egypt"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"EGY"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-helsinki"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-helsinki"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiC--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Helsinki"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bhutan"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bhutan"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jha--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bhutan"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BTN"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-algeria"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-algeria"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Algeria"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"DZA"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-afghanistan"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-afghanistan"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhO--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Afghanistan"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"AFG"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-paris"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-paris"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiK--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Paris"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-finland"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-finland"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhu--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Finland"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"FIN"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-austria"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-austria"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhW--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Austria"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"AUT"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-brussels"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-brussels"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh6--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Brussels"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-denmark"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-denmark"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhq--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Denmark"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"DNK"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-albania"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-albania"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Albania"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"ALB"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-berlin"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-berlin"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh2--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Berlin"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-buenos-aires"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-buenos-aires"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh6--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Buenos Aires"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-quito"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-quito"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiO--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Quito"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-france"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-france"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhu--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"France"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"FRA"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-colombia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-colombia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhm--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Colombia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"COL"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bulgaria"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bulgaria"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhe--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bulgaria"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BGR"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"continent-north-america"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/continent-north-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhO--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"North America"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"continent"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-vienna"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-vienna"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiS--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Vienna"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bahamas"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bahamas"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhW--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bahamas"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BHS"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"continent-asia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhK--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Asia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"continent"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-barbados"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-barbados"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhW--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Barbados"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BRB"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-n-djamena"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-n-djamena"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiG--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"N'Djamena"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-ouagadougou"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-ouagadougou"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiK--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Ouagadougou"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-bogota"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-bogota"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh2--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bogota"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-brunei"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-brunei"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jha--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Brunei"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BRN"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-asmara"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-asmara"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhy--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Asmara"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-cairo"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-cairo"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji---_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Cairo"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-kabul"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-kabul"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiC--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Kabul"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-nassau"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-nassau"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiG--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Nassau"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-beijing"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-beijing"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jh2--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Beijing"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-canada"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-canada"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhi--B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Canada"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"CAN"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"continent-europe"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhK--F"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Europe"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"continent"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-luanda"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-luanda"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiG--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Luanda"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-australia"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-australia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--L"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Australia"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"AUS"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"capital-sarajevo"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/capital-sarajevo"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiS--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Sarajevo"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"capital"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-andorra"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-andorra"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jhS--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Andorra"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"AND"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"country-bosnia-and-herzegovina"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldVertices/country-bosnia-and-herzegovina"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jha--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bosnia and Herzegovina"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"country"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"BIH"</span> 
  } 
]
arangosh&gt; db.worldEdges.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36107"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36107"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-gaborone"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-botswana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjS--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36143"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36143"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-prague"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-czech-republic"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jje--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36101"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36101"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-copenhagen"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-denmark"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjS--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36074"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36074"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-berlin"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-germany"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjG--H"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35978"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35978"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-belgium"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiq--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35975"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35975"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-barbados"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-north-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiq--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36137"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36137"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-paris"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-france"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jja--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35960"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35960"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-australia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-australia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jim--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36110"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36110"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-helsinki"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-finland"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjS--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36062"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36062"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-andorra-la-vella"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-andorra"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjG--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35981"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35981"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bhutan"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiq--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35948"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35948"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-andorra"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jii--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36116"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36116"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-la-paz"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bolivia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjW--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36059"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36059"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-algiers"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-algeria"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjC--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36005"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36005"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-burundi"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiy--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36038"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36038"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-ecuador"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jj---_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36119"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36119"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-luanda"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-angola"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjW--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35951"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35951"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-angola"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jii--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35957"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35957"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-argentina"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jii--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36023"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36023"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-colombia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji6--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35996"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35996"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-brunei"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiy--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35927"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35927"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/continent-australia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jia--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36089"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36089"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-buenos-aires"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-argentina"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjO--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35966"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35966"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bahamas"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-north-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jim--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36011"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36011"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-cameroon"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji2--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36056"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36056"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-people-s-republic-of-china"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjC--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36002"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36002"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-burkina-faso"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiy--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35990"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35990"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-botswana"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiu--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35933"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35933"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/continent-north-america"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jia--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36053"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36053"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-germany"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjC--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36077"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36077"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-bogota"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-colombia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjK--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35920"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35920"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiW--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36008"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36008"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-cambodia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiy--H"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35936"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35936"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jie--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36146"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36146"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-quito"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-ecuador"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jje--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36125"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36125"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-nassau"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bahamas"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjW--H"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36086"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36086"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-brussels"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-belgium"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjK--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35969"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35969"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bahrain"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jim--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36017"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36017"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-chad"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji2--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35963"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35963"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-austria"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jim--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36020"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36020"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-chile"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji2--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36176"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36176"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-zagreb"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-croatia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjm--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36065"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36065"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-asmara"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-eritrea"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjG--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36164"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36164"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-tirana"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-albania"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jji--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36155"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36155"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-sarajevo"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bosnia-and-herzegovina"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jji--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36029"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36029"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-croatia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji6--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35924"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35924"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jia--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35993"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35993"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-brazil"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiu--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36026"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36026"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-cote-d-ivoire"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji6--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36113"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36113"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-kabul"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-afghanistan"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjW--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36158"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36158"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-sofia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bulgaria"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jji--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36032"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36032"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-czech-republic"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji6--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36161"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36161"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-thimphu"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bhutan"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jji--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36131"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36131"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-ottawa"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-canada"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jja--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36050"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36050"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-france"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjC--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35954"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35954"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-antigua-and-barbuda"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-north-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jii--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35945"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35945"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-algeria"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jie--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36041"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36041"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-egypt"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jj---B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35942"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35942"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-albania"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jie--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36104"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36104"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-dhaka"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bangladesh"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjS--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36071"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36071"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-beijing"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-people-s-republic-of-china"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjG--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35939"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35939"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-afghanistan"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jie--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36035"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36035"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-denmark"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji6--H"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36134"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36134"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-ouagadougou"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-burkina-faso"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jja--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36128"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36128"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-n-djamena"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-chad"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jja--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36140"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36140"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-phnom-penh"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-cambodia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jje--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36092"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36092"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-bujumbura"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-burundi"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjO--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36098"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36098"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-canberra"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-australia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjO--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36083"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36083"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-bridgetown"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-barbados"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjK--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36068"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36068"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-bandar-seri-begawan"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-brunei"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjG--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36095"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36095"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-cairo"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-egypt"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjO--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36167"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36167"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-vienna"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-austria"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jji--H"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36170"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36170"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-yamoussoukro"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-cote-d-ivoire"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjm--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35972"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35972"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bangladesh"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-asia"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiq--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35984"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35984"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bolivia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-south-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiu--_"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35999"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35999"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bulgaria"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiy--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36047"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36047"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-finland"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jj---F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36044"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36044"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-eritrea"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-africa"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jj---D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36080"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36080"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-brasilia"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-brazil"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjK--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36122"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36122"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-manama"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-bahrain"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjW--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35987"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35987"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-bosnia-and-herzegovina"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jiu--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36173"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36173"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-yaounde"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-cameroon"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jjm--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36152"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36152"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-santiago"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-chile"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jje--H"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36014"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36014"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/country-canada"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/continent-north-america"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ji2--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36149"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/36149"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/capital-saint-john-s"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/country-antigua-and-barbuda"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jje--F"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"35930"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"worldEdges/35930"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"worldVertices/continent-europe"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"worldVertices/world"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7jia--D"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"is-in"</span> 
  } 
]
arangosh&gt; examples.dropGraph(<span class="hljs-string">"worldCountry"</span>);
<span class="hljs-literal">true</span>
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"worldCountryUnManaged"</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">"worldCountryUnManaged"</span>);
</pre>
<div id="graph_create_world_sample_container_collapse" onclick="$('#graph_create_world_sample_long').hide(); $('#graph_create_world_sample_short').show(); window.location.hash='graph_create_world_sample_container';" class="example_show_button">Hide execution results</div></div>
<div id="graph_create_world_sample_short" onclick="$('#graph_create_world_sample_short').hide(); $('#graph_create_world_sample_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"worldCountry"</span>);
arangosh&gt; db.worldVertices.toArray();
arangosh&gt; db.worldEdges.toArray();
arangosh&gt; examples.dropGraph(<span class="hljs-string">"worldCountry"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"worldCountryUnManaged"</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">"worldCountryUnManaged"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock graph_create_world_sample


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphGetFromVertex


<div class="example-container" id="generalGraphGetFromVertex_container">
<a class="anchorjs-link " href="#generalGraphGetFromVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphGetFromVertex_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db.relation.any();
arangosh&gt; graph._fromVertex(<span class="hljs-string">"relation/"</span> + any._key);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ccy--B"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
}
</pre>
<div id="generalGraphGetFromVertex_container_collapse" onclick="$('#generalGraphGetFromVertex_long').hide(); $('#generalGraphGetFromVertex_short').show(); window.location.hash='generalGraphGetFromVertex_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphGetFromVertex_short" onclick="$('#generalGraphGetFromVertex_short').hide(); $('#generalGraphGetFromVertex_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db.relation.any();
arangosh&gt; graph._fromVertex(<span class="hljs-string">"relation/"</span> + any._key);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphGetFromVertex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphGetToVertex


<div class="example-container" id="generalGraphGetToVertex_container">
<a class="anchorjs-link " href="#generalGraphGetToVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphGetToVertex_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db.relation.any();
arangosh&gt; graph._toVertex(<span class="hljs-string">"relation/"</span> + any._key);
{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7cga--D"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
}
</pre>
<div id="generalGraphGetToVertex_container_collapse" onclick="$('#generalGraphGetToVertex_long').hide(); $('#generalGraphGetToVertex_short').show(); window.location.hash='generalGraphGetToVertex_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphGetToVertex_short" onclick="$('#generalGraphGetToVertex_short').hide(); $('#generalGraphGetToVertex_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> any = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).db.relation.any();
arangosh&gt; graph._toVertex(<span class="hljs-string">"relation/"</span> + any._key);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphGetToVertex


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleNeighbors1


<div class="example-container" id="generalGraphModuleNeighbors1_container">
<a class="anchorjs-link " href="#generalGraphModuleNeighbors1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleNeighbors1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._neighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
[ 
  <span class="hljs-string">"frenchCity/Lyon"</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span>, 
  <span class="hljs-string">"germanCity/Cologne"</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> 
]
</pre>
<div id="generalGraphModuleNeighbors1_container_collapse" onclick="$('#generalGraphModuleNeighbors1_long').hide(); $('#generalGraphModuleNeighbors1_short').show(); window.location.hash='generalGraphModuleNeighbors1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleNeighbors1_short" onclick="$('#generalGraphModuleNeighbors1_short').hide(); $('#generalGraphModuleNeighbors1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._neighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleNeighbors1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleNeighbors2


<div class="example-container" id="generalGraphModuleNeighbors2_container">
<a class="anchorjs-link " href="#generalGraphModuleNeighbors2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleNeighbors2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._neighbors(<span class="hljs-string">'germanCity/Hamburg'</span>, {<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
[ 
  <span class="hljs-string">"frenchCity/Paris"</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span>, 
  <span class="hljs-string">"germanCity/Cologne"</span> 
]
</pre>
<div id="generalGraphModuleNeighbors2_container_collapse" onclick="$('#generalGraphModuleNeighbors2_long').hide(); $('#generalGraphModuleNeighbors2_short').show(); window.location.hash='generalGraphModuleNeighbors2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleNeighbors2_short" onclick="$('#generalGraphModuleNeighbors2_short').hide(); $('#generalGraphModuleNeighbors2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._neighbors(<span class="hljs-string">'germanCity/Hamburg'</span>, {<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleNeighbors2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighbors1


<div class="example-container" id="generalGraphModuleCommonNeighbors1_container">
<a class="anchorjs-link " href="#generalGraphModuleCommonNeighbors1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCommonNeighbors1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonNeighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>}, {<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
[ 
  { 
    <span class="hljs-string">"left"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"right"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"neighbors"</span> : [ 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"germanCity/Hamburg"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"left"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"right"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"neighbors"</span> : [ 
      <span class="hljs-string">"germanCity/Hamburg"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighbors1_container_collapse" onclick="$('#generalGraphModuleCommonNeighbors1_long').hide(); $('#generalGraphModuleCommonNeighbors1_short').show(); window.location.hash='generalGraphModuleCommonNeighbors1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighbors1_short" onclick="$('#generalGraphModuleCommonNeighbors1_short').hide(); $('#generalGraphModuleCommonNeighbors1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonNeighbors({<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>}, {<span class="hljs-attr">isCapital</span> : <span class="hljs-literal">true</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighbors1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighbors2


<div class="example-container" id="generalGraphModuleCommonNeighbors2_container">
<a class="anchorjs-link " href="#generalGraphModuleCommonNeighbors2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCommonNeighbors2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonNeighbors(
........&gt;   <span class="hljs-string">'germanCity/Hamburg'</span>,
........&gt;   {},
........&gt;   {<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>},
........&gt; {<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
[ 
  { 
    <span class="hljs-string">"left"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"right"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"neighbors"</span> : [ 
      <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"left"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"right"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"neighbors"</span> : [ 
      <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"left"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"right"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"neighbors"</span> : [ 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighbors2_container_collapse" onclick="$('#generalGraphModuleCommonNeighbors2_long').hide(); $('#generalGraphModuleCommonNeighbors2_short').show(); window.location.hash='generalGraphModuleCommonNeighbors2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighbors2_short" onclick="$('#generalGraphModuleCommonNeighbors2_short').hide(); $('#generalGraphModuleCommonNeighbors2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonNeighbors(
........&gt;   <span class="hljs-string">'germanCity/Hamburg'</span>,
........&gt;   {},
........&gt;   {<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>},
........&gt; {<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span> : <span class="hljs-number">2</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighbors2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighborsAmount1


<div class="example-container" id="generalGraphModuleCommonNeighborsAmount1_container">
<a class="anchorjs-link " href="#generalGraphModuleCommonNeighborsAmount1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCommonNeighborsAmount1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> example = { <span class="hljs-attr">isCapital</span>: <span class="hljs-literal">true</span> };
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(example, example, options, options);
[ 
  { 
    <span class="hljs-string">"germanCity/Berlin"</span> : [ 
      { 
        <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">3</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"frenchCity/Paris"</span> : [ 
      { 
        <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">3</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighborsAmount1_container_collapse" onclick="$('#generalGraphModuleCommonNeighborsAmount1_long').hide(); $('#generalGraphModuleCommonNeighborsAmount1_short').show(); window.location.hash='generalGraphModuleCommonNeighborsAmount1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighborsAmount1_short" onclick="$('#generalGraphModuleCommonNeighborsAmount1_short').hide(); $('#generalGraphModuleCommonNeighborsAmount1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> example = { <span class="hljs-attr">isCapital</span>: <span class="hljs-literal">true</span> };
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(example, example, options, options);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighborsAmount1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCommonNeighborsAmount2


<div class="example-container" id="generalGraphModuleCommonNeighborsAmount2_container">
<a class="anchorjs-link " href="#generalGraphModuleCommonNeighborsAmount2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCommonNeighborsAmount2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">direction</span>: <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(<span class="hljs-string">'germanCity/Hamburg'</span>, {}, options, options);
[ 
  { 
    <span class="hljs-string">"germanCity/Hamburg"</span> : [ 
      { 
        <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">2</span> 
      }, 
      { 
        <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">3</span> 
      }, 
      { 
        <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleCommonNeighborsAmount2_container_collapse" onclick="$('#generalGraphModuleCommonNeighborsAmount2_long').hide(); $('#generalGraphModuleCommonNeighborsAmount2_short').show(); window.location.hash='generalGraphModuleCommonNeighborsAmount2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCommonNeighborsAmount2_short" onclick="$('#generalGraphModuleCommonNeighborsAmount2_short').hide(); $('#generalGraphModuleCommonNeighborsAmount2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">direction</span>: <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">maxDepth</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">includeData</span>: <span class="hljs-literal">true</span> };
arangosh&gt; graph._countCommonNeighbors(<span class="hljs-string">'germanCity/Hamburg'</span>, {}, options, options);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCommonNeighborsAmount2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleProperties1


<div class="example-container" id="generalGraphModuleProperties1_container">
<a class="anchorjs-link " href="#generalGraphModuleProperties1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleProperties1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonProperties({}, {});
[ 
  { 
    <span class="hljs-string">"frenchCity/Lyon"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"frenchCity/Paris"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"germanCity/Berlin"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"germanCity/Cologne"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span> 
      }, 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"germanCity/Hamburg"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span> 
      }, 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleProperties1_container_collapse" onclick="$('#generalGraphModuleProperties1_long').hide(); $('#generalGraphModuleProperties1_short').show(); window.location.hash='generalGraphModuleProperties1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleProperties1_short" onclick="$('#generalGraphModuleProperties1_short').hide(); $('#generalGraphModuleProperties1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonProperties({}, {});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleProperties1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleProperties2


<div class="example-container" id="generalGraphModuleProperties2_container">
<a class="anchorjs-link " href="#generalGraphModuleProperties2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleProperties2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonProperties({}, {}, {<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">'population'</span>});
[ 
  { 
    <span class="hljs-string">"frenchCity/Lyon"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"frenchCity/Paris"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"germanCity/Berlin"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"germanCity/Cologne"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"germanCity/Hamburg"</span> : [ 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModuleProperties2_container_collapse" onclick="$('#generalGraphModuleProperties2_long').hide(); $('#generalGraphModuleProperties2_short').show(); window.location.hash='generalGraphModuleProperties2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleProperties2_short" onclick="$('#generalGraphModuleProperties2_short').hide(); $('#generalGraphModuleProperties2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._commonProperties({}, {}, {<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">'population'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleProperties2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAmountProperties1


<div class="example-container" id="generalGraphModuleAmountProperties1_container">
<a class="anchorjs-link " href="#generalGraphModuleAmountProperties1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAmountProperties1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._countCommonProperties({}, {});
[ 
  { 
    <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">2</span> 
  } 
]
</pre>
<div id="generalGraphModuleAmountProperties1_container_collapse" onclick="$('#generalGraphModuleAmountProperties1_long').hide(); $('#generalGraphModuleAmountProperties1_short').show(); window.location.hash='generalGraphModuleAmountProperties1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAmountProperties1_short" onclick="$('#generalGraphModuleAmountProperties1_short').hide(); $('#generalGraphModuleAmountProperties1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._countCommonProperties({}, {});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAmountProperties1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAmountProperties2


<div class="example-container" id="generalGraphModuleAmountProperties2_container">
<a class="anchorjs-link " href="#generalGraphModuleAmountProperties2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAmountProperties2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._countCommonProperties({}, {}, {<span class="hljs-attr">vertex1CollectionRestriction</span> : <span class="hljs-string">'germanCity'</span>,
........&gt; vertex2CollectionRestriction : <span class="hljs-string">'germanCity'</span> ,<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">'population'</span>});
[ 
  { 
    <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">2</span> 
  }, 
  { 
    <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">2</span> 
  } 
]
</pre>
<div id="generalGraphModuleAmountProperties2_container_collapse" onclick="$('#generalGraphModuleAmountProperties2_long').hide(); $('#generalGraphModuleAmountProperties2_short').show(); window.location.hash='generalGraphModuleAmountProperties2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAmountProperties2_short" onclick="$('#generalGraphModuleAmountProperties2_short').hide(); $('#generalGraphModuleAmountProperties2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._countCommonProperties({}, {}, {<span class="hljs-attr">vertex1CollectionRestriction</span> : <span class="hljs-string">'germanCity'</span>,
........&gt; vertex2CollectionRestriction : <span class="hljs-string">'germanCity'</span> ,<span class="hljs-attr">ignoreProperties</span>: <span class="hljs-string">'population'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAmountProperties2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModulePaths1


<div class="example-container" id="generalGraphModulePaths1_container">
<a class="anchorjs-link " href="#generalGraphModulePaths1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModulePaths1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; g._paths();
[ 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20995"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/20995"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--H"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20995"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/20995"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--H"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21005"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21005"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUu--B"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20999"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/20999"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--J"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"20999"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/20999"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--J"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21002"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21002"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUu--_"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"charly"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21005"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21005"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUu--B"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21002"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21002"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUu--_"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"charly"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gUq--F"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModulePaths1_container_collapse" onclick="$('#generalGraphModulePaths1_long').hide(); $('#generalGraphModulePaths1_short').show(); window.location.hash='generalGraphModulePaths1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModulePaths1_short" onclick="$('#generalGraphModulePaths1_short').hide(); $('#generalGraphModulePaths1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; g._paths();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModulePaths1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModulePaths2


<div class="example-container" id="generalGraphModulePaths2_container">
<a class="anchorjs-link " href="#generalGraphModulePaths2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModulePaths2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; g._paths({<span class="hljs-attr">direction</span> : <span class="hljs-string">'inbound'</span>, <span class="hljs-attr">minLength</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">maxLength</span> :  <span class="hljs-number">2</span>});
[ 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--D"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21069"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21069"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--F"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"charly"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21069"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21069"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--F"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"charly"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21066"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21066"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--D"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21072"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21072"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--H"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21072"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21072"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--H"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21062"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21062"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--B"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"diana"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/diana"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Diana"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21062"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21062"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--B"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"source"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--D"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
    }, 
    <span class="hljs-string">"destination"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
    }, 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21066"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/21066"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYq--D"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
        <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
      } 
    ], 
    <span class="hljs-string">"vertice"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charly"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/charly"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charly"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7gYm--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      } 
    ] 
  } 
]
</pre>
<div id="generalGraphModulePaths2_container_collapse" onclick="$('#generalGraphModulePaths2_long').hide(); $('#generalGraphModulePaths2_short').show(); window.location.hash='generalGraphModulePaths2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModulePaths2_short" onclick="$('#generalGraphModulePaths2_short').hide(); $('#generalGraphModulePaths2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"social"</span>);
arangosh&gt; g._paths({<span class="hljs-attr">direction</span> : <span class="hljs-string">'inbound'</span>, <span class="hljs-attr">minLength</span> : <span class="hljs-number">1</span>, <span class="hljs-attr">maxLength</span> :  <span class="hljs-number">2</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModulePaths2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleShortestPaths1


<div class="example-container" id="generalGraphModuleShortestPaths1_container">
<a class="anchorjs-link " href="#generalGraphModuleShortestPaths1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleShortestPaths1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._shortestPath({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">'frenchCity'</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">'germanCity'</span>});
[ 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Cologne"</span>, 
      <span class="hljs-string">"germanCity/Hamburg"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21753"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/21753"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--D"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">500</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Cologne"</span>, 
      <span class="hljs-string">"germanCity/Berlin"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21746"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/21746"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--_"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">850</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Cologne"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21773"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21773"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--F"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">700</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Cologne"</span>, 
      <span class="hljs-string">"frenchCity/Paris"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21776"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21776"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFy--_"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Hamburg"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21753"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/21753"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--D"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">500</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Hamburg"</span>, 
      <span class="hljs-string">"germanCity/Berlin"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21750"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/21750"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--B"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">400</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Hamburg"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21770"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21770"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--D"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">1300</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Hamburg"</span>, 
      <span class="hljs-string">"frenchCity/Paris"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21767"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21767"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--B"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">900</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Berlin"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21746"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/21746"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--_"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">850</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Berlin"</span>, 
      <span class="hljs-string">"germanCity/Hamburg"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21750"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanHighway/21750"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--B"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">400</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Berlin"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21760"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21760"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--H"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">1100</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Berlin"</span>, 
      <span class="hljs-string">"frenchCity/Paris"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21764"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21764"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--_"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">1200</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21773"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21773"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--F"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">700</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"germanCity/Hamburg"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21770"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21770"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--D"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">1300</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"germanCity/Berlin"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21760"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21760"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--H"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">1100</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"frenchCity/Paris"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21756"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchHighway/21756"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--F"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"germanCity/Cologne"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21776"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21776"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFy--_"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"germanCity/Hamburg"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21767"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21767"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--B"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">900</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"germanCity/Berlin"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21764"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21764"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFu--_"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">1200</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21756"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchHighway/21756"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hFq--F"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">550</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleShortestPaths1_container_collapse" onclick="$('#generalGraphModuleShortestPaths1_long').hide(); $('#generalGraphModuleShortestPaths1_short').show(); window.location.hash='generalGraphModuleShortestPaths1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleShortestPaths1_short" onclick="$('#generalGraphModuleShortestPaths1_short').hide(); $('#generalGraphModuleShortestPaths1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._shortestPath({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">'frenchCity'</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">'germanCity'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleShortestPaths1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleShortestPaths2


<div class="example-container" id="generalGraphModuleShortestPaths2_container">
<a class="anchorjs-link " href="#generalGraphModuleShortestPaths2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleShortestPaths2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._shortestPath([{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Cologne'</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Munich'</span>}], <span class="hljs-string">'frenchCity/Lyon'</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
[ 
  { 
    <span class="hljs-string">"vertices"</span> : [ 
      <span class="hljs-string">"germanCity/Cologne"</span>, 
      <span class="hljs-string">"frenchCity/Lyon"</span> 
    ], 
    <span class="hljs-string">"edges"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"21893"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"internationalHighway/21893"</span>, 
        <span class="hljs-string">"_from"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_to"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7hN6--B"</span>, 
        <span class="hljs-string">"distance"</span> : <span class="hljs-number">700</span> 
      } 
    ], 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleShortestPaths2_container_collapse" onclick="$('#generalGraphModuleShortestPaths2_long').hide(); $('#generalGraphModuleShortestPaths2_short').show(); window.location.hash='generalGraphModuleShortestPaths2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleShortestPaths2_short" onclick="$('#generalGraphModuleShortestPaths2_short').hide(); $('#generalGraphModuleShortestPaths2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._shortestPath([{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Cologne'</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Munich'</span>}], <span class="hljs-string">'frenchCity/Lyon'</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleShortestPaths2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDistanceTo1


<div class="example-container" id="generalGraphModuleDistanceTo1_container">
<a class="anchorjs-link " href="#generalGraphModuleDistanceTo1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleDistanceTo1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._distanceTo({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">'frenchCity'</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">'germanCity'</span>});
[ 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"germanCity/Berlin"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  }, 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleDistanceTo1_container_collapse" onclick="$('#generalGraphModuleDistanceTo1_long').hide(); $('#generalGraphModuleDistanceTo1_short').show(); window.location.hash='generalGraphModuleDistanceTo1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleDistanceTo1_short" onclick="$('#generalGraphModuleDistanceTo1_short').hide(); $('#generalGraphModuleDistanceTo1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._distanceTo({}, {}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>, <span class="hljs-attr">endVertexCollectionRestriction</span> : <span class="hljs-string">'frenchCity'</span>,
........&gt; startVertexCollectionRestriction : <span class="hljs-string">'germanCity'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleDistanceTo1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDistanceTo2


<div class="example-container" id="generalGraphModuleDistanceTo2_container">
<a class="anchorjs-link " href="#generalGraphModuleDistanceTo2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleDistanceTo2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._distanceTo([{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Cologne'</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Munich'</span>}], <span class="hljs-string">'frenchCity/Lyon'</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
[ 
  { 
    <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1</span> 
  } 
]
</pre>
<div id="generalGraphModuleDistanceTo2_container_collapse" onclick="$('#generalGraphModuleDistanceTo2_long').hide(); $('#generalGraphModuleDistanceTo2_short').show(); window.location.hash='generalGraphModuleDistanceTo2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleDistanceTo2_short" onclick="$('#generalGraphModuleDistanceTo2_short').hide(); $('#generalGraphModuleDistanceTo2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; g._distanceTo([{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Cologne'</span>},{<span class="hljs-attr">_id</span>: <span class="hljs-string">'germanCity/Munich'</span>}], <span class="hljs-string">'frenchCity/Lyon'</span>,
........&gt; {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleDistanceTo2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsEccentricity1


<div class="example-container" id="generalGraphModuleAbsEccentricity1_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsEccentricity1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsEccentricity1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteEccentricity({});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsEccentricity1_container_collapse" onclick="$('#generalGraphModuleAbsEccentricity1_long').hide(); $('#generalGraphModuleAbsEccentricity1_short').show(); window.location.hash='generalGraphModuleAbsEccentricity1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsEccentricity1_short" onclick="$('#generalGraphModuleAbsEccentricity1_short').hide(); $('#generalGraphModuleAbsEccentricity1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteEccentricity({});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsEccentricity1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsEccentricity2


<div class="example-container" id="generalGraphModuleAbsEccentricity2_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsEccentricity2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsEccentricity2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsEccentricity2_container_collapse" onclick="$('#generalGraphModuleAbsEccentricity2_long').hide(); $('#generalGraphModuleAbsEccentricity2_short').show(); window.location.hash='generalGraphModuleAbsEccentricity2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsEccentricity2_short" onclick="$('#generalGraphModuleAbsEccentricity2_short').hide(); $('#generalGraphModuleAbsEccentricity2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsEccentricity2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsEccentricity3


<div class="example-container" id="generalGraphModuleAbsEccentricity3_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsEccentricity3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsEccentricity3_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">'germanCity'</span>,
........&gt; direction : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsEccentricity3_container_collapse" onclick="$('#generalGraphModuleAbsEccentricity3_long').hide(); $('#generalGraphModuleAbsEccentricity3_short').show(); window.location.hash='generalGraphModuleAbsEccentricity3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsEccentricity3_short" onclick="$('#generalGraphModuleAbsEccentricity3_short').hide(); $('#generalGraphModuleAbsEccentricity3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteEccentricity({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">'germanCity'</span>,
........&gt; direction : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsEccentricity3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleEccentricity2


<div class="example-container" id="generalGraphModuleEccentricity2_container">
<a class="anchorjs-link " href="#generalGraphModuleEccentricity2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleEccentricity2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._eccentricity();
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleEccentricity2_container_collapse" onclick="$('#generalGraphModuleEccentricity2_long').hide(); $('#generalGraphModuleEccentricity2_short').show(); window.location.hash='generalGraphModuleEccentricity2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleEccentricity2_short" onclick="$('#generalGraphModuleEccentricity2_short').hide(); $('#generalGraphModuleEccentricity2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._eccentricity();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleEccentricity2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleEccentricity3


<div class="example-container" id="generalGraphModuleEccentricity3_container">
<a class="anchorjs-link " href="#generalGraphModuleEccentricity3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleEccentricity3_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._eccentricity({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleEccentricity3_container_collapse" onclick="$('#generalGraphModuleEccentricity3_long').hide(); $('#generalGraphModuleEccentricity3_short').show(); window.location.hash='generalGraphModuleEccentricity3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleEccentricity3_short" onclick="$('#generalGraphModuleEccentricity3_short').hide(); $('#generalGraphModuleEccentricity3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._eccentricity({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleEccentricity3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsCloseness1


<div class="example-container" id="generalGraphModuleAbsCloseness1_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsCloseness1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsCloseness1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteCloseness({});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">4</span> 
}
</pre>
<div id="generalGraphModuleAbsCloseness1_container_collapse" onclick="$('#generalGraphModuleAbsCloseness1_long').hide(); $('#generalGraphModuleAbsCloseness1_short').show(); window.location.hash='generalGraphModuleAbsCloseness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsCloseness1_short" onclick="$('#generalGraphModuleAbsCloseness1_short').hide(); $('#generalGraphModuleAbsCloseness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteCloseness({});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsCloseness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsCloseness2


<div class="example-container" id="generalGraphModuleAbsCloseness2_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsCloseness2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsCloseness2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">4</span> 
}
</pre>
<div id="generalGraphModuleAbsCloseness2_container_collapse" onclick="$('#generalGraphModuleAbsCloseness2_long').hide(); $('#generalGraphModuleAbsCloseness2_short').show(); window.location.hash='generalGraphModuleAbsCloseness2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsCloseness2_short" onclick="$('#generalGraphModuleAbsCloseness2_short').hide(); $('#generalGraphModuleAbsCloseness2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsCloseness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsCloseness3


<div class="example-container" id="generalGraphModuleAbsCloseness3_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsCloseness3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsCloseness3_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">'germanCity'</span>,
........&gt; direction : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleAbsCloseness3_container_collapse" onclick="$('#generalGraphModuleAbsCloseness3_long').hide(); $('#generalGraphModuleAbsCloseness3_short').show(); window.location.hash='generalGraphModuleAbsCloseness3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsCloseness3_short" onclick="$('#generalGraphModuleAbsCloseness3_short').hide(); $('#generalGraphModuleAbsCloseness3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteCloseness({}, {<span class="hljs-attr">startVertexCollectionRestriction</span> : <span class="hljs-string">'germanCity'</span>,
........&gt; direction : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsCloseness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCloseness1


<div class="example-container" id="generalGraphModuleCloseness1_container">
<a class="anchorjs-link " href="#generalGraphModuleCloseness1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCloseness1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._closeness();
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleCloseness1_container_collapse" onclick="$('#generalGraphModuleCloseness1_long').hide(); $('#generalGraphModuleCloseness1_short').show(); window.location.hash='generalGraphModuleCloseness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCloseness1_short" onclick="$('#generalGraphModuleCloseness1_short').hide(); $('#generalGraphModuleCloseness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._closeness();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCloseness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCloseness2


<div class="example-container" id="generalGraphModuleCloseness2_container">
<a class="anchorjs-link " href="#generalGraphModuleCloseness2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCloseness2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleCloseness2_container_collapse" onclick="$('#generalGraphModuleCloseness2_long').hide(); $('#generalGraphModuleCloseness2_short').show(); window.location.hash='generalGraphModuleCloseness2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCloseness2_short" onclick="$('#generalGraphModuleCloseness2_short').hide(); $('#generalGraphModuleCloseness2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCloseness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleCloseness3


<div class="example-container" id="generalGraphModuleCloseness3_container">
<a class="anchorjs-link " href="#generalGraphModuleCloseness3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleCloseness3_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">0.5</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">0.3333333333333333</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">0.25</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="generalGraphModuleCloseness3_container_collapse" onclick="$('#generalGraphModuleCloseness3_long').hide(); $('#generalGraphModuleCloseness3_short').show(); window.location.hash='generalGraphModuleCloseness3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleCloseness3_short" onclick="$('#generalGraphModuleCloseness3_short').hide(); $('#generalGraphModuleCloseness3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._closeness({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleCloseness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsBetweenness1


<div class="example-container" id="generalGraphModuleAbsBetweenness1_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsBetweenness1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsBetweenness1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteBetweenness({});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleAbsBetweenness1_container_collapse" onclick="$('#generalGraphModuleAbsBetweenness1_long').hide(); $('#generalGraphModuleAbsBetweenness1_short').show(); window.location.hash='generalGraphModuleAbsBetweenness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleAbsBetweenness1_short" onclick="$('#generalGraphModuleAbsBetweenness1_short').hide(); $('#generalGraphModuleAbsBetweenness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteBetweenness({});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsBetweenness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsBetweenness2


<div class="example-container" id="generalGraphModuleAbsBetweenness2_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsBetweenness2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsBetweenness2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteBetweenness({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsBetweenness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleAbsBetweenness3


<div class="example-container" id="generalGraphModuleAbsBetweenness3_container">
<a class="anchorjs-link " href="#generalGraphModuleAbsBetweenness3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleAbsBetweenness3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._absoluteBetweenness({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
}
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleAbsBetweenness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleBetweenness1


<div class="example-container" id="generalGraphModuleBetweenness1_container">
<a class="anchorjs-link " href="#generalGraphModuleBetweenness1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleBetweenness1_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._betweenness();
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleBetweenness1_container_collapse" onclick="$('#generalGraphModuleBetweenness1_long').hide(); $('#generalGraphModuleBetweenness1_short').show(); window.location.hash='generalGraphModuleBetweenness1_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleBetweenness1_short" onclick="$('#generalGraphModuleBetweenness1_short').hide(); $('#generalGraphModuleBetweenness1_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._betweenness();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleBetweenness1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleBetweenness2


<div class="example-container" id="generalGraphModuleBetweenness2_container">
<a class="anchorjs-link " href="#generalGraphModuleBetweenness2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleBetweenness2_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleBetweenness2_container_collapse" onclick="$('#generalGraphModuleBetweenness2_long').hide(); $('#generalGraphModuleBetweenness2_short').show(); window.location.hash='generalGraphModuleBetweenness2_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleBetweenness2_short" onclick="$('#generalGraphModuleBetweenness2_short').hide(); $('#generalGraphModuleBetweenness2_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleBetweenness2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleBetweenness3


<div class="example-container" id="generalGraphModuleBetweenness3_container">
<a class="anchorjs-link " href="#generalGraphModuleBetweenness3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleBetweenness3_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
{ 
  <span class="hljs-string">"germanCity/Cologne"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Hamburg"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"germanCity/Berlin"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Lyon"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"frenchCity/Paris"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="generalGraphModuleBetweenness3_container_collapse" onclick="$('#generalGraphModuleBetweenness3_long').hide(); $('#generalGraphModuleBetweenness3_short').show(); window.location.hash='generalGraphModuleBetweenness3_container';" class="example_show_button">Hide execution results</div></div>
<div id="generalGraphModuleBetweenness3_short" onclick="$('#generalGraphModuleBetweenness3_short').hide(); $('#generalGraphModuleBetweenness3_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._betweenness({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock generalGraphModuleBetweenness3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleRadius1


<div class="example-container" id="generalGraphModuleRadius1_container">
<a class="anchorjs-link " href="#generalGraphModuleRadius1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleRadius1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._radius();
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleRadius1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleRadius2


<div class="example-container" id="generalGraphModuleRadius2_container">
<a class="anchorjs-link " href="#generalGraphModuleRadius2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleRadius2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._radius({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleRadius2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleRadius3


<div class="example-container" id="generalGraphModuleRadius3_container">
<a class="anchorjs-link " href="#generalGraphModuleRadius3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleRadius3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._radius({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleRadius3


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDiameter1


<div class="example-container" id="generalGraphModuleDiameter1_container">
<a class="anchorjs-link " href="#generalGraphModuleDiameter1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleDiameter1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._diameter();
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleDiameter1


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDiameter2


<div class="example-container" id="generalGraphModuleDiameter2_container">
<a class="anchorjs-link " href="#generalGraphModuleDiameter2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleDiameter2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._diameter({<span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleDiameter2


<!-- filename: /work/ArangoDB/Documentation/Books/Manual/graphs-general-graphs-functions.md -->
    @startDocuBlockInline generalGraphModuleDiameter3


<div class="example-container" id="generalGraphModuleDiameter3_container">
<a class="anchorjs-link " href="#generalGraphModuleDiameter3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="generalGraphModuleDiameter3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; graph._diameter({<span class="hljs-attr">direction</span> : <span class="hljs-string">'outbound'</span>, <span class="hljs-attr">weight</span> : <span class="hljs-string">'distance'</span>});
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock generalGraphModuleDiameter3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-join.md -->
    @startDocuBlockInline joinTuples


<div class="example-container" id="joinTuples_container">
<a class="anchorjs-link " href="#joinTuples_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="joinTuples_long" style="Display: none;">
<strong>Query:</strong>
<pre>
  FOR u IN users
    FILTER u.active == <span class="hljs-literal">true</span>
    LIMIT <span class="hljs-number">0</span>, <span class="hljs-number">4</span>
    FOR f IN relations
      FILTER f.type == @friend &amp;&amp; f.friendOf == u.userId
      RETURN {
        <span class="hljs-string">"user"</span> : u.name,
        <span class="hljs-string">"friendId"</span> : f.thisUser
      }
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">"friend"</span>: <span class="hljs-string">"friend"</span>
}
</pre>
<strong>Query results:</strong>
<pre>
[
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Abigail"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">3</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Abigail"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">2</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Abigail"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">4</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Mary"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">4</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Mary"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">1</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Mariah"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">2</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Mariah"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">1</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Fred"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">2</span>
  },
  {
    <span class="hljs-string">"user"</span>: <span class="hljs-string">"Fred"</span>,
    <span class="hljs-string">"friendId"</span>: <span class="hljs-number">5</span>
  }
]</pre>
<div id="joinTuples_container_collapse" onclick="$('#joinTuples_long').hide(); $('#joinTuples_short').show(); window.location.hash='joinTuples_container';" class="example_show_button">Hide query result</div></div>
<div id="joinTuples_short" onclick="$('#joinTuples_short').hide(); $('#joinTuples_long').show();">
<strong>Query:</strong>
<pre>
  FOR u IN users
    FILTER u.active == <span class="hljs-literal">true</span>
    LIMIT <span class="hljs-number">0</span>, <span class="hljs-number">4</span>
    FOR f IN relations
      FILTER f.type == @friend &amp;&amp; f.friendOf == u.userId
      RETURN {
        <span class="hljs-string">"user"</span> : u.name,
        <span class="hljs-string">"friendId"</span> : f.thisUser
      }
</pre>
<strong>Bind Values:</strong>
<pre>
{
  <span class="hljs-string">"friend"</span>: <span class="hljs-string">"friend"</span>
}
</pre><div class="example_show_button">Show query result</div>
</div>
</div>

    @endDocuBlock joinTuples


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_01_create_graph


<div class="example-container" id="GRAPHSP_01_create_graph_container">
<a class="anchorjs-link " href="#GRAPHSP_01_create_graph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHSP_01_create_graph_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"traversalGraph"</span>);
arangosh&gt; db.circles.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"I"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/I"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K66--F"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"9"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"G"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K66--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"7"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"F"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/F"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K66--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"6"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"A"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K62--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"1"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"E"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K62--H"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"5"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K62--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"3"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/D"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K62--F"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"4"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"J"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K66--H"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"10"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K62--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"2"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"H"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K66--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"8"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"K"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/K"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K66--J"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"11"</span> 
  } 
]
arangosh&gt; db.edges.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7562"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7562"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/D"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7---D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blorg"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7568"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7568"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/F"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7---H"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_schubi"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7577"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7577"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/I"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7C--D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_blub"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7555"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7555"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7---_"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_bar"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7559"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7559"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7---B"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blarg"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7565"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7565"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7---F"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blub"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7583"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7583"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/K"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7C--H"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_zup"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7571"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7571"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7C--_"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_foo"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7580"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7580"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7C--F"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_zip"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7574"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7574"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7K7C--B"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_blob"</span> 
  } 
]
</pre>
<div id="GRAPHSP_01_create_graph_container_collapse" onclick="$('#GRAPHSP_01_create_graph_long').hide(); $('#GRAPHSP_01_create_graph_short').show(); window.location.hash='GRAPHSP_01_create_graph_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHSP_01_create_graph_short" onclick="$('#GRAPHSP_01_create_graph_short').hide(); $('#GRAPHSP_01_create_graph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"traversalGraph"</span>);
arangosh&gt; db.circles.toArray();
arangosh&gt; db.edges.toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHSP_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_02_A_to_D


<div class="example-container" id="GRAPHSP_02_A_to_D_container">
<a class="anchorjs-link " href="#GRAPHSP_02_A_to_D_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHSP_02_A_to_D_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e IN OUTBOUND SHORTEST_PATH 'circles/A' TO 'circles/D' GRAPH 'traversalGraph' RETURN [v._key, e._key]"</span>);
[ 
  [ 
    <span class="hljs-string">"A"</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"7555"</span> 
  ], 
  [ 
    <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"7559"</span> 
  ], 
  [ 
    <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"7562"</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e IN OUTBOUND SHORTEST_PATH 'circles/A' TO 'circles/D' edges RETURN [v._key, e._key]"</span>);
[ 
  [ 
    <span class="hljs-string">"A"</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"7555"</span> 
  ], 
  [ 
    <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"7559"</span> 
  ], 
  [ 
    <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"7562"</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHSP_02_A_to_D_container_collapse" onclick="$('#GRAPHSP_02_A_to_D_long').hide(); $('#GRAPHSP_02_A_to_D_short').show(); window.location.hash='GRAPHSP_02_A_to_D_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHSP_02_A_to_D_short" onclick="$('#GRAPHSP_02_A_to_D_short').hide(); $('#GRAPHSP_02_A_to_D_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e IN OUTBOUND SHORTEST_PATH 'circles/A' TO 'circles/D' GRAPH 'traversalGraph' RETURN [v._key, e._key]"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e IN OUTBOUND SHORTEST_PATH 'circles/A' TO 'circles/D' edges RETURN [v._key, e._key]"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHSP_02_A_to_D


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_03_A_to_D


<div class="example-container" id="GRAPHSP_03_A_to_D_container">
<a class="anchorjs-link " href="#GRAPHSP_03_A_to_D_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHSP_03_A_to_D_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR a IN circles FILTER a._key == 'A' FOR d IN circles FILTER d._key == 'D' FOR v, e IN OUTBOUND SHORTEST_PATH a TO d GRAPH 'traversalGraph' RETURN [v._key, e._key]"</span>);
[ 
  [ 
    <span class="hljs-string">"A"</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"7555"</span> 
  ], 
  [ 
    <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"7559"</span> 
  ], 
  [ 
    <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"7562"</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR a IN circles FILTER a._key == 'A' FOR d IN circles FILTER d._key == 'D' FOR v, e IN OUTBOUND SHORTEST_PATH a TO d edges RETURN [v._key, e._key]"</span>);
[ 
  [ 
    <span class="hljs-string">"A"</span>, 
    <span class="hljs-literal">null</span> 
  ], 
  [ 
    <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"7555"</span> 
  ], 
  [ 
    <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"7559"</span> 
  ], 
  [ 
    <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"7562"</span> 
  ] 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHSP_03_A_to_D_container_collapse" onclick="$('#GRAPHSP_03_A_to_D_long').hide(); $('#GRAPHSP_03_A_to_D_short').show(); window.location.hash='GRAPHSP_03_A_to_D_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHSP_03_A_to_D_short" onclick="$('#GRAPHSP_03_A_to_D_short').hide(); $('#GRAPHSP_03_A_to_D_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR a IN circles FILTER a._key == 'A' FOR d IN circles FILTER d._key == 'D' FOR v, e IN OUTBOUND SHORTEST_PATH a TO d GRAPH 'traversalGraph' RETURN [v._key, e._key]"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR a IN circles FILTER a._key == 'A' FOR d IN circles FILTER d._key == 'D' FOR v, e IN OUTBOUND SHORTEST_PATH a TO d edges RETURN [v._key, e._key]"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHSP_03_A_to_D


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-shortest-path.md -->
    @startDocuBlockInline GRAPHSP_99_drop_graph


<div class="example-container" id="GRAPHSP_99_drop_graph_container">
<a class="anchorjs-link " href="#GRAPHSP_99_drop_graph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHSP_99_drop_graph_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">"traversalGraph"</span>);
<span class="hljs-literal">true</span>
</pre>
</div>
</div>

    @endDocuBlock GRAPHSP_99_drop_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_01_create_graph


<div class="example-container" id="GRAPHTRAV_01_create_graph_container">
<a class="anchorjs-link " href="#GRAPHTRAV_01_create_graph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_01_create_graph_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"traversalGraph"</span>);
arangosh&gt; db.circles.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"I"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/I"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-W--J"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"9"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"G"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-W--F"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"7"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"F"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/F"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-W--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"6"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"A"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-S--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"1"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"E"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-W--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"5"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"C"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-S--D"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"3"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"D"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/D"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-W--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"4"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"J"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-a--_"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"10"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"B"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-S--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"2"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"H"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-W--H"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"8"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"K"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"circles/K"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-a--B"</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"11"</span> 
  } 
]
arangosh&gt; db.edges.toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7670"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7670"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/I"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-e--F"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_blub"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7658"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7658"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-a--J"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blub"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7673"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7673"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-e--H"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_zip"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7667"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7667"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/H"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-e--D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_blob"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7676"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7676"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/J"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/K"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-e--J"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_zup"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7652"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7652"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-a--F"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blarg"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7661"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7661"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/E"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/F"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-e--_"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_schubi"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7648"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7648"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/B"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-a--D"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_bar"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7655"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7655"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/C"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/D"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-a--H"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"left_blorg"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7664"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7664"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"circles/A"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"circles/G"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L-e--B"</span>, 
    <span class="hljs-string">"theFalse"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"theTruth"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"label"</span> : <span class="hljs-string">"right_foo"</span> 
  } 
]
</pre>
<div id="GRAPHTRAV_01_create_graph_container_collapse" onclick="$('#GRAPHTRAV_01_create_graph_long').hide(); $('#GRAPHTRAV_01_create_graph_short').show(); window.location.hash='GRAPHTRAV_01_create_graph_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_01_create_graph_short" onclick="$('#GRAPHTRAV_01_create_graph_short').hide(); $('#GRAPHTRAV_01_create_graph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> graph = examples.loadGraph(<span class="hljs-string">"traversalGraph"</span>);
arangosh&gt; db.circles.toArray();
arangosh&gt; db.edges.toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_02_traverse_all


<div class="example-container" id="GRAPHTRAV_02_traverse_all_container">
<a class="anchorjs-link " href="#GRAPHTRAV_02_traverse_all_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_02_traverse_all_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' RETURN v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span>, 
  <span class="hljs-string">"E"</span>, 
  <span class="hljs-string">"F"</span>, 
  <span class="hljs-string">"G"</span>, 
  <span class="hljs-string">"H"</span>, 
  <span class="hljs-string">"I"</span>, 
  <span class="hljs-string">"J"</span>, 
  <span class="hljs-string">"K"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 OUTBOUND 'circles/A' edges RETURN v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span>, 
  <span class="hljs-string">"E"</span>, 
  <span class="hljs-string">"F"</span>, 
  <span class="hljs-string">"G"</span>, 
  <span class="hljs-string">"H"</span>, 
  <span class="hljs-string">"I"</span>, 
  <span class="hljs-string">"J"</span>, 
  <span class="hljs-string">"K"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHTRAV_02_traverse_all_container_collapse" onclick="$('#GRAPHTRAV_02_traverse_all_long').hide(); $('#GRAPHTRAV_02_traverse_all_short').show(); window.location.hash='GRAPHTRAV_02_traverse_all_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_02_traverse_all_short" onclick="$('#GRAPHTRAV_02_traverse_all_short').hide(); $('#GRAPHTRAV_02_traverse_all_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' RETURN v._key"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 OUTBOUND 'circles/A' edges RETURN v._key"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_02_traverse_all


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_03_traverse_3


<div class="example-container" id="GRAPHTRAV_03_traverse_3_container">
<a class="anchorjs-link " href="#GRAPHTRAV_03_traverse_3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_03_traverse_3_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 2..2 OUTBOUND 'circles/A' GRAPH 'traversalGraph' return v._key"</span>);
[ 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"E"</span>, 
  <span class="hljs-string">"H"</span>, 
  <span class="hljs-string">"J"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 2 OUTBOUND 'circles/A' GRAPH 'traversalGraph' return v._key"</span>);
[ 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"E"</span>, 
  <span class="hljs-string">"H"</span>, 
  <span class="hljs-string">"J"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHTRAV_03_traverse_3_container_collapse" onclick="$('#GRAPHTRAV_03_traverse_3_long').hide(); $('#GRAPHTRAV_03_traverse_3_short').show(); window.location.hash='GRAPHTRAV_03_traverse_3_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_03_traverse_3_short" onclick="$('#GRAPHTRAV_03_traverse_3_short').hide(); $('#GRAPHTRAV_03_traverse_3_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 2..2 OUTBOUND 'circles/A' GRAPH 'traversalGraph' return v._key"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 2 OUTBOUND 'circles/A' GRAPH 'traversalGraph' return v._key"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_03_traverse_3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_04_traverse_4


<div class="example-container" id="GRAPHTRAV_04_traverse_4_container">
<a class="anchorjs-link " href="#GRAPHTRAV_04_traverse_4_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_04_traverse_4_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e, p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.vertices[1]._key != 'G' RETURN v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span>, 
  <span class="hljs-string">"E"</span>, 
  <span class="hljs-string">"F"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e, p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.edges[0].label != 'right_foo' RETURN v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span>, 
  <span class="hljs-string">"E"</span>, 
  <span class="hljs-string">"F"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHTRAV_04_traverse_4_container_collapse" onclick="$('#GRAPHTRAV_04_traverse_4_long').hide(); $('#GRAPHTRAV_04_traverse_4_short').show(); window.location.hash='GRAPHTRAV_04_traverse_4_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_04_traverse_4_short" onclick="$('#GRAPHTRAV_04_traverse_4_short').hide(); $('#GRAPHTRAV_04_traverse_4_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e, p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.vertices[1]._key != 'G' RETURN v._key"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v, e, p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.edges[0].label != 'right_foo' RETURN v._key"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_04_traverse_4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_05_traverse_5


<div class="example-container" id="GRAPHTRAV_05_traverse_5_container">
<a class="anchorjs-link " href="#GRAPHTRAV_05_traverse_5_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_05_traverse_5_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v,e,p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.vertices[1]._key != 'G' FILTER p.edges[1].label != 'left_blub' return v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v,e,p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.vertices[1]._key != 'G' AND    p.edges[1].label != 'left_blub' return v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHTRAV_05_traverse_5_container_collapse" onclick="$('#GRAPHTRAV_05_traverse_5_long').hide(); $('#GRAPHTRAV_05_traverse_5_short').show(); window.location.hash='GRAPHTRAV_05_traverse_5_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_05_traverse_5_short" onclick="$('#GRAPHTRAV_05_traverse_5_short').hide(); $('#GRAPHTRAV_05_traverse_5_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v,e,p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.vertices[1]._key != 'G' FILTER p.edges[1].label != 'left_blub' return v._key"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v,e,p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph' FILTER p.vertices[1]._key != 'G' AND    p.edges[1].label != 'left_blub' return v._key"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_05_traverse_5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_06_traverse_reverse_6


<div class="example-container" id="GRAPHTRAV_06_traverse_reverse_6_container">
<a class="anchorjs-link " href="#GRAPHTRAV_06_traverse_reverse_6_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_06_traverse_reverse_6_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 OUTBOUND 'circles/E' GRAPH 'traversalGraph' return v._key"</span>);
[ 
  <span class="hljs-string">"F"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 INBOUND 'circles/E' GRAPH 'traversalGraph' return v._key"</span>);
[ 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"A"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 ANY 'circles/E' GRAPH 'traversalGraph' return v._key"</span>);
[ 
  <span class="hljs-string">"F"</span>, 
  <span class="hljs-string">"B"</span>, 
  <span class="hljs-string">"C"</span>, 
  <span class="hljs-string">"D"</span>, 
  <span class="hljs-string">"A"</span>, 
  <span class="hljs-string">"G"</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="GRAPHTRAV_06_traverse_reverse_6_container_collapse" onclick="$('#GRAPHTRAV_06_traverse_reverse_6_long').hide(); $('#GRAPHTRAV_06_traverse_reverse_6_short').show(); window.location.hash='GRAPHTRAV_06_traverse_reverse_6_container';" class="example_show_button">Hide execution results</div></div>
<div id="GRAPHTRAV_06_traverse_reverse_6_short" onclick="$('#GRAPHTRAV_06_traverse_reverse_6_short').hide(); $('#GRAPHTRAV_06_traverse_reverse_6_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 OUTBOUND 'circles/E' GRAPH 'traversalGraph' return v._key"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 INBOUND 'circles/E' GRAPH 'traversalGraph' return v._key"</span>);
arangosh&gt; db._query(<span class="hljs-string">"FOR v IN 1..3 ANY 'circles/E' GRAPH 'traversalGraph' return v._key"</span>);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_06_traverse_reverse_6


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_07_traverse_7


<div class="example-container" id="GRAPHTRAV_07_traverse_7_container">
<a class="anchorjs-link " href="#GRAPHTRAV_07_traverse_7_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_07_traverse_7_long" style="Display: none;">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">'circles/A'</span> GRAPH <span class="hljs-string">'traversalGraph'</span>
    LET localScopeVar = RAND() &gt; <span class="hljs-number">0.5</span>
    FILTER p.edges[<span class="hljs-number">0</span>].theTruth != localScopeVar
  RETURN v._key

</pre>
<strong>Explain output:</strong>
<pre>
Query string:
   FOR v,e,p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph'
     LET localScopeVar = RAND() &gt; 0.5
     FILTER p.edges[0].theTruth != localScopeVar
   RETURN v._key
 

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  2   TraversalNode        1     - FOR v  /* vertex */, p  /* paths */ IN 1..3  /* min..maxPathDepth */ OUTBOUND 'circles/A' /* startnode */  GRAPH 'traversalGraph'
  3   CalculationNode      1     - LET localScopeVar = (RAND() &gt; 0.5)   /* simple expression */
  4   CalculationNode      1     - LET #6 = (p.`edges`[0].`theTruth` != localScopeVar)   /* simple expression */
  5   FilterNode           1     - FILTER #6
  6   CalculationNode      1     - LET #8 = v.`_key`   /* attribute expression */
  7   ReturnNode           1     - RETURN #8

Indexes used:
 By   Type   Collection   Unique   Sparse   Selectivity   Fields               Ranges
  2   edge   edges        false    false        85.00 %   [ `_from`, `_to` ]   base OUTBOUND

Traversals on graphs:
 Id   Depth   Vertex collections   Edge collections   Options                                   Filter conditions
  2   1..3    circles              edges              uniqueVertices: none, uniqueEdges: path   

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   optimize-traversals
  3   move-calculations-down

</pre>
<div id="GRAPHTRAV_07_traverse_7_container_collapse" onclick="$('#GRAPHTRAV_07_traverse_7_long').hide(); $('#GRAPHTRAV_07_traverse_7_short').show(); window.location.hash='GRAPHTRAV_07_traverse_7_container';" class="example_show_button">Hide explain output</div></div>
<div id="GRAPHTRAV_07_traverse_7_short" onclick="$('#GRAPHTRAV_07_traverse_7_short').hide(); $('#GRAPHTRAV_07_traverse_7_long').show();">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">'circles/A'</span> GRAPH <span class="hljs-string">'traversalGraph'</span>
    LET localScopeVar = RAND() &gt; <span class="hljs-number">0.5</span>
    FILTER p.edges[<span class="hljs-number">0</span>].theTruth != localScopeVar
  RETURN v._key

</pre><div class="example_show_button">Show explain output</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_07_traverse_7


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_07_traverse_8


<div class="example-container" id="GRAPHTRAV_07_traverse_8_container">
<a class="anchorjs-link " href="#GRAPHTRAV_07_traverse_8_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_07_traverse_8_long" style="Display: none;">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">'circles/A'</span> GRAPH <span class="hljs-string">'traversalGraph'</span>
  FILTER p.edges[<span class="hljs-number">0</span>].label == <span class="hljs-string">'right_foo'</span>
  RETURN v._key

</pre>
<strong>Explain output:</strong>
<pre>
Query string:
   FOR v,e,p IN 1..3 OUTBOUND 'circles/A' GRAPH 'traversalGraph'
   FILTER p.edges[0].label == 'right_foo'
   RETURN v._key
 

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  2   TraversalNode        1     - FOR v  /* vertex */ IN 1..3  /* min..maxPathDepth */ OUTBOUND 'circles/A' /* startnode */  GRAPH 'traversalGraph'
  5   CalculationNode      1     - LET #7 = v.`_key`   /* attribute expression */
  6   ReturnNode           1     - RETURN #7

Indexes used:
 By   Type   Collection   Unique   Sparse   Selectivity   Fields               Ranges
  2   edge   edges        false    false        85.00 %   [ `_from`, `_to` ]   base OUTBOUND
  2   edge   edges        false    false        85.00 %   [ `_from`, `_to` ]   level 0 OUTBOUND

Traversals on graphs:
 Id   Depth   Vertex collections   Edge collections   Options                                   Filter conditions
  2   1..3    circles              edges              uniqueVertices: none, uniqueEdges: path   (p.`edges`[0].`label` == "right_foo")

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   move-filters-up
  3   move-calculations-up-2
  4   move-filters-up-2
  5   optimize-traversals
  6   remove-filter-covered-by-traversal
  7   remove-unnecessary-calculations-2
  8   remove-redundant-path-var

</pre>
<div id="GRAPHTRAV_07_traverse_8_container_collapse" onclick="$('#GRAPHTRAV_07_traverse_8_long').hide(); $('#GRAPHTRAV_07_traverse_8_short').show(); window.location.hash='GRAPHTRAV_07_traverse_8_container';" class="example_show_button">Hide explain output</div></div>
<div id="GRAPHTRAV_07_traverse_8_short" onclick="$('#GRAPHTRAV_07_traverse_8_short').hide(); $('#GRAPHTRAV_07_traverse_8_long').show();">
<strong>Explain Query:</strong>
<pre>
  FOR v,e,p IN <span class="hljs-number">1.</span><span class="hljs-number">.3</span> OUTBOUND <span class="hljs-string">'circles/A'</span> GRAPH <span class="hljs-string">'traversalGraph'</span>
  FILTER p.edges[<span class="hljs-number">0</span>].label == <span class="hljs-string">'right_foo'</span>
  RETURN v._key

</pre><div class="example_show_button">Show explain output</div>
</div>
</div>

    @endDocuBlock GRAPHTRAV_07_traverse_8


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/graphs-traversals.md -->
    @startDocuBlockInline GRAPHTRAV_99_drop_graph


<div class="example-container" id="GRAPHTRAV_99_drop_graph_container">
<a class="anchorjs-link " href="#GRAPHTRAV_99_drop_graph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="GRAPHTRAV_99_drop_graph_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; examples.dropGraph(<span class="hljs-string">"traversalGraph"</span>);
</pre>
</div>
</div>

    @endDocuBlock GRAPHTRAV_99_drop_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-parsing-queries.md -->
    @startDocuBlockInline 11_workWithAQL_parseQueries


<div class="example-container" id="11_workWithAQL_parseQueries_container">
<a class="anchorjs-link " href="#11_workWithAQL_parseQueries_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="11_workWithAQL_parseQueries_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">"FOR doc IN @@collection FILTER doc.foo == @bar RETURN doc"</span>);
arangosh&gt; stmt.parse();
{ 
  <span class="hljs-string">"bindVars"</span> : [ 
    <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"@collection"</span> 
  ], 
  <span class="hljs-string">"collections"</span> : [ ], 
  <span class="hljs-string">"ast"</span> : [ 
    { 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"root"</span>, 
      <span class="hljs-string">"subNodes"</span> : [ 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"for"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"variable"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"parameter"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"@collection"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"filter"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"foo"</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span>, 
                      <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                    } 
                  ] 
                }, 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"parameter"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"bar"</span> 
                } 
              ] 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"return"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        } 
      ] 
    } 
  ] 
}
</pre>
<div id="11_workWithAQL_parseQueries_container_collapse" onclick="$('#11_workWithAQL_parseQueries_long').hide(); $('#11_workWithAQL_parseQueries_short').show(); window.location.hash='11_workWithAQL_parseQueries_container';" class="example_show_button">Hide execution results</div></div>
<div id="11_workWithAQL_parseQueries_short" onclick="$('#11_workWithAQL_parseQueries_short').hide(); $('#11_workWithAQL_parseQueries_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">"FOR doc IN @@collection FILTER doc.foo == @bar RETURN doc"</span>);
arangosh&gt; stmt.parse();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 11_workWithAQL_parseQueries


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 01_workWithAQL_all


<div class="example-container" id="01_workWithAQL_all_container">
<a class="anchorjs-link " href="#01_workWithAQL_all_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="01_workWithAQL_all_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"mycollection"</span>)
[ArangoCollection <span class="hljs-number">6618</span>, <span class="hljs-string">"mycollection"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; db.mycollection.save({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"testKey"</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> })
{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"mycollection/testKey"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"testKey"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kb6--_"</span> 
}
arangosh&gt; db._query(<span class="hljs-string">'FOR my IN mycollection RETURN my._key'</span>).toArray()
[ 
  <span class="hljs-string">"testKey"</span> 
]
</pre>
<div id="01_workWithAQL_all_container_collapse" onclick="$('#01_workWithAQL_all_long').hide(); $('#01_workWithAQL_all_short').show(); window.location.hash='01_workWithAQL_all_container';" class="example_show_button">Hide execution results</div></div>
<div id="01_workWithAQL_all_short" onclick="$('#01_workWithAQL_all_short').hide(); $('#01_workWithAQL_all_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"mycollection"</span>)
arangosh&gt; db.mycollection.save({ <span class="hljs-attr">_key</span>: <span class="hljs-string">"testKey"</span>, <span class="hljs-attr">Hello</span> : <span class="hljs-string">"World"</span> })
arangosh&gt; db._query(<span class="hljs-string">'FOR my IN mycollection RETURN my._key'</span>).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 01_workWithAQL_all


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_bindValues


<div class="example-container" id="02_workWithAQL_bindValues_container">
<a class="anchorjs-link " href="#02_workWithAQL_bindValues_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="02_workWithAQL_bindValues_long">
<pre>
arangosh&gt; db._query(
........&gt; <span class="hljs-string">'FOR c IN @@collection FILTER c._key == @key RETURN c._key'</span>, {
........&gt;   <span class="hljs-string">'@collection'</span>: <span class="hljs-string">'mycollection'</span>, 
........&gt;   <span class="hljs-string">'key'</span>: <span class="hljs-string">'testKey'</span>
........&gt; }).toArray();
[ 
  <span class="hljs-string">"testKey"</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 02_workWithAQL_bindValues


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_aqlQuery


<div class="example-container" id="02_workWithAQL_aqlQuery_container">
<a class="anchorjs-link " href="#02_workWithAQL_aqlQuery_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="02_workWithAQL_aqlQuery_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> key = <span class="hljs-string">'testKey'</span>;
arangosh&gt; db._query(
........&gt; aql<span class="hljs-string">`FOR c IN mycollection FILTER c._key == <span class="hljs-subst">${key}</span> RETURN c._key`</span>
........&gt; ).toArray();
[ 
  <span class="hljs-string">"testKey"</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 02_workWithAQL_aqlQuery


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_aqlCollectionQuery


<div class="example-container" id="02_workWithAQL_aqlCollectionQuery_container">
<a class="anchorjs-link " href="#02_workWithAQL_aqlCollectionQuery_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="02_workWithAQL_aqlCollectionQuery_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> key = <span class="hljs-string">'testKey'</span>;
arangosh&gt; db._query(aql<span class="hljs-string">`FOR doc IN <span class="hljs-subst">${ db.mycollection }</span> RETURN doc`</span>
........&gt; ).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"testKey"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"mycollection/testKey"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kb6--_"</span>, 
    <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> 
  } 
]
</pre>
<div id="02_workWithAQL_aqlCollectionQuery_container_collapse" onclick="$('#02_workWithAQL_aqlCollectionQuery_long').hide(); $('#02_workWithAQL_aqlCollectionQuery_short').show(); window.location.hash='02_workWithAQL_aqlCollectionQuery_container';" class="example_show_button">Hide execution results</div></div>
<div id="02_workWithAQL_aqlCollectionQuery_short" onclick="$('#02_workWithAQL_aqlCollectionQuery_short').hide(); $('#02_workWithAQL_aqlCollectionQuery_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> key = <span class="hljs-string">'testKey'</span>;
arangosh&gt; db._query(aql<span class="hljs-string">`FOR doc IN <span class="hljs-subst">${ db.mycollection }</span> RETURN doc`</span>
........&gt; ).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 02_workWithAQL_aqlCollectionQuery


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 03_workWithAQL_getExtra


<div class="example-container" id="03_workWithAQL_getExtra_container">
<a class="anchorjs-link " href="#03_workWithAQL_getExtra_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="03_workWithAQL_getExtra_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR i IN 1..100
........&gt;             INSERT { _key: CONCAT('test', TO_STRING(i)) }
........&gt;                INTO mycollection`</span>
........&gt; ).getExtra();
{ 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.0007762908935546875</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ] 
}
</pre>
<div id="03_workWithAQL_getExtra_container_collapse" onclick="$('#03_workWithAQL_getExtra_long').hide(); $('#03_workWithAQL_getExtra_short').show(); window.location.hash='03_workWithAQL_getExtra_container';" class="example_show_button">Hide execution results</div></div>
<div id="03_workWithAQL_getExtra_short" onclick="$('#03_workWithAQL_getExtra_short').hide(); $('#03_workWithAQL_getExtra_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR i IN 1..100
........&gt;             INSERT { _key: CONCAT('test', TO_STRING(i)) }
........&gt;                INTO mycollection`</span>
........&gt; ).getExtra();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 03_workWithAQL_getExtra


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 02_workWithAQL_memoryLimit


<div class="example-container" id="02_workWithAQL_memoryLimit_container">
<a class="anchorjs-link " href="#02_workWithAQL_memoryLimit_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="02_workWithAQL_memoryLimit_long">
<pre>
arangosh&gt; db._query(
........&gt; <span class="hljs-string">'FOR i IN 1..100000 SORT i RETURN i'</span>, {}, {
........&gt;   memoryLimit: <span class="hljs-number">100000</span>
........&gt; }).toArray();
[ArangoError <span class="hljs-number">32</span>: AQL: query would use more memory than allowed (<span class="hljs-keyword">while</span> executing)]
</pre>
</div>
</div>

    @endDocuBlock 02_workWithAQL_memoryLimit


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 04_workWithAQL_statements1


<div class="example-container" id="04_workWithAQL_statements1_container">
<a class="anchorjs-link " href="#04_workWithAQL_statements1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="04_workWithAQL_statements1_long">
<pre>
arangosh&gt; stmt = db._createStatement( {
........&gt; <span class="hljs-string">"query"</span>: <span class="hljs-string">"FOR i IN [ 1, 2 ] RETURN i * 2"</span> } );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 04_workWithAQL_statements1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements2


<div class="example-container" id="05_workWithAQL_statements2_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements2_long" style="Display: none;">
<pre>
arangosh&gt; c = stmt.execute();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="05_workWithAQL_statements2_container_collapse" onclick="$('#05_workWithAQL_statements2_long').hide(); $('#05_workWithAQL_statements2_short').show(); window.location.hash='05_workWithAQL_statements2_container';" class="example_show_button">Hide execution results</div></div>
<div id="05_workWithAQL_statements2_short" onclick="$('#05_workWithAQL_statements2_short').hide(); $('#05_workWithAQL_statements2_long').show();">
<pre>
arangosh&gt; c = stmt.execute();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements3


<div class="example-container" id="05_workWithAQL_statements3_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements3_long">
<pre>
arangosh&gt; c.toArray();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements4


<div class="example-container" id="05_workWithAQL_statements4_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements4_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements4_long">
<pre>
arangosh&gt; <span class="hljs-keyword">while</span> (c.hasNext()) { <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).print(c.next()); }
<span class="hljs-number">2</span>
<span class="hljs-number">4</span>
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements4


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements5


<div class="example-container" id="05_workWithAQL_statements5_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements5_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements5_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement( {
........&gt; <span class="hljs-string">"query"</span>: <span class="hljs-string">"FOR i IN [ @one, @two ] RETURN i * 2"</span> } );
arangosh&gt; stmt.bind(<span class="hljs-string">"one"</span>, <span class="hljs-number">1</span>);
arangosh&gt; stmt.bind(<span class="hljs-string">"two"</span>, <span class="hljs-number">2</span>);
arangosh&gt; c = stmt.execute();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
[object ArangoQueryCursor, <span class="hljs-attr">count</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">cached</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">hasMore</span>: <span class="hljs-literal">false</span>]
</pre>
<div id="05_workWithAQL_statements5_container_collapse" onclick="$('#05_workWithAQL_statements5_long').hide(); $('#05_workWithAQL_statements5_short').show(); window.location.hash='05_workWithAQL_statements5_container';" class="example_show_button">Hide execution results</div></div>
<div id="05_workWithAQL_statements5_short" onclick="$('#05_workWithAQL_statements5_short').hide(); $('#05_workWithAQL_statements5_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement( {
........&gt; <span class="hljs-string">"query"</span>: <span class="hljs-string">"FOR i IN [ @one, @two ] RETURN i * 2"</span> } );
arangosh&gt; stmt.bind(<span class="hljs-string">"one"</span>, <span class="hljs-number">1</span>);
arangosh&gt; stmt.bind(<span class="hljs-string">"two"</span>, <span class="hljs-number">2</span>);
arangosh&gt; c = stmt.execute();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements5


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements6


<div class="example-container" id="05_workWithAQL_statements6_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements6_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements6_long">
<pre>
arangosh&gt; c.toArray();
[ 
  <span class="hljs-number">2</span>, 
  <span class="hljs-number">4</span> 
]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements6


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements7


<div class="example-container" id="05_workWithAQL_statements7_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements7_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements7_long">
<pre>
arangosh&gt; <span class="hljs-keyword">while</span> (c.hasNext()) { <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb"</span>).print(c.next()); }
<span class="hljs-number">2</span>
<span class="hljs-number">4</span>
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements7


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements8


<div class="example-container" id="05_workWithAQL_statements8_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements8_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements8_long">
<pre>
arangosh&gt; stmt = db._createStatement( { 
........&gt;  <span class="hljs-string">"query"</span>: <span class="hljs-string">"FOR i IN [ @one, @two ] RETURN i * 2"</span>, 
........&gt;  <span class="hljs-string">"bindVars"</span>: { 
........&gt;    <span class="hljs-string">"one"</span>: <span class="hljs-number">1</span>, 
........&gt;    <span class="hljs-string">"two"</span>: <span class="hljs-number">2</span> 
........&gt;  } 
........&gt; } );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements8


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements9


<div class="example-container" id="05_workWithAQL_statements9_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements9_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements9_long">
<pre>
arangosh&gt; stmt = db._createStatement( {
........&gt; <span class="hljs-string">"query"</span>: <span class="hljs-string">"FOR i IN [ 1, 2, 3, 4 ] RETURN i"</span>,
........&gt; <span class="hljs-string">"count"</span>: <span class="hljs-literal">true</span> } );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements9


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 05_workWithAQL_statements10


<div class="example-container" id="05_workWithAQL_statements10_container">
<a class="anchorjs-link " href="#05_workWithAQL_statements10_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="05_workWithAQL_statements10_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> c = stmt.execute();
arangosh&gt; c.count();
<span class="hljs-number">4</span>
</pre>
</div>
</div>

    @endDocuBlock 05_workWithAQL_statements10


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 06_workWithAQL_statements11


<div class="example-container" id="06_workWithAQL_statements11_container">
<a class="anchorjs-link " href="#06_workWithAQL_statements11_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="06_workWithAQL_statements11_long">
<pre>
arangosh&gt; stmt = db._createStatement( {
........&gt; <span class="hljs-string">"query"</span>: <span class="hljs-string">"FOR i IN [ 1, 2, 3, 4 ] RETURN i"</span>,
........&gt; options: {<span class="hljs-string">"profile"</span>: <span class="hljs-literal">true</span>}} );
[object ArangoStatement]
</pre>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statements11


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/invocation-with-arangosh.md -->
    @startDocuBlockInline 06_workWithAQL_statements12


<div class="example-container" id="06_workWithAQL_statements12_container">
<a class="anchorjs-link " href="#06_workWithAQL_statements12_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="06_workWithAQL_statements12_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> c = stmt.execute();
arangosh&gt; c.getExtra();
{ 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00010418891906738281</span> 
  }, 
  <span class="hljs-string">"profile"</span> : { 
    <span class="hljs-string">"initializing"</span> : <span class="hljs-number">0.0000019073486328125</span>, 
    <span class="hljs-string">"parsing"</span> : <span class="hljs-number">0.000024080276489257812</span>, 
    <span class="hljs-string">"optimizing ast"</span> : <span class="hljs-number">0.00000286102294921875</span>, 
    <span class="hljs-string">"loading collections"</span> : <span class="hljs-number">0.0000021457672119140625</span>, 
    <span class="hljs-string">"instantiating plan"</span> : <span class="hljs-number">0.000010251998901367188</span>, 
    <span class="hljs-string">"optimizing plan"</span> : <span class="hljs-number">0.000025033950805664062</span>, 
    <span class="hljs-string">"executing"</span> : <span class="hljs-number">0.00002193450927734375</span>, 
    <span class="hljs-string">"finalizing"</span> : <span class="hljs-number">0.000009775161743164062</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ] 
}
</pre>
<div id="06_workWithAQL_statements12_container_collapse" onclick="$('#06_workWithAQL_statements12_long').hide(); $('#06_workWithAQL_statements12_short').show(); window.location.hash='06_workWithAQL_statements12_container';" class="example_show_button">Hide execution results</div></div>
<div id="06_workWithAQL_statements12_short" onclick="$('#06_workWithAQL_statements12_short').hide(); $('#06_workWithAQL_statements12_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> c = stmt.execute();
arangosh&gt; c.getExtra();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statements12


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 07_workWithAQL_statementsExplain


<div class="example-container" id="07_workWithAQL_statementsExplain_container">
<a class="anchorjs-link " href="#07_workWithAQL_statementsExplain_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="07_workWithAQL_statementsExplain_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">"FOR user IN _users RETURN user"</span>);
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateCollectionNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"random"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">4</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="07_workWithAQL_statementsExplain_container_collapse" onclick="$('#07_workWithAQL_statementsExplain_long').hide(); $('#07_workWithAQL_statementsExplain_short').show(); window.location.hash='07_workWithAQL_statementsExplain_container';" class="example_show_button">Hide execution results</div></div>
<div id="07_workWithAQL_statementsExplain_short" onclick="$('#07_workWithAQL_statementsExplain_short').hide(); $('#07_workWithAQL_statementsExplain_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">"FOR user IN _users RETURN user"</span>);
arangosh&gt; stmt.explain();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 07_workWithAQL_statementsExplain


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 08_workWithAQL_statementsPlans


<div class="example-container" id="08_workWithAQL_statementsPlans_container">
<a class="anchorjs-link " href="#08_workWithAQL_statementsPlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="08_workWithAQL_statementsPlans_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> formatPlan = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">plan</span>) </span>{
........&gt;    <span class="hljs-keyword">return</span> { <span class="hljs-attr">estimatedCost</span>: plan.estimatedCost,
........&gt;        nodes: plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>) </span>{
........&gt; <span class="hljs-keyword">return</span> node.type; }) }; };
arangosh&gt; formatPlan(stmt.explain().plan);
{ 
  <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"nodes"</span> : [ 
    <span class="hljs-string">"SingletonNode"</span>, 
    <span class="hljs-string">"EnumerateCollectionNode"</span>, 
    <span class="hljs-string">"ReturnNode"</span> 
  ] 
}
</pre>
<div id="08_workWithAQL_statementsPlans_container_collapse" onclick="$('#08_workWithAQL_statementsPlans_long').hide(); $('#08_workWithAQL_statementsPlans_short').show(); window.location.hash='08_workWithAQL_statementsPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="08_workWithAQL_statementsPlans_short" onclick="$('#08_workWithAQL_statementsPlans_short').hide(); $('#08_workWithAQL_statementsPlans_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> formatPlan = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">plan</span>) </span>{
........&gt;    <span class="hljs-keyword">return</span> { <span class="hljs-attr">estimatedCost</span>: plan.estimatedCost,
........&gt;        nodes: plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">node</span>) </span>{
........&gt; <span class="hljs-keyword">return</span> node.type; }) }; };
arangosh&gt; formatPlan(stmt.explain().plan);
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 08_workWithAQL_statementsPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 09_workWithAQL_statementsPlansBind


<div class="example-container" id="09_workWithAQL_statementsPlansBind_container">
<a class="anchorjs-link " href="#09_workWithAQL_statementsPlansBind_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="09_workWithAQL_statementsPlansBind_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">`FOR doc IN @@collection FILTER doc.user == @user RETURN doc`</span>
........&gt; );
arangosh&gt; stmt.bind({ <span class="hljs-string">"@collection"</span> : <span class="hljs-string">"_users"</span>, <span class="hljs-string">"user"</span> : <span class="hljs-string">"root"</span> });
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1.95</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"9"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"user"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"condition"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span>, 
                      <span class="hljs-string">"subNodes"</span> : [ 
                        { 
                          <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                          <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span>, 
                          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"value"</span> : <span class="hljs-string">"root"</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2.95</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"use-indexes"</span>, 
      <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"doc"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2.95</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="09_workWithAQL_statementsPlansBind_container_collapse" onclick="$('#09_workWithAQL_statementsPlansBind_long').hide(); $('#09_workWithAQL_statementsPlansBind_short').show(); window.location.hash='09_workWithAQL_statementsPlansBind_container';" class="example_show_button">Hide execution results</div></div>
<div id="09_workWithAQL_statementsPlansBind_short" onclick="$('#09_workWithAQL_statementsPlansBind_short').hide(); $('#09_workWithAQL_statementsPlansBind_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">`FOR doc IN @@collection FILTER doc.user == @user RETURN doc`</span>
........&gt; );
arangosh&gt; stmt.bind({ <span class="hljs-string">"@collection"</span> : <span class="hljs-string">"_users"</span>, <span class="hljs-string">"user"</span> : <span class="hljs-string">"root"</span> });
arangosh&gt; stmt.explain();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 09_workWithAQL_statementsPlansBind


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer0


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer0_container">
<a class="anchorjs-link " href="#10_workWithAQL_statementsPlansOptimizer0_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_statementsPlansOptimizer0_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(
........&gt; <span class="hljs-string">"FOR user IN _users FILTER user.user == 'root' RETURN user"</span>);
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> }).plans.length;
<span class="hljs-number">1</span>
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer0


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer1


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer1_container">
<a class="anchorjs-link " href="#10_workWithAQL_statementsPlansOptimizer1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_statementsPlansOptimizer1_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> }).plans.map(
........&gt; <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">plan</span>) </span>{ <span class="hljs-keyword">return</span> formatPlan(plan); });
[ 
  { 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2.95</span>, 
    <span class="hljs-string">"nodes"</span> : [ 
      <span class="hljs-string">"SingletonNode"</span>, 
      <span class="hljs-string">"IndexNode"</span>, 
      <span class="hljs-string">"ReturnNode"</span> 
    ] 
  } 
]
</pre>
<div id="10_workWithAQL_statementsPlansOptimizer1_container_collapse" onclick="$('#10_workWithAQL_statementsPlansOptimizer1_long').hide(); $('#10_workWithAQL_statementsPlansOptimizer1_short').show(); window.location.hash='10_workWithAQL_statementsPlansOptimizer1_container';" class="example_show_button">Hide execution results</div></div>
<div id="10_workWithAQL_statementsPlansOptimizer1_short" onclick="$('#10_workWithAQL_statementsPlansOptimizer1_short').hide(); $('#10_workWithAQL_statementsPlansOptimizer1_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> }).plans.map(
........&gt; <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">plan</span>) </span>{ <span class="hljs-keyword">return</span> formatPlan(plan); });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer2


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer2_container">
<a class="anchorjs-link " href="#10_workWithAQL_statementsPlansOptimizer2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_statementsPlansOptimizer2_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: {
........&gt; rules: [ <span class="hljs-string">"-all"</span>, <span class="hljs-string">"+remove-redundant-calculations"</span> ] } });
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateCollectionNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"random"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span>, 
                  <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-string">"root"</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"simple"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"FilterNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        } 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"user"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">6</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">29</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="10_workWithAQL_statementsPlansOptimizer2_container_collapse" onclick="$('#10_workWithAQL_statementsPlansOptimizer2_long').hide(); $('#10_workWithAQL_statementsPlansOptimizer2_short').show(); window.location.hash='10_workWithAQL_statementsPlansOptimizer2_container';" class="example_show_button">Hide execution results</div></div>
<div id="10_workWithAQL_statementsPlansOptimizer2_short" onclick="$('#10_workWithAQL_statementsPlansOptimizer2_short').hide(); $('#10_workWithAQL_statementsPlansOptimizer2_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: {
........&gt; rules: [ <span class="hljs-string">"-all"</span>, <span class="hljs-string">"+remove-redundant-calculations"</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_statementsPlansOptimizer3


<div class="example-container" id="10_workWithAQL_statementsPlansOptimizer3_container">
<a class="anchorjs-link " href="#10_workWithAQL_statementsPlansOptimizer3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_statementsPlansOptimizer3_long" style="Display: none;">
<pre>
arangosh&gt; var query = "FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc";
arangosh&gt; require("@arangodb/aql/explainer").explain(query, {colors:false});
Query string:
 FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc

Execution plan:
 Id   NodeType                  Est.   Comment
  1   SingletonNode                1   * ROOT
  2   EnumerateCollectionNode    302     - FOR doc IN mycollection   /* full collection scan */
  3   CalculationNode            302       - LET #1 = (doc.`value` &gt; 42)   /* simple expression */   /* collections used: doc : mycollection */
  4   FilterNode                 302       - FILTER #1
  5   ReturnNode                 302       - RETURN doc

Indexes used:
 none

Optimization rules applied:
 none


</pre>
<div id="10_workWithAQL_statementsPlansOptimizer3_container_collapse" onclick="$('#10_workWithAQL_statementsPlansOptimizer3_long').hide(); $('#10_workWithAQL_statementsPlansOptimizer3_short').show(); window.location.hash='10_workWithAQL_statementsPlansOptimizer3_container';" class="example_show_button">Hide execution results</div></div>
<div id="10_workWithAQL_statementsPlansOptimizer3_short" onclick="$('#10_workWithAQL_statementsPlansOptimizer3_short').hide(); $('#10_workWithAQL_statementsPlansOptimizer3_long').show();">
<pre>
arangosh&gt; var query = "FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc";
arangosh&gt; require("@arangodb/aql/explainer").explain(query, {colors:false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 10_workWithAQL_statementsPlansOptimizer3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_debugging1


<div class="example-container" id="10_workWithAQL_debugging1_container">
<a class="anchorjs-link " href="#10_workWithAQL_debugging1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_debugging1_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc IN mycollection FILTER doc.value &gt; 42 RETURN doc"</span>;
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/explainer"</span>).debugDump(<span class="hljs-string">"/tmp/query-debug-info"</span>, query);
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_debugging1


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_debugging2


<div class="example-container" id="10_workWithAQL_debugging2_container">
<a class="anchorjs-link " href="#10_workWithAQL_debugging2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_debugging2_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc IN @@collection FILTER doc.value &gt; @value RETURN doc"</span>;
arangosh&gt; <span class="hljs-keyword">var</span> bind = { <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>, <span class="hljs-string">"@collection"</span>: <span class="hljs-string">"mycollection"</span> };
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/explainer"</span>).debugDump(<span class="hljs-string">"/tmp/query-debug-info"</span>, query, bind);
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_debugging2


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-explaining-queries.md -->
    @startDocuBlockInline 10_workWithAQL_debugging3


<div class="example-container" id="10_workWithAQL_debugging3_container">
<a class="anchorjs-link " href="#10_workWithAQL_debugging3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="10_workWithAQL_debugging3_long">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> query = <span class="hljs-string">"FOR doc IN @@collection FILTER doc.value &gt; @value RETURN doc"</span>;
arangosh&gt; <span class="hljs-keyword">var</span> bind = { <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>, <span class="hljs-string">"@collection"</span>: <span class="hljs-string">"mycollection"</span> };
arangosh&gt; <span class="hljs-keyword">var</span> options = { <span class="hljs-attr">examples</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">anonymize</span>: <span class="hljs-literal">true</span> };
arangosh&gt; <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/aql/explainer"</span>).debugDump(<span class="hljs-string">"/tmp/query-debug-info"</span>, query, bind, options);
</pre>
</div>
</div>

    @endDocuBlock 10_workWithAQL_debugging3


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_01_create_graph


<div class="example-container" id="COMBINING_GRAPH_01_create_graph_container">
<a class="anchorjs-link " href="#COMBINING_GRAPH_01_create_graph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="COMBINING_GRAPH_01_create_graph_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> bonn=[<span class="hljs-number">50.7340</span>, <span class="hljs-number">7.0998</span>];
arangosh&gt; db._query(<span class="hljs-string">`FOR startCity IN
........&gt;             WITHIN(germanCity, @lat, @long, @radius)
........&gt;               RETURN startCity`</span>,
........&gt;   {<span class="hljs-attr">lat</span>: bonn[<span class="hljs-number">0</span>], <span class="hljs-attr">long</span>: bonn[<span class="hljs-number">1</span>], <span class="hljs-attr">radius</span>: <span class="hljs-number">400000</span>}
........&gt; ).toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Cologne"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---B"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">50.9364</span>, 
      <span class="hljs-number">6.9528</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Hamburg"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Hamburg"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---D"</span>, 
    <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span>, 
    <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">53.5653</span>, 
      <span class="hljs-number">10.0014</span> 
    ] 
  } 
]
</pre>
<div id="COMBINING_GRAPH_01_create_graph_container_collapse" onclick="$('#COMBINING_GRAPH_01_create_graph_long').hide(); $('#COMBINING_GRAPH_01_create_graph_short').show(); window.location.hash='COMBINING_GRAPH_01_create_graph_container';" class="example_show_button">Hide execution results</div></div>
<div id="COMBINING_GRAPH_01_create_graph_short" onclick="$('#COMBINING_GRAPH_01_create_graph_short').hide(); $('#COMBINING_GRAPH_01_create_graph_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> examples = <span class="hljs-built_in">require</span>(<span class="hljs-string">"@arangodb/graph-examples/example-graph.js"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> g = examples.loadGraph(<span class="hljs-string">"routeplanner"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> bonn=[<span class="hljs-number">50.7340</span>, <span class="hljs-number">7.0998</span>];
arangosh&gt; db._query(<span class="hljs-string">`FOR startCity IN
........&gt;             WITHIN(germanCity, @lat, @long, @radius)
........&gt;               RETURN startCity`</span>,
........&gt;   {<span class="hljs-attr">lat</span>: bonn[<span class="hljs-number">0</span>], <span class="hljs-attr">long</span>: bonn[<span class="hljs-number">1</span>], <span class="hljs-attr">radius</span>: <span class="hljs-number">400000</span>}
........&gt; ).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_01_create_graph


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_02_combine


<div class="example-container" id="COMBINING_GRAPH_02_combine_container">
<a class="anchorjs-link " href="#COMBINING_GRAPH_02_combine_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="COMBINING_GRAPH_02_combine_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR startCity IN
........&gt;             WITHIN(germanCity, @lat, @long, @radius)
........&gt;               FOR v, e, p IN 1..1 OUTBOUND startCity
........&gt;                 GRAPH 'routeplanner'
........&gt;     RETURN {startcity: startCity._key, traversedCity: v}`</span>,
........&gt; {
........&gt;  lat: bonn[<span class="hljs-number">0</span>],
........&gt;  long: bonn[<span class="hljs-number">1</span>],
........&gt;  radius: <span class="hljs-number">400000</span>
........&gt; } ).toArray()
[ 
  { 
    <span class="hljs-string">"startcity"</span> : <span class="hljs-string">"Cologne"</span>, 
    <span class="hljs-string">"traversedCity"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Lyon"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---F"</span>, 
      <span class="hljs-string">"population"</span> : <span class="hljs-number">80000</span>, 
      <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">45.76</span>, 
        <span class="hljs-number">4.84</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">"startcity"</span> : <span class="hljs-string">"Cologne"</span>, 
    <span class="hljs-string">"traversedCity"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Paris"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---H"</span>, 
      <span class="hljs-string">"population"</span> : <span class="hljs-number">4000000</span>, 
      <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">48.8567</span>, 
        <span class="hljs-number">2.3508</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">"startcity"</span> : <span class="hljs-string">"Hamburg"</span>, 
    <span class="hljs-string">"traversedCity"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Paris"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---H"</span>, 
      <span class="hljs-string">"population"</span> : <span class="hljs-number">4000000</span>, 
      <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">48.8567</span>, 
        <span class="hljs-number">2.3508</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">"startcity"</span> : <span class="hljs-string">"Hamburg"</span>, 
    <span class="hljs-string">"traversedCity"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Lyon"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---F"</span>, 
      <span class="hljs-string">"population"</span> : <span class="hljs-number">80000</span>, 
      <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">45.76</span>, 
        <span class="hljs-number">4.84</span> 
      ] 
    } 
  }, 
  { 
    <span class="hljs-string">"startcity"</span> : <span class="hljs-string">"Hamburg"</span>, 
    <span class="hljs-string">"traversedCity"</span> : { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Cologne"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---B"</span>, 
      <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span>, 
      <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">50.9364</span>, 
        <span class="hljs-number">6.9528</span> 
      ] 
    } 
  } 
]
</pre>
<div id="COMBINING_GRAPH_02_combine_container_collapse" onclick="$('#COMBINING_GRAPH_02_combine_long').hide(); $('#COMBINING_GRAPH_02_combine_short').show(); window.location.hash='COMBINING_GRAPH_02_combine_container';" class="example_show_button">Hide execution results</div></div>
<div id="COMBINING_GRAPH_02_combine_short" onclick="$('#COMBINING_GRAPH_02_combine_short').hide(); $('#COMBINING_GRAPH_02_combine_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR startCity IN
........&gt;             WITHIN(germanCity, @lat, @long, @radius)
........&gt;               FOR v, e, p IN 1..1 OUTBOUND startCity
........&gt;                 GRAPH 'routeplanner'
........&gt;     RETURN {startcity: startCity._key, traversedCity: v}`</span>,
........&gt; {
........&gt;  lat: bonn[<span class="hljs-number">0</span>],
........&gt;  long: bonn[<span class="hljs-number">1</span>],
........&gt;  radius: <span class="hljs-number">400000</span>
........&gt; } ).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_02_combine


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_03_combine_let


<div class="example-container" id="COMBINING_GRAPH_03_combine_let_container">
<a class="anchorjs-link " href="#COMBINING_GRAPH_03_combine_let_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="COMBINING_GRAPH_03_combine_let_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR startCity IN
........&gt;            WITHIN(germanCity, @lat, @long, @radius)
........&gt;              LET oneCity = (FOR v, e, p IN 1..1 OUTBOUND startCity
........&gt;                GRAPH 'routeplanner' RETURN v)
........&gt;              return {startCity: startCity._key, connectedCities: oneCity}`</span>,
........&gt; {
........&gt;  lat: bonn[<span class="hljs-number">0</span>],
........&gt;  long: bonn[<span class="hljs-number">1</span>],
........&gt;  radius: <span class="hljs-number">400000</span>
........&gt; } ).toArray();
[ 
  { 
    <span class="hljs-string">"startCity"</span> : <span class="hljs-string">"Cologne"</span>, 
    <span class="hljs-string">"connectedCities"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Lyon"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---F"</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">80000</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"loc"</span> : [ 
          <span class="hljs-number">45.76</span>, 
          <span class="hljs-number">4.84</span> 
        ] 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Paris"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---H"</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">4000000</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"loc"</span> : [ 
          <span class="hljs-number">48.8567</span>, 
          <span class="hljs-number">2.3508</span> 
        ] 
      } 
    ] 
  }, 
  { 
    <span class="hljs-string">"startCity"</span> : <span class="hljs-string">"Hamburg"</span>, 
    <span class="hljs-string">"connectedCities"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Paris"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Paris"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---H"</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">4000000</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"loc"</span> : [ 
          <span class="hljs-number">48.8567</span>, 
          <span class="hljs-number">2.3508</span> 
        ] 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Lyon"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"frenchCity/Lyon"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---F"</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">80000</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"loc"</span> : [ 
          <span class="hljs-number">45.76</span>, 
          <span class="hljs-number">4.84</span> 
        ] 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"Cologne"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"germanCity/Cologne"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Kr---B"</span>, 
        <span class="hljs-string">"population"</span> : <span class="hljs-number">1000000</span>, 
        <span class="hljs-string">"isCapital"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"loc"</span> : [ 
          <span class="hljs-number">50.9364</span>, 
          <span class="hljs-number">6.9528</span> 
        ] 
      } 
    ] 
  } 
]
</pre>
<div id="COMBINING_GRAPH_03_combine_let_container_collapse" onclick="$('#COMBINING_GRAPH_03_combine_let_long').hide(); $('#COMBINING_GRAPH_03_combine_let_short').show(); window.location.hash='COMBINING_GRAPH_03_combine_let_container';" class="example_show_button">Hide execution results</div></div>
<div id="COMBINING_GRAPH_03_combine_let_short" onclick="$('#COMBINING_GRAPH_03_combine_let_short').hide(); $('#COMBINING_GRAPH_03_combine_let_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`FOR startCity IN
........&gt;            WITHIN(germanCity, @lat, @long, @radius)
........&gt;              LET oneCity = (FOR v, e, p IN 1..1 OUTBOUND startCity
........&gt;                GRAPH 'routeplanner' RETURN v)
........&gt;              return {startCity: startCity._key, connectedCities: oneCity}`</span>,
........&gt; {
........&gt;  lat: bonn[<span class="hljs-number">0</span>],
........&gt;  long: bonn[<span class="hljs-number">1</span>],
........&gt;  radius: <span class="hljs-number">400000</span>
........&gt; } ).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_03_combine_let


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/examples-combining-graph-traversals.md -->
    @startDocuBlockInline COMBINING_GRAPH_04_cleanup


<div class="example-container" id="COMBINING_GRAPH_04_cleanup_container">
<a class="anchorjs-link " href="#COMBINING_GRAPH_04_cleanup_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="COMBINING_GRAPH_04_cleanup_long">
<pre>
arangosh&gt; examples.dropGraph(<span class="hljs-string">"routeplanner"</span>);
<span class="hljs-literal">true</span>
</pre>
</div>
</div>

    @endDocuBlock COMBINING_GRAPH_04_cleanup


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_01_axplainer


<div class="example-container" id="AQLEXP_01_axplainer_container">
<a class="anchorjs-link " href="#AQLEXP_01_axplainer_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_01_axplainer_long" style="Display: none;">
<pre>
arangosh&gt; db._create("test");
[ArangoCollection 6983, "test" (type document, status loaded)]
arangosh&gt; for (i = 0; i &lt; 100; ++i) { db.test.save({ value: i }); }
arangosh&gt; db.test.ensureIndex({ type: "skiplist", fields: [ "value" ] });
{ 
  "deduplicate" : true, 
  "fields" : [ 
    "value" 
  ], 
  "id" : "test/7288", 
  "isNewlyCreated" : true, 
  "sparse" : false, 
  "type" : "skiplist", 
  "unique" : false, 
  "code" : 201 
}
arangosh&gt; var explain = require("@arangodb/aql/explainer").explain;
arangosh&gt; explain("FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value", {colors:false});
Query string:
 FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value

Execution plan:
 Id   NodeType          Est.   Comment
  1   SingletonNode        1   * ROOT
  9   IndexNode           50     - FOR i IN test   /* skiplist index scan */
  5   CalculationNode     50       - LET #3 = i.`value`   /* attribute expression */   /* collections used: i : test */
  8   ReturnNode          50       - RETURN #3

Indexes used:
 By   Type       Collection   Unique   Sparse   Selectivity   Fields        Ranges
  9   skiplist   test         false    false            n/a   [ `value` ]   (i.`value` &gt; 97)

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   move-filters-up
  3   remove-redundant-calculations
  4   remove-unnecessary-calculations
  5   move-calculations-up-2
  6   move-filters-up-2
  7   use-indexes
  8   remove-filter-covered-by-index
  9   use-index-for-sort
 10   remove-unnecessary-calculations-2


</pre>
<div id="AQLEXP_01_axplainer_container_collapse" onclick="$('#AQLEXP_01_axplainer_long').hide(); $('#AQLEXP_01_axplainer_short').show(); window.location.hash='AQLEXP_01_axplainer_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_01_axplainer_short" onclick="$('#AQLEXP_01_axplainer_short').hide(); $('#AQLEXP_01_axplainer_long').show();">
<pre>
arangosh&gt; db._create("test");
arangosh&gt; for (i = 0; i &lt; 100; ++i) { db.test.save({ value: i }); }
arangosh&gt; db.test.ensureIndex({ type: "skiplist", fields: [ "value" ] });
arangosh&gt; var explain = require("@arangodb/aql/explainer").explain;
arangosh&gt; explain("FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value", {colors:false});
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_01_axplainer


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_01_explainCreate


<div class="example-container" id="AQLEXP_01_explainCreate_container">
<a class="anchorjs-link " href="#AQLEXP_01_explainCreate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_01_explainCreate_long" style="Display: none;">
<pre>
arangosh&gt; stmt = db._createStatement(<span class="hljs-string">"FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value"</span>);
[object ArangoStatement]
arangosh&gt; stmt.explain();
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">7.643856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"7288"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"value"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"condition"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare &gt;"</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"subNodes"</span> : [ 
                        { 
                          <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"value"</span> : <span class="hljs-number">97</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">57.64385618977472</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">107.64385618977472</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"move-calculations-up"</span>, 
      <span class="hljs-string">"move-filters-up"</span>, 
      <span class="hljs-string">"remove-redundant-calculations"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations"</span>, 
      <span class="hljs-string">"move-calculations-up-2"</span>, 
      <span class="hljs-string">"move-filters-up-2"</span>, 
      <span class="hljs-string">"use-indexes"</span>, 
      <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
      <span class="hljs-string">"use-index-for-sort"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">107.64385618977472</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_01_explainCreate_container_collapse" onclick="$('#AQLEXP_01_explainCreate_long').hide(); $('#AQLEXP_01_explainCreate_short').show(); window.location.hash='AQLEXP_01_explainCreate_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_01_explainCreate_short" onclick="$('#AQLEXP_01_explainCreate_short').hide(); $('#AQLEXP_01_explainCreate_long').show();">
<pre>
arangosh&gt; stmt = db._createStatement(<span class="hljs-string">"FOR i IN test FILTER i.value &gt; 97 SORT i.value RETURN i.value"</span>);
arangosh&gt; stmt.explain();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_01_explainCreate


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_02_explainOverview


<div class="example-container" id="AQLEXP_02_explainOverview_container">
<a class="anchorjs-link " href="#AQLEXP_02_explainOverview_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_02_explainOverview_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain().plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">node</span>) </span>{ <span class="hljs-keyword">return</span> node.type; });
[ 
  <span class="hljs-string">"SingletonNode"</span>, 
  <span class="hljs-string">"IndexNode"</span>, 
  <span class="hljs-string">"CalculationNode"</span>, 
  <span class="hljs-string">"ReturnNode"</span> 
]
</pre>
<div id="AQLEXP_02_explainOverview_container_collapse" onclick="$('#AQLEXP_02_explainOverview_long').hide(); $('#AQLEXP_02_explainOverview_short').show(); window.location.hash='AQLEXP_02_explainOverview_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_02_explainOverview_short" onclick="$('#AQLEXP_02_explainOverview_short').hide(); $('#AQLEXP_02_explainOverview_long').show();">
<pre>
arangosh&gt; stmt.explain().plan.nodes.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">node</span>) </span>{ <span class="hljs-keyword">return</span> node.type; });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_02_explainOverview


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_03_explainRules


<div class="example-container" id="AQLEXP_03_explainRules_container">
<a class="anchorjs-link " href="#AQLEXP_03_explainRules_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_03_explainRules_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain().plan.rules;
[ 
  <span class="hljs-string">"move-calculations-up"</span>, 
  <span class="hljs-string">"move-filters-up"</span>, 
  <span class="hljs-string">"remove-redundant-calculations"</span>, 
  <span class="hljs-string">"remove-unnecessary-calculations"</span>, 
  <span class="hljs-string">"move-calculations-up-2"</span>, 
  <span class="hljs-string">"move-filters-up-2"</span>, 
  <span class="hljs-string">"use-indexes"</span>, 
  <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
  <span class="hljs-string">"use-index-for-sort"</span>, 
  <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
]
</pre>
<div id="AQLEXP_03_explainRules_container_collapse" onclick="$('#AQLEXP_03_explainRules_long').hide(); $('#AQLEXP_03_explainRules_short').show(); window.location.hash='AQLEXP_03_explainRules_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_03_explainRules_short" onclick="$('#AQLEXP_03_explainRules_short').hide(); $('#AQLEXP_03_explainRules_long').show();">
<pre>
arangosh&gt; stmt.explain().plan.rules;
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_03_explainRules


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_04_explainCollections


<div class="example-container" id="AQLEXP_04_explainCollections_container">
<a class="anchorjs-link " href="#AQLEXP_04_explainCollections_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_04_explainCollections_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain().plan.collections
[ 
  { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
  } 
]
</pre>
<div id="AQLEXP_04_explainCollections_container_collapse" onclick="$('#AQLEXP_04_explainCollections_long').hide(); $('#AQLEXP_04_explainCollections_short').show(); window.location.hash='AQLEXP_04_explainCollections_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_04_explainCollections_short" onclick="$('#AQLEXP_04_explainCollections_short').hide(); $('#AQLEXP_04_explainCollections_long').show();">
<pre>
arangosh&gt; stmt.explain().plan.collections
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_04_explainCollections


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_05_explainAllPlans


<div class="example-container" id="AQLEXP_05_explainAllPlans_container">
<a class="anchorjs-link " href="#AQLEXP_05_explainAllPlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_05_explainAllPlans_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"plans"</span> : [ 
    { 
      <span class="hljs-string">"nodes"</span> : [ 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">9</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">7.643856189774724</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
          <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span>, 
          <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
          }, 
          <span class="hljs-string">"projections"</span> : [ ], 
          <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"indexes"</span> : [ 
            { 
              <span class="hljs-string">"id"</span> : <span class="hljs-string">"7288"</span>, 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
              <span class="hljs-string">"fields"</span> : [ 
                <span class="hljs-string">"value"</span> 
              ], 
              <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
            } 
          ], 
          <span class="hljs-string">"condition"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
                <span class="hljs-string">"subNodes"</span> : [ 
                  { 
                    <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare &gt;"</span>, 
                    <span class="hljs-string">"subNodes"</span> : [ 
                      { 
                        <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                        <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
                        <span class="hljs-string">"subNodes"</span> : [ 
                          { 
                            <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                            <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                            <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                          } 
                        ] 
                      }, 
                      { 
                        <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                        <span class="hljs-string">"value"</span> : <span class="hljs-number">97</span> 
                      } 
                    ] 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">9</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">57.64385618977472</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
          <span class="hljs-string">"expression"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
          }, 
          <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">5</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">8</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">107.64385618977472</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
          <span class="hljs-string">"inVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
          } 
        } 
      ], 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"move-calculations-up"</span>, 
        <span class="hljs-string">"move-filters-up"</span>, 
        <span class="hljs-string">"remove-redundant-calculations"</span>, 
        <span class="hljs-string">"remove-unnecessary-calculations"</span>, 
        <span class="hljs-string">"move-calculations-up-2"</span>, 
        <span class="hljs-string">"move-filters-up-2"</span>, 
        <span class="hljs-string">"use-indexes"</span>, 
        <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
        <span class="hljs-string">"use-index-for-sort"</span>, 
        <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
      ], 
      <span class="hljs-string">"collections"</span> : [ 
        { 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
        } 
      ], 
      <span class="hljs-string">"variables"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        } 
      ], 
      <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">107.64385618977472</span>, 
      <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
      <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
    } 
  ], 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  } 
}
</pre>
<div id="AQLEXP_05_explainAllPlans_container_collapse" onclick="$('#AQLEXP_05_explainAllPlans_long').hide(); $('#AQLEXP_05_explainAllPlans_short').show(); window.location.hash='AQLEXP_05_explainAllPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_05_explainAllPlans_short" onclick="$('#AQLEXP_05_explainAllPlans_short').hide(); $('#AQLEXP_05_explainAllPlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">allPlans</span>: <span class="hljs-literal">true</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_05_explainAllPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_06_explainUnoptimizedPlans


<div class="example-container" id="AQLEXP_06_explainUnoptimizedPlans_container">
<a class="anchorjs-link " href="#AQLEXP_06_explainUnoptimizedPlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_06_explainUnoptimizedPlans_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">"-all"</span> ] } });
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateCollectionNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">102</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"random"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">202</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare &gt;"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                  <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">97</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"simple"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"FilterNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">302</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        } 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">402</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SortNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1066.3856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"elements"</span> : [ 
          { 
            <span class="hljs-string">"inVariable"</span> : { 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
            }, 
            <span class="hljs-string">"ascending"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"stable"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">7</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1166.3856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">7</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1266.3856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1266.3856189774724</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_06_explainUnoptimizedPlans_container_collapse" onclick="$('#AQLEXP_06_explainUnoptimizedPlans_long').hide(); $('#AQLEXP_06_explainUnoptimizedPlans_short').show(); window.location.hash='AQLEXP_06_explainUnoptimizedPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_06_explainUnoptimizedPlans_short" onclick="$('#AQLEXP_06_explainUnoptimizedPlans_short').hide(); $('#AQLEXP_06_explainUnoptimizedPlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">"-all"</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_06_explainUnoptimizedPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_07_explainSingleRulePlans


<div class="example-container" id="AQLEXP_07_explainSingleRulePlans_container">
<a class="anchorjs-link " href="#AQLEXP_07_explainSingleRulePlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_07_explainSingleRulePlans_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">"-all"</span>, <span class="hljs-string">"+use-index-range"</span> ] } });
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateCollectionNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">102</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"random"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">202</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare &gt;"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                  <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">97</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"simple"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"FilterNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">302</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        } 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">402</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SortNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1066.3856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"elements"</span> : [ 
          { 
            <span class="hljs-string">"inVariable"</span> : { 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
            }, 
            <span class="hljs-string">"ascending"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"stable"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">7</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1166.3856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">7</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1266.3856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1266.3856189774724</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_07_explainSingleRulePlans_container_collapse" onclick="$('#AQLEXP_07_explainSingleRulePlans_long').hide(); $('#AQLEXP_07_explainSingleRulePlans_short').show(); window.location.hash='AQLEXP_07_explainSingleRulePlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_07_explainSingleRulePlans_short" onclick="$('#AQLEXP_07_explainSingleRulePlans_short').hide(); $('#AQLEXP_07_explainSingleRulePlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">"-all"</span>, <span class="hljs-string">"+use-index-range"</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_07_explainSingleRulePlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_08_explainDisableSingleRulePlans


<div class="example-container" id="AQLEXP_08_explainDisableSingleRulePlans_container">
<a class="anchorjs-link " href="#AQLEXP_08_explainDisableSingleRulePlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_08_explainDisableSingleRulePlans_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">"-use-index-range"</span>, <span class="hljs-string">"-use-index-for-sort"</span> ] } });
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">7.643856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"7288"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"value"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"condition"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare &gt;"</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"subNodes"</span> : [ 
                        { 
                          <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"value"</span> : <span class="hljs-number">97</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">57.64385618977472</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SortNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">339.83666567851094</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"elements"</span> : [ 
          { 
            <span class="hljs-string">"inVariable"</span> : { 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
            }, 
            <span class="hljs-string">"ascending"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"stable"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">389.83666567851094</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"move-calculations-up"</span>, 
      <span class="hljs-string">"move-filters-up"</span>, 
      <span class="hljs-string">"remove-redundant-calculations"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations"</span>, 
      <span class="hljs-string">"move-calculations-up-2"</span>, 
      <span class="hljs-string">"move-filters-up-2"</span>, 
      <span class="hljs-string">"use-indexes"</span>, 
      <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">389.83666567851094</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">29</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_08_explainDisableSingleRulePlans_container_collapse" onclick="$('#AQLEXP_08_explainDisableSingleRulePlans_long').hide(); $('#AQLEXP_08_explainDisableSingleRulePlans_short').show(); window.location.hash='AQLEXP_08_explainDisableSingleRulePlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_08_explainDisableSingleRulePlans_short" onclick="$('#AQLEXP_08_explainDisableSingleRulePlans_short').hide(); $('#AQLEXP_08_explainDisableSingleRulePlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">optimizer</span>: { <span class="hljs-attr">rules</span>: [ <span class="hljs-string">"-use-index-range"</span>, <span class="hljs-string">"-use-index-for-sort"</span> ] } });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_08_explainDisableSingleRulePlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_09_explainMaxNumberOfPlans


<div class="example-container" id="AQLEXP_09_explainMaxNumberOfPlans_container">
<a class="anchorjs-link " href="#AQLEXP_09_explainMaxNumberOfPlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_09_explainMaxNumberOfPlans_long" style="Display: none;">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">maxNumberOfPlans</span>: <span class="hljs-number">1</span> });
{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">7.643856189774724</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"7288"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"value"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"condition"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare &gt;"</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"subNodes"</span> : [ 
                        { 
                          <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
                          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"value"</span> : <span class="hljs-number">97</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">57.64385618977472</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">107.64385618977472</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"move-calculations-up"</span>, 
      <span class="hljs-string">"move-filters-up"</span>, 
      <span class="hljs-string">"remove-redundant-calculations"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations"</span>, 
      <span class="hljs-string">"move-calculations-up-2"</span>, 
      <span class="hljs-string">"move-filters-up-2"</span>, 
      <span class="hljs-string">"use-indexes"</span>, 
      <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
      <span class="hljs-string">"use-index-for-sort"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"test"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">107.64385618977472</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">50</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">29</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="AQLEXP_09_explainMaxNumberOfPlans_container_collapse" onclick="$('#AQLEXP_09_explainMaxNumberOfPlans_long').hide(); $('#AQLEXP_09_explainMaxNumberOfPlans_short').show(); window.location.hash='AQLEXP_09_explainMaxNumberOfPlans_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_09_explainMaxNumberOfPlans_short" onclick="$('#AQLEXP_09_explainMaxNumberOfPlans_short').hide(); $('#AQLEXP_09_explainMaxNumberOfPlans_long').show();">
<pre>
arangosh&gt; stmt.explain({ <span class="hljs-attr">maxNumberOfPlans</span>: <span class="hljs-number">1</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_09_explainMaxNumberOfPlans


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_10_explainWarn


<div class="example-container" id="AQLEXP_10_explainWarn_container">
<a class="anchorjs-link " href="#AQLEXP_10_explainWarn_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_10_explainWarn_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(<span class="hljs-string">"FOR i IN 1..10 RETURN 1 / 0"</span>)
arangosh&gt; stmt.explain().warnings;
[ 
  { 
    <span class="hljs-string">"code"</span> : <span class="hljs-number">1562</span>, 
    <span class="hljs-string">"message"</span> : <span class="hljs-string">"division by zero"</span> 
  } 
]
</pre>
<div id="AQLEXP_10_explainWarn_container_collapse" onclick="$('#AQLEXP_10_explainWarn_long').hide(); $('#AQLEXP_10_explainWarn_short').show(); window.location.hash='AQLEXP_10_explainWarn_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_10_explainWarn_short" onclick="$('#AQLEXP_10_explainWarn_short').hide(); $('#AQLEXP_10_explainWarn_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">var</span> stmt = db._createStatement(<span class="hljs-string">"FOR i IN 1..10 RETURN 1 / 0"</span>)
arangosh&gt; stmt.explain().warnings;
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_10_explainWarn


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-optimizer.md -->
    @startDocuBlockInline AQLEXP_11_explainjs


<div class="example-container" id="AQLEXP_11_explainjs_container">
<a class="anchorjs-link " href="#AQLEXP_11_explainjs_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="AQLEXP_11_explainjs_long" style="Display: none;">
<pre>
arangosh&gt; db._explain('FOR x IN 1..10 LET then=DATE_NOW() FOR y IN 1..10 LET now=DATE_NOW() LET nowstr=CONCAT(now, x, y, then) RETURN nowstr', {}, {colors: false})
Query string:
 FOR x IN 1..10 LET then=DATE_NOW() FOR y IN 1..10 LET now=DATE_NOW() LET nowstr=CONCAT(now, x, y, 
 then) RETURN nowstr

Execution plan:
 Id   NodeType            Est.   Comment
  1   SingletonNode          1   * ROOT
  2   CalculationNode        1     - LET #5 = 1 .. 10   /* range */   /* simple expression */
  3   EnumerateListNode     10     - FOR x IN #5   /* list iteration */
  4   CalculationNode       10       - LET then = DATE_NOW()   /* v8 expression */
  6   EnumerateListNode    100       - FOR y IN #5   /* list iteration */
  7   CalculationNode      100         - LET now = DATE_NOW()   /* v8 expression */
  8   CalculationNode      100         - LET nowstr = CONCAT(now, x, y, then)   /* simple expression */
  9   ReturnNode           100         - RETURN nowstr

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   remove-redundant-calculations
  3   remove-unnecessary-calculations


arangosh&gt; db._explain('LET now=DATE_NOW() FOR x IN 1..10 FOR y IN 1..10 LET nowstr=CONCAT(now, x, y, now) RETURN nowstr', {}, {colors: false})
Query string:
 LET now=DATE_NOW() FOR x IN 1..10 FOR y IN 1..10 LET nowstr=CONCAT(now, x, y, now) RETURN nowstr

Execution plan:
 Id   NodeType            Est.   Comment
  1   SingletonNode          1   * ROOT
  3   CalculationNode        1     - LET #4 = 1 .. 10   /* range */   /* simple expression */
  2   CalculationNode        1     - LET now = DATE_NOW()   /* v8 expression */
  4   EnumerateListNode     10     - FOR x IN #4   /* list iteration */
  6   EnumerateListNode    100       - FOR y IN #4   /* list iteration */
  7   CalculationNode      100         - LET nowstr = CONCAT(now, x, y, now)   /* simple expression */
  8   ReturnNode           100         - RETURN nowstr

Indexes used:
 none

Optimization rules applied:
 Id   RuleName
  1   move-calculations-up
  2   remove-redundant-calculations
  3   remove-unnecessary-calculations


</pre>
<div id="AQLEXP_11_explainjs_container_collapse" onclick="$('#AQLEXP_11_explainjs_long').hide(); $('#AQLEXP_11_explainjs_short').show(); window.location.hash='AQLEXP_11_explainjs_container';" class="example_show_button">Hide execution results</div></div>
<div id="AQLEXP_11_explainjs_short" onclick="$('#AQLEXP_11_explainjs_short').hide(); $('#AQLEXP_11_explainjs_long').show();">
<pre>
arangosh&gt; db._explain('FOR x IN 1..10 LET then=DATE_NOW() FOR y IN 1..10 LET now=DATE_NOW() LET nowstr=CONCAT(now, x, y, then) RETURN nowstr', {}, {colors: false})
arangosh&gt; db._explain('LET now=DATE_NOW() FOR x IN 1..10 FOR y IN 1..10 LET nowstr=CONCAT(now, x, y, now) RETURN nowstr', {}, {colors: false})
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock AQLEXP_11_explainjs


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/functions-date.md -->
    @startDocuBlockInline working_with_date_time


<div class="example-container" id="working_with_date_time_container">
<a class="anchorjs-link " href="#working_with_date_time_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="working_with_date_time_long" style="Display: none;">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"exampleTime"</span>);
[ArangoCollection <span class="hljs-number">36788</span>, <span class="hljs-string">"exampleTime"</span> (type <span class="hljs-built_in">document</span>, status loaded)]
arangosh&gt; <span class="hljs-keyword">var</span> timestamps = [<span class="hljs-string">"2014-05-07T14:19:09.522"</span>,<span class="hljs-string">"2014-05-07T21:19:09.522"</span>,<span class="hljs-string">"2014-05-08T04:19:09.522"</span>,<span class="hljs-string">"2014-05-08T11:19:09.522"</span>,<span class="hljs-string">"2014-05-08T18:19:09.522"</span>];
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.exampleTime.save({<span class="hljs-attr">value</span>:i, <span class="hljs-attr">ts</span>: timestamps[i]})
arangosh&gt; db._query(<span class="hljs-string">"FOR d IN exampleTime FILTER d.ts &gt; '2014-05-07T14:19:09.522' and d.ts &lt; '2014-05-08T18:19:09.522' RETURN d"</span>).toArray()
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36799"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"exampleTime/36799"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j7---D"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"ts"</span> : <span class="hljs-string">"2014-05-08T04:19:09.522"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36796"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"exampleTime/36796"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j7---B"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"ts"</span> : <span class="hljs-string">"2014-05-07T21:19:09.522"</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"36802"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"exampleTime/36802"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7j7---F"</span>, 
    <span class="hljs-string">"value"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"ts"</span> : <span class="hljs-string">"2014-05-08T11:19:09.522"</span> 
  } 
]
</pre>
<div id="working_with_date_time_container_collapse" onclick="$('#working_with_date_time_long').hide(); $('#working_with_date_time_short').show(); window.location.hash='working_with_date_time_container';" class="example_show_button">Hide execution results</div></div>
<div id="working_with_date_time_short" onclick="$('#working_with_date_time_short').hide(); $('#working_with_date_time_long').show();">
<pre>
arangosh&gt; db._create(<span class="hljs-string">"exampleTime"</span>);
arangosh&gt; <span class="hljs-keyword">var</span> timestamps = [<span class="hljs-string">"2014-05-07T14:19:09.522"</span>,<span class="hljs-string">"2014-05-07T21:19:09.522"</span>,<span class="hljs-string">"2014-05-08T04:19:09.522"</span>,<span class="hljs-string">"2014-05-08T11:19:09.522"</span>,<span class="hljs-string">"2014-05-08T18:19:09.522"</span>];
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) db.exampleTime.save({<span class="hljs-attr">value</span>:i, <span class="hljs-attr">ts</span>: timestamps[i]})
arangosh&gt; db._query(<span class="hljs-string">"FOR d IN exampleTime FILTER d.ts &gt; '2014-05-07T14:19:09.522' and d.ts &lt; '2014-05-08T18:19:09.522' RETURN d"</span>).toArray()
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock working_with_date_time


<!-- filename: /work/ArangoDB/Documentation/Books/AQL/execution-and-performance-query-statistics.md -->
    @startDocuBlockInline 06_workWithAQL_statementsExtra


<div class="example-container" id="06_workWithAQL_statementsExtra_container">
<a class="anchorjs-link " href="#06_workWithAQL_statementsExtra_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="06_workWithAQL_statementsExtra_long" style="Display: none;">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`
........&gt;   FOR i IN 1..@count INSERT
........&gt;     { _key: CONCAT('anothertest', TO_STRING(i)) }
........&gt;     INTO mycollection`</span>,
........&gt;  {<span class="hljs-attr">count</span>: <span class="hljs-number">100</span>},
........&gt;  {},
........&gt;  {<span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; ).getExtra();
{ 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">100</span>, 
    <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"fullCount"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.0008952617645263672</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ] 
}
arangosh&gt; db._query({
........&gt;  <span class="hljs-string">"query"</span>: <span class="hljs-string">`FOR i IN 200..@count INSERT
........&gt;              { _key: CONCAT('anothertest', TO_STRING(i)) }
........&gt;              INTO mycollection`</span>,
........&gt;  <span class="hljs-string">"bindVars"</span>: {<span class="hljs-attr">count</span>: <span class="hljs-number">300</span>},
........&gt;  <span class="hljs-string">"options"</span>: { <span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; }).getExtra();
{ 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">101</span>, 
    <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"fullCount"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00089263916015625</span> 
  }, 
  <span class="hljs-string">"warnings"</span> : [ ] 
}
</pre>
<div id="06_workWithAQL_statementsExtra_container_collapse" onclick="$('#06_workWithAQL_statementsExtra_long').hide(); $('#06_workWithAQL_statementsExtra_short').show(); window.location.hash='06_workWithAQL_statementsExtra_container';" class="example_show_button">Hide execution results</div></div>
<div id="06_workWithAQL_statementsExtra_short" onclick="$('#06_workWithAQL_statementsExtra_short').hide(); $('#06_workWithAQL_statementsExtra_long').show();">
<pre>
arangosh&gt; db._query(<span class="hljs-string">`
........&gt;   FOR i IN 1..@count INSERT
........&gt;     { _key: CONCAT('anothertest', TO_STRING(i)) }
........&gt;     INTO mycollection`</span>,
........&gt;  {<span class="hljs-attr">count</span>: <span class="hljs-number">100</span>},
........&gt;  {},
........&gt;  {<span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; ).getExtra();
arangosh&gt; db._query({
........&gt;  <span class="hljs-string">"query"</span>: <span class="hljs-string">`FOR i IN 200..@count INSERT
........&gt;              { _key: CONCAT('anothertest', TO_STRING(i)) }
........&gt;              INTO mycollection`</span>,
........&gt;  <span class="hljs-string">"bindVars"</span>: {<span class="hljs-attr">count</span>: <span class="hljs-number">300</span>},
........&gt;  <span class="hljs-string">"options"</span>: { <span class="hljs-attr">fullCount</span>: <span class="hljs-literal">true</span>}
........&gt; }).getExtra();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>

    @endDocuBlock 06_workWithAQL_statementsExtra


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/server_authentication.md -->
@startDocuBlock server_authentication

`--server.authentication`

Setting this option to *false* will turn off authentication on the server side
so all clients can execute any action without authorization and privilege
checks.

The default value is *true*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionGeo.md -->
@startDocuBlock collectionGeo

@brief constructs a geo index selection
`collection.geo(location-attribute)`

Looks up a geo index defined on attribute *location_attribute*.

Returns a geo index object if an index was found. The `near` or
`within` operators can then be used to execute a geo-spatial query on
this particular index.

This is useful for collections with multiple defined geo indexes.

`collection.geo(location_attribute, true)`

Looks up a geo index on a compound attribute *location_attribute*.

Returns a geo index object if an index was found. The `near` or
`within` operators can then be used to execute a geo-spatial query on
this particular index.

`collection.geo(latitude_attribute, longitude_attribute)`

Looks up a geo index defined on the two attributes *latitude_attribute*
and *longitude-attribute*.

Returns a geo index object if an index was found. The `near` or
`within` operators can then be used to execute a geo-spatial query on
this particular index.

**Note**: this method is not yet supported by the RocksDB storage engine.

Note: the *geo* simple query helper function is **deprecated** as of ArangoDB
2.6. The function may be removed in future versions of ArangoDB. The preferred
way for running geo queries is to use their AQL equivalents.

@EXAMPLES

Assume you have a location stored as list in the attribute *home*
and a destination stored in the attribute *work*. Then you can use the
`geo` operator to select which geo-spatial attributes (and thus which
index) to use in a `near` query.


<div class="example-container" id="geoIndexSimpleQuery_container">
<a class="anchorjs-link " href="#geoIndexSimpleQuery_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="geoIndexSimpleQuery_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.complex.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
[ArangoError <span class="hljs-number">1570</span>: no suitable geo index found <span class="hljs-keyword">for</span> geo restriction on <span class="hljs-string">'complex'</span>]
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"home"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"home"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"complex/33257"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32251"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32251"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i8G--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/170"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32254"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32254"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i8G--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/180"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-180</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32362"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32362"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i8m--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/10/170"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">-170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32140"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32140"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i7m--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/170"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">-170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32146"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32146"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i7m--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/-180"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-180</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ] 
  } 
]
arangosh&gt; db.complex.geo(<span class="hljs-string">"work"</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
[ArangoError <span class="hljs-number">1570</span>: no suitable geo index found <span class="hljs-keyword">for</span> geo restriction on <span class="hljs-string">'complex'</span>]
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"work"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"work"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"complex/33265"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; db.complex.geo(<span class="hljs-string">"work"</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32251"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32251"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i8G--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/170"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32254"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32254"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i8G--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/180"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-180</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32362"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32362"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i8m--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/10/170"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">-170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32140"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32140"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i7m--D"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/170"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">170</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">-170</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"32146"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"complex/32146"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7i7m--H"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/-180"</span>, 
    <span class="hljs-string">"home"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-180</span> 
    ], 
    <span class="hljs-string">"work"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">180</span> 
    ] 
  } 
]
</pre>
<div id="geoIndexSimpleQuery_container_collapse" onclick="$('#geoIndexSimpleQuery_long').hide(); $('#geoIndexSimpleQuery_short').show(); window.location.hash='geoIndexSimpleQuery_container';" class="example_show_button">Hide execution results</div></div>
<div id="geoIndexSimpleQuery_short" onclick="$('#geoIndexSimpleQuery_short').hide(); $('#geoIndexSimpleQuery_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (j = <span class="hljs-number">-180</span>;  j &lt;= <span class="hljs-number">180</span>;  j += <span class="hljs-number">10</span>) {
........&gt;    db.complex.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;                      home : [ i, j ],
........&gt;                      work : [ -i, -j ] });
........&gt;  }
........&gt; }
........&gt; 
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"home"</span> ] });
arangosh&gt; db.complex.near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
arangosh&gt; db.complex.geo(<span class="hljs-string">"work"</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>);
arangosh&gt; db.complex.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"work"</span> ] });
arangosh&gt; db.complex.geo(<span class="hljs-string">"work"</span>).near(<span class="hljs-number">0</span>, <span class="hljs-number">170</span>).limit(<span class="hljs-number">5</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/WalLogfileFlushTimeout.md -->
@startDocuBlock WalLogfileFlushTimeout

@brief WAL flush timeout
`--wal.flush-timeout

The timeout (in milliseconds) that ArangoDB will at most wait when flushing
a full WAL logfile to disk. When the timeout is reached and the flush is
not completed, the operation that requested the flush will fail with a 
*lock timeout* error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/WalLogfileReserveLogfiles.md -->
@startDocuBlock WalLogfileReserveLogfiles

@brief maximum number of reserve logfiles
`--wal.reserve-logfiles`

The maximum number of reserve logfiles that ArangoDB will create in a
background process. Reserve logfiles are useful in the situation when an
operation needs to be written to a logfile but the reserve space in the
logfile is too low for storing the operation. In this case, a new logfile
needs to be created to store the operation. Creating new logfiles is
normally slow, so ArangoDB will try to pre-create logfiles in a background
process so there are always reserve logfiles when the active logfile gets
full. The number of reserve logfiles that ArangoDB keeps in the background
is configurable with this option.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionProperties.md -->
@startDocuBlock collectionProperties

@brief gets or sets the properties of a collection
`collection.properties()`

Returns an object containing all collection properties.

* *waitForSync*: If *true* creating a document will only return
  after the data was synced to disk.

* *journalSize* : The size of the journal in bytes.
  This option is meaningful for the MMFiles storage engine only.

* *isVolatile*: If *true* then the collection data will be
  kept in memory only and ArangoDB will not write or sync the data
  to disk.
  This option is meaningful for the MMFiles storage engine only.

* *keyOptions* (optional) additional options for key generation. This is
  a JSON array containing the following attributes (note: some of the
  attributes are optional):
  * *type*: the type of the key generator used for the collection.
  * *allowUserKeys*: if set to *true*, then it is allowed to supply
    own key values in the *_key* attribute of a document. If set to
    *false*, then the key generator will solely be responsible for
    generating keys and supplying own key values in the *_key* attribute
    of documents is considered an error.
  * *increment*: increment value for *autoincrement* key generator.
    Not used for other key generator types.
  * *offset*: initial offset value for *autoincrement* key generator.
    Not used for other key generator types.

* *indexBuckets*: number of buckets into which indexes using a hash
  table are split. The default is 16 and this number has to be a
  power of 2 and less than or equal to 1024.
  This option is meaningful for the MMFiles storage engine only.

  For very large collections one should increase this to avoid long pauses
  when the hash table has to be initially built or resized, since buckets
  are resized individually and can be initially built in parallel. For
  example, 64 might be a sensible value for a collection with 100
  000 000 documents. Currently, only the edge index respects this
  value, but other index types might follow in future ArangoDB versions.
  Changes (see below) are applied when the collection is loaded the next
  time.

In a cluster setup, the result will also contain the following attributes:

* *numberOfShards*: the number of shards of the collection.

* *shardKeys*: contains the names of document attributes that are used to
  determine the target shard for documents.

* *replicationFactor*: determines how many copies of each shard are kept 
  on different DBServers.

`collection.properties(properties)`

Changes the collection properties. *properties* must be an object with
one or more of the following attribute(s):

* *waitForSync*: If *true* creating a document will only return
  after the data was synced to disk.

* *journalSize* : The size of the journal in bytes.
  This option is meaningful for the MMFiles storage engine only.

* *indexBuckets* : See above, changes are only applied when the
  collection is loaded the next time.
  This option is meaningful for the MMFiles storage engine only.

* *replicationFactor* : Change the number of shard copies kept on 
  different DBServers, valid values are  integer numbers
  in the range of 1-10 *(Cluster only)*

*Note*: it is not possible to change the journal size after the journal or
datafile has been created. Changing this parameter will only effect newly
created journals. Also note that you cannot lower the journal size to less
then size of the largest document already stored in the collection.

**Note**: some other collection properties, such as *type*, *isVolatile*,
or *keyOptions* cannot be changed once the collection is created.

@EXAMPLES

Read all properties


<div class="example-container" id="collectionProperties_container">
<a class="anchorjs-link " href="#collectionProperties_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionProperties_long" style="Display: none;">
<pre>
arangosh&gt; db.example.properties();
{ 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span> 
}
</pre>
<div id="collectionProperties_container_collapse" onclick="$('#collectionProperties_long').hide(); $('#collectionProperties_short').show(); window.location.hash='collectionProperties_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionProperties_short" onclick="$('#collectionProperties_short').hide(); $('#collectionProperties_long').show();">
<pre>
arangosh&gt; db.example.properties();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


Change a property


<div class="example-container" id="collectionProperty_container">
<a class="anchorjs-link " href="#collectionProperty_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="collectionProperty_long" style="Display: none;">
<pre>
arangosh&gt; db.example.properties({ <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span> });
{ 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span> 
}
</pre>
<div id="collectionProperty_container_collapse" onclick="$('#collectionProperty_long').hide(); $('#collectionProperty_short').show(); window.location.hash='collectionProperty_container';" class="example_show_button">Hide execution results</div></div>
<div id="collectionProperty_short" onclick="$('#collectionProperty_short').hide(); $('#collectionProperty_long').show();">
<pre>
arangosh&gt; db.example.properties({ <span class="hljs-attr">waitForSync</span> : <span class="hljs-literal">true</span> });
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionNear.md -->
@startDocuBlock collectionNear

@brief constructs a near query for a collection
`collection.near(latitude, longitude)`

The returned list is sorted according to the distance, with the nearest
document to the coordinate (*latitude*, *longitude*) coming first.
If there are near documents of equal distance, documents are chosen randomly
from this set until the limit is reached. It is possible to change the limit
using the *limit* operator.

In order to use the *near* operator, a geo index must be defined for the
collection. This index also defines which attribute holds the coordinates
for the document.  If you have more then one geo-spatial index, you can use
the *geo* operator to select a particular index.

*Note*: `near` does not support negative skips.
//     However, you can still use `limit` followed to skip.

`collection.near(latitude, longitude).limit(limit)`

Limits the result to limit documents instead of the default 100.

*Note*: Unlike with multiple explicit limits, `limit` will raise
the implicit default limit imposed by `within`.

`collection.near(latitude, longitude).distance()`

This will add an attribute `distance` to all documents returned, which
contains the distance between the given point and the document in meters.

`collection.near(latitude, longitude).distance(name)`

This will add an attribute *name* to all documents returned, which
contains the distance between the given point and the document in meters.

**Note**: this method is not yet supported by the RocksDB storage engine.

Note: the *near* simple query function is **deprecated** as of ArangoDB 2.6.
The function may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to use the AQL *NEAR* function in an AQL query as follows:

```js
FOR doc IN NEAR(@@collection, @latitude, @longitude, @limit)
    RETURN doc
```

@EXAMPLES

To get the nearest two locations:


<div class="example-container" id="007_collectionNear_container">
<a class="anchorjs-link " href="#007_collectionNear_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="007_collectionNear_long" style="Display: none;">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"loc"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"loc"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"geo/218"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;   <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;        name : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;        loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"1276"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/1276"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KDS--J"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ] 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"1164"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/1164"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KD---B"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/0"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">0</span> 
    ] 
  } 
]
</pre>
<div id="007_collectionNear_container_collapse" onclick="$('#007_collectionNear_long').hide(); $('#007_collectionNear_short').show(); window.location.hash='007_collectionNear_container';" class="example_show_button">Hide execution results</div></div>
<div id="007_collectionNear_short" onclick="$('#007_collectionNear_short').hide(); $('#007_collectionNear_long').show();">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"loc"</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;   <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;        name : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;        loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


If you need the distance as well, then you can use the `distance`
operator:


<div class="example-container" id="008_collectionNearDistance_container">
<a class="anchorjs-link " href="#008_collectionNearDistance_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="008_collectionNearDistance_long" style="Display: none;">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"loc"</span> ] });
{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"loc"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"geo/2340"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;         name : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;         loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).distance().limit(<span class="hljs-number">2</span>).toArray();
[ 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/3397"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"3397"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KMG--H"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1111949.2664455874</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/3286"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"3286"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KLy--B"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/0"</span> 
  } 
]
</pre>
<div id="008_collectionNearDistance_container_collapse" onclick="$('#008_collectionNearDistance_long').hide(); $('#008_collectionNearDistance_short').show(); window.location.hash='008_collectionNearDistance_container';" class="example_show_button">Hide execution results</div></div>
<div id="008_collectionNearDistance_short" onclick="$('#008_collectionNearDistance_short').hide(); $('#008_collectionNearDistance_long').show();">
<pre>
arangosh&gt; db.geo.ensureIndex({ <span class="hljs-attr">type</span>: <span class="hljs-string">"geo"</span>, <span class="hljs-attr">fields</span>: [ <span class="hljs-string">"loc"</span> ] });
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt;     db.geo.save({
........&gt;         name : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j,
........&gt;         loc: [ i, j ] });
........&gt; } }
arangosh&gt; db.geo.near(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).distance().limit(<span class="hljs-number">2</span>).toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/JSF_general_graph_example_description.md -->
@startDocuBlock JSF_general_graph_example_description


For many of the following functions *examples* can be passed in as a parameter.
*Examples* are used to filter the result set for objects that match the conditions.
These *examples* can have the following values:

* *null*, there is no matching executed all found results are valid.
* A *string*, only results are returned, which *_id* equal the value of the string
* An example *object*, defining a set of attributes.
    Only results having these attributes are matched.
* A *list* containing example *objects* and/or *strings*.
    All results matching at least one of the elements in the list are returned.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/databaseMaximalJournalSize.md -->
@startDocuBlock databaseMaximalJournalSize


`--database.maximal-journal-size size`

Maximal size of journal in bytes. Can be overwritten when creating a new
collection. Note that this also limits the maximal size of a single
document.

The default is *32MB*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/foxxQueuesPollInterval.md -->
@startDocuBlock foxxQueuesPollInterval

@brief poll interval for Foxx queues
`--foxx.queues-poll-interval value`

The poll interval for the Foxx queues manager. The value is specified in
seconds. Lower values will mean more immediate and more frequent Foxx
queue job execution, but will make the queue thread wake up and query the
queues more often. When set to a low value, the queue thread might cause
CPU load.

The default is *1* second. If Foxx queues are not used much, then this
value may be increased to make the queues thread wake up less.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/databaseWaitForSync.md -->
@startDocuBlock databaseWaitForSync

@brief default wait for sync behavior
`--database.wait-for-sync boolean`

Default wait-for-sync value. Can be overwritten when creating a new
collection.

The default is *false*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/collectionWithin.md -->
@startDocuBlock collectionWithin

@brief constructs a within query for a collection
`collection.within(latitude, longitude, radius)`

This will find all documents within a given radius around the coordinate
(*latitude*, *longitude*). The returned array is sorted by distance,
beginning with the nearest document.

In order to use the *within* operator, a geo index must be defined for the
collection. This index also defines which attribute holds the coordinates
for the document.  If you have more then one geo-spatial index, you can use
the `geo` operator to select a particular index.


`collection.within(latitude, longitude, radius).distance()`

This will add an attribute `_distance` to all documents returned, which
contains the distance between the given point and the document in meters.

`collection.within(latitude, longitude, radius).distance(name)`

This will add an attribute *name* to all documents returned, which
contains the distance between the given point and the document in meters.

**Note**: this method is not yet supported by the RocksDB storage engine.

Note: the *within* simple query function is **deprecated** as of ArangoDB 2.6.
The function may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the within operator  is
to use the AQL *WITHIN* function in an AQL query as follows:

```
FOR doc IN WITHIN(@@collection, @latitude, @longitude, @radius, @distanceAttributeName)
    RETURN doc
```

@EXAMPLES

To find all documents within a radius of 2000 km use:


<div class="example-container" id="009_collectionWithin_container">
<a class="anchorjs-link " href="#009_collectionWithin_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="009_collectionWithin_long" style="Display: none;">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt; db.geo.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">loc</span>: [ i, j ] }); } }
arangosh&gt; db.geo.within(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2000</span> * <span class="hljs-number">1000</span>).distance().toArray();
[ 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5518"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5518"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KUi--J"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/0"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1111949.2664455874</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5407"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5407"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KUO--D"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/0"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1111949.2664455874</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5521"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5521"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KUm--_"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/10"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1111949.2664455874</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5629"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5629"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KU6--D"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">0</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/10/0"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1111949.2664455874</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5515"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5515"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KUi--H"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">0</span>, 
      <span class="hljs-number">-10</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0/-10"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1568520.556798576</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5410"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5410"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KUO--F"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/10"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1568520.556798576</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5632"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5632"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KU6--F"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">10</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/10/10"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1568520.556798576</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5404"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5404"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KUO--B"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">-10</span>, 
      <span class="hljs-number">-10</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-10/-10"</span> 
  }, 
  { 
    <span class="hljs-string">"distance"</span> : <span class="hljs-number">1568520.556798576</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"geo/5626"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5626"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7KU6--B"</span>, 
    <span class="hljs-string">"loc"</span> : [ 
      <span class="hljs-number">10</span>, 
      <span class="hljs-number">-10</span> 
    ], 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/10/-10"</span> 
  } 
]
</pre>
<div id="009_collectionWithin_container_collapse" onclick="$('#009_collectionWithin_long').hide(); $('#009_collectionWithin_short').show(); window.location.hash='009_collectionWithin_container';" class="example_show_button">Hide execution results</div></div>
<div id="009_collectionWithin_short" onclick="$('#009_collectionWithin_short').hide(); $('#009_collectionWithin_long').show();">
<pre>
arangosh&gt; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">-90</span>;  i &lt;= <span class="hljs-number">90</span>;  i += <span class="hljs-number">10</span>) {
........&gt;  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">-180</span>; j &lt;= <span class="hljs-number">180</span>; j += <span class="hljs-number">10</span>) {
........&gt; db.geo.save({ <span class="hljs-attr">name</span> : <span class="hljs-string">"Name/"</span> + i + <span class="hljs-string">"/"</span> + j, <span class="hljs-attr">loc</span>: [ i, j ] }); } }
arangosh&gt; db.geo.within(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2000</span> * <span class="hljs-number">1000</span>).distance().toArray();
</pre><div class="example_show_button">Show execution results</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/WalLogfileSyncInterval.md -->
@startDocuBlock WalLogfileSyncInterval

@brief interval for automatic, non-requested disk syncs
`--wal.sync-interval`

The interval (in milliseconds) that ArangoDB will use to automatically
synchronize data in its write-ahead logs to disk. Automatic syncs will
only
be performed for not-yet synchronized data, and only for operations that
have been executed without the *waitForSync* attribute.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/databaseForceSyncProperties.md -->
@startDocuBlock databaseForceSyncProperties

@brief force syncing of collection properties to disk
`--database.force-sync-properties boolean`

Force syncing of collection properties to disk after creating a collection
or updating its properties.

If turned off, no fsync will happen for the collection and database
properties stored in `parameter.json` files in the file system. Turning
off this option will speed up workloads that create and drop a lot of
collections (e.g. test suites).

The default is *true*.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/WalLogfileAllowOversizeEntries.md -->
@startDocuBlock WalLogfileAllowOversizeEntries

@brief whether or not oversize entries are allowed
`--wal.allow-oversize-entries`

Whether or not it is allowed to store individual documents that are bigger
than would fit into a single logfile. Setting the option to false will
make
such operations fail with an error. Setting the option to true will make
such operations succeed, but with a high potential performance impact.
The reason is that for each oversize operation, an individual oversize
logfile needs to be created which may also block other operations.
The option should be set to *false* if it is certain that documents will
always have a size smaller than a single logfile.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/WalLogfileHistoricLogfiles.md -->
@startDocuBlock WalLogfileHistoricLogfiles

@brief maximum number of historic logfiles
`--wal.historic-logfiles`

The maximum number of historic logfiles that ArangoDB will keep after they
have been garbage-collected. If no replication is used, there is no need
to keep historic logfiles except for having a local changelog.

In a replication setup, the number of historic logfiles affects the amount
of data a slave can fetch from the master's logs. The more historic
logfiles, the more historic data is available for a slave, which is useful
if the connection between master and slave is unstable or slow. Not having
enough historic logfiles available might lead to logfile data being
deleted
on the master already before a slave has fetched it.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/WalLogfileSize.md -->
@startDocuBlock WalLogfileSize

@brief the size of each WAL logfile
`--wal.logfile-size`

Specifies the filesize (in bytes) for each write-ahead logfile. The
logfile
size should be chosen so that each logfile can store a considerable amount
of
documents. The bigger the logfile size is chosen, the longer it will take
to fill up a single logfile, which also influences the delay until the
data
in a logfile will be garbage-collected and written to collection journals
and datafiles. It also affects how long logfile recovery will take at
server start.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/serverAuthenticateSystemOnly.md -->
@startDocuBlock serverAuthenticateSystemOnly

`--server.authentication-system-only boolean`

Controls whether incoming requests need authentication only if they are
directed to the ArangoDB's internal APIs and features, located at
*/_api/*,
*/_admin/* etc.

If the flag is set to *true*, then HTTP authentication is only
required for requests going to URLs starting with */_*, but not for other
URLs. The flag can thus be used to expose a user-made API without HTTP
authentication to the outside world, but to prevent the outside world from
using the ArangoDB API and the admin interface without authentication.
Note that checking the URL is performed after any database name prefix
has been removed. That means when the actual URL called is
*/_db/_system/myapp/myaction*, the URL */myapp/myaction* will be used for
*authentication-system-only* check.

The default is *true*.

Note that authentication still needs to be enabled for the server regularly 
in order for HTTP authentication to be forced for the ArangoDB API and the
web interface.  Setting only this flag is not enough.

You can control ArangoDB's general authentication feature with the
*--server.authentication* flag.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/foxxQueues.md -->
@startDocuBlock foxxQueues

@brief enable or disable the Foxx queues feature
`--foxx.queues flag`

If *true*, the Foxx queues will be available and jobs in the queues will
be executed asynchronously.

The default is *true*.
When set to `false` the queue manager will be disabled and any jobs
are prevented from being processed, which may reduce CPU load a bit.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/JSF_job_getByType.md -->
@startDocuBlock JSF_job_getByType

@brief Returns the ids of job results with a specific status

@RESTHEADER{GET /_api/job/{type}, Returns list of async jobs}

@RESTURLPARAMETERS

@RESTURLPARAM{type,string,required}
The type of jobs to return. The type can be either done or pending. Setting
the type to done will make the method return the ids of already completed
async
jobs for which results can be fetched. Setting the type to pending will
return
the ids of not yet finished async jobs.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{count,number,optional}

The maximum number of ids to return per call. If not specified, a
server-defined maximum value will be used.

@RESTDESCRIPTION
Returns the list of ids of async jobs with a specific status (either done or
pending).
The list can be used by the client to get an overview of the job system
status and
to retrieve completed job results later.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the list can be compiled successfully. Note: the list might
be empty.

@RESTRETURNCODE{400}
is returned if type is not specified or has an invalid value.

@EXAMPLES

Fetching the list of done jobs:


<div class="example-container" id="JSF_job_getByType_01_container">
<a class="anchorjs-link " href="#JSF_job_getByType_01_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_getByType_01_long">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9597

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/done

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  <span class="hljs-string">"9597"</span> 
]
</pre>
</div>
</div>




Fetching the list of pending jobs:


<div class="example-container" id="JSF_job_getByType_02_container">
<a class="anchorjs-link " href="#JSF_job_getByType_02_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_getByType_02_long">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9598

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/pending

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ ]
</pre>
</div>
</div>




Querying the status of a pending job:
(we create a sleep job therefore...)


<div class="example-container" id="JSF_job_getByType_03_container">
<a class="anchorjs-link " href="#JSF_job_getByType_03_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_getByType_03_long">
<pre>
shell> curl -X POST --header 'x-arango-async: store' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"read"</span> : [ 
      <span class="hljs-string">"_frontend"</span> 
    ] 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () {require('internal').sleep(15.0);}"</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9599

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/pending

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  <span class="hljs-string">"9599"</span> 
]
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9599

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/JSF_job_delete.md -->
@startDocuBlock JSF_job_delete

@brief deletes an async job result

@RESTHEADER{DELETE /_api/job/{type}, Deletes async job}

@RESTURLPARAMETERS

@RESTURLPARAM{type,string,required}
The type of jobs to delete. type can be:
* *all*: Deletes all jobs results. Currently executing or queued async 
  jobs will not be stopped by this call.
* *expired*: Deletes expired results. To determine the expiration status of a 
  result, pass the stamp query parameter. stamp needs to be a UNIX timestamp, 
  and all async job results created at a lower timestamp will be deleted.
* *an actual job-id*: In this case, the call will remove the result of the
  specified async job. If the job is currently executing or queued, it will
  not be aborted.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{stamp,number,optional}
A UNIX timestamp specifying the expiration threshold when type is expired.

@RESTDESCRIPTION
Deletes either all job results, expired job results, or the result of a
specific job.
Clients can use this method to perform an eventual garbage collection of job
results.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the deletion operation was carried out successfully.
This code will also be returned if no results were deleted.

@RESTRETURNCODE{400}
is returned if type is not specified or has an invalid value.

@RESTRETURNCODE{404}
is returned if type is a job-id but no async job with the specified id was
found.

@EXAMPLES

Deleting all jobs:


<div class="example-container" id="JSF_job_delete_01_container">
<a class="anchorjs-link " href="#JSF_job_delete_01_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_delete_01_long">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9592

shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/all

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>




Deleting expired jobs:


<div class="example-container" id="JSF_job_delete_02_container">
<a class="anchorjs-link " href="#JSF_job_delete_02_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_delete_02_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9593

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/time

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"time"</span> : <span class="hljs-number">1580744916.0086863</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/expired?stamp=1580744916.0086863

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/pending

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ ]
</pre>
<div id="JSF_job_delete_02_container_collapse" onclick="$('#JSF_job_delete_02_long').hide(); $('#JSF_job_delete_02_short').show(); window.location.hash='JSF_job_delete_02_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_delete_02_short" onclick="$('#JSF_job_delete_02_short').hide(); $('#JSF_job_delete_02_long').show();">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9593

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/time

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/expired?stamp=1580744916.0086863

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/pending

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ ]
</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Deleting the result of a specific job:


<div class="example-container" id="JSF_job_delete_03_container">
<a class="anchorjs-link " href="#JSF_job_delete_03_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_delete_03_long">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9594

shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9594

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
</div>
</div>




Deleting the result of a non-existing job:


<div class="example-container" id="JSF_job_delete_04_container">
<a class="anchorjs-link " href="#JSF_job_delete_04_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_delete_04_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/AreYouThere

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"not found"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">404</span> 
}
</pre>
<div id="JSF_job_delete_04_container_collapse" onclick="$('#JSF_job_delete_04_long').hide(); $('#JSF_job_delete_04_short').show(); window.location.hash='JSF_job_delete_04_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_delete_04_short" onclick="$('#JSF_job_delete_04_short').hide(); $('#JSF_job_delete_04_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/job/AreYouThere

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/JSF_job_cancel.md -->
@startDocuBlock JSF_job_cancel

@brief cancels an async job

@RESTHEADER{PUT /_api/job/{job-id}/cancel, Cancel async job}

@RESTURLPARAMETERS

@RESTURLPARAM{job-id,string,required}
The async job id.

@RESTDESCRIPTION
Cancels the currently running job identified by job-id. Note that it still
might take some time to actually cancel the running async job.

@RESTRETURNCODES

@RESTRETURNCODE{200}
cancel has been initiated.

@RESTRETURNCODE{400}
is returned if no job-id was specified in the request. In this case,
no x-arango-async-id HTTP header will be returned.

@RESTRETURNCODE{404}
is returned if the job was not found or already deleted or fetched from
the job result list. In this case, no x-arango-async-id HTTP header will
be returned.

@EXAMPLES


<div class="example-container" id="JSF_job_cancel_container">
<a class="anchorjs-link " href="#JSF_job_cancel_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_cancel_long">
<pre>
shell> curl -X POST --header 'x-arango-async: store' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..10 FOR j IN 1..10 LET x = sleep(1.0) FILTER i == 5 &amp;&amp; j == 5 RETURN 42"</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9590

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/pending

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  <span class="hljs-string">"9590"</span> 
]
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9590/cancel

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/pending

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  <span class="hljs-string">"9590"</span> 
]
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/JSF_job_fetch_result.md -->
@startDocuBlock JSF_job_fetch_result

@brief fetches a job result and removes it from the queue

@RESTHEADER{PUT /_api/job/{job-id}, Return result of an async job}

@RESTURLPARAMETERS

@RESTURLPARAM{job-id,string,required}
The async job id.

@RESTDESCRIPTION
Returns the result of an async job identified by job-id. If the async job
result is present on the server, the result will be removed from the list of
result. That means this method can be called for each job-id once.
The method will return the original job result's headers and body, plus the
additional HTTP header x-arango-async-job-id. If this header is present,
then
the job was found and the response contains the original job's result. If
the header is not present, the job was not found and the response contains
status information from the job manager.

@RESTRETURNCODES

@RESTRETURNCODE{204}
is returned if the job requested via job-id is still in the queue of pending
(or not yet finished) jobs. In this case, no x-arango-async-id HTTP header
will be returned.

@RESTRETURNCODE{400}
is returned if no job-id was specified in the request. In this case,
no x-arango-async-id HTTP header will be returned.

@RESTRETURNCODE{404}
is returned if the job was not found or already deleted or fetched from
the job result list. In this case, no x-arango-async-id HTTP header will
be returned.

@EXAMPLES
Not providing a job-id:


<div class="example-container" id="JSF_job_fetch_result_01_container">
<a class="anchorjs-link " href="#JSF_job_fetch_result_01_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_fetch_result_01_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"bad parameter"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="JSF_job_fetch_result_01_container_collapse" onclick="$('#JSF_job_fetch_result_01_long').hide(); $('#JSF_job_fetch_result_01_short').show(); window.location.hash='JSF_job_fetch_result_01_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_fetch_result_01_short" onclick="$('#JSF_job_fetch_result_01_short').hide(); $('#JSF_job_fetch_result_01_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Providing a job-id for a non-existing job:


<div class="example-container" id="JSF_job_fetch_result_02_container">
<a class="anchorjs-link " href="#JSF_job_fetch_result_02_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_fetch_result_02_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/notthere

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"not found"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">404</span> 
}
</pre>
<div id="JSF_job_fetch_result_02_container_collapse" onclick="$('#JSF_job_fetch_result_02_long').hide(); $('#JSF_job_fetch_result_02_short').show(); window.location.hash='JSF_job_fetch_result_02_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_fetch_result_02_short" onclick="$('#JSF_job_fetch_result_02_short').hide(); $('#JSF_job_fetch_result_02_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/notthere

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Fetching the result of an HTTP GET job:


<div class="example-container" id="JSF_job_fetch_result_03_container">
<a class="anchorjs-link " href="#JSF_job_fetch_result_03_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_fetch_result_03_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9595

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9595

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">9595</span>

{ 
  <span class="hljs-string">"server"</span> : <span class="hljs-string">"arango"</span>, 
  <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
  <span class="hljs-string">"license"</span> : <span class="hljs-string">"enterprise"</span> 
}
</pre>
<div id="JSF_job_fetch_result_03_container_collapse" onclick="$('#JSF_job_fetch_result_03_long').hide(); $('#JSF_job_fetch_result_03_short').show(); window.location.hash='JSF_job_fetch_result_03_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_fetch_result_03_short" onclick="$('#JSF_job_fetch_result_03_short').hide(); $('#JSF_job_fetch_result_03_long').show();">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9595

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9595

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">9595</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Fetching the result of an HTTP POST job that failed:


<div class="example-container" id="JSF_job_fetch_result_04_container">
<a class="anchorjs-link " href="#JSF_job_fetch_result_04_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_fetch_result_04_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">" this name is invalid "</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9596

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9596

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">9596</span>

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"expected PUT /_api/collection/&lt;collection-name&gt;/&lt;action&gt;"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="JSF_job_fetch_result_04_container_collapse" onclick="$('#JSF_job_fetch_result_04_long').hide(); $('#JSF_job_fetch_result_04_short').show(); window.location.hash='JSF_job_fetch_result_04_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_fetch_result_04_short" onclick="$('#JSF_job_fetch_result_04_short').hide(); $('#JSF_job_fetch_result_04_long').show();">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">" this name is invalid "</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9596

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9596

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">9596</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/job/JSF_job_getStatusById.md -->
@startDocuBlock JSF_job_getStatusById

@brief Returns the status of a specific job

@RESTHEADER{GET /_api/job/{job-id}, Returns async job}

@RESTURLPARAMETERS

@RESTURLPARAM{job-id,string,required}
The async job id.

@RESTDESCRIPTION
Returns the processing status of the specified job. The processing status
can be
determined by peeking into the HTTP response code of the response.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the job requested via job-id has been executed
and its result is ready to fetch.

@RESTRETURNCODE{204}
is returned if the job requested via job-id is still in the queue of pending
(or not yet finished) jobs.

@RESTRETURNCODE{404}
is returned if the job was not found or already deleted or fetched from the
job result list.

@EXAMPLES

Querying the status of a done job:


<div class="example-container" id="JSF_job_getStatusById_01_container">
<a class="anchorjs-link " href="#JSF_job_getStatusById_01_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_getStatusById_01_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9601

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9601

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">9601</span>

{ 
  <span class="hljs-string">"server"</span> : <span class="hljs-string">"arango"</span>, 
  <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
  <span class="hljs-string">"license"</span> : <span class="hljs-string">"enterprise"</span> 
}
</pre>
<div id="JSF_job_getStatusById_01_container_collapse" onclick="$('#JSF_job_getStatusById_01_long').hide(); $('#JSF_job_getStatusById_01_short').show(); window.location.hash='JSF_job_getStatusById_01_container';" class="example_show_button">Hide response body</div></div>
<div id="JSF_job_getStatusById_01_short" onclick="$('#JSF_job_getStatusById_01_short').hide(); $('#JSF_job_getStatusById_01_long').show();">
<pre>
shell> curl -X PUT --header 'x-arango-async: store' --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9601

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9601

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
x-arango-<span class="hljs-keyword">async</span>-id: <span class="hljs-number">9601</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Querying the status of a pending job:
(therefore we create a long runnging job...)


<div class="example-container" id="JSF_job_getStatusById_02_container">
<a class="anchorjs-link " href="#JSF_job_getStatusById_02_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="JSF_job_getStatusById_02_long">
<pre>
shell> curl -X POST --header 'x-arango-async: store' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"read"</span> : [ 
      <span class="hljs-string">"_frontend"</span> 
    ] 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () {require('internal').sleep(15.0);}"</span> 
}
EOF

HTTP/1.1 202 Accepted
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff
x-arango-async-id: 9602

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/job/9602

HTTP/1.1 204 No Content
content-type: text/plain; charset=utf-8
x-content-type-options: nosniff

</pre>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_routing_reloads.md -->
@startDocuBlock JSF_get_admin_routing_reloads

@brief Reload the routing table.

@RESTHEADER{POST /_admin/routing/reload, Reloads the routing information}

@RESTDESCRIPTION
Reloads the routing information from the collection *routing*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Routing information was reloaded successfully.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/get_admin_server_availability.md -->
@startDocuBlock get_admin_server_availability

@brief Return whether or not a server is available

@RESTHEADER{GET /_admin/server/availability, Return whether or not a server is available}

@RESTDESCRIPTION
Return availability information about a server.

This is a public API so it does *not* require authentication. It is meant to be
used only in the context of server monitoring only.

@RESTRETURNCODES

@RESTRETURNCODE{200}
This API will return HTTP 200 in case the server is up and running and usable for
arbitrary operations, is not set to read-only mode and is currently not a follower 
in case of an active failover setup.

@RESTRETURNCODE{503}
HTTP 503 will be returned in case the server is during startup or during shutdown,
is set to read-only mode or is currently a follower in an active failover setup.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_time.md -->
@startDocuBlock JSF_get_admin_time

@brief Get the current time of the system

@RESTHEADER{GET /_admin/time, Return system time}

@RESTDESCRIPTION
The call returns an object with the attribute *time*. This contains the
current system time as a Unix timestamp with microsecond precision.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Time was returned successfully.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_modules_flush.md -->
@startDocuBlock JSF_get_admin_log

@brief returns the server logs

@RESTHEADER{GET /_admin/log, Read global logs from the server}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{upto,string,optional}
Returns all log entries up to log level *upto*. Note that *upto* must be:
- *fatal* or *0*
- *error* or *1*
- *warning* or *2*
- *info* or *3*
- *debug*  or *4*
The default value is *info*.

@RESTQUERYPARAM{level,string,optional}
Returns all log entries of log level *level*. Note that the query parameters
*upto* and *level* are mutually exclusive.

@RESTQUERYPARAM{start,number,optional}
Returns all log entries such that their log entry identifier (*lid* value)
is greater or equal to *start*.

@RESTQUERYPARAM{size,number,optional}
Restricts the result to at most *size* log entries.

@RESTQUERYPARAM{offset,number,optional}
Starts to return log entries skipping the first *offset* log entries. *offset*
and *size* can be used for pagination.

@RESTQUERYPARAM{search,string,optional}
Only return the log entries containing the text specified in *search*.

@RESTQUERYPARAM{sort,string,optional}
Sort the log entries either ascending (if *sort* is *asc*) or descending
(if *sort* is *desc*) according to their *lid* values. Note that the *lid*
imposes a chronological order. The default value is *asc*.

@RESTDESCRIPTION
Returns fatal, error, warning or info log messages from the server's global log.
The result is a JSON object with the following attributes:

@RESTRETURNCODES

@RESTRETURNCODE{200}

@RESTREPLYBODY{lid,array,required,string}
a list of log entry identifiers. Each log message is uniquely
identified by its @LIT{lid} and the identifiers are in ascending
order.

@RESTREPLYBODY{level,string,required,string}
A list of the loglevels for all log entries.

@RESTREPLYBODY{timestamp,array,required,string}
a list of the timestamps as seconds since 1970-01-01 for all log
entries.

@RESTREPLYBODY{text,string,required,string}
a list of the texts of all log entries

@RESTREPLYBODY{topic,string,required,string}
a list of the topics of all log entries

@RESTREPLYBODY{totalAmount,integer,required,int64}
the total amount of log entries before pagination.

@RESTRETURNCODE{400}
is returned if invalid values are specified for *upto* or *level*.

@RESTRETURNCODE{500}
is returned if the server cannot generate the result due to an out-of-memory
error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_modules_flush.md -->
@startDocuBlock JSF_get_admin_loglevel

@brief returns the current loglevel settings

@RESTHEADER{GET /_admin/log/level, Return the current server loglevel}

@RESTDESCRIPTION
Returns the server's current loglevel settings.
The result is a JSON object with the log topics being the object keys, and
the log levels being the object values.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request is valid

@RESTRETURNCODE{500}
is returned if the server cannot generate the result due to an out-of-memory
error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_modules_flush.md -->
@startDocuBlock JSF_put_admin_loglevel

@brief modifies the current loglevel settings

@RESTHEADER{PUT /_admin/log/level, Modify and return the current server loglevel}

@RESTDESCRIPTION
Modifies and returns the server's current loglevel settings.
The request body must be a JSON object with the log topics being the object keys
and the log levels being the object values.

The result is a JSON object with the adjusted log topics being the object keys, and
the adjusted log levels being the object values.

It can set the loglevel of all facilities by only specifying the loglevel as string without json.

Possible loglevels are:
 - FATAL - There will be no way out of this. ArangoDB will go down after this message.
 - ERROR - This is an error. you should investigate and fix it. It may harm your production.
 - WARNING - This may be serious application-wise, but we don't know.
 - INFO - Something has happened, take notice, but no drama attached.
 - DEBUG - output debug messages
 - TRACE - trace - prepare your log to be flooded - don't use in production.

@RESTBODYPARAM{agency,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{agencycomm,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{authentication,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{authorization,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{cache,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{cluster,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{collector,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{communication,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{compactor,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{config,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{datafiles,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{development,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{engines,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{general,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{graphs,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{heartbeat,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{memory,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{mmap,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{performance,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{pregel,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{queries,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{replication,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{requests,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{rocksdb,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{ssl,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{startup,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{supervision,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{syscall,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{threads,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{trx,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{v8,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{views,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{ldap,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{audit-authentication,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{audit-database,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{audit-collection,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{audit-view,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{audit-documentation,string,optional,string}
One of the possible loglevels.

@RESTBODYPARAM{audit-service,string,optional,string}
One of the possible loglevels.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request is valid

@RESTRETURNCODE{400}
is returned when the request body contains invalid JSON.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the server cannot generate the result due to an out-of-memory
error.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_database_version.md -->
@startDocuBlock JSF_get_admin_database_version

@brief returns the version of the database.

@RESTHEADER{GET /_admin/database/target-version, Return the required version of the database}

@RESTDESCRIPTION
Returns the database-version that this server requires.
The version is returned in the *version* attribute of the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned in all cases.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_api_cluster_endpoints.md -->
@startDocuBlock JSF_get_api_cluster_endpoints

@brief This API call returns information about all coordinator endpoints (cluster only).

@RESTHEADER{GET /_api/cluster/endpoints, Get information about all coordinator endpoints}

@RESTDESCRIPTION 
Returns an object with an attribute `endpoints`, which contains an
array of objects, which each have the attribute `endpoint`, whose value
is a string with the endpoint description. There is an entry for each
coordinator in the cluster. This method only works on coordinators in
cluster mode. In case of an error the `error` attribute is set to
`true`.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@RESTRETURNCODE{403} server is not a coordinator or method was not GET.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_echo.md -->
@startDocuBlock JSF_get_admin_echo

@brief Send back what was sent in, headers, post body etc.

@RESTHEADER{GET /_admin/echo, Return current request}

@RESTDESCRIPTION
The call returns an object with the following attributes:

- *headers*: object with HTTP headers received

- *requestType*: the HTTP request method (e.g. GET)

- *parameters*: object with query parameters received

@RESTRETURNCODES

@RESTRETURNCODE{200}
Echo was returned successfully.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_post_admin_test.md -->
@startDocuBlock JSF_post_admin_test

@brief show the available unittests on the server.

@RESTHEADER{POST /_admin/test, Runs tests on server}

@RESTALLBODYPARAM{body,object,required}
A JSON object containing an attribute *tests* which lists the files
containing the test suites.

@RESTDESCRIPTION
Executes the specified tests on the server and returns an object with the
test results. The object has an attribute "error" which states whether
any error occurred. The object also has an attribute "passed" which
indicates which tests passed and which did not.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_api_tasks.md -->
@startDocuBlock JSF_get_api_tasks

@brief Retrieves  one currently active server task

@RESTHEADER{GET /_api/tasks/{id}, Fetch one task with id}

@RESTURLPARAM{id,string,required}
The id of the task to fetch.

@RESTDESCRIPTION
fetches one existing tasks on the server specified by *id*

@RESTRETURNCODE{200}
The requested task

@EXAMPLES

Fetching a single task by its id

<div class="example-container" id="RestTasksListOne_container">
<a class="anchorjs-link " href="#RestTasksListOne_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksListOne_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/statistics-average-collector

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"statistics-average-collector"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"statistics-average-collector"</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744922.1661375</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">900</span>, 
  <span class="hljs-string">"offset"</span> : <span class="hljs-number">20</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { require('@arangodb/statistics').historianAverage(); } )(params);"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTasksListOne_container_collapse" onclick="$('#RestTasksListOne_long').hide(); $('#RestTasksListOne_short').show(); window.location.hash='RestTasksListOne_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksListOne_short" onclick="$('#RestTasksListOne_short').hide(); $('#RestTasksListOne_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/statistics-average-collector

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





trying to fetch a non-existing task

<div class="example-container" id="RestTasksListNonExisting_container">
<a class="anchorjs-link " href="#RestTasksListNonExisting_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksListNonExisting_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/non-existing-task

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1852</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"task not found"</span> 
}
</pre>
<div id="RestTasksListNonExisting_container_collapse" onclick="$('#RestTasksListNonExisting_long').hide(); $('#RestTasksListNonExisting_short').show(); window.location.hash='RestTasksListNonExisting_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksListNonExisting_short" onclick="$('#RestTasksListNonExisting_short').hide(); $('#RestTasksListNonExisting_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/non-existing-task

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_statistics_description.md -->
@startDocuBlock JSF_get_admin_statistics_description

@brief fetch descriptive info of statistics

@RESTHEADER{GET /_admin/statistics-description, Statistics description}

@RESTDESCRIPTION
Returns a description of the statistics returned by */_admin/statistics*.
The returned objects contains an array of statistics groups in the attribute
*groups* and an array of statistics figures in the attribute *figures*.

A statistics group is described by

- *group*: The identifier of the group.
- *name*: The name of the group.
- *description*: A description of the group.

A statistics figure is described by

- *group*: The identifier of the group to which this figure belongs.
- *identifier*: The identifier of the figure. It is unique within the group.
- *name*: The name of the figure.
- *description*: A description of the figure.
- *type*: Either *current*, *accumulated*, or *distribution*.
- *cuts*: The distribution vector.
- *units*: Units in which the figure is measured.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Description was returned successfully.

@EXAMPLES


<div class="example-container" id="RestAdminStatisticsDescription1_container">
<a class="anchorjs-link " href="#RestAdminStatisticsDescription1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestAdminStatisticsDescription1_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/statistics-description

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"groups"</span> : [ 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Process Statistics"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Statistics about the ArangoDB process"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Client Connection Statistics"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Statistics about the connections."</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP Request Statistics"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Statistics about the HTTP requests."</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"server"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Server Statistics"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Statistics about the ArangoDB server"</span> 
    } 
  ], 
  <span class="hljs-string">"figures"</span> : [ 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"userTime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"User Time"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Amount of time that this process has been scheduled in user mode, measured in seconds."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"systemTime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"System Time"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Amount of time that this process has been scheduled in kernel mode, measured in seconds."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"numberOfThreads"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Number of Threads"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of threads in the arangod process."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"residentSize"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Resident Set Size"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"The total size of the number of pages the process has in real memory. This is just the pages which count toward text, data, or stack space. This does not include pages which have not been demand-loaded in, or which are swapped out. The resident set size is reported in bytes."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"bytes"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"residentSizePercent"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Resident Set Size"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"The percentage of physical memory used by the process as resident set size."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"percent"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"virtualSize"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Virtual Memory Size"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"On Windows, this figure contains the total amount of memory that the memory manager has committed for the arangod process. On other systems, this figure contains The size of the virtual memory the process is using."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"bytes"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"minorPageFaults"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Minor Page Faults"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"The number of minor faults the process has made which have not required loading a memory page from disk. This figure is not reported on Windows."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"system"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"majorPageFaults"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Major Page Faults"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"On Windows, this figure contains the total number of page faults. On other system, this figure contains the number of major faults the process has made which have required loading a memory page from disk."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"httpConnections"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Client Connections"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"The number of connections that are currently open."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"totalTime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Total Time"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Total time needed to answer a request."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"distribution"</span>, 
      <span class="hljs-string">"cuts"</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestTime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Request Time"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Request time needed to answer a request."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"distribution"</span>, 
      <span class="hljs-string">"cuts"</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"queueTime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Queue Time"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Queue time needed to answer a request."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"distribution"</span>, 
      <span class="hljs-string">"cuts"</span> : [ 
        <span class="hljs-number">0.01</span>, 
        <span class="hljs-number">0.05</span>, 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">0.2</span>, 
        <span class="hljs-number">0.5</span>, 
        <span class="hljs-number">1</span> 
      ], 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"bytesSent"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bytes Sent"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Bytes sents for a request."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"distribution"</span>, 
      <span class="hljs-string">"cuts"</span> : [ 
        <span class="hljs-number">250</span>, 
        <span class="hljs-number">1000</span>, 
        <span class="hljs-number">2000</span>, 
        <span class="hljs-number">5000</span>, 
        <span class="hljs-number">10000</span> 
      ], 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"bytes"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"bytesReceived"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bytes Received"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Bytes receiveds for a request."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"distribution"</span>, 
      <span class="hljs-string">"cuts"</span> : [ 
        <span class="hljs-number">250</span>, 
        <span class="hljs-number">1000</span>, 
        <span class="hljs-number">2000</span>, 
        <span class="hljs-number">5000</span>, 
        <span class="hljs-number">10000</span> 
      ], 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"bytes"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"client"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"connectionTime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Connection Time"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Total connection time of a client."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"distribution"</span>, 
      <span class="hljs-string">"cuts"</span> : [ 
        <span class="hljs-number">0.1</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">60</span> 
      ], 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsTotal"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Total requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Total number of HTTP requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsAsync"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Async requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of asynchronously executed HTTP requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsGet"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP GET requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP GET requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsHead"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP HEAD requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP HEAD requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsPost"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP POST requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP POST requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsPut"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP PUT requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP PUT requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsPatch"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP PATCH requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP PATCH requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsDelete"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP DELETE requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP DELETE requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsOptions"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"HTTP OPTIONS requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of HTTP OPTIONS requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"http"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"requestsOther"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"other HTTP requests"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of other HTTP requests."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"accumulated"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"number"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"server"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"uptime"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Server Uptime"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Number of seconds elapsed since server start."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"seconds"</span> 
    }, 
    { 
      <span class="hljs-string">"group"</span> : <span class="hljs-string">"server"</span>, 
      <span class="hljs-string">"identifier"</span> : <span class="hljs-string">"physicalMemory"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Physical Memory"</span>, 
      <span class="hljs-string">"description"</span> : <span class="hljs-string">"Physical memory in bytes."</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"current"</span>, 
      <span class="hljs-string">"units"</span> : <span class="hljs-string">"bytes"</span> 
    } 
  ], 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestAdminStatisticsDescription1_container_collapse" onclick="$('#RestAdminStatisticsDescription1_long').hide(); $('#RestAdminStatisticsDescription1_short').show(); window.location.hash='RestAdminStatisticsDescription1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAdminStatisticsDescription1_short" onclick="$('#RestAdminStatisticsDescription1_short').hide(); $('#RestAdminStatisticsDescription1_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/statistics-description

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_server_role.md -->
@startDocuBlock JSF_get_admin_server_role

@brief Get to know whether this server is a Coordinator or DB-Server

@RESTHEADER{GET /_admin/server/role, Return role of a server in a cluster}

@RESTDESCRIPTION
Returns the role of a server in a cluster.
The role is returned in the *role* attribute of the result.
Possible return values for *role* are:
- *SINGLE*: the server is a standalone server without clustering
- *COORDINATOR*: the server is a coordinator in a cluster
- *PRIMARY*: the server is a primary database server in a cluster
- *SECONDARY*: the server is a secondary database server in a cluster
- *AGENT*: the server is an agency node in a cluster
- *UNDEFINED*: in a cluster, *UNDEFINED* is returned if the server role cannot be
   determined.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned in all cases.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_api_endpoint.md -->
@startDocuBlock JSF_get_api_endpoint

@brief This API call returns the list of all endpoints (single server).

@RESTHEADER{GET /_api/endpoint, Return list of all endpoints}

@RESTDESCRIPTION
*THIS API IS DEPRECATED*

Returns an array of all configured endpoints the server is listening on.

The result is a JSON array of JSON objects, each with `"entrypoint"' as
the only attribute, and with the value being a string describing the
endpoint.

**Note**: retrieving the array of all endpoints is allowed in the system database
only. Calling this action in any other database will make the server return
an error.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned when the array of endpoints can be determined successfully.

@RESTRETURNCODE{400}
is returned if the action is not carried out in the system database.

@RESTRETURNCODE{405}
The server will respond with *HTTP 405* if an unsupported HTTP method is used.

@EXAMPLES


<div class="example-container" id="RestEndpointGet_container">
<a class="anchorjs-link " href="#RestEndpointGet_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestEndpointGet_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/endpoint

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"http://127.0.0.1:48236"</span> 
  } 
]
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_engine.md -->
@startDocuBlock JSF_get_engine

@brief returns the engine the type the server is running with

@RESTHEADER{GET /_api/engine, Return server database engine type}

@RESTDESCRIPTION
Returns the storage engine the server is configured to use.
The response is a JSON object with the following attributes:

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned in all cases.

@RESTREPLYBODY{name,string,required,string}
will be *mmfiles* or *rocksdb*

@EXAMPLES

Return the active storage engine


<div class="example-container" id="RestEngine_container">
<a class="anchorjs-link " href="#RestEngine_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestEngine_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/engine

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"mmfiles"</span>, 
  <span class="hljs-string">"supports"</span> : { 
    <span class="hljs-string">"dfdb"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"indexes"</span> : [ 
      <span class="hljs-string">"primary"</span>, 
      <span class="hljs-string">"edge"</span>, 
      <span class="hljs-string">"hash"</span>, 
      <span class="hljs-string">"skiplist"</span>, 
      <span class="hljs-string">"persistent"</span>, 
      <span class="hljs-string">"geo"</span>, 
      <span class="hljs-string">"fulltext"</span> 
    ] 
  } 
}
</pre>
<div id="RestEngine_container_collapse" onclick="$('#RestEngine_long').hide(); $('#RestEngine_short').show(); window.location.hash='RestEngine_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEngine_short" onclick="$('#RestEngine_short').hide(); $('#RestEngine_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/engine

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_server_id.md -->
@startDocuBlock JSF_get_admin_server_id

@brief Get to know the internal id of the server

@RESTHEADER{GET /_admin/server/id, Return id of a server in a cluster}

@RESTDESCRIPTION
Returns the id of a server in a cluster. The request will fail if the
server is not running in cluster mode.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the server is running in cluster mode.

@RESTRETURNCODE{500}
Is returned when the server is not running in cluster mode.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_status.md -->
@startDocuBlock JSF_get_admin_status

@brief returns status information of the server. 

@RESTHEADER{GET /_admin/status, Return status information}

@RESTDESCRIPTION
Returns status information about the server.

This is intended for manual use by the support and should
never be used for monitoring or automatic tests. The results
are subject to change without notice.

The call returns an object with the following attributes:

- *server*: always *arango*.

- *license*: either *community* or *enterprise*.

- *version*: the server version as string.

- *mode* : either *server* or *console*.

- *host*: the hostname, see *ServerState*.

- *serverInfo.role*: either *SINGLE*, *COORDINATOR*, *PRIMARY*, *AGENT*.

- *serverInfo.writeOpsEnabled*: boolean, true if writes are enabled.

- *serverInfo.maintenance*: boolean, true if maintenace mode is enabled.

- *agency.endpoints*: a list of possible agency endpoints.

An agent, coordinator or primary will also have

- *serverInfo.persistedId*: the persisted ide, e. g. *"CRDN-e427b441-5087-4a9a-9983-2fb1682f3e2a"*.

A coordinator or primary will also have

- *serverInfo.state*: *SERVING*

- *serverInfo.address*: the address of the server, e. g. *tcp://[::1]:8530*.

- *serverInfo.serverId*: the server ide, e. g. *"CRDN-e427b441-5087-4a9a-9983-2fb1682f3e2a"*.

A coordintor will also have

- *coordinator.foxxmaster*: the server id of the foxx master.

- *coordinator.isFoxxmaster*: boolean, true if the server is the foxx master.

An agent will also have

- *agent.id*: server id of this agent.

- *agent.leaderId*: server id of the leader.

- *agent.leading*: boolean, true if leading.

- *agent.endpoint*: the endpoint of this agent.

- *agent.term*: current term number.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Status information was returned successfully.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_put_api_new_tasks.md -->
@startDocuBlock JSF_put_api_new_tasks

@brief registers a new task with a pre-defined id

@RESTHEADER{PUT /_api/tasks/{id}, creates a task with id}

@RESTURLPARAM{id,string,required}
The id of the task to create

@RESTBODYPARAM{name,string,required,string}
The name of the task

@RESTBODYPARAM{command,string,required,string}
The JavaScript code to be executed

@RESTBODYPARAM{params,string,required,string}
The parameters to be passed into command

@RESTBODYPARAM{period,integer,optional,int64}
number of seconds between the executions

@RESTBODYPARAM{offset,integer,optional,int64}
Number of seconds initial delay 

@RESTDESCRIPTION
registers a new task with the specified id

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the task *id* already exists or the rest body is not accurate, *HTTP 400* is returned.

@EXAMPLES


<div class="example-container" id="RestTasksPutWithId_container">
<a class="anchorjs-link " href="#RestTasksPutWithId_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksPutWithId_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/tasks/sampleTask &lt;&lt;EOF
{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function(params) { require('@arangodb').print(params); })(params)"</span>, 
  <span class="hljs-string">"params"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"bar"</span> : <span class="hljs-string">"foo"</span> 
  }, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"sampleTask"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744927.6120133</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"offset"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { (function(params) { require('@arangodb').print(params); })(params) } )(params);"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTasksPutWithId_container_collapse" onclick="$('#RestTasksPutWithId_long').hide(); $('#RestTasksPutWithId_short').show(); window.location.hash='RestTasksPutWithId_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksPutWithId_short" onclick="$('#RestTasksPutWithId_short').hide(); $('#RestTasksPutWithId_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/tasks/sampleTask &lt;&lt;EOF
{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function(params) { require('@arangodb').print(params); })(params)"</span>, 
  <span class="hljs-string">"params"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"bar"</span> : <span class="hljs-string">"foo"</span> 
  }, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_api_return.md -->
@startDocuBlock JSF_get_api_return

@brief returns the server version number

@RESTHEADER{GET /_api/version, Return server version}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{details,boolean,optional}
If set to *true*, the response will contain a *details* attribute with
additional information about included components and their versions. The
attribute names and internals of the *details* object may vary depending on
platform and ArangoDB version.

@RESTDESCRIPTION
Returns the server name and version number. The response is a JSON object
with the following attributes:

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned in all cases.

@RESTREPLYBODY{server,string,required,string}
will always contain *arango*

@RESTREPLYBODY{version,string,required,string}
the server version string. The string has the format
"*major*.*minor*.*sub*". *major* and *minor* will be numeric, and *sub*
may contain a number or a textual version.

@RESTREPLYBODY{details,object,optional,}
an optional JSON object with additional details. This is
returned only if the *details* query parameter is set to *true* in the
request.

@EXAMPLES

Return the version information


<div class="example-container" id="RestVersion_container">
<a class="anchorjs-link " href="#RestVersion_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestVersion_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"server"</span> : <span class="hljs-string">"arango"</span>, 
  <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
  <span class="hljs-string">"license"</span> : <span class="hljs-string">"enterprise"</span> 
}
</pre>
<div id="RestVersion_container_collapse" onclick="$('#RestVersion_long').hide(); $('#RestVersion_short').show(); window.location.hash='RestVersion_container';" class="example_show_button">Hide response body</div></div>
<div id="RestVersion_short" onclick="$('#RestVersion_short').hide(); $('#RestVersion_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/version

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Return the version information with details


<div class="example-container" id="RestVersionDetails_container">
<a class="anchorjs-link " href="#RestVersionDetails_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestVersionDetails_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/version?details=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"server"</span> : <span class="hljs-string">"arango"</span>, 
  <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
  <span class="hljs-string">"license"</span> : <span class="hljs-string">"enterprise"</span>, 
  <span class="hljs-string">"details"</span> : { 
    <span class="hljs-string">"architecture"</span> : <span class="hljs-string">"64bit"</span>, 
    <span class="hljs-string">"arm"</span> : <span class="hljs-string">"false"</span>, 
    <span class="hljs-string">"asan"</span> : <span class="hljs-string">"false"</span>, 
    <span class="hljs-string">"asm-crc32"</span> : <span class="hljs-string">"true"</span>, 
    <span class="hljs-string">"assertions"</span> : <span class="hljs-string">"false"</span>, 
    <span class="hljs-string">"boost-version"</span> : <span class="hljs-string">"1.62.0"</span>, 
    <span class="hljs-string">"build-date"</span> : <span class="hljs-string">"2020-02-03 15:41:27"</span>, 
    <span class="hljs-string">"build-repository"</span> : <span class="hljs-string">"heads/3.3-0-g21629c6f16-dirty"</span>, 
    <span class="hljs-string">"compiler"</span> : <span class="hljs-string">"gcc [6.4.0]"</span>, 
    <span class="hljs-string">"cplusplus"</span> : <span class="hljs-string">"201103"</span>, 
    <span class="hljs-string">"debug"</span> : <span class="hljs-string">"false"</span>, 
    <span class="hljs-string">"endianness"</span> : <span class="hljs-string">"little"</span>, 
    <span class="hljs-string">"enterprise-version"</span> : <span class="hljs-string">"enterprise"</span>, 
    <span class="hljs-string">"failure-tests"</span> : <span class="hljs-string">"false"</span>, 
    <span class="hljs-string">"fd-client-event-handler"</span> : <span class="hljs-string">"poll"</span>, 
    <span class="hljs-string">"fd-setsize"</span> : <span class="hljs-string">"1024"</span>, 
    <span class="hljs-string">"full-version-string"</span> : <span class="hljs-string">"ArangoDB 3.3.25 enterprise [linux] 64bit, using jemalloc, build heads/3.3-0-g21629c6f16-dirty, VPack 0.1.30, RocksDB 5.6.0, ICU 58.1, V8 5.7.492.77, OpenSSL 1.1.0l  10 Sep 2019"</span>, 
    <span class="hljs-string">"icu-version"</span> : <span class="hljs-string">"58.1"</span>, 
    <span class="hljs-string">"jemalloc"</span> : <span class="hljs-string">"true"</span>, 
    <span class="hljs-string">"maintainer-mode"</span> : <span class="hljs-string">"false"</span>, 
    <span class="hljs-string">"ndebug"</span> : <span class="hljs-string">"true"</span>, 
    <span class="hljs-string">"openssl-version"</span> : <span class="hljs-string">"OpenSSL 1.1.0l  10 Sep 2019"</span>, 
    <span class="hljs-string">"optimisation flags"</span> : <span class="hljs-string">"-march=nehalem -msse2 -msse3 -mssse3 -msse4.1 -msse4.2 -mno-sse4a -mno-avx -mno-fma -mno-bmi2 -mno-avx2 -mno-xop -mno-fma4 -mno-avx512f -mno-avx512vl -mno-avx512pf -mno-avx512er -mno-avx512cd -mno-avx512dq -mno-avx512bw -mno-avx512ifma -mno-avx512vbmi"</span>, 
    <span class="hljs-string">"platform"</span> : <span class="hljs-string">"linux"</span>, 
    <span class="hljs-string">"reactor-type"</span> : <span class="hljs-string">"epoll"</span>, 
    <span class="hljs-string">"rocksdb-version"</span> : <span class="hljs-string">"5.6.0"</span>, 
    <span class="hljs-string">"server-version"</span> : <span class="hljs-string">"3.3.25"</span>, 
    <span class="hljs-string">"sizeof int"</span> : <span class="hljs-string">"4"</span>, 
    <span class="hljs-string">"sizeof void*"</span> : <span class="hljs-string">"8"</span>, 
    <span class="hljs-string">"sse42"</span> : <span class="hljs-string">"true"</span>, 
    <span class="hljs-string">"unaligned-access"</span> : <span class="hljs-string">"true"</span>, 
    <span class="hljs-string">"v8-version"</span> : <span class="hljs-string">"5.7.492.77"</span>, 
    <span class="hljs-string">"vpack-version"</span> : <span class="hljs-string">"0.1.30"</span>, 
    <span class="hljs-string">"zlib-version"</span> : <span class="hljs-string">"1.2.11"</span>, 
    <span class="hljs-string">"mode"</span> : <span class="hljs-string">"server"</span>, 
    <span class="hljs-string">"host"</span> : <span class="hljs-string">"c07-linux.test"</span> 
  } 
}
</pre>
<div id="RestVersionDetails_container_collapse" onclick="$('#RestVersionDetails_long').hide(); $('#RestVersionDetails_short').show(); window.location.hash='RestVersionDetails_container';" class="example_show_button">Hide response body</div></div>
<div id="RestVersionDetails_short" onclick="$('#RestVersionDetails_short').hide(); $('#RestVersionDetails_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/version?details=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_admin_statistics.md -->
@startDocuBlock JSF_get_admin_statistics

@brief return the statistics information

@RESTHEADER{GET /_admin/statistics, Read the statistics}

@RESTDESCRIPTION
Returns the statistics information. The returned object contains the
statistics figures grouped together according to the description returned by
*_admin/statistics-description*. For instance, to access a figure *userTime*
from the group *system*, you first select the sub-object describing the
group stored in *system* and in that sub-object the value for *userTime* is
stored in the attribute of the same name.

In case of a distribution, the returned object contains the total count in
*count* and the distribution list in *counts*. The sum (or total) of the
individual values is returned in *sum*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Statistics were returned successfully.

@EXAMPLES


<div class="example-container" id="RestAdminStatistics1_container">
<a class="anchorjs-link " href="#RestAdminStatistics1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestAdminStatistics1_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/statistics

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"time"</span> : <span class="hljs-number">1580744917.9794865</span>, 
  <span class="hljs-string">"enabled"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"system"</span> : { 
    <span class="hljs-string">"minorPageFaults"</span> : <span class="hljs-number">86457</span>, 
    <span class="hljs-string">"majorPageFaults"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"userTime"</span> : <span class="hljs-number">3.73</span>, 
    <span class="hljs-string">"systemTime"</span> : <span class="hljs-number">0.79</span>, 
    <span class="hljs-string">"numberOfThreads"</span> : <span class="hljs-number">67</span>, 
    <span class="hljs-string">"residentSize"</span> : <span class="hljs-number">446304256</span>, 
    <span class="hljs-string">"residentSizePercent"</span> : <span class="hljs-number">0.006610579985706329</span>, 
    <span class="hljs-string">"virtualSize"</span> : <span class="hljs-number">3858657280</span> 
  }, 
  <span class="hljs-string">"client"</span> : { 
    <span class="hljs-string">"httpConnections"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"connectionTime"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">"totalTime"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">3.193789482116699</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">4168</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">4134</span>, 
        <span class="hljs-number">31</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">"requestTime"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">0.03416323661804199</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">4168</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">4167</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">"queueTime"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">0.03587150573730469</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">1215</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">1215</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">"ioTime"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">3.1237547397613525</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">4168</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">4135</span>, 
        <span class="hljs-number">30</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">1</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">"bytesSent"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">1872846</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">4168</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">319</span>, 
        <span class="hljs-number">3488</span>, 
        <span class="hljs-number">342</span>, 
        <span class="hljs-number">19</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    <span class="hljs-string">"bytesReceived"</span> : { 
      <span class="hljs-string">"sum"</span> : <span class="hljs-number">901849</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">4168</span>, 
      <span class="hljs-string">"counts"</span> : [ 
        <span class="hljs-number">3827</span>, 
        <span class="hljs-number">341</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  }, 
  <span class="hljs-string">"http"</span> : { 
    <span class="hljs-string">"requestsTotal"</span> : <span class="hljs-number">4168</span>, 
    <span class="hljs-string">"requestsAsync"</span> : <span class="hljs-number">9</span>, 
    <span class="hljs-string">"requestsGet"</span> : <span class="hljs-number">1088</span>, 
    <span class="hljs-string">"requestsHead"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"requestsPost"</span> : <span class="hljs-number">2851</span>, 
    <span class="hljs-string">"requestsPut"</span> : <span class="hljs-number">72</span>, 
    <span class="hljs-string">"requestsPatch"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"requestsDelete"</span> : <span class="hljs-number">154</span>, 
    <span class="hljs-string">"requestsOptions"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"requestsOther"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"server"</span> : { 
    <span class="hljs-string">"uptime"</span> : <span class="hljs-number">6.654715538024902</span>, 
    <span class="hljs-string">"physicalMemory"</span> : <span class="hljs-number">67513630720</span>, 
    <span class="hljs-string">"v8Context"</span> : { 
      <span class="hljs-string">"available"</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">"busy"</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">"dirty"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"free"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"max"</span> : <span class="hljs-number">32</span> 
    }, 
    <span class="hljs-string">"threads"</span> : { 
      <span class="hljs-string">"running"</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">"working"</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">"blocked"</span> : <span class="hljs-number">0</span> 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestAdminStatistics1_container_collapse" onclick="$('#RestAdminStatistics1_long').hide(); $('#RestAdminStatistics1_short').show(); window.location.hash='RestAdminStatistics1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAdminStatistics1_short" onclick="$('#RestAdminStatistics1_short').hide(); $('#RestAdminStatistics1_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/statistics

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_post_admin_execute.md -->
@startDocuBlock JSF_post_admin_execute

@brief Execute a script on the server.

@RESTHEADER{POST /_admin/execute, Execute program}

@RESTALLBODYPARAM{body,string,required}
The body to be executed.

@RESTDESCRIPTION
Executes the javascript code in the body on the server as the body
of a function with no arguments. If you have a *return* statement
then the return value you produce will be returned as content type
*application/json*. If the parameter *returnAsJSON* is set to
*true*, the result will be a JSON object describing the return value
directly, otherwise a string produced by JSON.stringify will be
returned.

Note that this API endpoint will only be present if the server was
started with the option `--javascript.allow-admin-execute true`.

The default value of this option is `false`, which disables the execution of 
user-defined code and disables this API endpoint entirely. 
This is also the recommended setting for production. 

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_post_api_new_tasks.md -->
@startDocuBlock JSF_post_api_new_tasks

@brief creates a new task

@RESTHEADER{POST /_api/tasks, creates a task}

@RESTBODYPARAM{name,string,required,string}
The name of the task

@RESTBODYPARAM{command,string,required,string}
The JavaScript code to be executed

@RESTBODYPARAM{params,string,required,string}
The parameters to be passed into command

@RESTBODYPARAM{period,integer,optional,int64}
number of seconds between the executions

@RESTBODYPARAM{offset,integer,optional,int64}
Number of seconds initial delay 

@RESTDESCRIPTION
creates a new task with a generated id

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the post body is not accurate, a *HTTP 400* is returned.

@EXAMPLES


<div class="example-container" id="RestTasksCreate_container">
<a class="anchorjs-link " href="#RestTasksCreate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksCreate_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/tasks/ &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function(params) { require('@arangodb').print(params); })(params)"</span>, 
  <span class="hljs-string">"params"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"bar"</span> : <span class="hljs-string">"foo"</span> 
  }, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"12058"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744927.591781</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"offset"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { (function(params) { require('@arangodb').print(params); })(params) } )(params);"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/12058

</pre>
<div id="RestTasksCreate_container_collapse" onclick="$('#RestTasksCreate_long').hide(); $('#RestTasksCreate_short').show(); window.location.hash='RestTasksCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksCreate_short" onclick="$('#RestTasksCreate_short').hide(); $('#RestTasksCreate_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/tasks/ &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"SampleTask"</span>, 
  <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function(params) { require('@arangodb').print(params); })(params)"</span>, 
  <span class="hljs-string">"params"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"bar"</span> : <span class="hljs-string">"foo"</span> 
  }, 
  <span class="hljs-string">"period"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/12058

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_api_initiate.md -->
@startDocuBlock JSF_get_api_initiate

@brief initiates the shutdown sequence

@RESTHEADER{DELETE /_admin/shutdown, Initiate shutdown sequence}

@RESTDESCRIPTION
This call initiates a clean shutdown sequence. Requires administrative privileges

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned in all cases, `OK` will be returned in the result buffer on success.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_get_api_tasks_all.md -->
@startDocuBlock JSF_get_api_tasks_all

@brief Retrieves all currently active server tasks

@RESTHEADER{GET /_api/tasks/, Fetch all tasks or one task}

@RESTDESCRIPTION
fetches all existing tasks on the server

@RESTRETURNCODE{200}
The list of tasks

@EXAMPLES

Fetching all tasks

<div class="example-container" id="RestTasksListAll_container">
<a class="anchorjs-link " href="#RestTasksListAll_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksListAll_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"statistics-gc"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"statistics-gc"</span>, 
    <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744922.1662564</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
    <span class="hljs-string">"period"</span> : <span class="hljs-number">450</span>, 
    <span class="hljs-string">"offset"</span> : <span class="hljs-number">32.191097</span>, 
    <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { require('@arangodb/statistics').garbageCollector(); } )(params);"</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
  }, 
  { 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"84"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"user-defined task"</span>, 
    <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744912.214425</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
    <span class="hljs-string">"period"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"offset"</span> : <span class="hljs-number">0.000001</span>, 
    <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { (function () {\n        require('@arangodb/foxx/queues/manager').manage();\n      })(params) } )(params);"</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
  }, 
  { 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"statistics-collector"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"statistics-collector"</span>, 
    <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744922.165992</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
    <span class="hljs-string">"period"</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">"offset"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { require('@arangodb/statistics').historian(); } )(params);"</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
  }, 
  { 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"statistics-average-collector"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"statistics-average-collector"</span>, 
    <span class="hljs-string">"created"</span> : <span class="hljs-number">1580744922.1661375</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"periodic"</span>, 
    <span class="hljs-string">"period"</span> : <span class="hljs-number">900</span>, 
    <span class="hljs-string">"offset"</span> : <span class="hljs-number">20</span>, 
    <span class="hljs-string">"command"</span> : <span class="hljs-string">"(function (params) { require('@arangodb/statistics').historianAverage(); } )(params);"</span>, 
    <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
  } 
]
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Administration/JSF_delete_api_tasks.md -->
@startDocuBlock JSF_delete_api_tasks

@brief deletes one currently active server task

@RESTHEADER{DELETE /_api/tasks/{id}, deletes the task with id}

@RESTURLPARAM{id,string,required}
The id of the task to delete.

@RESTDESCRIPTION
Deletes the task identified by *id* on the server. 

@RESTRETURNCODES

@RESTRETURNCODE{404}
If the task *id* is unknown, then an *HTTP 404* is returned.

@EXAMPLES

trying to delete non existing task


<div class="example-container" id="RestTasksDeleteFail_container">
<a class="anchorjs-link " href="#RestTasksDeleteFail_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksDeleteFail_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/NoTaskWithThatName

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1852</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"task not found"</span> 
}
</pre>
<div id="RestTasksDeleteFail_container_collapse" onclick="$('#RestTasksDeleteFail_long').hide(); $('#RestTasksDeleteFail_short').show(); window.location.hash='RestTasksDeleteFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTasksDeleteFail_short" onclick="$('#RestTasksDeleteFail_short').hide(); $('#RestTasksDeleteFail_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/NoTaskWithThatName

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Remove existing Task


<div class="example-container" id="RestTasksDelete_container">
<a class="anchorjs-link " href="#RestTasksDelete_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTasksDelete_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/tasks/SampleTask

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_scripts_list.md -->
@startDocuBlock api_foxx_scripts_list

@brief list service scripts

@RESTHEADER{GET /_api/foxx/scripts, List service scripts}

@RESTDESCRIPTION
Fetches a list of the scripts defined by the service.

Returns an object mapping the raw script names to human-friendly names.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_configuration_update.md -->
@startDocuBlock api_foxx_configuration_update

@brief update configuration options

@RESTHEADER{PATCH /_api/foxx/configuration, Update configuration options}

@RESTDESCRIPTION
Replaces the given service's configuration.

Returns an object mapping all configuration option names to their new values.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping configuration option names to their new values.
Any omitted options will be ignored.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_development_disable.md -->
@startDocuBlock api_foxx_development_disable

@brief disable development mode

@RESTHEADER{DELETE /_api/foxx/development, Disable development mode}

@RESTDESCRIPTION
Puts the service at the given mount path into production mode.

When running ArangoDB in a cluster with multiple coordinators this will
replace the service on all other coordinators with the version on this
coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_dependencies_replace.md -->
@startDocuBlock api_foxx_dependencies_replace

@brief replace dependencies options

@RESTHEADER{PUT /_api/foxx/dependencies, Replace dependencies options}

@RESTDESCRIPTION
Replaces the given service's dependencies completely.

Returns an object mapping all dependency names to their new mount paths.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping dependency names to their new mount paths.
Any omitted dependencies will be disabled.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_commit.md -->
@startDocuBlock api_foxx_commit

@brief commit local service state

@RESTHEADER{POST /_api/foxx/commit, Commit local service state}

@RESTDESCRIPTION
Commits the local service state of the coordinator to the database.

This can be used to resolve service conflicts between coordinators that can not be fixed automatically due to missing data.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{replace,boolean,optional}
Overwrite existing service files in database even if they already exist.

@RESTRETURNCODE{204}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_readme.md -->
@startDocuBlock api_foxx_readme

@brief service README

@RESTHEADER{GET /_api/foxx/readme, Service README}

@RESTDESCRIPTION
Fetches the service's README or README.md file's contents if any.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@RESTRETURNCODE{204}
Returned if no README file was found.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_swagger.md -->
@startDocuBlock api_foxx_swagger

@brief swagger description

@RESTHEADER{GET /_api/foxx/swagger, Swagger description}

@RESTDESCRIPTION
Fetches the Swagger API description for the service at the given mount path.

The response body will be an OpenAPI 2.0 compatible JSON description of the service API.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_development_enable.md -->
@startDocuBlock api_foxx_development_enable

@brief enable development mode

@RESTHEADER{POST /_api/foxx/development, Enable development mode}

@RESTDESCRIPTION
Puts the service into development mode.

While the service is running in development mode the service will be reloaded
from the filesystem and its setup script (if any) will be re-executed every
time the service handles a request.

When running ArangoDB in a cluster with multiple coordinators note that changes
to the filesystem on one coordinator will not be reflected across the other
coordinators. This means you should treat your coordinators as inconsistent
as long as any service is running in development mode.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_dependencies_update.md -->
@startDocuBlock api_foxx_dependencies_update

@brief update dependencies options

@RESTHEADER{PATCH /_api/foxx/dependencies, Update dependencies options}

@RESTDESCRIPTION
Replaces the given service's dependencies.

Returns an object mapping all dependency names to their new mount paths.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping dependency names to their new mount paths.
Any omitted dependencies will be ignored.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_tests_run.md -->
@startDocuBlock api_foxx_tests_run

@brief run service tests

@RESTHEADER{POST /_api/foxx/tests, Run service tests}

@RESTDESCRIPTION
Runs the tests for the service at the given mount path and returns the results.

Supported test reporters are:

- *default*: a simple list of test cases
- *suite*: an object of test cases nested in suites
- *stream*: a raw stream of test results
- *xunit*: an XUnit/JUnit compatible structure
- *tap*: a raw TAP compatible stream

The *Accept* request header can be used to further control the response format:

When using the *stream* reporter `application/x-ldjson` will result
in the response body being formatted as a newline-delimited JSON stream.

When using the *tap* reporter `text/plain` or `text/*` will result
in the response body being formatted as a plain text TAP report.

When using the *xunit* reporter `application/xml` or `text/xml` will result
in the response body being formatted as XML instead of JSONML.

Otherwise the response body will be formatted as non-prettyprinted JSON.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{reporter,string,optional}
Test reporter to use.

@RESTQUERYPARAM{idiomatic,boolean,optional}
Use the matching format for the reporter, regardless of the *Accept* header.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_uninstall.md -->
@startDocuBlock api_foxx_service_uninstall

@brief uninstall service

@RESTHEADER{DELETE /_api/foxx/service, Uninstall service}

@RESTDESCRIPTION
Removes the service at the given mount path from the database and file system.

Returns an empty response on success.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{teardown,boolean,optional}
Set to `false` to not run the service's teardown script.

@RESTRETURNCODES

@RESTRETURNCODE{204}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_install.md -->
@startDocuBlock api_foxx_service_install

@brief install new service

@RESTHEADER{POST /_api/foxx, Install new service}

@RESTDESCRIPTION
Installs the given new service at the given mount path.

The request body can be any of the following formats:

- `application/zip`: a raw zip bundle containing a service
- `application/javascript`: a standalone JavaScript file
- `application/json`: a service definition as JSON
- `multipart/form-data`: a service definition as a multipart form

A service definition is an object or form with the following properties or fields:

- *configuration*: a JSON object describing configuration values
- *dependencies*: a JSON object describing dependency settings
- *source*: a fully qualified URL or an absolute path on the server's file system

When using multipart data, the *source* field can also alternatively be a file field
containing either a zip bundle or a standalone JavaScript file.

When using a standalone JavaScript file the given file will be executed
to define our service's HTTP endpoints. It is the same which would be defined
in the field `main` of the service manifest.

If *source* is a URL, the URL must be reachable from the server.
If *source* is a file system path, the path will be resolved on the server.
In either case the path or URL is expected to resolve to a zip bundle,
JavaScript file or (in case of a file system path) directory.

Note that when using file system paths in a cluster with multiple coordinators
the file system path must resolve to equivalent files on every coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path the service should be installed at.

@RESTQUERYPARAM{development,boolean,optional}
Set to `true` to enable development mode.

@RESTQUERYPARAM{setup,boolean,optional}
Set to `false` to not run the service's setup script.

@RESTQUERYPARAM{legacy,boolean,optional}
Set to `true` to install the service in 2.8 legacy compatibility mode.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_scripts_run.md -->
@startDocuBlock api_foxx_scripts_run

@brief run service script

@RESTHEADER{POST /_api/foxx/scripts/{name}, Run service script}

@RESTALLBODYPARAM{data,json,optional}
An arbitrary JSON value that will be parsed and passed to the
script as its first argument.

@RESTQUERYPARAMETERS

@RESTURLPARAM{name,string,required}
Name of the script to run.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTDESCRIPTION
Runs the given script for the service at the given mount path.

Returns the exports of the script, if any.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_details.md -->
@startDocuBlock api_foxx_service_details

@brief service metadata

@RESTHEADER{GET /_api/foxx/service, Service description}

@RESTDESCRIPTION
Fetches detailed information for the service at the given mount path.

Returns an object with the following attributes:

- *mount*: the mount path of the service
- *path*: the local file system path of the service
- *development*: *true* if the service is running in development mode
- *legacy*: *true* if the service is running in 2.8 legacy compatibility mode
- *manifest*: the normalized JSON manifest of the service

Additionally the object may contain the following attributes if they have been set on the manifest:

- *name*: a string identifying the service type
- *version*: a semver-compatible version string

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@RESTRETURNCODE{400}
Returned if the mount path is unknown.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_dependencies_get.md -->
@startDocuBlock api_foxx_dependencies_get

@brief get dependency options

@RESTHEADER{GET /_api/foxx/dependencies, Get dependency options}

@RESTDESCRIPTION
Fetches the current dependencies for service at the given mount path.

Returns an object mapping the dependency names to their definitions
including a human-friendly *title* and the *current* mount path (if any).

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_upgrade.md -->
@startDocuBlock api_foxx_service_upgrade

@brief upgrade a service

@RESTHEADER{PATCH /_api/foxx/service, Upgrade service}

@RESTDESCRIPTION
Installs the given new service on top of the service currently installed at the given mount path.
This is only recommended for switching between different versions of the same service.

Unlike replacing a service, upgrading a service retains the old service's configuration
and dependencies (if any) and should therefore only be used to migrate an existing service
to a newer or equivalent service.

The request body can be any of the following formats:

- `application/zip`: a raw zip bundle containing a service
- `application/javascript`: a standalone JavaScript file
- `application/json`: a service definition as JSON
- `multipart/form-data`: a service definition as a multipart form

A service definition is an object or form with the following properties or fields:

- *configuration*: a JSON object describing configuration values
- *dependencies*: a JSON object describing dependency settings
- *source*: a fully qualified URL or an absolute path on the server's file system

When using multipart data, the *source* field can also alternatively be a file field
containing either a zip bundle or a standalone JavaScript file.

When using a standalone JavaScript file the given file will be executed
to define our service's HTTP endpoints. It is the same which would be defined
in the field `main` of the service manifest.

If *source* is a URL, the URL must be reachable from the server.
If *source* is a file system path, the path will be resolved on the server.
In either case the path or URL is expected to resolve to a zip bundle,
JavaScript file or (in case of a file system path) directory.

Note that when using file system paths in a cluster with multiple coordinators
the file system path must resolve to equivalent files on every coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{teardown,boolean,optional}
Set to `true` to run the old service's teardown script.

@RESTQUERYPARAM{setup,boolean,optional}
Set to `false` to not run the new service's setup script.

@RESTQUERYPARAM{legacy,boolean,optional}
Set to `true` to install the new service in 2.8 legacy compatibility mode.

@RESTQUERYPARAM{force,boolean,optional}
Set to `true` to force service install even if no service is installed under given mount.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_configuration_get.md -->
@startDocuBlock api_foxx_configuration_get

@brief get configuration options

@RESTHEADER{GET /_api/foxx/configuration, Get configuration options}

@RESTDESCRIPTION
Fetches the current configuration for the service at the given mount path.

Returns an object mapping the configuration option names to their definitions
including a human-friendly *title* and the *current* value (if any).

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_list.md -->
@startDocuBlock api_foxx_service_list

@brief list installed services

@RESTHEADER{GET /_api/foxx, List installed services}

@RESTDESCRIPTION
Fetches a list of services installed in the current database.

Returns a list of objects with the following attributes:

- *mount*: the mount path of the service
- *development*: *true* if the service is running in development mode
- *legacy*: *true* if the service is running in 2.8 legacy compatibility mode
- *provides*: the service manifest's *provides* value or an empty object

Additionally the object may contain the following attributes if they have been set on the manifest:

- *name*: a string identifying the service type
- *version*: a semver-compatible version string

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{excludeSystem,boolean,optional}
Whether or not system services should be excluded from the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_configuration_replace.md -->
@startDocuBlock api_foxx_configuration_replace

@brief replace configuration options

@RESTHEADER{PUT /_api/foxx/configuration, Replace configuration options}

@RESTDESCRIPTION
Replaces the given service's configuration completely.

Returns an object mapping all configuration option names to their new values.

@RESTALLBODYPARAM{data,json,required}
A JSON object mapping configuration option names to their new values.
Any omitted options will be reset to their default values or marked as unconfigured.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_service_replace.md -->
@startDocuBlock api_foxx_service_replace

@brief replace a service

@RESTHEADER{PUT /_api/foxx/service, Replace service}

@RESTDESCRIPTION
Removes the service at the given mount path from the database and file system.
Then installs the given new service at the same mount path.

This is a slightly safer equivalent to performing an uninstall of the old service
followed by installing the new service. The new service's main and script files
(if any) will be checked for basic syntax errors before the old service is removed.

The request body can be any of the following formats:

- `application/zip`: a raw zip bundle containing a service
- `application/javascript`: a standalone JavaScript file
- `application/json`: a service definition as JSON
- `multipart/form-data`: a service definition as a multipart form

A service definition is an object or form with the following properties or fields:

- *configuration*: a JSON object describing configuration values
- *dependencies*: a JSON object describing dependency settings
- *source*: a fully qualified URL or an absolute path on the server's file system

When using multipart data, the *source* field can also alternatively be a file field
containing either a zip bundle or a standalone JavaScript file.

When using a standalone JavaScript file the given file will be executed
to define our service's HTTP endpoints. It is the same which would be defined
in the field `main` of the service manifest.

If *source* is a URL, the URL must be reachable from the server.
If *source* is a file system path, the path will be resolved on the server.
In either case the path or URL is expected to resolve to a zip bundle,
JavaScript file or (in case of a file system path) directory.

Note that when using file system paths in a cluster with multiple coordinators
the file system path must resolve to equivalent files on every coordinator.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTQUERYPARAM{teardown,boolean,optional}
Set to `false` to not run the old service's teardown script.

@RESTQUERYPARAM{setup,boolean,optional}
Set to `false` to not run the new service's setup script.

@RESTQUERYPARAM{legacy,boolean,optional}
Set to `true` to install the new service in 2.8 legacy compatibility mode.

@RESTQUERYPARAM{force,boolean,optional}
Set to `true` to force service install even if no service is installed under given mount.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was successful.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Foxx/api_foxx_bundle.md -->
@startDocuBlock api_foxx_bundle

@brief download service bundle

@RESTHEADER{POST /_api/foxx/download, Download service bundle}

@RESTDESCRIPTION
Downloads a zip bundle of the service directory.

When development mode is enabled, this always creates a new bundle.

Otherwise the bundle will represent the version of a service that
is installed on that ArangoDB instance.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{mount,string,required}
Mount path of the installed service.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the request was sucessful.

@RESTRETURNCODE{400}
Returned if the mount path is unknown.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Transactions/JSF_post_api_transaction.md -->
@startDocuBlock JSF_post_api_transaction

@brief execute a server-side transaction

@RESTHEADER{POST /_api/transaction, Execute transaction}

@RESTBODYPARAM{collections,string,required,string}
*collections* must be a JSON object that can have either or both sub-attributes
*read* and *write*, each being an array of collection names or a single
collection name as string. Collections that will be written to in the
transaction must be declared with the *write* attribute or it will fail,
whereas non-declared collections from which is solely read will be added lazily.
The optional sub-attribute *allowImplicit* can be set to *false* to let
transactions fail in case of undeclared collections for reading. Collections
for reading should be fully declared if possible, to avoid deadlocks.

@RESTBODYPARAM{action,string,required,string}
the actual transaction operations to be executed, in the
form of stringified JavaScript code. The code will be executed on server
side, with late binding. It is thus critical that the code specified in
*action* properly sets up all the variables it needs.
If the code specified in *action* ends with a return statement, the
value returned will also be returned by the REST API in the *result*
attribute if the transaction committed successfully.

@RESTBODYPARAM{waitForSync,boolean,optional,boolean}
an optional boolean flag that, if set, will force the
transaction to write all data to disk before returning.

@RESTBODYPARAM{lockTimeout,integer,optional,int64}
an optional numeric value that can be used to set a
timeout for waiting on collection locks. If not specified, a default
value will be used. Setting *lockTimeout* to *0* will make ArangoDB
not time out waiting for a lock.

@RESTBODYPARAM{params,string,optional,string}
optional arguments passed to *action*.

@RESTBODYPARAM{maxTransactionSize,integer,optional,int64}
Transaction size limit in bytes. Honored by the RocksDB storage engine only.

@RESTDESCRIPTION
The transaction description must be passed in the body of the POST request.

If the transaction is fully executed and committed on the server,
*HTTP 200* will be returned. Additionally, the return value of the
code defined in *action* will be returned in the *result* attribute.

For successfully committed transactions, the returned JSON object has the
following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: the return value of the transaction

If the transaction specification is either missing or malformed, the server
will respond with *HTTP 400*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

If a transaction fails to commit, either by an exception thrown in the
*action* code, or by an internal error, the server will respond with
an error.
Any other errors will be returned with any of the return codes
*HTTP 400*, *HTTP 409*, or *HTTP 500*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the transaction is fully executed and committed on the server,
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the transaction specification is either missing or malformed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the transaction specification contains an unknown collection, the server
will respond with *HTTP 404*.

@RESTRETURNCODE{500}
Exceptions thrown by users will make the server respond with a return code of
*HTTP 500*

@EXAMPLES

Executing a transaction on a single collection


<div class="example-container" id="RestTransactionSingle_container">
<a class="anchorjs-link " href="#RestTransactionSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTransactionSingle_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"write"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () { var db = require('@arangodb').db; db.products.save({});  return db.products.count(); }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-number">1</span> 
}
</pre>
<div id="RestTransactionSingle_container_collapse" onclick="$('#RestTransactionSingle_long').hide(); $('#RestTransactionSingle_short').show(); window.location.hash='RestTransactionSingle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionSingle_short" onclick="$('#RestTransactionSingle_short').hide(); $('#RestTransactionSingle_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"write"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () { var db = require('@arangodb').db; db.products.save({});  return db.products.count(); }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Executing a transaction using multiple collections


<div class="example-container" id="RestTransactionMulti_container">
<a class="anchorjs-link " href="#RestTransactionMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTransactionMulti_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"write"</span> : [ 
      <span class="hljs-string">"products"</span>, 
      <span class="hljs-string">"materials"</span> 
    ] 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () {var db = require('@arangodb').db;db.products.save({});db.materials.save({});return 'worked!';}"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-string">"worked!"</span> 
}
</pre>
<div id="RestTransactionMulti_container_collapse" onclick="$('#RestTransactionMulti_long').hide(); $('#RestTransactionMulti_short').show(); window.location.hash='RestTransactionMulti_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionMulti_short" onclick="$('#RestTransactionMulti_short').hide(); $('#RestTransactionMulti_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"write"</span> : [ 
      <span class="hljs-string">"products"</span>, 
      <span class="hljs-string">"materials"</span> 
    ] 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () {var db = require('@arangodb').db;db.products.save({});db.materials.save({});return 'worked!';}"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Aborting a transaction due to an internal error


<div class="example-container" id="RestTransactionAbortInternal_container">
<a class="anchorjs-link " href="#RestTransactionAbortInternal_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTransactionAbortInternal_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"write"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () {var db = require('@arangodb').db;db.products.save({ _key: 'abc'});db.products.save({ _key: 'abc'});}"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"unique constraint violated - in index 0 of type primary over [\"_key\"]; conflicting key: abc"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">409</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1210</span> 
}
</pre>
<div id="RestTransactionAbortInternal_container_collapse" onclick="$('#RestTransactionAbortInternal_long').hide(); $('#RestTransactionAbortInternal_short').show(); window.location.hash='RestTransactionAbortInternal_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionAbortInternal_short" onclick="$('#RestTransactionAbortInternal_short').hide(); $('#RestTransactionAbortInternal_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"write"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () {var db = require('@arangodb').db;db.products.save({ _key: 'abc'});db.products.save({ _key: 'abc'});}"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Aborting a transaction by explicitly throwing an exception


<div class="example-container" id="RestTransactionAbort_container">
<a class="anchorjs-link " href="#RestTransactionAbort_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTransactionAbort_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"read"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () { throw 'doh!'; }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"transaction not running on commit"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">500</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1650</span> 
}
</pre>
<div id="RestTransactionAbort_container_collapse" onclick="$('#RestTransactionAbort_long').hide(); $('#RestTransactionAbort_short').show(); window.location.hash='RestTransactionAbort_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionAbort_short" onclick="$('#RestTransactionAbort_short').hide(); $('#RestTransactionAbort_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"read"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () { throw 'doh!'; }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Referring to a non-existing collection


<div class="example-container" id="RestTransactionNonExisting_container">
<a class="anchorjs-link " href="#RestTransactionNonExisting_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTransactionNonExisting_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"read"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () { return true; }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"collection not found: products"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestTransactionNonExisting_container_collapse" onclick="$('#RestTransactionNonExisting_long').hide(); $('#RestTransactionNonExisting_short').show(); window.location.hash='RestTransactionNonExisting_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTransactionNonExisting_short" onclick="$('#RestTransactionNonExisting_short').hide(); $('#RestTransactionNonExisting_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/transaction &lt;&lt;EOF
{ 
  <span class="hljs-string">"collections"</span> : { 
    <span class="hljs-string">"read"</span> : <span class="hljs-string">"products"</span> 
  }, 
  <span class="hljs-string">"action"</span> : <span class="hljs-string">"function () { return true; }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/JSF_post_api_cursor_identifier.md -->
@startDocuBlock JSF_post_api_cursor_identifier

@brief return the next results from an existing cursor

@RESTHEADER{PUT /_api/cursor/{cursor-identifier}, Read next batch from cursor}

@RESTURLPARAMETERS

@RESTURLPARAM{cursor-identifier,string,required}
The name of the cursor

@RESTDESCRIPTION
If the cursor is still alive, returns an object with the following
attributes:

- *id*: the *cursor-identifier*
- *result*: a list of documents for the current batch
- *hasMore*: *false* if this was the last batch
- *count*: if present the total number of elements

Note that even if *hasMore* returns *true*, the next call might
still return no documents. If, however, *hasMore* is *false*, then
the cursor is exhausted.  Once the *hasMore* attribute has a value of
*false*, the client can stop.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* in case of success.

@RESTRETURNCODE{400}
If the cursor identifier is omitted, the server will respond with *HTTP 404*.

@RESTRETURNCODE{404}
If no cursor with the specified identifier can be found, the server will respond
with *HTTP 404*.

@EXAMPLES

Valid request for next batch


<div class="example-container" id="RestCursorForLimitReturnCont_container">
<a class="anchorjs-link " href="#RestCursorForLimitReturnCont_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorForLimitReturnCont_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 5 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor/10416

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10400"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10400"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7QrG--_"</span>, 
      <span class="hljs-string">"hello1"</span> : <span class="hljs-string">"world1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10413"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10413"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7QrK--_"</span>, 
      <span class="hljs-string">"hello5"</span> : <span class="hljs-string">"world1"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10416"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.0000896453857421875</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span> 
}
</pre>
<div id="RestCursorForLimitReturnCont_container_collapse" onclick="$('#RestCursorForLimitReturnCont_long').hide(); $('#RestCursorForLimitReturnCont_short').show(); window.location.hash='RestCursorForLimitReturnCont_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorForLimitReturnCont_short" onclick="$('#RestCursorForLimitReturnCont_short').hide(); $('#RestCursorForLimitReturnCont_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 5 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor/10416

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Missing identifier


<div class="example-container" id="RestCursorMissingCursorIdentifier_container">
<a class="anchorjs-link " href="#RestCursorMissingCursorIdentifier_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorMissingCursorIdentifier_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"expecting PUT /_api/cursor/&lt;cursor-id&gt;"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestCursorMissingCursorIdentifier_container_collapse" onclick="$('#RestCursorMissingCursorIdentifier_long').hide(); $('#RestCursorMissingCursorIdentifier_short').show(); window.location.hash='RestCursorMissingCursorIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorMissingCursorIdentifier_short" onclick="$('#RestCursorMissingCursorIdentifier_short').hide(); $('#RestCursorMissingCursorIdentifier_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Unknown identifier


<div class="example-container" id="RestCursorInvalidCursorIdentifier_container">
<a class="anchorjs-link " href="#RestCursorInvalidCursorIdentifier_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorInvalidCursorIdentifier_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor/123123

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"cursor not found"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1600</span> 
}
</pre>
<div id="RestCursorInvalidCursorIdentifier_container_collapse" onclick="$('#RestCursorInvalidCursorIdentifier_long').hide(); $('#RestCursorInvalidCursorIdentifier_short').show(); window.location.hash='RestCursorInvalidCursorIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorInvalidCursorIdentifier_short" onclick="$('#RestCursorInvalidCursorIdentifier_short').hide(); $('#RestCursorInvalidCursorIdentifier_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor/123123

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/JSF_post_api_cursor_delete.md -->
@startDocuBlock JSF_post_api_cursor_delete

@brief dispose an existing cursor

@RESTHEADER{DELETE /_api/cursor/{cursor-identifier}, Delete cursor}

@RESTURLPARAMETERS

@RESTURLPARAM{cursor-identifier,string,required}
The id of the cursor

@RESTDESCRIPTION
Deletes the cursor and frees the resources associated with it.

The cursor will automatically be destroyed on the server when the client has
retrieved all documents from it. The client can also explicitly destroy the
cursor at any earlier time using an HTTP DELETE request. The cursor id must
be included as part of the URL.

Note: the server will also destroy abandoned cursors automatically after a
certain server-controlled timeout to avoid resource leakage.

@RESTRETURNCODES

@RESTRETURNCODE{202}
is returned if the server is aware of the cursor.

@RESTRETURNCODE{404}
is returned if the server is not aware of the cursor. It is also
returned if a cursor is used after it has been destroyed.

@EXAMPLES


<div class="example-container" id="RestCursorDelete_container">
<a class="anchorjs-link " href="#RestCursorDelete_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorDelete_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 5 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10349"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10349"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Qm2--B"</span>, 
      <span class="hljs-string">"hello2"</span> : <span class="hljs-string">"world1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10355"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10355"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Qm6--B"</span>, 
      <span class="hljs-string">"hello4"</span> : <span class="hljs-string">"world1"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10361"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00009679794311523438</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span> 
}
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor/10361

</pre>
<div id="RestCursorDelete_container_collapse" onclick="$('#RestCursorDelete_long').hide(); $('#RestCursorDelete_short').show(); window.location.hash='RestCursorDelete_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDelete_short" onclick="$('#RestCursorDelete_short').hide(); $('#RestCursorDelete_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 5 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor/10361

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cursors/JSF_post_api_cursor.md -->
@startDocuBlock JSF_post_api_cursor

@brief create a cursor and return the first results

@RESTHEADER{POST /_api/cursor, Create cursor}

A JSON object describing the query and query parameters.

@RESTBODYPARAM{query,string,required,string}
contains the query string to be executed

@RESTBODYPARAM{count,boolean,optional,}
indicates whether the number of documents in the result set should be returned in
the "count" attribute of the result.
Calculating the "count" attribute might have a performance impact for some queries
in the future so this option is turned off by default, and "count"
is only returned when requested.

@RESTBODYPARAM{batchSize,integer,optional,int64}
maximum number of result documents to be transferred from
the server to the client in one roundtrip. If this attribute is
not set, a server-controlled default value will be used. A *batchSize* value of
*0* is disallowed.

@RESTBODYPARAM{ttl,integer,optional,int64}
The time-to-live for the cursor (in seconds). The cursor will be
removed on the server automatically after the specified amount of time. This
is useful to ensure garbage collection of cursors that are not fully fetched
by clients. If not set, a server-defined value will be used.

@RESTBODYPARAM{cache,boolean,optional,}
flag to determine whether the AQL query cache
shall be used. If set to *false*, then any query cache lookup will be skipped
for the query. If set to *true*, it will lead to the query cache being checked
for the query if the query cache mode is either *on* or *demand*.

@RESTBODYPARAM{memoryLimit,integer,optional,int64}
the maximum number of memory (measured in bytes) that the query is allowed to
use. If set, then the query will fail with error "resource limit exceeded" in
case it allocates too much memory. A value of *0* indicates that there is no
memory limit.

@RESTBODYPARAM{bindVars,array,optional,object}
key/value pairs representing the bind parameters.

@RESTBODYPARAM{options,object,optional,JSF_post_api_cursor_opts}
key/value object with extra options for the query.

@RESTSTRUCT{fullCount,JSF_post_api_cursor_opts,boolean,optional,}
if set to *true* and the query contains a *LIMIT* clause, then the
result will have an *extra* attribute with the sub-attributes *stats*
and *fullCount*, `{ ... , "extra": { "stats": { "fullCount": 123 } } }`.
The *fullCount* attribute will contain the number of documents in the result before the
last LIMIT in the query was applied. It can be used to count the number of documents that
match certain filter criteria, but only return a subset of them, in one go.
It is thus similar to MySQL's *SQL_CALC_FOUND_ROWS* hint. Note that setting the option
will disable a few LIMIT optimizations and may lead to more documents being processed,
and thus make queries run longer. Note that the *fullCount* attribute will only
be present in the result if the query has a LIMIT clause and the LIMIT clause is
actually used in the query.

@RESTSTRUCT{maxPlans,JSF_post_api_cursor_opts,integer,optional,int64}
Limits the maximum number of plans that are created by the AQL query optimizer.

@RESTSTRUCT{maxWarningCount,JSF_post_api_cursor_opts,integer,optional,int64}
Limits the maximum number of warnings a query will return. The number of warnings
a query will return is limited to 10 by default, but that number can be increased
or decreased by setting this attribute.

@RESTSTRUCT{failOnWarning,JSF_post_api_cursor_opts,boolean,optional,}
When set to *true*, the query will throw an exception and abort instead of producing
a warning. This option should be used during development to catch potential issues
early. When the attribute is set to *false*, warnings will not be propagated to
exceptions and will be returned with the query result.
There is also a server configuration option `--query.fail-on-warning` for setting the
default value for *failOnWarning* so it does not need to be set on a per-query level.

@RESTSTRUCT{optimizer.rules,JSF_post_api_cursor_opts,array,optional,string}
A list of to-be-included or to-be-excluded optimizer rules
can be put into this attribute, telling the optimizer to include or exclude
specific rules. To disable a rule, prefix its name with a `-`, to enable a rule, prefix it
with a `+`. There is also a pseudo-rule `all`, which will match all optimizer rules.

@RESTSTRUCT{profile,JSF_post_api_cursor_opts,boolean,optional,}
If set to *true*, then the additional query profiling information will be returned
in the sub-attribute *profile* of the *extra* return attribute if the query result
is not served from the query cache.

@RESTSTRUCT{satelliteSyncWait,JSF_post_api_cursor_opts,boolean,optional,}
This *enterprise* parameter allows to configure how long a DBServer will have time
to bring the satellite collections involved in the query into sync.
The default value is *60.0* (seconds). When the max time has been reached the query
will be stopped.

@RESTSTRUCT{maxTransactionSize,JSF_post_api_cursor_opts,integer,optional,int64}
Transaction size limit in bytes. Honored by the RocksDB storage engine only.

@RESTSTRUCT{intermediateCommitSize,JSF_post_api_cursor_opts,integer,optional,int64}
Maximum total size of operations after which an intermediate commit is performed
automatically. Honored by the RocksDB storage engine only.

@RESTSTRUCT{intermediateCommitCount,JSF_post_api_cursor_opts,integer,optional,int64}
Maximum number of operations after which an intermediate commit is performed
automatically. Honored by the RocksDB storage engine only.

@RESTSTRUCT{skipInaccessibleCollections,JSF_post_api_cursor_opts,boolean,optional,}
AQL queries (especially graph traversals) will treat collection to which a user has no access rights as if these collections were empty. Instead of returning a forbidden access error, your queries will execute normally. This is intended to help with certain use-cases: A graph contains several collections and different users execute AQL queries on that graph. You can now naturally limit the accessible results by changing the access rights of users on collections. This feature is only available in the Enterprise Edition.

@RESTDESCRIPTION
The query details include the query string plus optional query options and
bind parameters. These values need to be passed in a JSON representation in
the body of the POST request.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the result set can be created by the server.

@RESTREPLYBODY{error,boolean,required,}
A flag to indicate that an error occurred (*false* in this case)

@RESTREPLYBODY{code,integer,required,integer}
the HTTP status code

@RESTREPLYBODY{result,array,optional,}
an array of result documents (might be empty if query has no results)

@RESTREPLYBODY{hasMore,boolean,required,}
A boolean indicator whether there are more results
available for the cursor on the server

@RESTREPLYBODY{count,integer,optional,int64}
the total number of result documents available (only
available if the query was executed with the *count* attribute set)

@RESTREPLYBODY{id,string,required,string}
id of temporary cursor created on the server (optional, see above)

@RESTREPLYBODY{extra,object,optional,}
an optional JSON object with extra information about the query result
contained in its *stats* sub-attribute. For data-modification queries, the
*extra.stats* sub-attribute will contain the number of modified documents and
the number of documents that could not be modified
due to an error (if *ignoreErrors* query option is specified)

@RESTREPLYBODY{cached,boolean,required,}
a boolean flag indicating whether the query result was served
from the query cache or not. If the query result is served from the query
cache, the *extra* return attribute will not contain any *stats* sub-attribute
and no *profile* sub-attribute.

@RESTRETURNCODE{400}
is returned if the JSON representation is malformed or the query specification is
missing from the request.

If the JSON representation is malformed or the query specification is
missing from the request, the server will respond with *HTTP 400*.

The body of the response will contain a JSON object with additional error
details. The object has the following attributes:

@RESTREPLYBODY{error,boolean,required,}
boolean flag to indicate that an error occurred (*true* in this case)

@RESTREPLYBODY{code,integer,required,int64}
the HTTP status code

@RESTREPLYBODY{errorNum,integer,required,int64}
the server error number

@RESTREPLYBODY{errorMessage,string,required,string}
a descriptive error message

If the query specification is complete, the server will process the query. If an
error occurs during query processing, the server will respond with *HTTP 400*.
Again, the body of the response will contain details about the error.

A [list of query errors can be found here](../../Manual/Appendix/ErrorCodes.html).


@RESTRETURNCODE{404}
The server will respond with *HTTP 404* in case a non-existing collection is
accessed in the query.

@RESTRETURNCODE{405}
The server will respond with *HTTP 405* if an unsupported HTTP method is used.

@EXAMPLES

Execute a query and extract the result in a single go


<div class="example-container" id="RestCursorCreateCursorForLimitReturnSingle_container">
<a class="anchorjs-link " href="#RestCursorCreateCursorForLimitReturnSingle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorCreateCursorForLimitReturnSingle_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 2 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10332"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10332"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Qlm--_"</span>, 
      <span class="hljs-string">"hello1"</span> : <span class="hljs-string">"world1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10336"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10336"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Qlm--B"</span>, 
      <span class="hljs-string">"hello2"</span> : <span class="hljs-string">"world1"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00009942054748535156</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorCreateCursorForLimitReturnSingle_container_collapse" onclick="$('#RestCursorCreateCursorForLimitReturnSingle_long').hide(); $('#RestCursorCreateCursorForLimitReturnSingle_short').show(); window.location.hash='RestCursorCreateCursorForLimitReturnSingle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorForLimitReturnSingle_short" onclick="$('#RestCursorCreateCursorForLimitReturnSingle_short').hide(); $('#RestCursorCreateCursorForLimitReturnSingle_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 2 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Execute a query and extract a part of the result


<div class="example-container" id="RestCursorCreateCursorForLimitReturn_container">
<a class="anchorjs-link " href="#RestCursorCreateCursorForLimitReturn_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorCreateCursorForLimitReturn_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 5 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10323"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10323"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Qkq--_"</span>, 
      <span class="hljs-string">"hello5"</span> : <span class="hljs-string">"world1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10310"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10310"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Qkm--_"</span>, 
      <span class="hljs-string">"hello1"</span> : <span class="hljs-string">"world1"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10326"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.000186920166015625</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span> 
}
</pre>
<div id="RestCursorCreateCursorForLimitReturn_container_collapse" onclick="$('#RestCursorCreateCursorForLimitReturn_long').hide(); $('#RestCursorCreateCursorForLimitReturn_short').show(); window.location.hash='RestCursorCreateCursorForLimitReturn_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorForLimitReturn_short" onclick="$('#RestCursorCreateCursorForLimitReturn_short').hide(); $('#RestCursorCreateCursorForLimitReturn_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LIMIT 5 RETURN p"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Using the query option "fullCount"


<div class="example-container" id="RestCursorCreateCursorOption_container">
<a class="anchorjs-link " href="#RestCursorCreateCursorOption_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorCreateCursorOption_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..1000 FILTER i &gt; 500 LIMIT 10 RETURN i"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"fullCount"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    <span class="hljs-number">501</span>, 
    <span class="hljs-number">502</span>, 
    <span class="hljs-number">503</span>, 
    <span class="hljs-number">504</span>, 
    <span class="hljs-number">505</span>, 
    <span class="hljs-number">506</span>, 
    <span class="hljs-number">507</span>, 
    <span class="hljs-number">508</span>, 
    <span class="hljs-number">509</span>, 
    <span class="hljs-number">510</span> 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">500</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"fullCount"</span> : <span class="hljs-number">500</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00037550926208496094</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorCreateCursorOption_container_collapse" onclick="$('#RestCursorCreateCursorOption_long').hide(); $('#RestCursorCreateCursorOption_short').show(); window.location.hash='RestCursorCreateCursorOption_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorOption_short" onclick="$('#RestCursorCreateCursorOption_short').hide(); $('#RestCursorCreateCursorOption_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..1000 FILTER i &gt; 500 LIMIT 10 RETURN i"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"fullCount"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Enabling and disabling optimizer rules


<div class="example-container" id="RestCursorOptimizerRules_container">
<a class="anchorjs-link " href="#RestCursorOptimizerRules_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorOptimizerRules_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..10 LET a = 1 LET b = 2 FILTER a + b == 3 RETURN i"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"maxPlans"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"optimizer"</span> : { 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"-all"</span>, 
        <span class="hljs-string">"+remove-unnecessary-filters"</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    <span class="hljs-number">1</span>, 
    <span class="hljs-number">2</span>, 
    <span class="hljs-number">3</span>, 
    <span class="hljs-number">4</span>, 
    <span class="hljs-number">5</span>, 
    <span class="hljs-number">6</span>, 
    <span class="hljs-number">7</span>, 
    <span class="hljs-number">8</span>, 
    <span class="hljs-number">9</span>, 
    <span class="hljs-number">10</span> 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00013065338134765625</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorOptimizerRules_container_collapse" onclick="$('#RestCursorOptimizerRules_long').hide(); $('#RestCursorOptimizerRules_short').show(); window.location.hash='RestCursorOptimizerRules_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorOptimizerRules_short" onclick="$('#RestCursorOptimizerRules_short').hide(); $('#RestCursorOptimizerRules_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..10 LET a = 1 LET b = 2 FILTER a + b == 3 RETURN i"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"maxPlans"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"optimizer"</span> : { 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"-all"</span>, 
        <span class="hljs-string">"+remove-unnecessary-filters"</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Execute a data-modification query and retrieve the number of
modified documents


<div class="example-container" id="RestCursorDeleteQuery_container">
<a class="anchorjs-link " href="#RestCursorDeleteQuery_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorDeleteQuery_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products REMOVE p IN products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00019359588623046875</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorDeleteQuery_container_collapse" onclick="$('#RestCursorDeleteQuery_long').hide(); $('#RestCursorDeleteQuery_short').show(); window.location.hash='RestCursorDeleteQuery_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDeleteQuery_short" onclick="$('#RestCursorDeleteQuery_short').hide(); $('#RestCursorDeleteQuery_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products REMOVE p IN products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Execute a data-modification query with option *ignoreErrors*


<div class="example-container" id="RestCursorDeleteIgnore_container">
<a class="anchorjs-link " href="#RestCursorDeleteIgnore_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorDeleteIgnore_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"REMOVE 'bar' IN products OPTIONS { ignoreErrors: true }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00017690658569335938</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCursorDeleteIgnore_container_collapse" onclick="$('#RestCursorDeleteIgnore_long').hide(); $('#RestCursorDeleteIgnore_short').show(); window.location.hash='RestCursorDeleteIgnore_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDeleteIgnore_short" onclick="$('#RestCursorDeleteIgnore_short').hide(); $('#RestCursorDeleteIgnore_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"REMOVE 'bar' IN products OPTIONS { ignoreErrors: true }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Bad query - Missing body


<div class="example-container" id="RestCursorCreateCursorMissingBody_container">
<a class="anchorjs-link " href="#RestCursorCreateCursorMissingBody_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorCreateCursorMissingBody_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"query is empty"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1502</span> 
}
</pre>
<div id="RestCursorCreateCursorMissingBody_container_collapse" onclick="$('#RestCursorCreateCursorMissingBody_long').hide(); $('#RestCursorCreateCursorMissingBody_short').show(); window.location.hash='RestCursorCreateCursorMissingBody_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorMissingBody_short" onclick="$('#RestCursorCreateCursorMissingBody_short').hide(); $('#RestCursorCreateCursorMissingBody_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --dump - http://localhost:8529/_api/cursor

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Bad query - Unknown collection


<div class="example-container" id="RestCursorCreateCursorUnknownCollection_container">
<a class="anchorjs-link " href="#RestCursorCreateCursorUnknownCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorCreateCursorUnknownCollection_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR u IN unknowncoll LIMIT 2 RETURN u"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"AQL: collection not found: unknowncoll (while parsing)"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestCursorCreateCursorUnknownCollection_container_collapse" onclick="$('#RestCursorCreateCursorUnknownCollection_long').hide(); $('#RestCursorCreateCursorUnknownCollection_short').show(); window.location.hash='RestCursorCreateCursorUnknownCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorCreateCursorUnknownCollection_short" onclick="$('#RestCursorCreateCursorUnknownCollection_short').hide(); $('#RestCursorCreateCursorUnknownCollection_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR u IN unknowncoll LIMIT 2 RETURN u"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"batchSize"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Bad query - Execute a data-modification query that attempts to remove a non-existing
document


<div class="example-container" id="RestCursorDeleteQueryFail_container">
<a class="anchorjs-link " href="#RestCursorDeleteQueryFail_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCursorDeleteQueryFail_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"REMOVE 'foo' IN products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"AQL: document not found (while executing)"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestCursorDeleteQueryFail_container_collapse" onclick="$('#RestCursorDeleteQueryFail_long').hide(); $('#RestCursorDeleteQueryFail_short').show(); window.location.hash='RestCursorDeleteQueryFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCursorDeleteQueryFail_short" onclick="$('#RestCursorDeleteQueryFail_short').hide(); $('#RestCursorDeleteQueryFail_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/cursor &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"REMOVE 'foo' IN products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph Traversal/JSF_HTTP_API_TRAVERSAL.md -->
@startDocuBlock JSF_HTTP_API_TRAVERSAL

@brief execute a server-side traversal

@RESTHEADER{POST /_api/traversal,executes a traversal}

@RESTDESCRIPTION
Starts a traversal starting from a given vertex and following.
edges contained in a given edgeCollection. The request must
contain the following attributes.

@RESTBODYPARAM{startVertex,string,required,string}
id of the startVertex, e.g. *"users/foo"*.

@RESTBODYPARAM{edgeCollection,string,optional, string}
name of the collection that contains the edges.

@RESTBODYPARAM{graphName,string,optional,string}
name of the graph that contains the edges.
Either *edgeCollection* or *graphName* has to be given.
In case both values are set the *graphName* is prefered.

@RESTBODYPARAM{filter,string,optional,string}
default is to include all nodes:
body (JavaScript code) of custom filter function
function signature: *(config, vertex, path) -> mixed*
can return four different string values:
- *"exclude"* -> this vertex will not be visited.
- *"prune"* -> the edges of this vertex will not be followed.
- *""* or *undefined* -> visit the vertex and follow its edges.
- *Array* -> containing any combination of the above.
  If there is at least one *"exclude"* or *"prune"* respectivly
  is contained, it's effect will occur.

@RESTBODYPARAM{minDepth,string,optional,string}
ANDed with any existing filters):
visits only nodes in at least the given depth

@RESTBODYPARAM{maxDepth,string,optional,string}
ANDed with any existing filters visits only nodes in at most the given depth

@RESTBODYPARAM{visitor,string,optional,string}
body (JavaScript) code of custom visitor function
function signature: *(config, result, vertex, path, connected) -> void*
The visitor function can do anything, but its return value is ignored. To
populate a result, use the *result* variable by reference. Note that the
*connected* argument is only populated when the *order* attribute is set
to *"preorder-expander"*.

@RESTBODYPARAM{direction,string,optional,string}
direction for traversal
- *if set*, must be either *"outbound"*, *"inbound"*, or *"any"*
- *if not set*, the *expander* attribute must be specified

@RESTBODYPARAM{init,string,optional,string}
body (JavaScript) code of custom result initialization function
function signature: *(config, result) -> void*
initialize any values in result with what is required

@RESTBODYPARAM{expander,string,optional,string}
body (JavaScript) code of custom expander function
*must* be set if *direction* attribute is **not** set
function signature: *(config, vertex, path) -> array*
expander must return an array of the connections for *vertex*
each connection is an object with the attributes *edge* and *vertex*

@RESTBODYPARAM{sort,string,optional,string}
body (JavaScript) code of a custom comparison function
for the edges. The signature of this function is
*(l, r) -> integer* (where l and r are edges) and must
return -1 if l is smaller than, +1 if l is greater than,
and 0 if l and r are equal. The reason for this is the
following: The order of edges returned for a certain
vertex is undefined. This is because there is no natural
order of edges for a vertex with multiple connected edges.
To explicitly define the order in which edges on the
vertex are followed, you can specify an edge comparator
function with this attribute. Note that the value here has
to be a string to conform to the JSON standard, which in
turn is parsed as function body on the server side. Furthermore
note that this attribute is only used for the standard
expanders. If you use your custom expander you have to
do the sorting yourself within the expander code.

@RESTBODYPARAM{strategy,string,optional,string}
traversal strategy can be *"depthfirst"* or *"breadthfirst"*

@RESTBODYPARAM{order,string,optional,string}
traversal order can be *"preorder"*, *"postorder"* or *"preorder-expander"*

@RESTBODYPARAM{itemOrder,string,optional,string}
item iteration order can be *"forward"* or *"backward"*

@RESTBODYPARAM{uniqueness,string,optional,string}
specifies uniqueness for vertices and edges visited.
If set, must be an object like this:

`"uniqueness": {"vertices": "none"|"global"|"path", "edges": "none"|"global"|"path"}`

@RESTBODYPARAM{maxIterations,string,optional,string}
Maximum number of iterations in each traversal. This number can be
set to prevent endless loops in traversal of cyclic graphs. When a traversal performs
as many iterations as the *maxIterations* value, the traversal will abort with an
error. If *maxIterations* is not set, a server-defined value may be used.

@RESTDESCRIPTION

If the Traversal is successfully executed *HTTP 200* will be returned.
Additionally the *result* object will be returned by the traversal.

For successful traversals, the returned JSON object has the
following properties:

- *error*: boolean flag to indicate if an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: the return value of the traversal

If the traversal specification is either missing or malformed, the server
will respond with *HTTP 400*.

The body of the response will then contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the traversal is fully executed
*HTTP 200* will be returned.

@RESTRETURNCODE{400}
If the traversal specification is either missing or malformed, the server
will respond with *HTTP 400*.

@RESTRETURNCODE{404}
The server will responded with *HTTP 404* if the specified edge collection
does not exist, or the specified start vertex cannot be found.

@RESTRETURNCODE{500}
The server will responded with *HTTP 500* when an error occurs inside the
traversal or if a traversal performs more than *maxIterations* iterations.

@EXAMPLES

In the following examples the underlying graph will contain five persons
*Alice*, *Bob*, *Charlie*, *Dave* and *Eve*.
We will have the following directed relations:

- *Alice* knows *Bob*
- *Bob* knows *Charlie*
- *Bob* knows *Dave*
- *Eve* knows *Alice*
- *Eve* knows *Bob*

The starting vertex will always be Alice.

Follow only outbound edges


<div class="example-container" id="RestTraversalOutbound_container">
<a class="anchorjs-link " href="#RestTraversalOutbound_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalOutbound_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12917"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12917"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12917"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12917"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12921"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12921"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12917"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12917"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12924"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12924"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y3y--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y32--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalOutbound_container_collapse" onclick="$('#RestTraversalOutbound_long').hide(); $('#RestTraversalOutbound_short').show(); window.location.hash='RestTraversalOutbound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalOutbound_short" onclick="$('#RestTraversalOutbound_short').hide(); $('#RestTraversalOutbound_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Follow only inbound edges


<div class="example-container" id="RestTraversalInbound_container">
<a class="anchorjs-link " href="#RestTraversalInbound_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalInbound_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"inbound"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YuC--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YuG--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YuC--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12632"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12632"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YuG--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YuC--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YuG--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalInbound_container_collapse" onclick="$('#RestTraversalInbound_long').hide(); $('#RestTraversalInbound_short').show(); window.location.hash='RestTraversalInbound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalInbound_short" onclick="$('#RestTraversalInbound_short').hide(); $('#RestTraversalInbound_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"inbound"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Follow any direction of edges


<div class="example-container" id="RestTraversalAny_container">
<a class="anchorjs-link " href="#RestTraversalAny_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalAny_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"uniqueness"</span> : { 
    <span class="hljs-string">"vertices"</span> : <span class="hljs-string">"none"</span>, 
    <span class="hljs-string">"edges"</span> : <span class="hljs-string">"global"</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--F"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12139"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12139"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12139"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12139"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12143"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12143"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12139"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12139"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12146"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12146"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12139"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12139"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12152"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12152"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12139"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12139"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12152"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12152"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12149"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12149"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ycm--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yci--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yce--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalAny_container_collapse" onclick="$('#RestTraversalAny_long').hide(); $('#RestTraversalAny_short').show(); window.location.hash='RestTraversalAny_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalAny_short" onclick="$('#RestTraversalAny_short').hide(); $('#RestTraversalAny_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"uniqueness"</span> : { 
    <span class="hljs-string">"vertices"</span> : <span class="hljs-string">"none"</span>, 
    <span class="hljs-string">"edges"</span> : <span class="hljs-string">"global"</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Excluding *Charlie* and *Bob*


<div class="example-container" id="RestTraversalFilterExclude_container">
<a class="anchorjs-link " href="#RestTraversalFilterExclude_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalFilterExclude_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"filter"</span> : <span class="hljs-string">"if (vertex.name === \"Bob\" ||     vertex.name === \"Charlie\") {  return \"exclude\";}return;"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--F"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12489"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12489"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12496"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12496"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ypa--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YpW--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalFilterExclude_container_collapse" onclick="$('#RestTraversalFilterExclude_long').hide(); $('#RestTraversalFilterExclude_short').show(); window.location.hash='RestTraversalFilterExclude_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalFilterExclude_short" onclick="$('#RestTraversalFilterExclude_short').hide(); $('#RestTraversalFilterExclude_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"filter"</span> : <span class="hljs-string">"if (vertex.name === \"Bob\" ||     vertex.name === \"Charlie\") {  return \"exclude\";}return;"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Do not follow edges from *Bob*


<div class="example-container" id="RestTraversalFilterPrune_container">
<a class="anchorjs-link " href="#RestTraversalFilterPrune_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalFilterPrune_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"filter"</span> : <span class="hljs-string">"if (vertex.name === \"Bob\") {return \"prune\";}return;"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yru--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yru--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yru--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12558"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12558"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yry--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yru--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yru--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalFilterPrune_container_collapse" onclick="$('#RestTraversalFilterPrune_long').hide(); $('#RestTraversalFilterPrune_short').show(); window.location.hash='RestTraversalFilterPrune_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalFilterPrune_short" onclick="$('#RestTraversalFilterPrune_short').hide(); $('#RestTraversalFilterPrune_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"filter"</span> : <span class="hljs-string">"if (vertex.name === \"Bob\") {return \"prune\";}return;"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Visit only nodes in a depth of at least 2


<div class="example-container" id="RestTraversalMinDepth_container">
<a class="anchorjs-link " href="#RestTraversalMinDepth_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalMinDepth_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"minDepth"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1a--F"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1e--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12848"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12848"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1e--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12852"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12852"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1e--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1a--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1a--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1a--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12848"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12848"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1e--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12855"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12855"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1e--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1a--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1a--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y1e--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalMinDepth_container_collapse" onclick="$('#RestTraversalMinDepth_long').hide(); $('#RestTraversalMinDepth_short').show(); window.location.hash='RestTraversalMinDepth_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalMinDepth_short" onclick="$('#RestTraversalMinDepth_short').hide(); $('#RestTraversalMinDepth_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"minDepth"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Visit only nodes in a depth of at most 1


<div class="example-container" id="RestTraversalMaxDepth_container">
<a class="anchorjs-link " href="#RestTraversalMaxDepth_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalMaxDepth_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"maxDepth"</span> : <span class="hljs-number">1</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ywa--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ywa--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ywa--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12687"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12687"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ywe--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ywa--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ywa--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalMaxDepth_container_collapse" onclick="$('#RestTraversalMaxDepth_long').hide(); $('#RestTraversalMaxDepth_short').show(); window.location.hash='RestTraversalMaxDepth_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalMaxDepth_short" onclick="$('#RestTraversalMaxDepth_short').hide(); $('#RestTraversalMaxDepth_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"maxDepth"</span> : <span class="hljs-number">1</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Using a visitor function to return vertex ids only


<div class="example-container" id="RestTraversalVisitorFunc_container">
<a class="anchorjs-link " href="#RestTraversalVisitorFunc_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalVisitorFunc_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"visitor"</span> : <span class="hljs-string">"result.visited.vertices.push(vertex._id);"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        <span class="hljs-string">"persons/alice"</span>, 
        <span class="hljs-string">"persons/bob"</span>, 
        <span class="hljs-string">"persons/charlie"</span>, 
        <span class="hljs-string">"persons/dave"</span> 
      ], 
      <span class="hljs-string">"paths"</span> : [ ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalVisitorFunc_container_collapse" onclick="$('#RestTraversalVisitorFunc_long').hide(); $('#RestTraversalVisitorFunc_short').show(); window.location.hash='RestTraversalVisitorFunc_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalVisitorFunc_short" onclick="$('#RestTraversalVisitorFunc_short').hide(); $('#RestTraversalVisitorFunc_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"visitor"</span> : <span class="hljs-string">"result.visited.vertices.push(vertex._id);"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Count all visited nodes and return a list of nodes only


<div class="example-container" id="RestTraversalVisitorCountAndList_container">
<a class="anchorjs-link " href="#RestTraversalVisitorCountAndList_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalVisitorCountAndList_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"init"</span> : <span class="hljs-string">"result.visited = 0; result.myVertices = [ ];"</span>, 
  <span class="hljs-string">"visitor"</span> : <span class="hljs-string">"result.visited++; result.myVertices.push(vertex);"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : <span class="hljs-number">4</span>, 
    <span class="hljs-string">"myVertices"</span> : [ 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y9q--_"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y9q--B"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y9q--D"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
      }, 
      { 
        <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
        <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
        <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y9q--F"</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
      } 
    ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalVisitorCountAndList_container_collapse" onclick="$('#RestTraversalVisitorCountAndList_long').hide(); $('#RestTraversalVisitorCountAndList_short').show(); window.location.hash='RestTraversalVisitorCountAndList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalVisitorCountAndList_short" onclick="$('#RestTraversalVisitorCountAndList_short').hide(); $('#RestTraversalVisitorCountAndList_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"outbound"</span>, 
  <span class="hljs-string">"init"</span> : <span class="hljs-string">"result.visited = 0; result.myVertices = [ ];"</span>, 
  <span class="hljs-string">"visitor"</span> : <span class="hljs-string">"result.visited++; result.myVertices.push(vertex);"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Expand only inbound edges of *Alice* and outbound edges of *Eve*


<div class="example-container" id="RestTraversalVisitorExpander_container">
<a class="anchorjs-link " href="#RestTraversalVisitorExpander_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalVisitorExpander_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"expander"</span> : <span class="hljs-string">"var connections = [ ];if (vertex.name === \"Alice\") {config.datasource.getInEdges(vertex).forEach(function (e) {connections.push({ vertex: require(\"internal\").db._document(e._from), edge: e});});}if (vertex.name === \"Eve\") {config.datasource.getOutEdges(vertex).forEach(function (e) {connections.push({vertex: require(\"internal\").db._document(e._to), edge: e});});}return connections;"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Z_6--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZA---B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Z_6--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Z_6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"13160"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/13160"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZA---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Z_6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZA---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"13160"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/13160"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZA---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"13163"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/13163"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZA---L"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Z_6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7ZA---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Z_6--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalVisitorExpander_container_collapse" onclick="$('#RestTraversalVisitorExpander_long').hide(); $('#RestTraversalVisitorExpander_short').show(); window.location.hash='RestTraversalVisitorExpander_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalVisitorExpander_short" onclick="$('#RestTraversalVisitorExpander_short').hide(); $('#RestTraversalVisitorExpander_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"expander"</span> : <span class="hljs-string">"var connections = [ ];if (vertex.name === \"Alice\") {config.datasource.getInEdges(vertex).forEach(function (e) {connections.push({ vertex: require(\"internal\").db._document(e._from), edge: e});});}if (vertex.name === \"Eve\") {config.datasource.getOutEdges(vertex).forEach(function (e) {connections.push({vertex: require(\"internal\").db._document(e._to), edge: e});});}return connections;"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Follow the *depthfirst* strategy


<div class="example-container" id="RestTraversalDepthFirst_container">
<a class="anchorjs-link " href="#RestTraversalDepthFirst_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalDepthFirst_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"strategy"</span> : <span class="hljs-string">"depthfirst"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12314"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12314"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12314"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12314"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12318"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12318"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12314"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12314"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12321"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12321"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12314"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12314"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12327"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12327"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12314"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12314"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12327"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12327"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12324"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12324"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12324"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12324"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12324"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12324"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12327"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12327"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12324"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12324"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12327"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12327"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12318"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12318"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12324"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12324"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12327"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12327"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12321"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12321"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12324"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12324"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12327"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12327"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjW--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12314"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12314"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjS--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YjO--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalDepthFirst_container_collapse" onclick="$('#RestTraversalDepthFirst_long').hide(); $('#RestTraversalDepthFirst_short').show(); window.location.hash='RestTraversalDepthFirst_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalDepthFirst_short" onclick="$('#RestTraversalDepthFirst_short').hide(); $('#RestTraversalDepthFirst_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"strategy"</span> : <span class="hljs-string">"depthfirst"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Using *postorder* ordering


<div class="example-container" id="RestTraversalPostorder_container">
<a class="anchorjs-link " href="#RestTraversalPostorder_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalPostorder_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"order"</span> : <span class="hljs-string">"postorder"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--F"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--F"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12986"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12986"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12990"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12990"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12986"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12986"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12993"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12993"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12986"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12986"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12999"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12999"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6W--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12996"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12996"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12986"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12986"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12999"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12999"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6W--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12986"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12986"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12996"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12996"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12999"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12999"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6W--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12990"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12990"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12996"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12996"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12999"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12999"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6W--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12993"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12993"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12996"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12996"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12999"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12999"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6W--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12986"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12986"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12996"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12996"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12999"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12999"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6W--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12996"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12996"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6S--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y6O--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalPostorder_container_collapse" onclick="$('#RestTraversalPostorder_long').hide(); $('#RestTraversalPostorder_short').show(); window.location.hash='RestTraversalPostorder_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalPostorder_short" onclick="$('#RestTraversalPostorder_short').hide(); $('#RestTraversalPostorder_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"order"</span> : <span class="hljs-string">"postorder"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Using *backward* item-ordering:


<div class="example-container" id="RestTraversalBackwardItemOrder_container">
<a class="anchorjs-link " href="#RestTraversalBackwardItemOrder_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalBackwardItemOrder_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"itemOrder"</span> : <span class="hljs-string">"backward"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12229"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12229"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12229"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12229"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12232"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12232"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YgC--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12229"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12229"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12232"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12232"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YgC--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12219"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12219"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12229"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12229"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12232"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12232"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YgC--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12226"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12226"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12229"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12229"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12232"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12232"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YgC--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12223"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12223"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12219"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12219"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12219"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12219"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12232"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12232"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YgC--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12219"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12219"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12232"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12232"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YgC--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12229"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12229"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---J"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12219"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12219"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12226"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12226"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12219"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12219"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12223"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12223"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yg---F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Yf6--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalBackwardItemOrder_container_collapse" onclick="$('#RestTraversalBackwardItemOrder_long').hide(); $('#RestTraversalBackwardItemOrder_short').show(); window.location.hash='RestTraversalBackwardItemOrder_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalBackwardItemOrder_short" onclick="$('#RestTraversalBackwardItemOrder_short').hide(); $('#RestTraversalBackwardItemOrder_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"itemOrder"</span> : <span class="hljs-string">"backward"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Edges should only be included once globally,
but nodes are included every time they are visited


<div class="example-container" id="RestTraversalEdgeUniqueness_container">
<a class="anchorjs-link " href="#RestTraversalEdgeUniqueness_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalEdgeUniqueness_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"uniqueness"</span> : { 
    <span class="hljs-string">"vertices"</span> : <span class="hljs-string">"none"</span>, 
    <span class="hljs-string">"edges"</span> : <span class="hljs-string">"global"</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"visited"</span> : { 
      <span class="hljs-string">"vertices"</span> : [ 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--B"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--D"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--F"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
        }, 
        { 
          <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
          <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
          <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
        } 
      ], 
      <span class="hljs-string">"paths"</span> : [ 
        { 
          <span class="hljs-string">"edges"</span> : [ ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12409"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12409"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12409"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12409"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12413"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12413"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--D"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"charlie"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/charlie"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--D"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Charlie"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12409"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12409"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12416"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12416"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--F"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"bob"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"dave"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/dave"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--F"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Dave"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12409"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12409"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12422"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12422"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymu--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"edges"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12409"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12409"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--B"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12422"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12422"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymu--_"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12419"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"knows/12419"</span>, 
              <span class="hljs-string">"_from"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_to"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--H"</span>, 
              <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"eve"</span> 
            } 
          ], 
          <span class="hljs-string">"vertices"</span> : [ 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"bob"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/bob"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--B"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Bob"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"eve"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/eve"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymq--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Eve"</span> 
            }, 
            { 
              <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
              <span class="hljs-string">"_id"</span> : <span class="hljs-string">"persons/alice"</span>, 
              <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ymm--_"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
            } 
          ] 
        } 
      ] 
    } 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestTraversalEdgeUniqueness_container_collapse" onclick="$('#RestTraversalEdgeUniqueness_long').hide(); $('#RestTraversalEdgeUniqueness_short').show(); window.location.hash='RestTraversalEdgeUniqueness_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalEdgeUniqueness_short" onclick="$('#RestTraversalEdgeUniqueness_short').hide(); $('#RestTraversalEdgeUniqueness_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"uniqueness"</span> : { 
    <span class="hljs-string">"vertices"</span> : <span class="hljs-string">"none"</span>, 
    <span class="hljs-string">"edges"</span> : <span class="hljs-string">"global"</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




If the underlying graph is cyclic, *maxIterations* should be set

The underlying graph has two vertices *Alice* and *Bob*.
With the directed edges:

- *Alice* knows *Bob*
- *Bob* knows *Alice*



<div class="example-container" id="RestTraversalMaxIterations_container">
<a class="anchorjs-link " href="#RestTraversalMaxIterations_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestTraversalMaxIterations_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"uniqueness"</span> : { 
    <span class="hljs-string">"vertices"</span> : <span class="hljs-string">"none"</span>, 
    <span class="hljs-string">"edges"</span> : <span class="hljs-string">"none"</span> 
  }, 
  <span class="hljs-string">"maxIterations"</span> : <span class="hljs-number">5</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">500</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1909</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"too many iterations - try increasing the value of 'maxIterations'"</span> 
}
</pre>
<div id="RestTraversalMaxIterations_container_collapse" onclick="$('#RestTraversalMaxIterations_long').hide(); $('#RestTraversalMaxIterations_short').show(); window.location.hash='RestTraversalMaxIterations_container';" class="example_show_button">Hide response body</div></div>
<div id="RestTraversalMaxIterations_short" onclick="$('#RestTraversalMaxIterations_short').hide(); $('#RestTraversalMaxIterations_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/traversal &lt;&lt;EOF
{ 
  <span class="hljs-string">"startVertex"</span> : <span class="hljs-string">"persons/alice"</span>, 
  <span class="hljs-string">"graphName"</span> : <span class="hljs-string">"knows_graph"</span>, 
  <span class="hljs-string">"direction"</span> : <span class="hljs-string">"any"</span>, 
  <span class="hljs-string">"uniqueness"</span> : { 
    <span class="hljs-string">"vertices"</span> : <span class="hljs-string">"none"</span>, 
    <span class="hljs-string">"edges"</span> : <span class="hljs-string">"none"</span> 
  }, 
  <span class="hljs-string">"maxIterations"</span> : <span class="hljs-number">5</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">500</span> Internal Server <span class="hljs-built_in">Error</span>
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_put_admin_wal_properties.md -->
@startDocuBlock JSF_put_admin_wal_properties

@brief configure parameters of the wal

@RESTHEADER{PUT /_admin/wal/properties, Configures the write-ahead log}

@RESTDESCRIPTION
Configures the behavior of the write-ahead log. The body of the request
must be a JSON object with the following attributes:
- *allowOversizeEntries*: whether or not operations that are bigger than a
  single logfile can be executed and stored
- *logfileSize*: the size of each write-ahead logfile
- *historicLogfiles*: the maximum number of historic logfiles to keep
- *reserveLogfiles*: the maximum number of reserve logfiles that ArangoDB
  allocates in the background
- *throttleWait*: the maximum wait time that operations will wait before
  they get aborted if case of write-throttling (in milliseconds)
- *throttleWhenPending*: the number of unprocessed garbage-collection
  operations that, when reached, will activate write-throttling. A value of
  *0* means that write-throttling will not be triggered.

Specifying any of the above attributes is optional. Not specified attributes
will be ignored and the configuration for them will not be modified.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_put_admin_wal_properties.md -->

@startDocuBlock JSF_put_admin_wal_properties

@brief configure parameters of the wal

@RESTHEADER{PUT /_admin/wal/properties, Configures the write-ahead log}

@RESTDESCRIPTION
Configures the behavior of the write-ahead log. The body of the request
must be a JSON object with the following attributes:
- *allowOversizeEntries*: whether or not operations that are bigger than a
  single logfile can be executed and stored
- *logfileSize*: the size of each write-ahead logfile
- *historicLogfiles*: the maximum number of historic logfiles to keep
- *reserveLogfiles*: the maximum number of reserve logfiles that ArangoDB
  allocates in the background
- *throttleWait*: the maximum wait time that operations will wait before
  they get aborted if case of write-throttling (in milliseconds)
- *throttleWhenPending*: the number of unprocessed garbage-collection
  operations that, when reached, will activate write-throttling. A value of
  *0* means that write-throttling will not be triggered.

Specifying any of the above attributes is optional. Not specified attributes
will be ignored and the configuration for them will not be modified.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


@EXAMPLES


<div class="example-container" id="RestWalPropertiesPut_container">
<a class="anchorjs-link " href="#RestWalPropertiesPut_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestWalPropertiesPut_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_admin/wal/properties &lt;&lt;EOF
{ 
  <span class="hljs-string">"logfileSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"allowOversizeEntries"</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"allowOversizeEntries"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"logfileSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"historicLogfiles"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"reserveLogfiles"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"syncInterval"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"throttleWait"</span> : <span class="hljs-number">15000</span>, 
  <span class="hljs-string">"throttleWhenPending"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestWalPropertiesPut_container_collapse" onclick="$('#RestWalPropertiesPut_long').hide(); $('#RestWalPropertiesPut_short').show(); window.location.hash='RestWalPropertiesPut_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalPropertiesPut_short" onclick="$('#RestWalPropertiesPut_short').hide(); $('#RestWalPropertiesPut_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_admin/wal/properties &lt;&lt;EOF
{ 
  <span class="hljs-string">"logfileSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"allowOversizeEntries"</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_get_admin_wal_transactions.md -->
@startDocuBlock JSF_get_admin_wal_transactions

@brief returns information about the currently running transactions

@RESTHEADER{GET /_admin/wal/transactions, Returns information about the currently running transactions}

@RESTDESCRIPTION
Returns information about the currently running transactions. The result
is a JSON object with the following attributes:
- *runningTransactions*: number of currently running transactions
- *minLastCollected*: minimum id of the last collected logfile (at the
  start of each running transaction). This is *null* if no transaction is
  running.
- *minLastSealed*: minimum id of the last sealed logfile (at the
  start of each running transaction). This is *null* if no transaction is
  running.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_get_admin_wal_transactions.md -->

@startDocuBlock JSF_get_admin_wal_transactions

@brief returns information about the currently running transactions

@RESTHEADER{GET /_admin/wal/transactions, Returns information about the currently running transactions}

@RESTDESCRIPTION
Returns information about the currently running transactions. The result
is a JSON object with the following attributes:
- *runningTransactions*: number of currently running transactions
- *minLastCollected*: minimum id of the last collected logfile (at the
  start of each running transaction). This is *null* if no transaction is
  running.
- *minLastSealed*: minimum id of the last sealed logfile (at the
  start of each running transaction). This is *null* if no transaction is
  running.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


@EXAMPLES


<div class="example-container" id="RestWalTransactionsGet_container">
<a class="anchorjs-link " href="#RestWalTransactionsGet_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestWalTransactionsGet_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/wal/transactions

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"runningTransactions"</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">"minLastCollected"</span> : <span class="hljs-number">90</span>, 
  <span class="hljs-string">"minLastSealed"</span> : <span class="hljs-literal">null</span> 
}
</pre>
<div id="RestWalTransactionsGet_container_collapse" onclick="$('#RestWalTransactionsGet_long').hide(); $('#RestWalTransactionsGet_short').show(); window.location.hash='RestWalTransactionsGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalTransactionsGet_short" onclick="$('#RestWalTransactionsGet_short').hide(); $('#RestWalTransactionsGet_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/wal/transactions

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_get_admin_wal_properties.md -->
@startDocuBlock JSF_get_admin_wal_properties

@brief fetch the current configuration.

@RESTHEADER{GET /_admin/wal/properties, Retrieves the configuration of the write-ahead log}

@RESTDESCRIPTION
Retrieves the configuration of the write-ahead log. The result is a JSON
object with the following attributes:
- *allowOversizeEntries*: whether or not operations that are bigger than a
  single logfile can be executed and stored
- *logfileSize*: the size of each write-ahead logfile
- *historicLogfiles*: the maximum number of historic logfiles to keep
- *reserveLogfiles*: the maximum number of reserve logfiles that ArangoDB
  allocates in the background
- *syncInterval*: the interval for automatic synchronization of not-yet
  synchronized write-ahead log data (in milliseconds)
- *throttleWait*: the maximum wait time that operations will wait before
  they get aborted if case of write-throttling (in milliseconds)
- *throttleWhenPending*: the number of unprocessed garbage-collection
  operations that, when reached, will activate write-throttling. A value of
  *0* means that write-throttling will not be triggered.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_get_admin_wal_properties.md -->

@startDocuBlock JSF_get_admin_wal_properties

@brief fetch the current configuration.

@RESTHEADER{GET /_admin/wal/properties, Retrieves the configuration of the write-ahead log}

@RESTDESCRIPTION
Retrieves the configuration of the write-ahead log. The result is a JSON
object with the following attributes:
- *allowOversizeEntries*: whether or not operations that are bigger than a
  single logfile can be executed and stored
- *logfileSize*: the size of each write-ahead logfile
- *historicLogfiles*: the maximum number of historic logfiles to keep
- *reserveLogfiles*: the maximum number of reserve logfiles that ArangoDB
  allocates in the background
- *syncInterval*: the interval for automatic synchronization of not-yet
  synchronized write-ahead log data (in milliseconds)
- *throttleWait*: the maximum wait time that operations will wait before
  they get aborted if case of write-throttling (in milliseconds)
- *throttleWhenPending*: the number of unprocessed garbage-collection
  operations that, when reached, will activate write-throttling. A value of
  *0* means that write-throttling will not be triggered.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


@EXAMPLES


<div class="example-container" id="RestWalPropertiesGet_container">
<a class="anchorjs-link " href="#RestWalPropertiesGet_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestWalPropertiesGet_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/wal/properties

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"allowOversizeEntries"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"logfileSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"historicLogfiles"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"reserveLogfiles"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"syncInterval"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"throttleWait"</span> : <span class="hljs-number">15000</span>, 
  <span class="hljs-string">"throttleWhenPending"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestWalPropertiesGet_container_collapse" onclick="$('#RestWalPropertiesGet_long').hide(); $('#RestWalPropertiesGet_short').show(); window.location.hash='RestWalPropertiesGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestWalPropertiesGet_short" onclick="$('#RestWalPropertiesGet_short').hide(); $('#RestWalPropertiesGet_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_admin/wal/properties

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/wal/JSF_put_admin_wal_flush.md -->
@startDocuBlock JSF_put_admin_wal_flush

@brief Sync the WAL to disk.

@RESTHEADER{PUT /_admin/wal/flush, Flushes the write-ahead log}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Whether or not the operation should block until the not-yet synchronized
data in the write-ahead log was synchronized to disk.

@RESTQUERYPARAM{waitForCollector,boolean,optional}
Whether or not the operation should block until the data in the flushed
log has been collected by the write-ahead log garbage collector. Note that
setting this option to *true* might block for a long time if there are
long-running transactions and the write-ahead log garbage collector cannot
finish garbage collection.

@RESTDESCRIPTION
Flushes the write-ahead log. By flushing the currently active write-ahead
logfile, the data in it can be transferred to collection journals and
datafiles. This is useful to ensure that all data for a collection is
present in the collection journals and datafiles, for example, when dumping
the data of a collection.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the operation succeeds.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_test_HEAD.md -->
@startDocuBlock JSF_cluster_test_HEAD

@brief executes a cluster roundtrip for sharding

@RESTHEADER{HEAD /_admin/cluster-test, Execute cluster roundtrip HEAD}

@RESTDESCRIPTION
See GET method.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_test_GET.md -->
@startDocuBlock JSF_cluster_test_GET

@brief executes a cluster roundtrip for sharding

@RESTHEADER{GET /_admin/cluster-test, Execute cluster roundtrip GET}

@RESTDESCRIPTION
Executes a cluster roundtrip from a coordinator to a DB server and
back. This call only works in a coordinator node in a cluster.
One can and should append an arbitrary path to the URL and the
part after */_admin/cluster-test* is used as the path of the HTTP
request which is sent from the coordinator to a DB node. Likewise,
any form data appended to the URL is forwarded in the request to the
DB node. This handler takes care of all request types (see below)
and uses the same request type in its request to the DB node.

The following HTTP headers are interpreted in a special way:

  - *X-Shard-ID*: This specifies the ID of the shard to which the
    cluster request is sent and thus tells the system to which DB server
    to send the cluster request. Note that the mapping from the
    shard ID to the responsible server has to be defined in the
    agency under *Current/ShardLocation/<shardID>*. One has to give
    this header, otherwise the system does not know where to send
    the request.
  - *X-Client-Transaction-ID*: the value of this header is taken
    as the client transaction ID for the request
  - *X-Timeout*: specifies a timeout in seconds for the cluster
    operation. If the answer does not arrive within the specified
    timeout, an corresponding error is returned and any subsequent
    real answer is ignored. The default if not given is 24 hours.
  - *X-Synchronous-Mode*: If set to *true* the test function uses
    synchronous mode, otherwise the default asynchronous operation
    mode is used. This is mainly for debugging purposes.
  - *Host*: This header is ignored and not forwarded to the DB server.
  - *User-Agent*: This header is ignored and not forwarded to the DB
    server.

All other HTTP headers and the body of the request (if present, see
other HTTP methods below) are forwarded as given in the original request.

In asynchronous mode the DB server answers with an HTTP request of its
own, in synchronous mode it sends a HTTP response. In both cases the
headers and the body are used to produce the HTTP response of this
API call.

@RESTRETURNCODES

The return code can be anything the cluster request returns, as well as:

@RESTRETURNCODE{200}
is returned when everything went well, or if a timeout occurred. In the
latter case a body of type application/json indicating the timeout
is returned.

@RESTRETURNCODE{403}
is returned if ArangoDB is not running in cluster mode.

@RESTRETURNCODE{404}
is returned if ArangoDB was not compiled for cluster operation.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_test_DELETE.md -->
@startDocuBlock JSF_cluster_test_DELETE

@brief executes a cluster roundtrip for sharding

@RESTHEADER{DELETE /_admin/cluster-test, Delete cluster roundtrip}

@RESTDESCRIPTION
See GET method.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_test_PATCH.md -->
@startDocuBlock JSF_cluster_test_PATCH

@brief executes a cluster roundtrip for sharding

@RESTHEADER{PATCH /_admin/cluster-test, Update cluster roundtrip}

@RESTALLBODYPARAM{body,object,required}

@RESTDESCRIPTION
See GET method. The body can be any type and is simply forwarded.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/get_cluster_health.md -->
@startDocuBlock get_cluster_health

@brief Returns the health of the cluster as assessed by the supervision (agency)

@RESTHEADER{GET /_admin/cluster/health, Queries the health of cluster for monitoring}

@RESTDESCRIPTION
Queries the health of the cluster for monitoring purposes. The response is a JSON object, containing the standard `code`, `error`, `errorNum`, and `errorMessage` fields as appropriate. The endpoint-specific fields are as follows:

- `ClusterId`: A UUID string identifying the cluster
- `Health`: An object containing a descriptive sub-object for each node in the cluster. Each entry in `Health` will be keyed by the node ID and contain the the following attributes:
  - `Endpoint`: A string representing the network endpoint of the server.
  - `Role`: The role the server plays. Possible values are `"AGENT"`, `"COORDINATOR"`, and `"DBSERVER"`.
  - `CanBeDeleted`: Boolean representing whether the node can safely be removed from the cluster.
  - `Version`: Version String of ArangoDB used by that node.
  - `Engine`: Storage Engine used by that node.
  - `Status`: A string indicating the health of the node as assessed by the supervision (agency). This should be considered primary source of truth for coordinator and dbservers node health. If the node is responding normally to requests, it is `"GOOD"`. If it has missed one heartbeat, it is `"BAD"`. If it has been declared failed by the supervision, which occurs after missing heartbeats for about 15 seconds, it will be marked `"FAILED"`.

  Additionally it will also have the following attributes for
    - Coordinators and DBServer:
      - `SyncStatus`: The last sync status reported by the node. This value is primarily used to determine the value of `Status`. Possible values include `"UNKNOWN"`, `"UNDEFINED"`, `"STARTUP"`, `"STOPPING"`, `"STOPPED"`, `"SERVING"`, `"SHUTDOWN"`.
      - `LastAckedTime`: ISO 8601 timestamp specifying the last heartbeat received.
      - `ShortName`: A string representing the shortname of the server, e.g. `"Coordinator0001"`.
      - `Timestamp`: ISO 8601 timestamp specifying the last heartbeat received. (deprecated)
      - `Host`: An optional string, specifying the host machine if known.
    - Only Coordinators:
      - `AdvertisedEndpoint`: A string representing the advertised endpoint, if set. (e.g. external IP address or load balancer, optional)
    - Agents:
        - "Leader": ID of the agent this node regards as leader.
        - "Leading": Whether this agent is the leader (true) or not (false).
        - "LastAckedTime": Time since last `acked` in seconds.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_check_port_GET.md -->
@startDocuBlock JSF_cluster_check_port_GET

@brief allows to check whether a given port is usable

@RESTHEADER{GET /_admin/clusterCheckPort, Check port}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{port,integer,required}

@RESTDESCRIPTION
Checks whether the requested port is usable.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@RESTRETURNCODE{400} the parameter port was not given or is no integer.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_test_PUT.md -->
@startDocuBlock JSF_cluster_test_PUT

@brief executes a cluster roundtrip for sharding

@RESTHEADER{PUT /_admin/cluster-test, Execute cluster roundtrip PUT}

@RESTALLBODYPARAM{body,object,required}

@RESTDESCRIPTION
See GET method. The body can be any type and is simply forwarded.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_test_POST.md -->
@startDocuBlock JSF_cluster_test_POST

@brief executes a cluster roundtrip for sharding

@RESTHEADER{POST /_admin/cluster-test, Execute cluster roundtrip POST}

@RESTALLBODYPARAM{body,object,required}
The body can be any type and is simply forwarded.

@RESTDESCRIPTION
See GET method.

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Cluster/JSF_cluster_statistics_GET.md -->
@startDocuBlock JSF_cluster_statistics_GET

@brief allows to query the statistics of a DBserver in the cluster

@RESTHEADER{GET /_admin/clusterStatistics, Queries statistics of DBserver}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{DBserver,string,required}

@RESTDESCRIPTION
Queries the statistics of the given DBserver

@RESTRETURNCODES

@RESTRETURNCODE{200} is returned when everything went well.

@RESTRETURNCODE{400} the parameter DBserver was not given or is not the
ID of a DBserver

@RESTRETURNCODE{403} server is not a coordinator.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_create

@brief Create a new user.

@RESTHEADER{POST /_api/user, Create User}

@RESTBODYPARAM{user,string,required,string}
The name of the user as a string. This is mandatory.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. If no password is specified, the empty string
will be used. If you pass the special value *ARANGODB_DEFAULT_ROOT_PASSWORD*,
then the password will be set the value stored in the environment variable
`ARANGODB_DEFAULT_ROOT_PASSWORD`. This can be used to pass an instance
variable into ArangoDB. For example, the instance identifier from Amazon.

@RESTBODYPARAM{active,boolean,optional,boolean}
An optional flag that specifies whether the user is active.  If not
specified, this will default to true

@RESTBODYPARAM{extra,object,optional,}
An optional JSON object with arbitrary extra data about the user.

@RESTDESCRIPTION
Create a new user. You need server access level *Administrate* in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the user can be added by the server

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{409}
Returned if a user with the same name already exists.

@EXAMPLES


<div class="example-container" id="RestCreateUser_container">
<a class="anchorjs-link " href="#RestCreateUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCreateUser_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user &lt;&lt;EOF
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@example"</span>, 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@example"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCreateUser_container_collapse" onclick="$('#RestCreateUser_long').hide(); $('#RestCreateUser_short').show(); window.location.hash='RestCreateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCreateUser_short" onclick="$('#RestCreateUser_short').hide(); $('#RestCreateUser_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user &lt;&lt;EOF
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@example"</span>, 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_grantDatabase

@brief Set the database access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}, Set the database access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the database access level to *Administrate* .

Use "ro" to set the database access level to *Access*.

Use "none" to set the database access level to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Sets the database access levels for the database *dbname* of user *user*. You
need the *Administrate* server access level in order to execute this REST
call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level was changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantDatabase_container">
<a class="anchorjs-link " href="#RestGrantDatabase_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestGrantDatabase_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_system"</span> : <span class="hljs-string">"rw"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantDatabase_container_collapse" onclick="$('#RestGrantDatabase_long').hide(); $('#RestGrantDatabase_short').show(); window.location.hash='RestGrantDatabase_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantDatabase_short" onclick="$('#RestGrantDatabase_short').hide(); $('#RestGrantDatabase_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_revokeDatabase

@brief Clear the database access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}, Clear the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Clears the database access level for the database *dbname* of user *user*. As
consequence the default database access level is used. If there is no defined
default database access level, it defaults to *No access*. You need permission
to the *_system* database in order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@EXAMPLES


<div class="example-container" id="RestRevokeDatabase_container">
<a class="anchorjs-link " href="#RestRevokeDatabase_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestRevokeDatabase_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/user/admin@myapp/database/_system

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_grantCollection

@brief Set the collection access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}/{collection}, Set the collection access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the collection level access to *Read/Write*.

Use "ro" to set the collection level access to  *Read Only*.

Use "none" to set the collection level access to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Sets the collection access level for the *collection* in the database *dbname*
for user *user*. You need the *Administrate* server access level in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantCollection_container">
<a class="anchorjs-link " href="#RestGrantCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestGrantCollection_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_system/reports"</span> : <span class="hljs-string">"rw"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantCollection_container_collapse" onclick="$('#RestGrantCollection_long').hide(); $('#RestGrantCollection_short').show(); window.location.hash='RestGrantCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantCollection_short" onclick="$('#RestGrantCollection_short').hide(); $('#RestGrantCollection_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_revokeCollection

@brief Clear the collection access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}/{collection}, Clear the collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Clears the collection access level for the collection *collection* in the
database *dbname* of user *user*.  As consequence the default collection
access level is used. If there is no defined default collection access level,
it defaults to *No access*.  You need permissions to the *_system* database in
order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If there was an error

@EXAMPLES


<div class="example-container" id="RestRevokeCollection_container">
<a class="anchorjs-link " href="#RestRevokeCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestRevokeCollection_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchDatabaseList

@brief List the accessible databases for a user

@RESTHEADER{GET /_api/user/{user}/database/, List the accessible databases for a user}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{full,boolean,optional}
Return the full set of access levels for all databases and all collections.

@RESTDESCRIPTION
Fetch the list of databases available to the specified *user*. You need
*Administrate* for the server access level in order to execute this REST call.

The call will return a JSON object with the per-database access
privileges for the specified user. The *result* object will contain
the databases names as object keys, and the associated privileges
for the database as values.

In case you specified *full*, the result will contain the permissions
for the databases as well as the permissions for the collections.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the list of available databases can be returned.

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabaseList_container">
<a class="anchorjs-link " href="#RestFetchUserDatabaseList_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserDatabaseList_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"_system"</span> : <span class="hljs-string">"rw"</span> 
  } 
}
</pre>
<div id="RestFetchUserDatabaseList_container_collapse" onclick="$('#RestFetchUserDatabaseList_long').hide(); $('#RestFetchUserDatabaseList_short').show(); window.location.hash='RestFetchUserDatabaseList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseList_short" onclick="$('#RestFetchUserDatabaseList_short').hide(); $('#RestFetchUserDatabaseList_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With the full response format:


<div class="example-container" id="RestFetchUserDatabaseListFull_container">
<a class="anchorjs-link " href="#RestFetchUserDatabaseListFull_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserDatabaseListFull_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"_system"</span> : { 
      <span class="hljs-string">"permission"</span> : <span class="hljs-string">"rw"</span>, 
      <span class="hljs-string">"collections"</span> : { 
        <span class="hljs-string">"_queues"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"demo"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_frontend"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_statistics15"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_aqlfunctions"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_statisticsRaw"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"animals"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_users"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_statistics"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_graphs"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_jobs"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_apps"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_routing"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_appbundles"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_modules"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"*"</span> : <span class="hljs-string">"undefined"</span> 
      } 
    }, 
    <span class="hljs-string">"*"</span> : { 
      <span class="hljs-string">"permission"</span> : <span class="hljs-string">"none"</span> 
    } 
  } 
}
</pre>
<div id="RestFetchUserDatabaseListFull_container_collapse" onclick="$('#RestFetchUserDatabaseListFull_long').hide(); $('#RestFetchUserDatabaseListFull_short').show(); window.location.hash='RestFetchUserDatabaseListFull_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseListFull_short" onclick="$('#RestFetchUserDatabaseListFull_short').hide(); $('#RestFetchUserDatabaseListFull_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchDatabasePermission

@brief Get specific database access level

@RESTHEADER{GET /_api/user/{user}/database/{database}, Get the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{database,string,required}
The name of the database to query

@RESTDESCRIPTION
Fetch the database access level for a specific database

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the acccess level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabasePermission_container">
<a class="anchorjs-link " href="#RestFetchUserDatabasePermission_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserDatabasePermission_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-string">"rw"</span> 
}
</pre>
<div id="RestFetchUserDatabasePermission_container_collapse" onclick="$('#RestFetchUserDatabasePermission_long').hide(); $('#RestFetchUserDatabasePermission_short').show(); window.location.hash='RestFetchUserDatabasePermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabasePermission_short" onclick="$('#RestFetchUserDatabasePermission_short').hide(); $('#RestFetchUserDatabasePermission_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchCollectionPermission

@brief Get the collection access level

@RESTHEADER{GET /_api/user/{user}/database/{database}/{collection}, Get the specific collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{database,string,required}
The name of the database to query

@RESTURLPARAM{collection,string,required}
The name of the collection

@RESTDESCRIPTION
Returns the collection access level for a specific collection

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the acccess level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserCollectionPermission_container">
<a class="anchorjs-link " href="#RestFetchUserCollectionPermission_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserCollectionPermission_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-string">"none"</span> 
}
</pre>
<div id="RestFetchUserCollectionPermission_container_collapse" onclick="$('#RestFetchUserCollectionPermission_long').hide(); $('#RestFetchUserCollectionPermission_short').show(); window.location.hash='RestFetchUserCollectionPermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserCollectionPermission_short" onclick="$('#RestFetchUserCollectionPermission_short').hide(); $('#RestFetchUserCollectionPermission_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_replace

@brief Replace an existing user.

@RESTHEADER{PUT /_api/user/{user}, Replace User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. Specifying a password is mandatory, but
the empty string is allowed for passwords

@RESTBODYPARAM{active,boolean,optional,boolean}
An optional flag that specifies whether the user is active.  If not
specified, this will default to true

@RESTBODYPARAM{extra,object,optional,}
An optional JSON object with arbitrary extra data about the user.

@RESTDESCRIPTION
Replaces the data of an existing user. The name of an existing user must be
specified in *user*. You need server access level *Administrate* in order to
execute this REST call. Additionally, a user can change his/her own data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestReplaceUser_container">
<a class="anchorjs-link " href="#RestReplaceUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplaceUser_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@myapp"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestReplaceUser_container_collapse" onclick="$('#RestReplaceUser_long').hide(); $('#RestReplaceUser_short').show(); window.location.hash='RestReplaceUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplaceUser_short" onclick="$('#RestReplaceUser_short').hide(); $('#RestReplaceUser_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_modify

@brief Modify attributes of an existing user

@RESTHEADER{PATCH /_api/user/{user}, Modify User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. Specifying a password is mandatory, but
the empty string is allowed for passwords

@RESTBODYPARAM{active,boolean,optional,boolean}
An optional flag that specifies whether the user is active.  If not
specified, this will default to true

@RESTBODYPARAM{extra,object,optional,}
An optional JSON object with arbitrary extra data about the user.

@RESTDESCRIPTION
Partially updates the data of an existing user. The name of an existing user
must be specified in *user*. You need server access level *Administrate* in
order to execute this REST call. Additionally, a user can change his/her own
data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestUpdateUser_container">
<a class="anchorjs-link " href="#RestUpdateUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestUpdateUser_long" style="Display: none;">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@myapp"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestUpdateUser_container_collapse" onclick="$('#RestUpdateUser_long').hide(); $('#RestUpdateUser_short').show(); window.location.hash='RestUpdateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestUpdateUser_short" onclick="$('#RestUpdateUser_short').hide(); $('#RestUpdateUser_long').show();">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_create

@brief Create a new user.

@RESTHEADER{POST /_api/user, Create User}

@RESTBODYPARAM{user,string,required,string}
The name of the user as a string. This is mandatory.

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. If no password is specified, the empty string
will be used. If you pass the special value *ARANGODB_DEFAULT_ROOT_PASSWORD*,
then the password will be set the value stored in the environment variable
`ARANGODB_DEFAULT_ROOT_PASSWORD`. This can be used to pass an instance
variable into ArangoDB. For example, the instance identifier from Amazon.

@RESTBODYPARAM{active,boolean,optional,boolean}
An optional flag that specifies whether the user is active.  If not
specified, this will default to true

@RESTBODYPARAM{extra,object,optional,}
An optional JSON object with arbitrary extra data about the user.

@RESTDESCRIPTION
Create a new user. You need server access level *Administrate* in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the user can be added by the server

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{409}
Returned if a user with the same name already exists.

@EXAMPLES


<div class="example-container" id="RestCreateUser_container">
<a class="anchorjs-link " href="#RestCreateUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCreateUser_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user &lt;&lt;EOF
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@example"</span>, 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@example"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestCreateUser_container_collapse" onclick="$('#RestCreateUser_long').hide(); $('#RestCreateUser_short').show(); window.location.hash='RestCreateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCreateUser_short" onclick="$('#RestCreateUser_short').hide(); $('#RestCreateUser_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user &lt;&lt;EOF
{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@example"</span>, 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_grantDatabase

@brief Set the database access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}, Set the database access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the database access level to *Administrate* .

Use "ro" to set the database access level to *Access*.

Use "none" to set the database access level to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Sets the database access levels for the database *dbname* of user *user*. You
need the *Administrate* server access level in order to execute this REST
call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access level was changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantDatabase_container">
<a class="anchorjs-link " href="#RestGrantDatabase_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestGrantDatabase_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_system"</span> : <span class="hljs-string">"rw"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantDatabase_container_collapse" onclick="$('#RestGrantDatabase_long').hide(); $('#RestGrantDatabase_short').show(); window.location.hash='RestGrantDatabase_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantDatabase_short" onclick="$('#RestGrantDatabase_short').hide(); $('#RestGrantDatabase_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_revokeDatabase

@brief Clear the database access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}, Clear the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTDESCRIPTION
Clears the database access level for the database *dbname* of user *user*. As
consequence the default database access level is used. If there is no defined
default database access level, it defaults to *No access*. You need permission
to the *_system* database in order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@EXAMPLES


<div class="example-container" id="RestRevokeDatabase_container">
<a class="anchorjs-link " href="#RestRevokeDatabase_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestRevokeDatabase_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/user/admin@myapp/database/_system

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_grantCollection

@brief Set the collection access level.

@RESTHEADER{PUT /_api/user/{user}/database/{dbname}/{collection}, Set the collection access level}

@RESTBODYPARAM{grant,string,required,string}
Use "rw" to set the collection level access to *Read/Write*.

Use "ro" to set the collection level access to  *Read Only*.

Use "none" to set the collection level access to *No access*.

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Sets the collection access level for the *collection* in the database *dbname*
for user *user*. You need the *Administrate* server access level in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing
from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestGrantCollection_container">
<a class="anchorjs-link " href="#RestGrantCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestGrantCollection_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_system/reports"</span> : <span class="hljs-string">"rw"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestGrantCollection_container_collapse" onclick="$('#RestGrantCollection_long').hide(); $('#RestGrantCollection_short').show(); window.location.hash='RestGrantCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestGrantCollection_short" onclick="$('#RestGrantCollection_short').hide(); $('#RestGrantCollection_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports &lt;&lt;EOF
{ 
  <span class="hljs-string">"grant"</span> : <span class="hljs-string">"rw"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_revokeCollection

@brief Clear the collection access level, revert back to the default access level

@RESTHEADER{DELETE /_api/user/{user}/database/{dbname}/{collection}, Clear the collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user.

@RESTURLPARAM{dbname,string,required}
The name of the database.

@RESTURLPARAM{collection,string,required}
The name of the collection.

@RESTDESCRIPTION
Clears the collection access level for the collection *collection* in the
database *dbname* of user *user*.  As consequence the default collection
access level is used. If there is no defined default collection access level,
it defaults to *No access*.  You need permissions to the *_system* database in
order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Returned if the access permissions were changed successfully.

@RESTRETURNCODE{400}
If there was an error

@EXAMPLES


<div class="example-container" id="RestRevokeCollection_container">
<a class="anchorjs-link " href="#RestRevokeCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestRevokeCollection_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/user/admin@myapp/database/_system/reports

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_fetchDatabaseList

@brief List the accessible databases for a user

@RESTHEADER{GET /_api/user/{user}/database/, List the accessible databases for a user}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{full,boolean,optional}
Return the full set of access levels for all databases and all collections.

@RESTDESCRIPTION
Fetch the list of databases available to the specified *user*. You need
*Administrate* for the server access level in order to execute this REST call.

The call will return a JSON object with the per-database access
privileges for the specified user. The *result* object will contain
the databases names as object keys, and the associated privileges
for the database as values.

In case you specified *full*, the result will contain the permissions
for the databases as well as the permissions for the collections.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the list of available databases can be returned.

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabaseList_container">
<a class="anchorjs-link " href="#RestFetchUserDatabaseList_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserDatabaseList_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"_system"</span> : <span class="hljs-string">"rw"</span> 
  } 
}
</pre>
<div id="RestFetchUserDatabaseList_container_collapse" onclick="$('#RestFetchUserDatabaseList_long').hide(); $('#RestFetchUserDatabaseList_short').show(); window.location.hash='RestFetchUserDatabaseList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseList_short" onclick="$('#RestFetchUserDatabaseList_short').hide(); $('#RestFetchUserDatabaseList_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With the full response format:


<div class="example-container" id="RestFetchUserDatabaseListFull_container">
<a class="anchorjs-link " href="#RestFetchUserDatabaseListFull_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserDatabaseListFull_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"_system"</span> : { 
      <span class="hljs-string">"permission"</span> : <span class="hljs-string">"rw"</span>, 
      <span class="hljs-string">"collections"</span> : { 
        <span class="hljs-string">"_queues"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"demo"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_frontend"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_statistics15"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_aqlfunctions"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_statisticsRaw"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"animals"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_users"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_statistics"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_graphs"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_jobs"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_apps"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_routing"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_appbundles"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"_modules"</span> : <span class="hljs-string">"undefined"</span>, 
        <span class="hljs-string">"*"</span> : <span class="hljs-string">"undefined"</span> 
      } 
    }, 
    <span class="hljs-string">"*"</span> : { 
      <span class="hljs-string">"permission"</span> : <span class="hljs-string">"none"</span> 
    } 
  } 
}
</pre>
<div id="RestFetchUserDatabaseListFull_container_collapse" onclick="$('#RestFetchUserDatabaseListFull_long').hide(); $('#RestFetchUserDatabaseListFull_short').show(); window.location.hash='RestFetchUserDatabaseListFull_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabaseListFull_short" onclick="$('#RestFetchUserDatabaseListFull_short').hide(); $('#RestFetchUserDatabaseListFull_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database?full=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_fetchDatabasePermission

@brief Get specific database access level

@RESTHEADER{GET /_api/user/{user}/database/{database}, Get the database access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{database,string,required}
The name of the database to query

@RESTDESCRIPTION
Fetch the database access level for a specific database

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the acccess level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserDatabasePermission_container">
<a class="anchorjs-link " href="#RestFetchUserDatabasePermission_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserDatabasePermission_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-string">"rw"</span> 
}
</pre>
<div id="RestFetchUserDatabasePermission_container_collapse" onclick="$('#RestFetchUserDatabasePermission_long').hide(); $('#RestFetchUserDatabasePermission_short').show(); window.location.hash='RestFetchUserDatabasePermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserDatabasePermission_short" onclick="$('#RestFetchUserDatabasePermission_short').hide(); $('#RestFetchUserDatabasePermission_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_fetchCollectionPermission

@brief Get the collection access level

@RESTHEADER{GET /_api/user/{user}/database/{database}/{collection}, Get the specific collection access level}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user for which you want to query the databases.

@RESTURLPARAM{database,string,required}
The name of the database to query

@RESTURLPARAM{collection,string,required}
The name of the collection

@RESTDESCRIPTION
Returns the collection access level for a specific collection

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the acccess level can be returned

@RESTRETURNCODE{400}
If the access privileges are not right etc.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchUserCollectionPermission_container">
<a class="anchorjs-link " href="#RestFetchUserCollectionPermission_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUserCollectionPermission_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-string">"none"</span> 
}
</pre>
<div id="RestFetchUserCollectionPermission_container_collapse" onclick="$('#RestFetchUserCollectionPermission_long').hide(); $('#RestFetchUserCollectionPermission_short').show(); window.location.hash='RestFetchUserCollectionPermission_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUserCollectionPermission_short" onclick="$('#RestFetchUserCollectionPermission_short').hide(); $('#RestFetchUserCollectionPermission_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/anotherAdmin@secapp/database/_system/_users

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_replace

@brief Replace an existing user.

@RESTHEADER{PUT /_api/user/{user}, Replace User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. Specifying a password is mandatory, but
the empty string is allowed for passwords

@RESTBODYPARAM{active,boolean,optional,boolean}
An optional flag that specifies whether the user is active.  If not
specified, this will default to true

@RESTBODYPARAM{extra,object,optional,}
An optional JSON object with arbitrary extra data about the user.

@RESTDESCRIPTION
Replaces the data of an existing user. The name of an existing user must be
specified in *user*. You need server access level *Administrate* in order to
execute this REST call. Additionally, a user can change his/her own data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestReplaceUser_container">
<a class="anchorjs-link " href="#RestReplaceUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplaceUser_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@myapp"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestReplaceUser_container_collapse" onclick="$('#RestReplaceUser_long').hide(); $('#RestReplaceUser_short').show(); window.location.hash='RestReplaceUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplaceUser_short" onclick="$('#RestReplaceUser_short').hide(); $('#RestReplaceUser_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- ---------------------------------------------------------------------- -->

@startDocuBlock UserHandling_modify

@brief Modify attributes of an existing user

@RESTHEADER{PATCH /_api/user/{user}, Modify User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTBODYPARAM{passwd,string,required,string}
The user password as a string. Specifying a password is mandatory, but
the empty string is allowed for passwords

@RESTBODYPARAM{active,boolean,optional,boolean}
An optional flag that specifies whether the user is active.  If not
specified, this will default to true

@RESTBODYPARAM{extra,object,optional,}
An optional JSON object with arbitrary extra data about the user.

@RESTDESCRIPTION
Partially updates the data of an existing user. The name of an existing user
must be specified in *user*. You need server access level *Administrate* in
order to execute this REST call. Additionally, a user can change his/her own
data.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the user data can be replaced by the server.

@RESTRETURNCODE{400}
The JSON representation is malformed or mandatory data is missing from the request.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestUpdateUser_container">
<a class="anchorjs-link " href="#RestUpdateUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestUpdateUser_long" style="Display: none;">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@myapp"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestUpdateUser_container_collapse" onclick="$('#RestUpdateUser_long').hide(); $('#RestUpdateUser_short').show(); window.location.hash='RestUpdateUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestUpdateUser_short" onclick="$('#RestUpdateUser_short').hide(); $('#RestUpdateUser_long').show();">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/admin@myapp &lt;&lt;EOF
{ 
  <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secure"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_delete

@brief delete a user permanently.

@RESTHEADER{DELETE /_api/user/{user}, Remove User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTDESCRIPTION
Removes an existing user, identified by *user*.  You need *Administrate* for
the server access level in order to execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{202}
Is returned if the user was removed by the server

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The specified user does not exist

@EXAMPLES


<div class="example-container" id="RestDeleteUser_container">
<a class="anchorjs-link " href="#RestDeleteUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDeleteUser_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/user/userToDelete@myapp &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetch

@brief fetch the properties of a user.

@RESTHEADER{GET /_api/user/{user}, Fetch User}

@RESTURLPARAMETERS

@RESTURLPARAM{user,string,required}
The name of the user

@RESTDESCRIPTION
Fetches data about the specified user. You can fetch information about
yourself or you need the *Administrate* server access level in order to
execute this REST call.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The user was found.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@RESTRETURNCODE{404}
The user with the specified name does not exist.

@EXAMPLES


<div class="example-container" id="RestFetchUser_container">
<a class="anchorjs-link " href="#RestFetchUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchUser_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/admin@myapp

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin@myapp"</span>, 
  <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"extra"</span> : { 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestFetchUser_container_collapse" onclick="$('#RestFetchUser_long').hide(); $('#RestFetchUser_short').show(); window.location.hash='RestFetchUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchUser_short" onclick="$('#RestFetchUser_short').hide(); $('#RestFetchUser_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user/admin@myapp

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/User Management/README.md -->
@startDocuBlock UserHandling_fetchProperties

@brief fetch the properties of a user.

@RESTHEADER{GET /_api/user/, List available Users}

@RESTDESCRIPTION
Fetches data about all users.  You need the *Administrate* server access level
in order to execute this REST call.  Otherwise, you will only get information
about yourself.

The call will return a JSON object with at least the following
attributes on success:

- *user*: The name of the user as a string.
- *active*: An optional flag that specifies whether the user is active.
- *extra*: An optional JSON object with arbitrary extra data about the user.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The users that were found.

@RESTRETURNCODE{401}
Returned if you have *No access* database access level to the *_system*
database.

@RESTRETURNCODE{403}
Returned if you have *No access* server access level.

@EXAMPLES


<div class="example-container" id="RestFetchAllUser_container">
<a class="anchorjs-link " href="#RestFetchAllUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestFetchAllUser_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"user"</span> : <span class="hljs-string">"root"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"extra"</span> : { 
      } 
    }, 
    { 
      <span class="hljs-string">"user"</span> : <span class="hljs-string">"tester"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"extra"</span> : { 
      } 
    }, 
    { 
      <span class="hljs-string">"user"</span> : <span class="hljs-string">"admin"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"extra"</span> : { 
      } 
    } 
  ] 
}
</pre>
<div id="RestFetchAllUser_container_collapse" onclick="$('#RestFetchAllUser_long').hide(); $('#RestFetchAllUser_short').show(); window.location.hash='RestFetchAllUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestFetchAllUser_short" onclick="$('#RestFetchAllUser_short').hide(); $('#RestFetchAllUser_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/user

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_UPDATE.md -->
@startDocuBlock REST_DOCUMENT_UPDATE

@brief updates a document

@RESTHEADER{PATCH /_api/document/{document-handle},Update document}

@RESTALLBODYPARAM{document,json,required}
A JSON representation of a document update as an object.

@RESTURLPARAMETERS

@RESTURLPARAM{document-handle,string,required}
This URL parameter must be a document handle.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{keepNull,boolean,optional}
If the intention is to delete existing attributes with the patch
command, the URL query parameter *keepNull* can be used with a value
of *false*. This will modify the behavior of the patch command to
remove any attributes from the existing document that are contained
in the patch document with an attribute value of *null*.

@RESTQUERYPARAM{mergeObjects,boolean,optional}
Controls whether objects (not arrays) will be merged if present in
both the existing and the patch document. If set to *false*, the
value in the patch document will overwrite the existing document's
value. If set to *true*, objects will be merged. The default is
*true*.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in 
the given document is ignored. If this is set to *false*, then
the *_rev* attribute given in the body document is taken as a
precondition. The document is only updated if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed 
document under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data 
will be returned for the updated document. This option can be used to
save some network traffic.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-Match,string,optional}
You can conditionally update a document based on a target revision id by
using the *if-match* HTTP header.

@RESTDESCRIPTION
Partially updates the document identified by *document-handle*.
The body of the request must contain a JSON document with the
attributes to patch (the patch document). All attributes from the
patch document will be added to the existing document if they do not
yet exist, and overwritten in the existing document if they do exist
there.

Setting an attribute value to *null* in the patch document will cause a
value of *null* to be saved for the attribute by default.

If the *If-Match* header is specified and the revision of the
document in the database is unequal to the given revision, the
precondition is violated.

If *If-Match* is not given and *ignoreRevs* is *false* and there
is a *_rev* attribute in the body and its value does not match
the revision of the document in the database, the precondition is
violated.

If a precondition is violated, an *HTTP 412* is returned.

If the document exists and can be updated, then an *HTTP 201* or
an *HTTP 202* is returned (depending on *waitForSync*, see below),
the *Etag* header field contains the new revision of the document
(in double quotes) and the *Location* header contains a complete URL
under which the document can be queried.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the updated document operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

If *silent* is not set to *true*, the body of the response contains a JSON 
object with the information about the handle and the revision. The attribute 
*_id* contains the known *document-handle* of the updated document, *_key* 
contains the key which uniquely identifies a document in a given collection, 
and the attribute *_rev* contains the new document revision.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then
the complete new document is returned under
the *new* attribute in the result.

If the document does not exist, then a *HTTP 404* is returned and the
body of the response contains an error document.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the document was updated successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the document was updated successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of a document. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection or the document was not found.

@RESTRETURNCODE{412}
is returned if the precondition was violated. The response will
also contain the found documents' current revisions in the *_rev*
attributes. Additionally, the attributes *_id* and *_key* will be
returned.

@EXAMPLES

Patches an existing document with new content.


<div class="example-container" id="RestDocumentHandlerPatchDocument_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPatchDocument_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPatchDocument_long" style="Display: none;">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10611 &lt;&lt;EOF
{ 
  <span class="hljs-string">"hello"</span> : <span class="hljs-string">"world"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RIm--B"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10611</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10611"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10611"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RIm--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7RIm--_"</span> 
}
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10611 &lt;&lt;EOF
{ 
  <span class="hljs-string">"numbers"</span> : { 
    <span class="hljs-string">"one"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"two"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"three"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"empty"</span> : <span class="hljs-literal">null</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RIu--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10611</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10611"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10611"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RIu--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7RIm--B"</span> 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10611

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RIu--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10611"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10611"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RIu--_"</span>, 
  <span class="hljs-string">"one"</span> : <span class="hljs-string">"world"</span>, 
  <span class="hljs-string">"hello"</span> : <span class="hljs-string">"world"</span>, 
  <span class="hljs-string">"numbers"</span> : { 
    <span class="hljs-string">"one"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"two"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"three"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"empty"</span> : <span class="hljs-literal">null</span> 
  } 
}
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10611?keepNull=false &lt;&lt;EOF
{ 
  <span class="hljs-string">"hello"</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">"numbers"</span> : { 
    <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RI6--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10611</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10611"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10611"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RI6--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7RIu--_"</span> 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10611

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RI6--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10611"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10611"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RI6--_"</span>, 
  <span class="hljs-string">"one"</span> : <span class="hljs-string">"world"</span>, 
  <span class="hljs-string">"numbers"</span> : { 
    <span class="hljs-string">"empty"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"one"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"three"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"two"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> 
  } 
}
</pre>
<div id="RestDocumentHandlerPatchDocument_container_collapse" onclick="$('#RestDocumentHandlerPatchDocument_long').hide(); $('#RestDocumentHandlerPatchDocument_short').show(); window.location.hash='RestDocumentHandlerPatchDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPatchDocument_short" onclick="$('#RestDocumentHandlerPatchDocument_short').hide(); $('#RestDocumentHandlerPatchDocument_long').show();">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10611 &lt;&lt;EOF
{ 
  <span class="hljs-string">"hello"</span> : <span class="hljs-string">"world"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RIm--B"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10611</span>

shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10611 &lt;&lt;EOF
{ 
  <span class="hljs-string">"numbers"</span> : { 
    <span class="hljs-string">"one"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"two"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"three"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"empty"</span> : <span class="hljs-literal">null</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RIu--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10611</span>

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10611

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RIu--_"</span>
x-content-type-options: nosniff

shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10611?keepNull=false &lt;&lt;EOF
{ 
  <span class="hljs-string">"hello"</span> : <span class="hljs-literal">null</span>, 
  <span class="hljs-string">"numbers"</span> : { 
    <span class="hljs-string">"four"</span> : <span class="hljs-number">4</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RI6--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10611</span>

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10611

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RI6--_"</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Merging attributes of an object using `mergeObjects`:


<div class="example-container" id="RestDocumentHandlerPatchDocumentMerge_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPatchDocumentMerge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPatchDocumentMerge_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10627

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJu--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10627"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10627"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RJu--_"</span>, 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"china"</span> : <span class="hljs-number">1366980000</span>, 
    <span class="hljs-string">"india"</span> : <span class="hljs-number">1263590000</span>, 
    <span class="hljs-string">"usa"</span> : <span class="hljs-number">319220000</span> 
  } 
}
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10627?mergeObjects=true &lt;&lt;EOF
{ 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"indonesia"</span> : <span class="hljs-number">252164800</span>, 
    <span class="hljs-string">"brazil"</span> : <span class="hljs-number">203553000</span> 
  } 
}
EOF

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10627

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJy--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10627"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10627"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RJy--_"</span>, 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"china"</span> : <span class="hljs-number">1366980000</span>, 
    <span class="hljs-string">"india"</span> : <span class="hljs-number">1263590000</span>, 
    <span class="hljs-string">"usa"</span> : <span class="hljs-number">319220000</span>, 
    <span class="hljs-string">"indonesia"</span> : <span class="hljs-number">252164800</span>, 
    <span class="hljs-string">"brazil"</span> : <span class="hljs-number">203553000</span> 
  } 
}
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10627?mergeObjects=false &lt;&lt;EOF
{ 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"pakistan"</span> : <span class="hljs-number">188346000</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJ6--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10627</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10627"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10627"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RJ6--_"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7RJy--_"</span> 
}
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10627

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJ6--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10627"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10627"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RJ6--_"</span>, 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"pakistan"</span> : <span class="hljs-number">188346000</span> 
  } 
}
</pre>
<div id="RestDocumentHandlerPatchDocumentMerge_container_collapse" onclick="$('#RestDocumentHandlerPatchDocumentMerge_long').hide(); $('#RestDocumentHandlerPatchDocumentMerge_short').show(); window.location.hash='RestDocumentHandlerPatchDocumentMerge_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPatchDocumentMerge_short" onclick="$('#RestDocumentHandlerPatchDocumentMerge_short').hide(); $('#RestDocumentHandlerPatchDocumentMerge_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10627

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJu--_"</span>
x-content-type-options: nosniff

shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10627?mergeObjects=true &lt;&lt;EOF
{ 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"indonesia"</span> : <span class="hljs-number">252164800</span>, 
    <span class="hljs-string">"brazil"</span> : <span class="hljs-number">203553000</span> 
  } 
}
EOF

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10627

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJy--_"</span>
x-content-type-options: nosniff

shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10627?mergeObjects=false &lt;&lt;EOF
{ 
  <span class="hljs-string">"inhabitants"</span> : { 
    <span class="hljs-string">"pakistan"</span> : <span class="hljs-number">188346000</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJ6--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10627</span>

shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10627

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RJ6--_"</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_REPLACE_MULTI.md -->
@startDocuBlock REST_DOCUMENT_REPLACE_MULTI

@brief replaces multiple documents

@RESTHEADER{PUT /_api/document/{collection},Replace documents}

@RESTALLBODYPARAM{documents,json,required}
A JSON representation of an array of documents.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
This URL parameter is the name of the collection in which the
documents are replaced.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until the new documents have been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in 
the given documents are ignored. If this is set to *false*, then
any *_rev* attribute given in a body document is taken as a
precondition. The document is only replaced if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed 
documents under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new documents under the attribute *new*
in the result.

@RESTDESCRIPTION
Replaces multiple documents in the specified collection with the
ones in the body, the replaced documents are specified by the *_key*
attributes in the body documents.

If *ignoreRevs* is *false* and there is a *_rev* attribute in a
document in the body and its value does not match the revision of
the corresponding document in the database, the precondition is
violated.

If the document exists and can be updated, then an *HTTP 201* or
an *HTTP 202* is returned (depending on *waitForSync*, see below).

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document replacement operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

The body of the response contains a JSON array of the same length
as the input array with the information about the handle and the
revision of the replaced documents. In each entry, the attribute
*_id* contains the known *document-handle* of each updated document,
*_key* contains the key which uniquely identifies a document in a
given collection, and the attribute *_rev* contains the new document
revision. In case of an error or violated precondition, an error
object with the attribute *error* set to *true* and the attribute
*errorCode* set to the error code is built.

If the query parameter *returnOld* is *true*, then, for each
generated document, the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

Note that if any precondition is violated or an error occurred with
some of the documents, the return code is still 201 or 202, but
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1200:17,1205:10* which means that in 17
cases the error 1200 "revision conflict" and in 10 cases the error
1205 "illegal document handle" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the documents were replaced successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the documents were replaced successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection was not found.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_REPLACE.md -->
@startDocuBlock REST_DOCUMENT_REPLACE

@brief replaces a document

@RESTHEADER{PUT /_api/document/{document-handle},Replace document}

@RESTALLBODYPARAM{document,json,required}
A JSON representation of a single document.

@RESTURLPARAMETERS

@RESTURLPARAM{document-handle,string,required}
This URL parameter must be a document handle.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in 
the given document is ignored. If this is set to *false*, then
the *_rev* attribute given in the body document is taken as a
precondition. The document is only replaced if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed 
document under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data 
will be returned for the replaced document. This option can be used to
save some network traffic.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-Match,string,optional}
You can conditionally replace a document based on a target revision id by
using the *if-match* HTTP header.

@RESTDESCRIPTION
Replaces the document with handle <document-handle> with the one in
the body, provided there is such a document and no precondition is
violated.

If the *If-Match* header is specified and the revision of the
document in the database is unequal to the given revision, the
precondition is violated.

If *If-Match* is not given and *ignoreRevs* is *false* and there
is a *_rev* attribute in the body and its value does not match
the revision of the document in the database, the precondition is
violated.

If a precondition is violated, an *HTTP 412* is returned.

If the document exists and can be updated, then an *HTTP 201* or
an *HTTP 202* is returned (depending on *waitForSync*, see below),
the *Etag* header field contains the new revision of the document
and the *Location* header contains a complete URL under which the
document can be queried.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document replacement operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

If *silent* is not set to *true*, the body of the response contains a JSON 
object with the information about the handle and the revision. The attribute 
*_id* contains the known *document-handle* of the updated document, *_key* 
contains the key which uniquely identifies a document in a given collection, 
and the attribute *_rev* contains the new document revision.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then
the complete new document is returned under
the *new* attribute in the result.

If the document does not exist, then a *HTTP 404* is returned and the
body of the response contains an error document.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the document was replaced successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the document was replaced successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of a document. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection or the document was not found.

@RESTRETURNCODE{412}
is returned if the precondition was violated. The response will
also contain the found documents' current revisions in the *_rev*
attributes. Additionally, the attributes *_id* and *_key* will be
returned.

@EXAMPLES

Using a document handle


<div class="example-container" id="RestDocumentHandlerUpdateDocument_container">
<a class="anchorjs-link " href="#RestDocumentHandlerUpdateDocument_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerUpdateDocument_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10749 &lt;&lt;EOF
{"Hello": "you"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7Req--B"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10749</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10749"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10749"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Req--B"</span>, 
  <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7Req--_"</span> 
}
</pre>
<div id="RestDocumentHandlerUpdateDocument_container_collapse" onclick="$('#RestDocumentHandlerUpdateDocument_long').hide(); $('#RestDocumentHandlerUpdateDocument_short').show(); window.location.hash='RestDocumentHandlerUpdateDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerUpdateDocument_short" onclick="$('#RestDocumentHandlerUpdateDocument_short').hide(); $('#RestDocumentHandlerUpdateDocument_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10749 &lt;&lt;EOF
{"Hello": "you"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7Req--B"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10749</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown document handle


<div class="example-container" id="RestDocumentHandlerUpdateDocumentUnknownHandle_container">
<a class="anchorjs-link " href="#RestDocumentHandlerUpdateDocumentUnknownHandle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerUpdateDocumentUnknownHandle_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10771 &lt;&lt;EOF
{}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"document not found"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestDocumentHandlerUpdateDocumentUnknownHandle_container_collapse" onclick="$('#RestDocumentHandlerUpdateDocumentUnknownHandle_long').hide(); $('#RestDocumentHandlerUpdateDocumentUnknownHandle_short').show(); window.location.hash='RestDocumentHandlerUpdateDocumentUnknownHandle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerUpdateDocumentUnknownHandle_short" onclick="$('#RestDocumentHandlerUpdateDocumentUnknownHandle_short').hide(); $('#RestDocumentHandlerUpdateDocumentUnknownHandle_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10771 &lt;&lt;EOF
{}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Produce a revision conflict


<div class="example-container" id="RestDocumentHandlerUpdateDocumentIfMatchOther_container">
<a class="anchorjs-link " href="#RestDocumentHandlerUpdateDocumentIfMatchOther_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerUpdateDocumentIfMatchOther_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'If-Match: "_a-s7Rfu--B"' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10759 &lt;&lt;EOF
{"other":"content"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7Rfu--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">412</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1200</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"precondition failed"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10759"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10759"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Rfu--_"</span> 
}
</pre>
<div id="RestDocumentHandlerUpdateDocumentIfMatchOther_container_collapse" onclick="$('#RestDocumentHandlerUpdateDocumentIfMatchOther_long').hide(); $('#RestDocumentHandlerUpdateDocumentIfMatchOther_short').show(); window.location.hash='RestDocumentHandlerUpdateDocumentIfMatchOther_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerUpdateDocumentIfMatchOther_short" onclick="$('#RestDocumentHandlerUpdateDocumentIfMatchOther_short').hide(); $('#RestDocumentHandlerUpdateDocumentIfMatchOther_long').show();">
<pre>
shell> curl -X PUT --header 'If-Match: "_a-s7Rfu--B"' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products/10759 &lt;&lt;EOF
{"other":"content"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7Rfu--_"</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_UPDATE_MULTI.md -->
@startDocuBlock REST_DOCUMENT_UPDATE_MULTI

@brief updates multiple documents

@RESTHEADER{PATCH /_api/document/{collection},Update documents}

@RESTALLBODYPARAM{documents,json,required}
A JSON representation of an array of document updates as objects.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
This URL parameter is the name of the collection in which the
documents are updated.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{keepNull,boolean,optional}
If the intention is to delete existing attributes with the patch
command, the URL query parameter *keepNull* can be used with a value
of *false*. This will modify the behavior of the patch command to
remove any attributes from the existing document that are contained
in the patch document with an attribute value of *null*.

@RESTQUERYPARAM{mergeObjects,boolean,optional}
Controls whether objects (not arrays) will be merged if present in
both the existing and the patch document. If set to *false*, the
value in the patch document will overwrite the existing document's
value. If set to *true*, objects will be merged. The default is
*true*.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until the new documents have been synced to disk.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
By default, or if this is set to *true*, the *_rev* attributes in 
the given documents are ignored. If this is set to *false*, then
any *_rev* attribute given in a body document is taken as a
precondition. The document is only updated if the current revision
is the one specified.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed 
documents under the attribute *old* in the result.

@RESTQUERYPARAM{returnNew,boolean,optional}
Return additionally the complete new documents under the attribute *new*
in the result.

@RESTDESCRIPTION
Partially updates documents, the documents to update are specified
by the *_key* attributes in the body objects. The body of the
request must contain a JSON array of document updates with the
attributes to patch (the patch documents). All attributes from the
patch documents will be added to the existing documents if they do
not yet exist, and overwritten in the existing documents if they do
exist there.

Setting an attribute value to *null* in the patch documents will cause a
value of *null* to be saved for the attribute by default.

If *ignoreRevs* is *false* and there is a *_rev* attribute in a
document in the body and its value does not match the revision of
the corresponding document in the database, the precondition is
violated.

If the document exists and can be updated, then an *HTTP 201* or
an *HTTP 202* is returned (depending on *waitForSync*, see below).

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document replacement operation to disk even in case
that the *waitForSync* flag had been disabled for the entire collection.
Thus, the *waitForSync* query parameter can be used to force synchronization
of just specific operations. To use this, set the *waitForSync* parameter
to *true*. If the *waitForSync* parameter is not specified or set to
*false*, then the collection's default *waitForSync* behavior is
applied. The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync* value
of *true*.

The body of the response contains a JSON array of the same length
as the input array with the information about the handle and the
revision of the updated documents. In each entry, the attribute
*_id* contains the known *document-handle* of each updated document,
*_key* contains the key which uniquely identifies a document in a
given collection, and the attribute *_rev* contains the new document
revision. In case of an error or violated precondition, an error
object with the attribute *error* set to *true* and the attribute
*errorCode* set to the error code is built.

If the query parameter *returnOld* is *true*, then, for each
generated document, the complete previous revision of the document
is returned under the *old* attribute in the result.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

Note that if any precondition is violated or an error occurred with
some of the documents, the return code is still 201 or 202, but
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1200:17,1205:10* which means that in 17
cases the error 1200 "revision conflict" and in 10 cases the error
1205 "illegal document handle" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the documents were updated successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the documents were updated successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection was not found.

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_READ.md -->
@startDocuBlock REST_DOCUMENT_READ

@brief reads a single document

@RESTHEADER{GET /_api/document/{document-handle},Read document}

@RESTURLPARAMETERS

@RESTURLPARAM{document-handle,string,required}
The handle of the document.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-None-Match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has a different revision than the
given Etag. Otherwise an *HTTP 304* is returned.

@RESTHEADERPARAM{If-Match,string,optional}
If the "If-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has the same revision as the
given Etag. Otherwise a *HTTP 412* is returned.

@RESTDESCRIPTION
Returns the document identified by *document-handle*. The returned
document contains three special attributes: *_id* containing the document
handle, *_key* containing key which uniquely identifies a document
in a given collection and *_rev* containing the revision.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was found

@RESTRETURNCODE{304}
is returned if the "If-None-Match" header is given and the document has
the same version

@RESTRETURNCODE{404}
is returned if the document or collection was not found

@RESTRETURNCODE{412}
is returned if an "If-Match" header is given and the found
document has a different version. The response will also contain the found
document's current revision in the *_rev* attribute. Additionally, the
attributes *_id* and *_key* will be returned.

@EXAMPLES

Use a document handle:


<div class="example-container" id="RestDocumentHandlerReadDocument_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocument_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocument_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10692

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RRO--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10692"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10692"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RRO--_"</span>, 
  <span class="hljs-string">"hello"</span> : <span class="hljs-string">"world"</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocument_container_collapse" onclick="$('#RestDocumentHandlerReadDocument_long').hide(); $('#RestDocumentHandlerReadDocument_short').show(); window.location.hash='RestDocumentHandlerReadDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocument_short" onclick="$('#RestDocumentHandlerReadDocument_short').hide(); $('#RestDocumentHandlerReadDocument_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10692

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RRO--_"</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Use a document handle and an Etag:


<div class="example-container" id="RestDocumentHandlerReadDocumentIfNoneMatch_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentIfNoneMatch_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentIfNoneMatch_long">
<pre>
shell> curl --header 'If-None-Match: "_a-s7Rdq--_"' --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10740

</pre>
</div>
</div>





Unknown document handle:


<div class="example-container" id="RestDocumentHandlerReadDocumentUnknownHandle_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentUnknownHandle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentUnknownHandle_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/unknownhandle

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"collection not found: products"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentUnknownHandle_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentUnknownHandle_long').hide(); $('#RestDocumentHandlerReadDocumentUnknownHandle_short').show(); window.location.hash='RestDocumentHandlerReadDocumentUnknownHandle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentUnknownHandle_short" onclick="$('#RestDocumentHandlerReadDocumentUnknownHandle_short').hide(); $('#RestDocumentHandlerReadDocumentUnknownHandle_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/unknownhandle

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_DELETE_MULTI.md -->
@startDocuBlock REST_DOCUMENT_DELETE_MULTI

@brief removes multiple document

@RESTHEADER{DELETE /_api/document/{collection},Removes multiple documents}

@RESTALLBODYPARAM{array,json,required}
A JSON array of strings or documents.

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
Collection from which documents are removed.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until deletion operation has been synced to disk.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed 
document under the attribute *old* in the result.

@RESTQUERYPARAM{ignoreRevs,boolean,optional}
If set to *true*, ignore any *_rev* attribute in the selectors. No
revision check is performed.

@RESTDESCRIPTION
The body of the request is an array consisting of selectors for
documents. A selector can either be a string with a key or a string
with a document handle or an object with a *_key* attribute. This
API call removes all specified documents from *collection*. If the
selector is an object and has a *_rev* attribute, it is a
precondition that the actual revision of the removed document in the
collection is the specified one.

The body of the response is an array of the same length as the input
array. For each input selector, the output contains a JSON object
with the information about the outcome of the operation. If no error
occurred, an object is built in which the attribute *_id* contains
the known *document-handle* of the removed document, *_key* contains
the key which uniquely identifies a document in a given collection,
and the attribute *_rev* contains the document revision. In case of
an error, an object with the attribute *error* set to *true* and
*errorCode* set to the error code is built.

If the *waitForSync* parameter is not specified or set to *false*,
then the collection's default *waitForSync* behavior is applied.
The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync*
value of *true*.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

Note that if any precondition is violated or an error occurred with
some of the documents, the return code is still 200 or 202, but
the additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1200:17,1205:10* which means that in 17
cases the error 1200 "revision conflict" and in 10 cases the error
1205 "illegal document handle" has happened.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if *waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if *waitForSync* was *false*.

@RESTRETURNCODE{404}
is returned if the collection was not found.
The response body contains an error document in this case.

@EXAMPLES

Using document handle:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentMulti_container">
<a class="anchorjs-link " href="#RestDocumentHandlerDeleteDocumentMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerDeleteDocumentMulti_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10579

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RE2--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10579</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10579"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10579"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RE2--_"</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentMulti_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentMulti_long').hide(); $('#RestDocumentHandlerDeleteDocumentMulti_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentMulti_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentMulti_short" onclick="$('#RestDocumentHandlerDeleteDocumentMulti_short').hide(); $('#RestDocumentHandlerDeleteDocumentMulti_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10579

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RE2--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10579</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown document handle:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentUnknownHandleMulti_container">
<a class="anchorjs-link " href="#RestDocumentHandlerDeleteDocumentUnknownHandleMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerDeleteDocumentUnknownHandleMulti_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10600

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"document not found"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentUnknownHandleMulti_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentUnknownHandleMulti_long').hide(); $('#RestDocumentHandlerDeleteDocumentUnknownHandleMulti_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentUnknownHandleMulti_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentUnknownHandleMulti_short" onclick="$('#RestDocumentHandlerDeleteDocumentUnknownHandleMulti_short').hide(); $('#RestDocumentHandlerDeleteDocumentUnknownHandleMulti_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10600

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Revision conflict:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_container">
<a class="anchorjs-link " href="#RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'If-Match: "_a-s7RD2--_"' --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10567

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RDy--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">412</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1200</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"precondition failed"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10567"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10567"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RDy--_"</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_long').hide(); $('#RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_short" onclick="$('#RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_short').hide(); $('#RestDocumentHandlerDeleteDocumentIfMatchOtherMulti_long').show();">
<pre>
shell> curl -X DELETE --header 'If-Match: "_a-s7RD2--_"' --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10567

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RDy--_"</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_READ_ALL.md -->
@startDocuBlock REST_DOCUMENT_READ_ALL

@brief reads all documents from collection

@RESTHEADER{PUT /_api/simple/all-keys, Read all documents}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,optional}
The name of the collection.
**This parameter is only for an easier migration path from old versions.**
In ArangoDB versions < 3.0, the URL path was */_api/document* and
this was passed in via the query parameter "collection".
This combination was removed. The collection name can be passed to
*/_api/simple/all-keys* as body parameter (preferred) or as query parameter.

@RESTBODYPARAM{collection,string,required,}
The collection that should be queried

@RESTBODYPARAM{type,string,optional,}
The type of the result. The following values are allowed:

  - *id*: returns an array of document ids (*_id* attributes)
  - *key*: returns an array of document keys (*_key* attributes)
  - *path*: returns an array of document URI paths. This is the default.

@RESTDESCRIPTION
Returns an array of all keys, ids, or URI paths for all documents in the
collection identified by *collection*. The type of the result array is
determined by the *type* attribute.

Note that the results have no defined order and thus the order should
not be relied on.

@RESTRETURNCODES

@RESTRETURNCODE{201}
All went well.

@RESTRETURNCODE{404}
The collection does not exist.

@EXAMPLES

Return all document paths


<div class="example-container" id="RestDocumentHandlerReadDocumentAllPath_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentAllPath_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentAllPath_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    <span class="hljs-string">"/_db/_system/_api/document/products/10720"</span>, 
    <span class="hljs-string">"/_db/_system/_api/document/products/10716"</span>, 
    <span class="hljs-string">"/_db/_system/_api/document/products/10723"</span> 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00013494491577148438</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentAllPath_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentAllPath_long').hide(); $('#RestDocumentHandlerReadDocumentAllPath_short').show(); window.location.hash='RestDocumentHandlerReadDocumentAllPath_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentAllPath_short" onclick="$('#RestDocumentHandlerReadDocumentAllPath_short').hide(); $('#RestDocumentHandlerReadDocumentAllPath_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Return all document keys


<div class="example-container" id="RestDocumentHandlerReadDocumentAllKey_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentAllKey_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentAllKey_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"id"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    <span class="hljs-string">"products/10701"</span>, 
    <span class="hljs-string">"products/10708"</span>, 
    <span class="hljs-string">"products/10705"</span> 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00023984909057617188</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentAllKey_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentAllKey_long').hide(); $('#RestDocumentHandlerReadDocumentAllKey_short').show(); window.location.hash='RestDocumentHandlerReadDocumentAllKey_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentAllKey_short" onclick="$('#RestDocumentHandlerReadDocumentAllKey_short').hide(); $('#RestDocumentHandlerReadDocumentAllKey_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"id"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Collection does not exist


<div class="example-container" id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/doesnotexist

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"expecting GET /_api/document/&lt;document-handle&gt;"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container_collapse" onclick="$('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_long').hide(); $('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_short').show(); window.location.hash='RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_short" onclick="$('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_short').hide(); $('#RestDocumentHandlerReadDocumentAllCollectionDoesNotExist_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/document/doesnotexist

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_READ_HEAD.md -->
@startDocuBlock REST_DOCUMENT_READ_HEAD

@brief reads a single document head

@RESTHEADER{HEAD /_api/document/{document-handle},Read document header}

@RESTURLPARAMETERS

@RESTURLPARAM{document-handle,string,required}
The handle of the document.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-None-Match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one
Etag. If the current document revision is not equal to the specified Etag,
an *HTTP 200* response is returned. If the current document revision is
identical to the specified Etag, then an *HTTP 304* is returned.

@RESTHEADERPARAM{If-Match,string,optional}
If the "If-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has the same revision as the
given Etag. Otherwise a *HTTP 412* is returned.

@RESTDESCRIPTION
Like *GET*, but only returns the header fields and not the body. You
can use this call to get the current revision of a document or check if
the document was deleted.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was found

@RESTRETURNCODE{304}
is returned if the "If-None-Match" header is given and the document has
the same version

@RESTRETURNCODE{404}
is returned if the document or collection was not found

@RESTRETURNCODE{412}
is returned if an "If-Match" header is given and the found
document has a different version. The response will also contain the found
document's current revision in the *Etag* header.

@EXAMPLES


<div class="example-container" id="RestDocumentHandlerReadDocumentHead_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentHead_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentHead_long">
<pre>
shell> curl -X HEAD --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10731

</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_READ_HEAD.md -->

@startDocuBlock REST_DOCUMENT_READ_HEAD

@brief reads a single document head

@RESTHEADER{HEAD /_api/document/{document-handle},Read document header}

@RESTURLPARAMETERS

@RESTURLPARAM{document-handle,string,required}
The handle of the document.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-None-Match,string,optional}
If the "If-None-Match" header is given, then it must contain exactly one
Etag. If the current document revision is not equal to the specified Etag,
an *HTTP 200* response is returned. If the current document revision is
identical to the specified Etag, then an *HTTP 304* is returned.

@RESTHEADERPARAM{If-Match,string,optional}
If the "If-Match" header is given, then it must contain exactly one
Etag. The document is returned, if it has the same revision as the
given Etag. Otherwise a *HTTP 412* is returned.

@RESTDESCRIPTION
Like *GET*, but only returns the header fields and not the body. You
can use this call to get the current revision of a document or check if
the document was deleted.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was found

@RESTRETURNCODE{304}
is returned if the "If-None-Match" header is given and the document has
the same version

@RESTRETURNCODE{404}
is returned if the document or collection was not found

@RESTRETURNCODE{412}
is returned if an "If-Match" header is given and the found
document has a different version. The response will also contain the found
document's current revision in the *Etag* header.

@EXAMPLES


<div class="example-container" id="RestDocumentHandlerReadDocumentHead_container">
<a class="anchorjs-link " href="#RestDocumentHandlerReadDocumentHead_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerReadDocumentHead_long">
<pre>
shell> curl -X HEAD --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10731

</pre>
</div>
</div>




@endDocuBlock

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_CREATE.md -->
@startDocuBlock REST_DOCUMENT_CREATE

@brief creates documents

@RESTHEADER{POST /_api/document/{collection}, Create document}

@RESTURLPARAMETERS

@RESTURLPARAM{collection,string,required}
The *collection* in which the collection is to be created.

@RESTALLBODYPARAM{data,json,required}
A JSON representation of a single document or of an array of documents.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,optional}
The name of the collection. This is only for backward compatibility.
In ArangoDB versions < 3.0, the URL path was */_api/document* and
this query parameter was required. This combination still works, but
the recommended way is to specify the collection in the URL path.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until document has been synced to disk.

@RESTQUERYPARAM{returnNew,boolean,optional}
Additionally return the complete new document under the attribute *new*
in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data 
will be returned for the created document. This option can be used to
save some network traffic.

@RESTDESCRIPTION
Creates a new document from the document given in the body, unless there
is already a document with the *_key* given. If no *_key* is given, a new
unique *_key* is generated automatically.

The body can be an array of documents, in which case all
documents in the array are inserted with the same semantics as for a
single document. The result body will contain a JSON array of the
same length as the input array, and each entry contains the result
of the operation for the corresponding input. In case of an error
the entry is a document with attributes *error* set to *true* and
errorCode set to the error code that has happened.

Possibly given *_id* and *_rev* attributes in the body are always ignored,
the URL part or the query parameter collection respectively counts.

If the document was created successfully, then the *Location* header
contains the path to the newly created document. The *Etag* header field
contains the revision of the document. Both are only set in the single
document case.

If *silent* is not set to *true*, the body of the response contains a 
JSON object (single document case) with the following attributes:

  - *_id* contains the document handle of the newly created document
  - *_key* contains the document key
  - *_rev* contains the document revision

In the multi case the body is an array of such objects.

If the collection parameter *waitForSync* is *false*, then the call
returns as soon as the document has been accepted. It will not wait
until the documents have been synced to disk.

Optionally, the query parameter *waitForSync* can be used to force
synchronization of the document creation operation to disk even in
case that the *waitForSync* flag had been disabled for the entire
collection. Thus, the *waitForSync* query parameter can be used to
force synchronization of just this specific operations. To use this,
set the *waitForSync* parameter to *true*. If the *waitForSync*
parameter is not specified or set to *false*, then the collection's
default *waitForSync* behavior is applied. The *waitForSync* query
parameter cannot be used to disable synchronization for collections
that have a default *waitForSync* value of *true*.

If the query parameter *returnNew* is *true*, then, for each
generated document, the complete new document is returned under
the *new* attribute in the result.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the documents were created successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the documents were created successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation
of one document or an array of documents. The response body contains
an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.
The response body contains an error document in this case.

@RESTRETURNCODE{409}
is returned in the single document case if a document with the
same qualifiers in an indexed attribute conflicts with an already
existing document and thus violates that unique constraint. The
response body contains an error document in this case. In the array
case only 201 or 202 is returned, but if an error occurred, the
additional HTTP header *X-Arango-Error-Codes* is set, which
contains a map of the error codes that occurred together with their
multiplicities, as in: *1205:10,1210:17* which means that in 10
cases the error 1205 "illegal document handle" and in 17 cases the
error 1210 "unique constraint violated" has happened.

@EXAMPLES

Create a document in a collection named *products*. Note that the
revision identifier might or might not by equal to the auto-generated
key.


<div class="example-container" id="RestDocumentHandlerPostCreate1_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostCreate1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostCreate1_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RMy--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10654</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10654"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10654"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RMy--_"</span> 
}
</pre>
<div id="RestDocumentHandlerPostCreate1_container_collapse" onclick="$('#RestDocumentHandlerPostCreate1_long').hide(); $('#RestDocumentHandlerPostCreate1_short').show(); window.location.hash='RestDocumentHandlerPostCreate1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostCreate1_short" onclick="$('#RestDocumentHandlerPostCreate1_short').hide(); $('#RestDocumentHandlerPostCreate1_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RMy--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10654</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Create a document in a collection named *products* with a collection-level
*waitForSync* value of *false*.


<div class="example-container" id="RestDocumentHandlerPostAccept1_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostAccept1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostAccept1_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RKu--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10642</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10642"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10642"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RKu--_"</span> 
}
</pre>
<div id="RestDocumentHandlerPostAccept1_container_collapse" onclick="$('#RestDocumentHandlerPostAccept1_long').hide(); $('#RestDocumentHandlerPostAccept1_short').show(); window.location.hash='RestDocumentHandlerPostAccept1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostAccept1_short" onclick="$('#RestDocumentHandlerPostAccept1_short').hide(); $('#RestDocumentHandlerPostAccept1_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RKu--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10642</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Create a document in a collection with a collection-level *waitForSync*
value of *false*, but using the *waitForSync* query parameter.


<div class="example-container" id="RestDocumentHandlerPostWait1_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostWait1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostWait1_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products?waitForSync=true &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RQC--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10684</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10684"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10684"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RQC--_"</span> 
}
</pre>
<div id="RestDocumentHandlerPostWait1_container_collapse" onclick="$('#RestDocumentHandlerPostWait1_long').hide(); $('#RestDocumentHandlerPostWait1_short').show(); window.location.hash='RestDocumentHandlerPostWait1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostWait1_short" onclick="$('#RestDocumentHandlerPostWait1_short').hide(); $('#RestDocumentHandlerPostWait1_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products?waitForSync=true &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RQC--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10684</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown collection name


<div class="example-container" id="RestDocumentHandlerPostUnknownCollection1_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostUnknownCollection1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostUnknownCollection1_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"collection not found: products"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestDocumentHandlerPostUnknownCollection1_container_collapse" onclick="$('#RestDocumentHandlerPostUnknownCollection1_long').hide(); $('#RestDocumentHandlerPostUnknownCollection1_short').show(); window.location.hash='RestDocumentHandlerPostUnknownCollection1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostUnknownCollection1_short" onclick="$('#RestDocumentHandlerPostUnknownCollection1_short').hide(); $('#RestDocumentHandlerPostUnknownCollection1_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ "Hello": "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Illegal document


<div class="example-container" id="RestDocumentHandlerPostBadJson1_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostBadJson1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostBadJson1_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ 1: "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"VPackError error: Expecting '\"' or '}'"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">600</span> 
}
</pre>
<div id="RestDocumentHandlerPostBadJson1_container_collapse" onclick="$('#RestDocumentHandlerPostBadJson1_long').hide(); $('#RestDocumentHandlerPostBadJson1_short').show(); window.location.hash='RestDocumentHandlerPostBadJson1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostBadJson1_short" onclick="$('#RestDocumentHandlerPostBadJson1_short').hide(); $('#RestDocumentHandlerPostBadJson1_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
{ 1: "World" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Insert multiple documents:


<div class="example-container" id="RestDocumentHandlerPostMulti1_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostMulti1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostMulti1_long">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products &lt;&lt;EOF
[{"Hello":"Earth"}, {"Hello":"Venus"}, {"Hello":"Mars"}]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10662"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10662"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RO---_"</span> 
  }, 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10666"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10666"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RO---B"</span> 
  }, 
  { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10668"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10668"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RO---D"</span> 
  } 
]
</pre>
</div>
</div>






Use of returnNew:


<div class="example-container" id="RestDocumentHandlerPostMulti2_container">
<a class="anchorjs-link " href="#RestDocumentHandlerPostMulti2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerPostMulti2_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products?returnNew=true &lt;&lt;EOF
{"Hello":"World"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RPC--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10676</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10676"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10676"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RPC--_"</span>, 
  <span class="hljs-string">"new"</span> : { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10676"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10676"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RPC--_"</span>, 
    <span class="hljs-string">"Hello"</span> : <span class="hljs-string">"World"</span> 
  } 
}
</pre>
<div id="RestDocumentHandlerPostMulti2_container_collapse" onclick="$('#RestDocumentHandlerPostMulti2_long').hide(); $('#RestDocumentHandlerPostMulti2_short').show(); window.location.hash='RestDocumentHandlerPostMulti2_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerPostMulti2_short" onclick="$('#RestDocumentHandlerPostMulti2_short').hide(); $('#RestDocumentHandlerPostMulti2_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/document/products?returnNew=true &lt;&lt;EOF
{"Hello":"World"}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RPC--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10676</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Documents/REST_DOCUMENT_DELETE.md -->
@startDocuBlock REST_DOCUMENT_DELETE

@brief removes a document

@RESTHEADER{DELETE /_api/document/{document-handle}, Removes a document}

@RESTURLPARAMETERS

@RESTURLPARAM{document-handle,string,required}
Removes the document identified by *document-handle*.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until deletion operation has been synced to disk.

@RESTQUERYPARAM{returnOld,boolean,optional}
Return additionally the complete previous revision of the changed 
document under the attribute *old* in the result.

@RESTQUERYPARAM{silent,boolean,optional}
If set to *true*, an empty object will be returned as response. No meta-data 
will be returned for the removed document. This option can be used to
save some network traffic.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{If-Match,string,optional}
You can conditionally remove a document based on a target revision id by
using the *if-match* HTTP header.

@RESTDESCRIPTION
If *silent* is not set to *true*, the body of the response contains a JSON 
object with the information about the handle and the revision. The attribute 
*_id* contains the known *document-handle* of the removed document, *_key* 
contains the key which uniquely identifies a document in a given collection, 
and the attribute *_rev* contains the document revision.

If the *waitForSync* parameter is not specified or set to *false*,
then the collection's default *waitForSync* behavior is applied.
The *waitForSync* query parameter cannot be used to disable
synchronization for collections that have a default *waitForSync*
value of *true*.

If the query parameter *returnOld* is *true*, then
the complete previous revision of the document
is returned under the *old* attribute in the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the document was removed successfully and
*waitForSync* was *true*.

@RESTRETURNCODE{202}
is returned if the document was removed successfully and
*waitForSync* was *false*.

@RESTRETURNCODE{404}
is returned if the collection or the document was not found.
The response body contains an error document in this case.

@RESTRETURNCODE{412}
is returned if a "If-Match" header or *rev* is given and the found
document has a different version. The response will also contain the found
document's current revision in the *_rev* attribute. Additionally, the
attributes *_id* and *_key* will be returned.

@EXAMPLES

Using document handle:


<div class="example-container" id="RestDocumentHandlerDeleteDocument_container">
<a class="anchorjs-link " href="#RestDocumentHandlerDeleteDocument_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerDeleteDocument_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10545

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RBi--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10545</span>

{ 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10545"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10545"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RBi--_"</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocument_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocument_long').hide(); $('#RestDocumentHandlerDeleteDocument_short').show(); window.location.hash='RestDocumentHandlerDeleteDocument_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocument_short" onclick="$('#RestDocumentHandlerDeleteDocument_short').hide(); $('#RestDocumentHandlerDeleteDocument_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10545

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RBi--_"</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_db/</span>_system/_api/<span class="hljs-built_in">document</span>/products/<span class="hljs-number">10545</span>

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Unknown document handle:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentUnknownHandle_container">
<a class="anchorjs-link " href="#RestDocumentHandlerDeleteDocumentUnknownHandle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerDeleteDocumentUnknownHandle_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10589

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"document not found"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1202</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentUnknownHandle_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentUnknownHandle_long').hide(); $('#RestDocumentHandlerDeleteDocumentUnknownHandle_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentUnknownHandle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentUnknownHandle_short" onclick="$('#RestDocumentHandlerDeleteDocumentUnknownHandle_short').hide(); $('#RestDocumentHandlerDeleteDocumentUnknownHandle_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10589

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Revision conflict:


<div class="example-container" id="RestDocumentHandlerDeleteDocumentIfMatchOther_container">
<a class="anchorjs-link " href="#RestDocumentHandlerDeleteDocumentIfMatchOther_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDocumentHandlerDeleteDocumentIfMatchOther_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'If-Match: "_a-s7RCy--B"' --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10555

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RCy--_"</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">412</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1200</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"precondition failed"</span>, 
  <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/10555"</span>, 
  <span class="hljs-string">"_key"</span> : <span class="hljs-string">"10555"</span>, 
  <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RCy--_"</span> 
}
</pre>
<div id="RestDocumentHandlerDeleteDocumentIfMatchOther_container_collapse" onclick="$('#RestDocumentHandlerDeleteDocumentIfMatchOther_long').hide(); $('#RestDocumentHandlerDeleteDocumentIfMatchOther_short').show(); window.location.hash='RestDocumentHandlerDeleteDocumentIfMatchOther_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDocumentHandlerDeleteDocumentIfMatchOther_short" onclick="$('#RestDocumentHandlerDeleteDocumentIfMatchOther_short').hide(); $('#RestDocumentHandlerDeleteDocumentIfMatchOther_long').show();">
<pre>
shell> curl -X DELETE --header 'If-Match: "_a-s7RCy--B"' --header 'accept: application/json' --dump - http://localhost:8529/_api/document/products/10555

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">412</span> Precondition Failed
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: <span class="hljs-string">"_a-s7RCy--_"</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_delete_api_collection.md -->
@startDocuBlock JSF_delete_api_collection

@brief drops a collection

@RESTHEADER{DELETE /_api/collection/{collection-name}, Drops a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection to drop.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{isSystem,bool,optional}
Whether or not the collection to drop is a system collection. This parameter
must be set to *true* in order to drop a system collection.

@RESTDESCRIPTION
Drops the collection identified by *collection-name*.

If the collection was successfully dropped, an object is returned with
the following attributes:

- *error*: *false*

- *id*: The identifier of the dropped collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestCollectionDeleteCollectionIdentifier_container">
<a class="anchorjs-link " href="#RestCollectionDeleteCollectionIdentifier_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionDeleteCollectionIdentifier_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/9874

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9874"</span> 
}
</pre>
<div id="RestCollectionDeleteCollectionIdentifier_container_collapse" onclick="$('#RestCollectionDeleteCollectionIdentifier_long').hide(); $('#RestCollectionDeleteCollectionIdentifier_short').show(); window.location.hash='RestCollectionDeleteCollectionIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionDeleteCollectionIdentifier_short" onclick="$('#RestCollectionDeleteCollectionIdentifier_short').hide(); $('#RestCollectionDeleteCollectionIdentifier_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/9874

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using a name:


<div class="example-container" id="RestCollectionDeleteCollectionName_container">
<a class="anchorjs-link " href="#RestCollectionDeleteCollectionName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionDeleteCollectionName_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products1

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9878"</span> 
}
</pre>
<div id="RestCollectionDeleteCollectionName_container_collapse" onclick="$('#RestCollectionDeleteCollectionName_long').hide(); $('#RestCollectionDeleteCollectionName_short').show(); window.location.hash='RestCollectionDeleteCollectionName_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionDeleteCollectionName_short" onclick="$('#RestCollectionDeleteCollectionName_short').hide(); $('#RestCollectionDeleteCollectionName_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products1

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Dropping a system collection


<div class="example-container" id="RestCollectionDeleteCollectionSystem_container">
<a class="anchorjs-link " href="#RestCollectionDeleteCollectionSystem_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionDeleteCollectionSystem_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/_example?isSystem=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9882"</span> 
}
</pre>
<div id="RestCollectionDeleteCollectionSystem_container_collapse" onclick="$('#RestCollectionDeleteCollectionSystem_long').hide(); $('#RestCollectionDeleteCollectionSystem_short').show(); window.location.hash='RestCollectionDeleteCollectionSystem_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionDeleteCollectionSystem_short" onclick="$('#RestCollectionDeleteCollectionSystem_short').hide(); $('#RestCollectionDeleteCollectionSystem_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/_example?isSystem=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_load_indexes_in_memory.md -->
@startDocuBlock JSF_put_api_collection_load_indexes_into_memory

@brief Load Indexes into Memory

@RESTHEADER{PUT /_api/collection/{collection-name}/loadIndexesIntoMemory, Load Indexes into Memory}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}

@RESTDESCRIPTION
This route tries to cache all index entries
of this collection into the main memory.
Therefore it iterates over all indexes of the collection
and stores the indexed values, not the entire document data,
in memory.
All lookups that could be found in the cache are much faster
than lookups not stored in the cache so you get a nice performance boost.
It is also guaranteed that the cache is consistent with the stored data.

For the time being this function is only useful on RocksDB storage engine,
as in MMFiles engine all indexes are in memory anyways.

On RocksDB this function honors all memory limits, if the indexes you want
to load are smaller than your memory limit this function guarantees that most
index values are cached.
If the index is larger than your memory limit this function will fill up values
up to this limit and for the time being there is no way to control which indexes
of the collection should have priority over others.

On sucess this function returns an object with attribute `result` set to `true`

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the indexes have all been loaded

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierLoadIndexesIntoMemory_container">
<a class="anchorjs-link " href="#RestCollectionIdentifierLoadIndexesIntoMemory_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionIdentifierLoadIndexesIntoMemory_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/loadIndexesIntoMemory

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/loadIndexesIntoMemory

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestCollectionIdentifierLoadIndexesIntoMemory_container_collapse" onclick="$('#RestCollectionIdentifierLoadIndexesIntoMemory_long').hide(); $('#RestCollectionIdentifierLoadIndexesIntoMemory_short').show(); window.location.hash='RestCollectionIdentifierLoadIndexesIntoMemory_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierLoadIndexesIntoMemory_short" onclick="$('#RestCollectionIdentifierLoadIndexesIntoMemory_short').hide(); $('#RestCollectionIdentifierLoadIndexesIntoMemory_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/loadIndexesIntoMemory

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/loadIndexesIntoMemory

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_truncate.md -->
@startDocuBlock JSF_put_api_collection_truncate

@brief truncates a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/truncate, Truncate collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Removes all documents from the collection, but leaves the indexes intact.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierTruncate_container">
<a class="anchorjs-link " href="#RestCollectionIdentifierTruncate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionIdentifierTruncate_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/truncate

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/truncate

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10273"</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10273"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span> 
}
</pre>
<div id="RestCollectionIdentifierTruncate_container_collapse" onclick="$('#RestCollectionIdentifierTruncate_long').hide(); $('#RestCollectionIdentifierTruncate_short').show(); window.location.hash='RestCollectionIdentifierTruncate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierTruncate_short" onclick="$('#RestCollectionIdentifierTruncate_short').hide(); $('#RestCollectionIdentifierTruncate_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/truncate

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/truncate

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSA_get_api_collection_properties.md -->
@startDocuBlock JSA_get_api_collection_properties

@brief reads the properties of the specified collection

@RESTHEADER{GET /_api/collection/{collection-name}/properties, Read properties of a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
In addition to the above, the result will always contain the
*waitForSync* attribute, and the *doCompact*, *journalSize*, 
and *isVolatile* attributes for the MMFiles storage engine.
This is achieved by forcing a load of the underlying collection.

- *waitForSync*: If *true* then creating, changing or removing
  documents will wait until the data has been synchronized to disk.

- *doCompact*: Whether or not the collection will be compacted.
  This option is only present for the MMFiles storage engine.

- *journalSize*: The maximal size setting for journals / datafiles
  in bytes.
  This option is only present for the MMFiles storage engine.

- *keyOptions*: JSON object which contains key generation options:
  - *type*: specifies the type of the key generator. The currently
    available generators are *traditional* and *autoincrement*.
  - *allowUserKeys*: if set to *true*, then it is allowed to supply
    own key values in the *_key* attribute of a document. If set to
    *false*, then the key generator is solely responsible for
    generating keys and supplying own key values in the *_key* attribute
    of documents is considered an error.

- *isVolatile*: If *true* then the collection data will be
  kept in memory only and ArangoDB will not write or sync the data
  to disk.
  This option is only present for the MMFiles storage engine.

In a cluster setup, the result will also contain the following attributes:
- *numberOfShards*: the number of shards of the collection.

- *shardKeys*: contains the names of document attributes that are used to
  determine the target shard for documents.

- *replicationFactor*: contains how many copies of each shard are kept on different DBServers.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Using an identifier:


<div class="example-container" id="RestCollectionGetCollectionIdentifier_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionIdentifier_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionIdentifier_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/10233/properties

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/<span class="hljs-number">10233</span>/properties

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10233"</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10233"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionGetCollectionIdentifier_container_collapse" onclick="$('#RestCollectionGetCollectionIdentifier_long').hide(); $('#RestCollectionGetCollectionIdentifier_short').show(); window.location.hash='RestCollectionGetCollectionIdentifier_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionIdentifier_short" onclick="$('#RestCollectionGetCollectionIdentifier_short').hide(); $('#RestCollectionGetCollectionIdentifier_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/10233/properties

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/<span class="hljs-number">10233</span>/properties

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using a name:


<div class="example-container" id="RestCollectionGetCollectionName_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionName_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionName_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/properties

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/properties

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10238"</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10238"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionGetCollectionName_container_collapse" onclick="$('#RestCollectionGetCollectionName_long').hide(); $('#RestCollectionGetCollectionName_short').show(); window.location.hash='RestCollectionGetCollectionName_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionName_short" onclick="$('#RestCollectionGetCollectionName_short').hide(); $('#RestCollectionGetCollectionName_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/properties

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/properties

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSA_get_api_collection_figures.md -->
@startDocuBlock JSA_get_api_collection_figures

@brief Fetch the statistics of a collection

@RESTHEADER{GET /_api/collection/{collection-name}/figures, Return statistics for a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
In addition to the above, the result also contains the number of documents
and additional statistical information about the collection.
**Note** : This will always load the collection into memory.

**Note**: collection data that are stored in the write-ahead log only are
not reported in the results. When the write-ahead log is collected, documents
might be added to journals and datafiles of the collection, which may modify
the figures of the collection.

Additionally, the filesizes of collection and index parameter JSON files are
not reported. These files should normally have a size of a few bytes
each. Please also note that the *fileSize* values are reported in bytes
and reflect the logical file sizes. Some filesystems may use optimisations
(e.g. sparse files) so that the actual physical file size is somewhat
different. Directories and sub-directories may also require space in the
file system, but this space is not reported in the *fileSize* results.

That means that the figures reported do not reflect the actual disk
usage of the collection with 100% accuracy. The actual disk usage of
a collection is normally slightly higher than the sum of the reported
*fileSize* values. Still the sum of the *fileSize* values can still be
used as a lower bound approximation of the disk usage.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returns information about the collection:

@RESTREPLYBODY{count,integer,required,int64}
The number of documents currently present in the collection.

@RESTREPLYBODY{figures,object,required,collection_figures}
metrics of the collection

@RESTSTRUCT{alive,collection_figures,object,required,collection_figures_alive}
the currently active figures

@RESTSTRUCT{count,collection_figures_alive,integer,required,int64}
The number of currently active documents in all datafiles
and journals of the collection. Documents that are contained in the
write-ahead log only are not reported in this figure.

@RESTSTRUCT{size,collection_figures_alive,integer,required,int64}
The total size in bytes used by all active documents of
the collection. Documents that are contained in the write-ahead log only are
not reported in this figure.

@RESTSTRUCT{dead,collection_figures,object,required,collection_figures_dead}
the items waiting to be swept away by the cleaner

@RESTSTRUCT{count,collection_figures_dead,integer,required,int64}
The number of dead documents. This includes document
versions that have been deleted or replaced by a newer version. Documents
deleted or replaced that are contained the write-ahead log only are not reported
in this figure.

@RESTSTRUCT{size,collection_figures_dead,integer,required,int64}
The total size in bytes used by all dead documents.

@RESTSTRUCT{deletion,collection_figures_dead,integer,required,int64}
The total number of deletion markers. Deletion markers
only contained in the write-ahead log are not reporting in this figure.

@RESTSTRUCT{datafiles,collection_figures,object,required,collection_figures_datafiles}
Metrics regarding the datafiles

@RESTSTRUCT{count,collection_figures_datafiles,integer,required,int64}
The number of datafiles.

@RESTSTRUCT{fileSize,collection_figures_datafiles,integer,required,int64}
The total filesize of datafiles (in bytes).

@RESTSTRUCT{journals,collection_figures,object,required,collection_figures_journals}
Metrics regarding the journal files

@RESTSTRUCT{count,collection_figures_journals,integer,required,int64}
The number of journal files.

@RESTSTRUCT{fileSize,collection_figures_journals,integer,required,int64}
The total filesize of all journal files (in bytes).

@RESTSTRUCT{compactors,collection_figures,object,required,collection_figures_compactors}

@RESTSTRUCT{count,collection_figures_compactors,integer,required,int64}
The number of compactor files.

@RESTSTRUCT{fileSize,collection_figures_compactors,integer,required,int64}
The total filesize of all compactor files (in bytes).

@RESTSTRUCT{readcache,collection_figures,object,required,collection_figures_readcache}

@RESTSTRUCT{count,collection_figures_readcache,integer,required,int64}
The number of revisions of this collection stored in the document revisions cache.

@RESTSTRUCT{size,collection_figures_readcache,integer,required,int64}
The memory used for storing the revisions of this collection in the document 
revisions cache (in bytes). This figure does not include the document data but 
only mappings from document revision ids to cache entry locations.

@RESTSTRUCT{revisions,collection_figures,object,required,collection_figures_revisions}

@RESTSTRUCT{count,collection_figures_revisions,integer,required,int64}
The number of revisions of this collection managed by the storage engine.

@RESTSTRUCT{size,collection_figures_revisions,integer,required,int64}
The memory used for storing the revisions of this collection in the storage 
engine (in bytes). This figure does not include the document data but only mappings 
from document revision ids to storage engine datafile positions.

@RESTSTRUCT{indexes,collection_figures,object,required,collection_figures_indexes}
@RESTSTRUCT{count,collection_figures_indexes,integer,required,int64}
The total number of indexes defined for the collection, including the pre-defined
indexes (e.g. primary index).

@RESTSTRUCT{size,collection_figures_indexes,integer,required,int64}
The total memory allocated for indexes in bytes.

@RESTSTRUCT{lastTick,collection_figures,integer,required,int64}
The tick of the last marker that was stored in a journal
of the collection. This might be 0 if the collection does not yet have
a journal.

@RESTSTRUCT{uncollectedLogfileEntries,collection_figures,integer,required,int64}
The number of markers in the write-ahead
log for this collection that have not been transferred to journals or datafiles.

@RESTSTRUCT{documentReferences,collection_figures,integer,optional,int64}
The number of references to documents in datafiles that JavaScript code 
currently holds. This information can be used for debugging compaction and 
unload issues.

@RESTSTRUCT{waitingFor,collection_figures,string,optional,string}
An optional string value that contains information about which object type is at the 
head of the collection's cleanup queue. This information can be used for debugging 
compaction and unload issues.

@RESTSTRUCT{compactionStatus,collection_figures,object,optional,compactionStatus_attributes}
@RESTSTRUCT{message,compactionStatus_attributes,string,optional,string}
The action that was performed when the compaction was last run for the collection. 
This information can be used for debugging compaction issues.

@RESTSTRUCT{time,compactionStatus_attributes,string,optional,string}
The point in time the compaction for the collection was last executed. 
This information can be used for debugging compaction issues.

@RESTREPLYBODY{journalSize,integer,required,int64}
The maximal size of a journal or datafile in bytes.

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Using an identifier and requesting the figures of the collection:


<div class="example-container" id="RestCollectionGetCollectionFigures_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionFigures_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionFigures_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/figures

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/figures

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"figures"</span> : { 
    <span class="hljs-string">"indexes"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"size"</span> : <span class="hljs-number">32128</span> 
    }, 
    <span class="hljs-string">"documentReferences"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"waitingFor"</span> : <span class="hljs-string">"-"</span>, 
    <span class="hljs-string">"alive"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"size"</span> : <span class="hljs-number">72</span> 
    }, 
    <span class="hljs-string">"dead"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"size"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"deletion"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"compactionStatus"</span> : { 
      <span class="hljs-string">"message"</span> : <span class="hljs-string">"skipped compaction because collection has no datafiles"</span>, 
      <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:38Z"</span>, 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filesCombined"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"bytesRead"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"bytesWritten"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"datafiles"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"fileSize"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"journals"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"fileSize"</span> : <span class="hljs-number">33554432</span> 
    }, 
    <span class="hljs-string">"compactors"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"fileSize"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"revisions"</span> : { 
      <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"size"</span> : <span class="hljs-number">48192</span> 
    }, 
    <span class="hljs-string">"lastTick"</span> : <span class="hljs-number">10217</span>, 
    <span class="hljs-string">"uncollectedLogfileEntries"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10211"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10211"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">10215</span> 
  } 
}
</pre>
<div id="RestCollectionGetCollectionFigures_container_collapse" onclick="$('#RestCollectionGetCollectionFigures_long').hide(); $('#RestCollectionGetCollectionFigures_short').show(); window.location.hash='RestCollectionGetCollectionFigures_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionFigures_short" onclick="$('#RestCollectionGetCollectionFigures_short').hide(); $('#RestCollectionGetCollectionFigures_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/figures

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/figures

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_get_api_collections.md -->
@startDocuBlock JSF_get_api_collections

@brief returns all collections

@RESTHEADER{GET /_api/collection,reads all collections}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{excludeSystem,boolean,optional}
Whether or not system collections should be excluded from the result.

@RESTDESCRIPTION
Returns an object with an attribute *collections* containing an
array of all collection descriptions. The same information is also
available in the *names* as an object with the collection names
as keys.

By providing the optional query parameter *excludeSystem* with a value of
*true*, all system collections will be excluded from the response.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The list of collections

@EXAMPLES

Return information about all collections:


<div class="example-container" id="RestCollectionGetAllCollections_container">
<a class="anchorjs-link " href="#RestCollectionGetAllCollections_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetAllCollections_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"45"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_queues"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_queues"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"91"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"demo"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/91"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"43"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_frontend"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_frontend"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"38"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_statistics15"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_statistics15"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"26"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_aqlfunctions"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_aqlfunctions"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"28"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_statisticsRaw"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_statisticsRaw"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"97"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"animals"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/97"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"6"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_users"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_users"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"33"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_statistics"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_statistics"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"2"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_graphs"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_graphs"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"47"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_jobs"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_jobs"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"55"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_apps"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_apps"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"13"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_routing"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_routing"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"60"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_appbundles"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_appbundles"</span> 
    }, 
    { 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"11"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"_modules"</span>, 
      <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_modules"</span> 
    } 
  ] 
}
</pre>
<div id="RestCollectionGetAllCollections_container_collapse" onclick="$('#RestCollectionGetAllCollections_long').hide(); $('#RestCollectionGetAllCollections_short').show(); window.location.hash='RestCollectionGetAllCollections_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetAllCollections_short" onclick="$('#RestCollectionGetAllCollections_short').hide(); $('#RestCollectionGetAllCollections_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSA_get_api_collection_count.md -->
@startDocuBlock JSA_get_api_collection_count

@brief Counts the documents in a collection

@RESTHEADER{GET /_api/collection/{collection-name}/count, Return number of documents in a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
In addition to the above, the result also contains the number of documents.
**Note** that this will always load the collection into memory.

- *count*: The number of documents inside the collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Requesting the number of documents:


<div class="example-container" id="RestCollectionGetCollectionCount_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionCount_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionCount_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/count

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/count

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/9904"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9904"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">10206</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span> 
}
</pre>
<div id="RestCollectionGetCollectionCount_container_collapse" onclick="$('#RestCollectionGetCollectionCount_long').hide(); $('#RestCollectionGetCollectionCount_short').show(); window.location.hash='RestCollectionGetCollectionCount_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionCount_short" onclick="$('#RestCollectionGetCollectionCount_short').hide(); $('#RestCollectionGetCollectionCount_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/count

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/count

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_properties.md -->
@startDocuBlock JSF_put_api_collection_properties

@brief changes a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/properties, Change properties of a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Changes the properties of a collection. Expects an object with the
attribute(s)

- *waitForSync*: If *true* then creating or changing a
  document will wait until the data has been synchronized to disk.

- *journalSize*: The maximal size of a journal or datafile in bytes. 
  The value must be at least `1048576` (1 MB). Note that when
  changing the journalSize value, it will only have an effect for
  additional journals or datafiles that are created. Already
  existing journals or datafiles will not be affected.

On success an object with the following attributes is returned:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *waitForSync*: The new value.

- *journalSize*: The new value.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

- *isVolatile*: If *true* then the collection data will be
  kept in memory only and ArangoDB will not write or sync the data
  to disk.

- *doCompact*: Whether or not the collection will be compacted.

- *keyOptions*: JSON object which contains key generation options:
  - *type*: specifies the type of the key generator. The currently
    available generators are *traditional* and *autoincrement*.
  - *allowUserKeys*: if set to *true*, then it is allowed to supply
    own key values in the *_key* attribute of a document. If set to
    *false*, then the key generator is solely responsible for
    generating keys and supplying own key values in the *_key* attribute
    of documents is considered an error.

**Note**: except for *waitForSync*, *journalSize* and *name*, collection
properties **cannot be changed** once a collection is created. To rename
a collection, the rename endpoint must be used.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierPropertiesSync_container">
<a class="anchorjs-link " href="#RestCollectionIdentifierPropertiesSync_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionIdentifierPropertiesSync_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products/properties &lt;&lt;EOF
{ 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/properties

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10260"</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10260"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionIdentifierPropertiesSync_container_collapse" onclick="$('#RestCollectionIdentifierPropertiesSync_long').hide(); $('#RestCollectionIdentifierPropertiesSync_short').show(); window.location.hash='RestCollectionIdentifierPropertiesSync_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierPropertiesSync_short" onclick="$('#RestCollectionIdentifierPropertiesSync_short').hide(); $('#RestCollectionIdentifierPropertiesSync_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products/properties &lt;&lt;EOF
{ 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/properties

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_rotate.md -->
@startDocuBlock JSF_put_api_collection_rotate

@brief rotates the journal of a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/rotate, Rotate journal of a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Rotates the journal of a collection. The current journal of the collection will be closed
and made a read-only datafile. The purpose of the rotate method is to make the data in
the file available for compaction (compaction is only performed for read-only datafiles, and
not for journals).

Saving new data in the collection subsequently will create a new journal file
automatically if there is no current journal.

It returns an object with the attributes

- *result*: will be *true* if rotation succeeded

**Note**: this method is specific for the MMFiles storage engine, and there
it is not available in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the collection currently has no journal, *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Rotating the journal:


<div class="example-container" id="RestCollectionRotate_container">
<a class="anchorjs-link " href="#RestCollectionRotate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionRotate_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products/rotate &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/rotate

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestCollectionRotate_container_collapse" onclick="$('#RestCollectionRotate_long').hide(); $('#RestCollectionRotate_short').show(); window.location.hash='RestCollectionRotate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionRotate_short" onclick="$('#RestCollectionRotate_short').hide(); $('#RestCollectionRotate_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products/rotate &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/rotate

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Rotating if no journal exists:


<div class="example-container" id="RestCollectionRotateNoJournal_container">
<a class="anchorjs-link " href="#RestCollectionRotateNoJournal_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionRotateNoJournal_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products/rotate &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"no journal"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1105</span> 
}
</pre>
<div id="RestCollectionRotateNoJournal_container_collapse" onclick="$('#RestCollectionRotateNoJournal_long').hide(); $('#RestCollectionRotateNoJournal_short').show(); window.location.hash='RestCollectionRotateNoJournal_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionRotateNoJournal_short" onclick="$('#RestCollectionRotateNoJournal_short').hide(); $('#RestCollectionRotateNoJournal_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products/rotate &lt;&lt;EOF
{ 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSA_get_api_collection_revision.md -->
@startDocuBlock JSA_get_api_collection_revision

@brief Retrieve the collections revision id

@RESTHEADER{GET /_api/collection/{collection-name}/revision, Return collection revision id}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
In addition to the above, the result will also contain the
collection's revision id. The revision id is a server-generated
string that clients can use to check whether data in a collection
has changed since the last revision check.

- *revision*: The collection revision id as a string.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Retrieving the revision of a collection


<div class="example-container" id="RestCollectionGetCollectionRevision_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionRevision_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionRevision_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/revision

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/revision

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"revision"</span> : <span class="hljs-string">"0"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10243"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10243"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span> 
}
</pre>
<div id="RestCollectionGetCollectionRevision_container_collapse" onclick="$('#RestCollectionGetCollectionRevision_long').hide(); $('#RestCollectionGetCollectionRevision_short').show(); window.location.hash='RestCollectionGetCollectionRevision_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionRevision_short" onclick="$('#RestCollectionGetCollectionRevision_short').hide(); $('#RestCollectionGetCollectionRevision_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/revision

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/revision

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_unload.md -->
@startDocuBlock JSF_put_api_collection_unload

@brief unloads a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/unload, Unload collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}

@RESTDESCRIPTION
Removes a collection from memory. This call does not delete any documents.
You can use the collection afterwards; in which case it will be loaded into
memory, again. On success an object with the following attributes is
returned:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierUnload_container">
<a class="anchorjs-link " href="#RestCollectionIdentifierUnload_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionIdentifierUnload_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/unload

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/unload

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10278"</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10278"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span> 
}
</pre>
<div id="RestCollectionIdentifierUnload_container_collapse" onclick="$('#RestCollectionIdentifierUnload_long').hide(); $('#RestCollectionIdentifierUnload_short').show(); window.location.hash='RestCollectionIdentifierUnload_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierUnload_short" onclick="$('#RestCollectionIdentifierUnload_short').hide(); $('#RestCollectionIdentifierUnload_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/unload

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/unload

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSA_get_api_collection_checksum.md -->
@startDocuBlock JSA_get_api_collection_checksum

@brief returns a checksum for the specified collection

@RESTHEADER{GET /_api/collection/{collection-name}/checksum, Return checksum for the collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{withRevisions,boolean,optional}
Whether or not to include document revision ids in the checksum calculation.

@RESTQUERYPARAM{withData,boolean,optional}
Whether or not to include document body data in the checksum calculation.

@RESTDESCRIPTION
Will calculate a checksum of the meta-data (keys and optionally revision ids) and
optionally the document data in the collection.

The checksum can be used to compare if two collections on different ArangoDB
instances contain the same contents. The current revision of the collection is
returned too so one can make sure the checksums are calculated for the same
state of data.

By default, the checksum will only be calculated on the *_key* system attribute
of the documents contained in the collection. For edge collections, the system
attributes *_from* and *_to* will also be included in the calculation.

By setting the optional query parameter *withRevisions* to *true*, then revision
ids (*_rev* system attributes) are included in the checksumming.

By providing the optional query parameter *withData* with a value of *true*,
the user-defined document attributes will be included in the calculation too.
**Note**: Including user-defined attributes will make the checksumming slower.

The response is a JSON object with the following attributes:

- *checksum*: The calculated checksum as a number.

- *revision*: The collection revision id as a string.

**Note**: this method is not available in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES

Retrieving the checksum of a collection:


<div class="example-container" id="RestCollectionGetCollectionChecksum_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionChecksum_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionChecksum_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/checksum

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/9886"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9886"</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"revision"</span> : <span class="hljs-string">"_a-s7PJG--_"</span>, 
  <span class="hljs-string">"checksum"</span> : <span class="hljs-string">"14496493779720618188"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span> 
}
</pre>
<div id="RestCollectionGetCollectionChecksum_container_collapse" onclick="$('#RestCollectionGetCollectionChecksum_long').hide(); $('#RestCollectionGetCollectionChecksum_short').show(); window.location.hash='RestCollectionGetCollectionChecksum_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionChecksum_short" onclick="$('#RestCollectionGetCollectionChecksum_short').hide(); $('#RestCollectionGetCollectionChecksum_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/checksum

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Retrieving the checksum of a collection including the collection data,
but not the revisions:


<div class="example-container" id="RestCollectionGetCollectionChecksumNoRev_container">
<a class="anchorjs-link " href="#RestCollectionGetCollectionChecksumNoRev_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionGetCollectionChecksumNoRev_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/checksum?withRevisions=false&withData=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/9895"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9895"</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"revision"</span> : <span class="hljs-string">"_a-s7PKK--_"</span>, 
  <span class="hljs-string">"checksum"</span> : <span class="hljs-string">"12092648495219773378"</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span> 
}
</pre>
<div id="RestCollectionGetCollectionChecksumNoRev_container_collapse" onclick="$('#RestCollectionGetCollectionChecksumNoRev_long').hide(); $('#RestCollectionGetCollectionChecksumNoRev_short').show(); window.location.hash='RestCollectionGetCollectionChecksumNoRev_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionGetCollectionChecksumNoRev_short" onclick="$('#RestCollectionGetCollectionChecksumNoRev_short').hide(); $('#RestCollectionGetCollectionChecksumNoRev_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/checksum?withRevisions=false&withData=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/checksum

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_post_api_collection.md -->
@startDocuBlock JSF_post_api_collection

@brief creates a collection

@RESTHEADER{POST /_api/collection, Create collection}

@RESTBODYPARAM{name,string,required,string}
The name of the collection.

@RESTBODYPARAM{waitForSync,boolean,optional,}
If *true* then the data is synchronized to disk before returning from a
document create, update, replace or removal operation. (default: false)

@RESTBODYPARAM{doCompact,boolean,optional,}
whether or not the collection will be compacted (default is *true*)
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{journalSize,integer,optional,int64}
The maximal size of a journal or datafile in bytes. The value 
must be at least `1048576` (1 MiB). (The default is a configuration parameter)
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{isSystem,boolean,optional,}
If *true*, create a  system collection. In this case *collection-name*
should start with an underscore. End users should normally create non-system
collections only. API implementors may be required to create system
collections in very special occasions, but normally a regular collection will do.
(The default is *false*)

@RESTBODYPARAM{isVolatile,boolean,optional,}
If *true* then the collection data is kept in-memory only and not made persistent.
Unloading the collection will cause the collection data to be discarded. Stopping
or re-starting the server will also cause full loss of data in the
collection. Setting this option will make the resulting collection be
slightly faster than regular collections because ArangoDB does not
enforce any synchronization to disk and does not calculate any CRC
checksums for datafiles (as there are no datafiles). This option 
should therefore be used for cache-type collections only, and not 
for data that cannot be re-created otherwise.
(The default is *false*)
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{keyOptions,object,optional,JSF_post_api_collection_opts}
additional options for key generation. If specified, then *keyOptions*
should be a JSON array containing the following attributes:

@RESTSTRUCT{type,JSF_post_api_collection_opts,string,required,string}
specifies the type of the key generator. The currently available generators are
*traditional* and *autoincrement*.

@RESTSTRUCT{allowUserKeys,JSF_post_api_collection_opts,boolean,required,}
if set to *true*, then it is allowed to supply own key values in the
*_key* attribute of a document. If set to *false*, then the key generator
will solely be responsible for generating keys and supplying own key values
in the *_key* attribute of documents is considered an error.

@RESTSTRUCT{increment,JSF_post_api_collection_opts,integer,required,int64}
increment value for *autoincrement* key generator. Not used for other key
generator types.

@RESTSTRUCT{offset,JSF_post_api_collection_opts,integer,required,int64}
Initial offset value for *autoincrement* key generator.
Not used for other key generator types.

@RESTBODYPARAM{type,integer,optional,int64}
(The default is *2*): the type of the collection to create.
The following values for *type* are valid:

- *2*: document collection
- *3*: edges collection

@RESTBODYPARAM{indexBuckets,integer,optional,int64}
The number of buckets into which indexes using a hash
table are split. The default is 16 and this number has to be a
power of 2 and less than or equal to 1024. 

For very large collections one should increase this to avoid long pauses 
when the hash table has to be initially built or resized, since buckets 
are resized individually and can be initially built in parallel. For 
example, 64 might be a sensible value for a collection with 100
000 000 documents. Currently, only the edge index respects this
value, but other index types might follow in future ArangoDB versions. 
Changes (see below) are applied when the collection is loaded the next 
time.
This option is meaningful for the MMFiles storage engine only.

@RESTBODYPARAM{numberOfShards,integer,optional,int64}
(The default is *1*): in a cluster, this value determines the
number of shards to create for the collection. In a single
server setup, this option is meaningless.

@RESTBODYPARAM{shardKeys,string,optional,string}
(The default is *[ "_key" ]*): in a cluster, this attribute determines
which document attributes are used to determine the target shard for documents.
Documents are sent to shards based on the values of their shard key attributes.
The values of all shard key attributes in a document are hashed,
and the hash value is used to determine the target shard.
**Note**: Values of shard key attributes cannot be changed once set.
  This option is meaningless in a single server setup.

@RESTBODYPARAM{replicationFactor,integer,optional,int64} 
(The default is *1*): in a cluster, this attribute determines how many copies 
of each shard are kept on different DBServers. The value 1 means that only one 
copy (no synchronous replication) is kept. A value of k means that k-1 replicas 
are kept. Any two copies reside on different DBServers. Replication between them is 
synchronous, that is, every write operation to the "leader" copy will be replicated 
to all "follower" replicas, before the write operation is reported successful.

If a server fails, this is detected automatically and one of the servers holding 
copies take over, usually without an error being reported.

@RESTBODYPARAM{distributeShardsLike,string,optional,string}
(The default is *""*): in an enterprise cluster, this attribute binds
the specifics of sharding  for the newly created collection to follow that of a
specified existing collection. 
**Note**: Using this parameter has consequences for the prototype
collection. It can no longer be dropped, before sharding imitating
collections are dropped. Equally, backups and restores of imitating
collections alone will generate warnings, which can be overridden,
about missing sharding prototype. 

@RESTQUERYPARAMETERS 
@RESTQUERYPARAM{waitForSyncReplication,integer,optional}
Default is *1* which means the server will only report success back to the client
if all replicas have created the collection. Set to *0* if you want faster
server responses and don't care about full replication.

@RESTQUERYPARAM{enforceReplicationFactor,integer,optional}
Default is *1* which means the server will check if there are enough replicas
available at creation time and bail out otherwise. Set to *0* to disable this
extra check.

@RESTDESCRIPTION
Creates a new collection with a given name. The request must contain an
object with the following attributes.


@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.


@EXAMPLES


<div class="example-container" id="RestCollectionCreateCollection_container">
<a class="anchorjs-link " href="#RestCollectionCreateCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionCreateCollection_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionBasics"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/9862"</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9862"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionBasics"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span> 
}
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionEdges"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/9865"</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9865"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionEdges"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionCreateCollection_container_collapse" onclick="$('#RestCollectionCreateCollection_long').hide(); $('#RestCollectionCreateCollection_short').show(); window.location.hash='RestCollectionCreateCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionCreateCollection_short" onclick="$('#RestCollectionCreateCollection_short').hide(); $('#RestCollectionCreateCollection_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionBasics"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionEdges"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>









<div class="example-container" id="RestCollectionCreateKeyopt_container">
<a class="anchorjs-link " href="#RestCollectionCreateKeyopt_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionCreateKeyopt_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionUsers"</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"autoincrement"</span>, 
    <span class="hljs-string">"increment"</span> : <span class="hljs-number">5</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"statusString"</span> : <span class="hljs-string">"loaded"</span>, 
  <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/9870"</span>, 
  <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"9870"</span>, 
  <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"autoincrement"</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"offset"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"increment"</span> : <span class="hljs-number">5</span>, 
    <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
  }, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionUsers"</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span> 
}
</pre>
<div id="RestCollectionCreateKeyopt_container_collapse" onclick="$('#RestCollectionCreateKeyopt_long').hide(); $('#RestCollectionCreateKeyopt_short').show(); window.location.hash='RestCollectionCreateKeyopt_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionCreateKeyopt_short" onclick="$('#RestCollectionCreateKeyopt_short').hide(); $('#RestCollectionCreateKeyopt_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"testCollectionUsers"</span>, 
  <span class="hljs-string">"keyOptions"</span> : { 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"autoincrement"</span>, 
    <span class="hljs-string">"increment"</span> : <span class="hljs-number">5</span>, 
    <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_rename.md -->
@startDocuBlock JSF_put_api_collection_rename

@brief renames a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/rename, Rename collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection to rename.

@RESTDESCRIPTION
Renames a collection. Expects an object with the attribute(s)

- *name*: The new name.

It returns an object with the attributes

- *id*: The identifier of the collection.

- *name*: The new name of the collection.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

If renaming the collection succeeds, then the collection is also renamed in 
all graph definitions inside the `_graphs` collection in the current database.

**Note**: this method is not available in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.
@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierRename_container">
<a class="anchorjs-link " href="#RestCollectionIdentifierRename_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionIdentifierRename_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products1/rename &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"newname"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products1/rename

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10267"</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10267"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"newname"</span> 
}
</pre>
<div id="RestCollectionIdentifierRename_container_collapse" onclick="$('#RestCollectionIdentifierRename_long').hide(); $('#RestCollectionIdentifierRename_short').show(); window.location.hash='RestCollectionIdentifierRename_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierRename_short" onclick="$('#RestCollectionIdentifierRename_short').hide(); $('#RestCollectionIdentifierRename_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/collection/products1/rename &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"newname"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products1/rename

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSF_put_api_collection_load.md -->
@startDocuBlock JSF_put_api_collection_load

@brief loads a collection

@RESTHEADER{PUT /_api/collection/{collection-name}/load, Load collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
Loads a collection into memory. Returns the collection on success.

The request body object might optionally contain the following attribute:

- *count*: If set, this controls whether the return value should include
  the number of documents in the collection. Setting *count* to
  *false* may speed up loading a collection. The default value for
  *count* is *true*.

On success an object with the following attributes is returned:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *count*: The number of documents inside the collection. This is only
  returned if the *count* input parameters is set to *true* or has
  not been specified.

- *status*: The status of the collection as number.

- *type*: The collection type. Valid types are:
  - 2: document collection
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

@RESTRETURNCODES

@RESTRETURNCODE{400}
If the *collection-name* is missing, then a *HTTP 400* is
returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestCollectionIdentifierLoad_container">
<a class="anchorjs-link " href="#RestCollectionIdentifierLoad_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestCollectionIdentifierLoad_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/load

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/load

{ 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/10249"</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"10249"</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span> 
}
</pre>
<div id="RestCollectionIdentifierLoad_container_collapse" onclick="$('#RestCollectionIdentifierLoad_long').hide(); $('#RestCollectionIdentifierLoad_short').show(); window.location.hash='RestCollectionIdentifierLoad_container';" class="example_show_button">Hide response body</div></div>
<div id="RestCollectionIdentifierLoad_short" onclick="$('#RestCollectionIdentifierLoad_short').hide(); $('#RestCollectionIdentifierLoad_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/collection/products/load

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff
location: <span class="hljs-regexp">/_api/</span>collection/products/load

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Collections/JSA_get_api_collection_name.md -->
@startDocuBlock JSA_get_api_collection_name

@brief returns a collection

@RESTHEADER{GET /_api/collection/{collection-name}, Return information about a collection}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-name,string,required}
The name of the collection.

@RESTDESCRIPTION
The result is an object describing the collection with the following
attributes:

- *id*: The identifier of the collection.

- *name*: The name of the collection.

- *status*: The status of the collection as number.
 - 1: new born collection
 - 2: unloaded
 - 3: loaded
 - 4: in the process of being unloaded
 - 5: deleted
 - 6: loading

Every other status indicates a corrupted collection.

- *type*: The type of the collection as number.
  - 2: document collection (normal case)
  - 3: edges collection

- *isSystem*: If *true* then the collection is a system collection.

@RESTRETURNCODES

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is
returned.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index_fulltext.md -->
@startDocuBlock JSF_post_api_index_fulltext

@brief creates a fulltext index

@RESTHEADER{POST /_api/index#fulltext, Create fulltext index}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection-name,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"fulltext"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute names. Currently, the array is limited
to exactly one attribute.

@RESTBODYPARAM{minLength,integer,required,int64}
Minimum character length of words to index. Will default
to a server-defined value if unspecified. It is thus recommended to set
this value explicitly when creating the index.

@RESTDESCRIPTION
**NOTE** Swagger examples won't work due to the anchor.


Creates a fulltext index for the collection *collection-name*, if
it does not already exist. The call expects an object containing the index
details.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is
returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a fulltext index


<div class="example-container" id="RestIndexCreateNewFulltext_container">
<a class="anchorjs-link " href="#RestIndexCreateNewFulltext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateNewFulltext_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"text"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"text"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11196"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"minLength"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewFulltext_container_collapse" onclick="$('#RestIndexCreateNewFulltext_long').hide(); $('#RestIndexCreateNewFulltext_short').show(); window.location.hash='RestIndexCreateNewFulltext_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewFulltext_short" onclick="$('#RestIndexCreateNewFulltext_short').hide(); $('#RestIndexCreateNewFulltext_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"text"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index_skiplist.md -->
@startDocuBlock JSF_post_api_index_skiplist

@brief creates a skip-list

@RESTHEADER{POST /_api/index#skiplist, Create skip list}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection-name,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"skiplist"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute paths.

@RESTBODYPARAM{unique,boolean,required,}
if *true*, then create a unique index.

@RESTBODYPARAM{sparse,boolean,required,}
if *true*, then create a sparse index.

@RESTBODYPARAM{deduplicate,boolean,optional,boolean}
if *false*, the deduplication of array values is turned off.

@RESTDESCRIPTION

Creates a skip-list index for the collection *collection-name*, if
it does not already exist. The call expects an object containing the index
details.

In a sparse index all documents will be excluded from the index that do not 
contain at least one of the specified index attributes (i.e. *fields*) or that 
have a value of *null* in any of the specified index attributes. Such documents 
will not be indexed, and not be taken into account for uniqueness checks if
the *unique* flag is set.

In a non-sparse index, these documents will be indexed (for non-present
indexed attributes, a value of *null* will be used) and will be taken into
account for uniqueness checks if the *unique* flag is set.

**Note**: unique indexes on non-shard keys are not supported in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is
returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains documents and you try to create a unique
skip-list index in such a way that there are documents violating the
uniqueness, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a skiplist index


<div class="example-container" id="RestIndexCreateNewSkiplist_container">
<a class="anchorjs-link " href="#RestIndexCreateNewSkiplist_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateNewSkiplist_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11217"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewSkiplist_container_collapse" onclick="$('#RestIndexCreateNewSkiplist_long').hide(); $('#RestIndexCreateNewSkiplist_short').show(); window.location.hash='RestIndexCreateNewSkiplist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewSkiplist_short" onclick="$('#RestIndexCreateNewSkiplist_short').hide(); $('#RestIndexCreateNewSkiplist_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a sparse skiplist index


<div class="example-container" id="RestIndexCreateSparseSkiplist_container">
<a class="anchorjs-link " href="#RestIndexCreateSparseSkiplist_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateSparseSkiplist_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11245"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateSparseSkiplist_container_collapse" onclick="$('#RestIndexCreateSparseSkiplist_long').hide(); $('#RestIndexCreateSparseSkiplist_short').show(); window.location.hash='RestIndexCreateSparseSkiplist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateSparseSkiplist_short" onclick="$('#RestIndexCreateSparseSkiplist_short').hide(); $('#RestIndexCreateSparseSkiplist_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index_persistent.md -->
@startDocuBlock JSF_post_api_index_persistent

@brief creates a persistent index

@RESTHEADER{POST /_api/index#persistent, Create a persistent index}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection-name,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"persistent"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute paths.

@RESTBODYPARAM{unique,boolean,required,}
if *true*, then create a unique index.

@RESTBODYPARAM{sparse,boolean,required,}
if *true*, then create a sparse index.

@RESTDESCRIPTION

Creates a persistent index for the collection *collection-name*, if
it does not already exist. The call expects an object containing the index
details.

In a sparse index all documents will be excluded from the index that do not 
contain at least one of the specified index attributes (i.e. *fields*) or that 
have a value of *null* in any of the specified index attributes. Such documents 
will not be indexed, and not be taken into account for uniqueness checks if
the *unique* flag is set.

In a non-sparse index, these documents will be indexed (for non-present
indexed attributes, a value of *null* will be used) and will be taken into
account for uniqueness checks if the *unique* flag is set.

**Note**: unique indexes on non-shard keys are not supported in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is
returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains documents and you try to create a unique
persistent index in such a way that there are documents violating the
uniqueness, then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a persistent index


<div class="example-container" id="RestIndexCreateNewPersistent_container">
<a class="anchorjs-link " href="#RestIndexCreateNewPersistent_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateNewPersistent_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11210"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewPersistent_container_collapse" onclick="$('#RestIndexCreateNewPersistent_long').hide(); $('#RestIndexCreateNewPersistent_short').show(); window.location.hash='RestIndexCreateNewPersistent_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewPersistent_short" onclick="$('#RestIndexCreateNewPersistent_short').hide(); $('#RestIndexCreateNewPersistent_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a sparse persistent index


<div class="example-container" id="RestIndexCreateSparsePersistent_container">
<a class="anchorjs-link " href="#RestIndexCreateSparsePersistent_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateSparsePersistent_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11238"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateSparsePersistent_container_collapse" onclick="$('#RestIndexCreateSparsePersistent_long').hide(); $('#RestIndexCreateSparsePersistent_short').show(); window.location.hash='RestIndexCreateSparsePersistent_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateSparsePersistent_short" onclick="$('#RestIndexCreateSparsePersistent_short').hide(); $('#RestIndexCreateSparsePersistent_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"persistent"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index_hash.md -->
@startDocuBlock JSF_post_api_index_hash

@brief creates a hash index

@RESTHEADER{POST /_api/index#hash, Create hash index}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection-name,string,required}
The collection name.

@RESTBODYPARAM{type,string,required,string}
must be equal to *"hash"*.

@RESTBODYPARAM{fields,array,required,string}
an array of attribute paths.

@RESTBODYPARAM{unique,boolean,required,}
if *true*, then create a unique index.

@RESTBODYPARAM{sparse,boolean,required,}
if *true*, then create a sparse index.

@RESTBODYPARAM{deduplicate,boolean,optional,boolean}
if *false*, the deduplication of array values is turned off.

@RESTDESCRIPTION
**NOTE** Swagger examples won't work due to the anchor.


Creates a hash index for the collection *collection-name* if it
does not already exist. The call expects an object containing the index
details.

In a sparse index all documents will be excluded from the index that do not 
contain at least one of the specified index attributes (i.e. *fields*) or that 
have a value of *null* in any of the specified index attributes. Such documents 
will not be indexed, and not be taken into account for uniqueness checks if
the *unique* flag is set.

In a non-sparse index, these documents will be indexed (for non-present
indexed attributes, a value of *null* will be used) and will be taken into
account for uniqueness checks if the *unique* flag is set.

**Note**: unique indexes on non-shard keys are not supported in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If the collection already contains documents and you try to create a unique
hash index in such a way that there are documents violating the uniqueness,
then a *HTTP 400* is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating an unique constraint


<div class="example-container" id="RestIndexCreateNewUniqueConstraint_container">
<a class="anchorjs-link " href="#RestIndexCreateNewUniqueConstraint_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateNewUniqueConstraint_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11224"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewUniqueConstraint_container_collapse" onclick="$('#RestIndexCreateNewUniqueConstraint_long').hide(); $('#RestIndexCreateNewUniqueConstraint_short').show(); window.location.hash='RestIndexCreateNewUniqueConstraint_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewUniqueConstraint_short" onclick="$('#RestIndexCreateNewUniqueConstraint_short').hide(); $('#RestIndexCreateNewUniqueConstraint_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a non-unique hash index


<div class="example-container" id="RestIndexCreateNewHashIndex_container">
<a class="anchorjs-link " href="#RestIndexCreateNewHashIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateNewHashIndex_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11203"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateNewHashIndex_container_collapse" onclick="$('#RestIndexCreateNewHashIndex_long').hide(); $('#RestIndexCreateNewHashIndex_short').show(); window.location.hash='RestIndexCreateNewHashIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateNewHashIndex_short" onclick="$('#RestIndexCreateNewHashIndex_short').hide(); $('#RestIndexCreateNewHashIndex_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span>, 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a sparse index


<div class="example-container" id="RestIndexCreateSparseHashIndex_container">
<a class="anchorjs-link " href="#RestIndexCreateSparseHashIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateSparseHashIndex_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11231"</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateSparseHashIndex_container_collapse" onclick="$('#RestIndexCreateSparseHashIndex_long').hide(); $('#RestIndexCreateSparseHashIndex_short').show(); window.location.hash='RestIndexCreateSparseHashIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateSparseHashIndex_short" onclick="$('#RestIndexCreateSparseHashIndex_short').hide(); $('#RestIndexCreateSparseHashIndex_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"a"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index_delete.md -->
@startDocuBlock JSF_post_api_index_delete

@brief deletes an index

@RESTHEADER{DELETE /_api/index/{index-handle}, Delete index}

@RESTURLPARAMETERS

@RESTURLPARAM{index-handle,string,required}
The index handle.

@RESTDESCRIPTION
Deletes an index with *index-handle*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index could be deleted, then an *HTTP 200* is
returned.

@RESTRETURNCODE{404}
If the *index-handle* is unknown, then an *HTTP 404* is returned.
@EXAMPLES


<div class="example-container" id="RestIndexDeleteUniqueSkiplist_container">
<a class="anchorjs-link " href="#RestIndexDeleteUniqueSkiplist_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexDeleteUniqueSkiplist_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/index/products/11252

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11252"</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestIndexDeleteUniqueSkiplist_container_collapse" onclick="$('#RestIndexDeleteUniqueSkiplist_long').hide(); $('#RestIndexDeleteUniqueSkiplist_short').show(); window.location.hash='RestIndexDeleteUniqueSkiplist_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexDeleteUniqueSkiplist_short" onclick="$('#RestIndexDeleteUniqueSkiplist_short').hide(); $('#RestIndexDeleteUniqueSkiplist_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/index/products/11252

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index.md -->
@startDocuBlock JSF_post_api_index

@brief creates an index

@RESTHEADER{POST /_api/index#general, Create index}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTALLBODYPARAM{index-details,json,required}

@RESTDESCRIPTION
**NOTE** Swagger examples won't work due to the anchor.


Creates a new index in the collection *collection*. Expects
an object containing the index details.

The type of the index to be created must specified in the *type*
attribute of the index details. Depending on the index type, additional
other attributes may need to specified in the request in order to create
the index.

Indexes require the to be indexed attribute(s) in the *fields* attribute
of the index details. Depending on the index type, a single attribute or
multiple attributes can be indexed. In the latter case, an array of
strings is expected.

Indexing the system attribute *_id* is not supported for user-defined indexes. 
Manually creating an index using *_id* as an index attribute will fail with 
an error.

Some indexes can be created as unique or non-unique variants. Uniqueness
can be controlled for most indexes by specifying the *unique* flag in the
index details. Setting it to *true* will create a unique index.
Setting it to *false* or omitting the *unique* attribute will
create a non-unique index.

**Note**: The following index types do not support uniqueness, and using
the *unique* attribute with these types may lead to an error:

- geo indexes
- fulltext indexes

**Note**: Unique indexes on non-shard keys are not supported in a
cluster.

Hash, skiplist and persistent indexes can optionally be created in a sparse
variant. A sparse index will be created if the *sparse* attribute in
the index details is set to *true*. Sparse indexes do not index documents
for which any of the index attributes is either not set or is *null*. 

The optional attribute **deduplicate** is supported by array indexes of
type *hash* or *skiplist*. It controls whether inserting duplicate index values 
from the same document into a unique array index will lead to a unique constraint
error or not. The default value is *true*, so only a single instance of each
non-unique index value will be inserted into the index per document. Trying to
insert a value into the index that already exists in the index will always fail,
regardless of the value of this attribute.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then an *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then an *HTTP 201*
is returned.

@RESTRETURNCODE{400}
If an invalid index description is posted or attributes are used that the
target index will not support, then an *HTTP 400* is returned.

@RESTRETURNCODE{404}
If *collection* is unknown, then an *HTTP 404* is returned.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_post_api_index_geo.md -->
@startDocuBlock JSF_post_api_index_geo

@brief creates a geo index

@RESTHEADER{POST /_api/index#geo, Create geo-spatial index}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.


@RESTBODYPARAM{type,string,required,string}
must be equal to *"geo"*.

@RESTBODYPARAM{fields,array,required,string}
An array with one or two attribute paths.

If it is an array with one attribute path *location*, then a geo-spatial
index on all documents is created using *location* as path to the
coordinates. The value of the attribute must be an array with at least two
double values. The array must contain the latitude (first value) and the
longitude (second value). All documents, which do not have the attribute
path or with value that are not suitable, are ignored.

If it is an array with two attribute paths *latitude* and *longitude*,
then a geo-spatial index on all documents is created using *latitude*
and *longitude* as paths the latitude and the longitude. The value of
the attribute *latitude* and of the attribute *longitude* must a
double. All documents, which do not have the attribute paths or which
values are not suitable, are ignored.

@RESTBODYPARAM{geoJson,string,required,string}
If a geo-spatial index on a *location* is constructed
and *geoJson* is *true*, then the order within the array is longitude
followed by latitude. This corresponds to the format described in
http://geojson.org/geojson-spec.html#positions

@RESTDESCRIPTION
**NOTE** Swagger examples won't work due to the anchor.


Creates a geo-spatial index in the collection *collection-name*, if
it does not already exist. Expects an object containing the index details.

Geo indexes are always sparse, meaning that documents that do not contain
the index attributes or have non-numeric values in the index attributes
will not be indexed.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index already exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{201}
If the index does not already exist and could be created, then a *HTTP 201*
is returned.

@RESTRETURNCODE{404}
If the *collection-name* is unknown, then a *HTTP 404* is returned.

@EXAMPLES

Creating a geo index with a location attribute


<div class="example-container" id="RestIndexCreateGeoLocation_container">
<a class="anchorjs-link " href="#RestIndexCreateGeoLocation_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateGeoLocation_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo"</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"b"</span> 
  ], 
  <span class="hljs-string">"geoJson"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11189"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo1"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateGeoLocation_container_collapse" onclick="$('#RestIndexCreateGeoLocation_long').hide(); $('#RestIndexCreateGeoLocation_short').show(); window.location.hash='RestIndexCreateGeoLocation_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateGeoLocation_short" onclick="$('#RestIndexCreateGeoLocation_short').hide(); $('#RestIndexCreateGeoLocation_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo"</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"b"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Creating a geo index with latitude and longitude attributes


<div class="example-container" id="RestIndexCreateGeoLatitudeLongitude_container">
<a class="anchorjs-link " href="#RestIndexCreateGeoLatitudeLongitude_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexCreateGeoLatitudeLongitude_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo"</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"e"</span>, 
    <span class="hljs-string">"f"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"constraint"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"e"</span>, 
    <span class="hljs-string">"f"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11182"</span>, 
  <span class="hljs-string">"ignoreNull"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"isNewlyCreated"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo2"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestIndexCreateGeoLatitudeLongitude_container_collapse" onclick="$('#RestIndexCreateGeoLatitudeLongitude_long').hide(); $('#RestIndexCreateGeoLatitudeLongitude_short').show(); window.location.hash='RestIndexCreateGeoLatitudeLongitude_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexCreateGeoLatitudeLongitude_short" onclick="$('#RestIndexCreateGeoLatitudeLongitude_short').hide(); $('#RestIndexCreateGeoLatitudeLongitude_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/index?collection=products &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"geo"</span>, 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"e"</span>, 
    <span class="hljs-string">"f"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_get_api_reads_index.md -->
@startDocuBlock JSF_get_api_reads_index

@brief returns an index

@RESTHEADER{GET /_api/index/{index-handle},Read index}

@RESTURLPARAMETERS

@RESTURLPARAM{index-handle,string,required}
The index-handle.

@RESTDESCRIPTION
The result is an object describing the index. It has at least the following
attributes:

- *id*: the identifier of the index

- *type*: the index type

All other attributes are type-dependent. For example, some indexes provide
*unique* or *sparse* flags, whereas others don't. Some indexes also provide 
a selectivity estimate in the *selectivityEstimate* attribute of the result.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the index exists, then a *HTTP 200* is returned.

@RESTRETURNCODE{404}
If the index does not exist, then a *HTTP 404*
is returned.

@EXAMPLES


<div class="example-container" id="RestIndexPrimaryIndex_container">
<a class="anchorjs-link " href="#RestIndexPrimaryIndex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexPrimaryIndex_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/index/products/0

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"fields"</span> : [ 
    <span class="hljs-string">"_key"</span> 
  ], 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/0"</span>, 
  <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
  <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestIndexPrimaryIndex_container_collapse" onclick="$('#RestIndexPrimaryIndex_long').hide(); $('#RestIndexPrimaryIndex_short').show(); window.location.hash='RestIndexPrimaryIndex_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexPrimaryIndex_short" onclick="$('#RestIndexPrimaryIndex_short').hide(); $('#RestIndexPrimaryIndex_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/index/products/0

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Indexes/JSF_get_api_index.md -->
@startDocuBlock JSF_get_api_index

@brief returns all indexes of a collection

@RESTHEADER{GET /_api/index, Read all indexes of a collection}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTDESCRIPTION
Returns an object with an attribute *indexes* containing an array of all
index descriptions for the given collection. The same information is also
available in the *identifiers* as an object with the index handles as
keys.

@RESTRETURNCODES

@RESTRETURNCODE{200}
returns a JSON object containing a list of indexes on that collection.

@EXAMPLES

Return information about all indexes


<div class="example-container" id="RestIndexAllIndexes_container">
<a class="anchorjs-link " href="#RestIndexAllIndexes_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestIndexAllIndexes_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/index?collection=products

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"indexes"</span> : [ 
    { 
      <span class="hljs-string">"fields"</span> : [ 
        <span class="hljs-string">"_key"</span> 
      ], 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/0"</span>, 
      <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
      <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
    }, 
    { 
      <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"fields"</span> : [ 
        <span class="hljs-string">"name"</span> 
      ], 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11171"</span>, 
      <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
      <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
    }, 
    { 
      <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"fields"</span> : [ 
        <span class="hljs-string">"price"</span> 
      ], 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11174"</span>, 
      <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
      <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
    } 
  ], 
  <span class="hljs-string">"identifiers"</span> : { 
    <span class="hljs-string">"products/0"</span> : { 
      <span class="hljs-string">"fields"</span> : [ 
        <span class="hljs-string">"_key"</span> 
      ], 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/0"</span>, 
      <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
      <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span> 
    }, 
    <span class="hljs-string">"products/11171"</span> : { 
      <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"fields"</span> : [ 
        <span class="hljs-string">"name"</span> 
      ], 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11171"</span>, 
      <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
      <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
    }, 
    <span class="hljs-string">"products/11174"</span> : { 
      <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"fields"</span> : [ 
        <span class="hljs-string">"price"</span> 
      ], 
      <span class="hljs-string">"id"</span> : <span class="hljs-string">"products/11174"</span>, 
      <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
      <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span> 
    } 
  } 
}
</pre>
<div id="RestIndexAllIndexes_container_collapse" onclick="$('#RestIndexAllIndexes_long').hide(); $('#RestIndexAllIndexes_short').show(); window.location.hash='RestIndexAllIndexes_container';" class="example_show_button">Hide response body</div></div>
<div id="RestIndexAllIndexes_short" onclick="$('#RestIndexAllIndexes_short').hide(); $('#RestIndexAllIndexes_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/index?collection=products

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph Edges/API_EDGE_READINOUTBOUND.md -->
@startDocuBlock API_EDGE_READINOUTBOUND

@brief get edges

@RESTHEADER{GET /_api/edges/{collection-id}, Read in- or outbound edges}

@RESTURLPARAMETERS

@RESTURLPARAM{collection-id,string,required}
The id of the collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{vertex,string,required}
The id of the start vertex.

@RESTQUERYPARAM{direction,string,optional}
Selects *in* or *out* direction for edges. If not set, any edges are
returned.

@RESTDESCRIPTION
Returns an array of edges starting or ending in the vertex identified by
*vertex-handle*.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the edge collection was found and edges were retrieved.

@RESTRETURNCODE{400}
is returned if the request contains invalid parameters.

@RESTRETURNCODE{404}
is returned if the edge collection was not found.

@EXAMPLES

Any direction


<div class="example-container" id="RestEdgesReadEdgesAny_container">
<a class="anchorjs-link " href="#RestEdgesReadEdgesAny_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestEdgesReadEdgesAny_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"edges"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"6"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/6"</span>, 
      <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertices/2"</span>, 
      <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertices/1"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RiW--F"</span>, 
      <span class="hljs-string">"$label"</span> : <span class="hljs-string">"v2 -&gt; v1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7"</span>, 
      <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertices/4"</span>, 
      <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertices/1"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Ria--_"</span>, 
      <span class="hljs-string">"$label"</span> : <span class="hljs-string">"v4 -&gt; v1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/5"</span>, 
      <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertices/1"</span>, 
      <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertices/3"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7RiW--D"</span>, 
      <span class="hljs-string">"$label"</span> : <span class="hljs-string">"v1 -&gt; v3"</span> 
    } 
  ], 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span> 
  } 
}
</pre>
<div id="RestEdgesReadEdgesAny_container_collapse" onclick="$('#RestEdgesReadEdgesAny_long').hide(); $('#RestEdgesReadEdgesAny_short').show(); window.location.hash='RestEdgesReadEdgesAny_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEdgesReadEdgesAny_short" onclick="$('#RestEdgesReadEdgesAny_short').hide(); $('#RestEdgesReadEdgesAny_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







In edges


<div class="example-container" id="RestEdgesReadEdgesIn_container">
<a class="anchorjs-link " href="#RestEdgesReadEdgesIn_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestEdgesReadEdgesIn_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&direction=in

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"edges"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"6"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/6"</span>, 
      <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertices/2"</span>, 
      <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertices/1"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Rke--_"</span>, 
      <span class="hljs-string">"$label"</span> : <span class="hljs-string">"v2 -&gt; v1"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/7"</span>, 
      <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertices/4"</span>, 
      <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertices/1"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Rke--B"</span>, 
      <span class="hljs-string">"$label"</span> : <span class="hljs-string">"v4 -&gt; v1"</span> 
    } 
  ], 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span> 
  } 
}
</pre>
<div id="RestEdgesReadEdgesIn_container_collapse" onclick="$('#RestEdgesReadEdgesIn_long').hide(); $('#RestEdgesReadEdgesIn_short').show(); window.location.hash='RestEdgesReadEdgesIn_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEdgesReadEdgesIn_short" onclick="$('#RestEdgesReadEdgesIn_short').hide(); $('#RestEdgesReadEdgesIn_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&direction=in

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







Out edges


<div class="example-container" id="RestEdgesReadEdgesOut_container">
<a class="anchorjs-link " href="#RestEdgesReadEdgesOut_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestEdgesReadEdgesOut_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&direction=out

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"edges"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"5"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"edges/5"</span>, 
      <span class="hljs-string">"_from"</span> : <span class="hljs-string">"vertices/1"</span>, 
      <span class="hljs-string">"_to"</span> : <span class="hljs-string">"vertices/3"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Rme--H"</span>, 
      <span class="hljs-string">"$label"</span> : <span class="hljs-string">"v1 -&gt; v3"</span> 
    } 
  ], 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span> 
  } 
}
</pre>
<div id="RestEdgesReadEdgesOut_container_collapse" onclick="$('#RestEdgesReadEdgesOut_long').hide(); $('#RestEdgesReadEdgesOut_short').show(); window.location.hash='RestEdgesReadEdgesOut_container';" class="example_show_button">Hide response body</div></div>
<div id="RestEdgesReadEdgesOut_short" onclick="$('#RestEdgesReadEdgesOut_short').hide(); $('#RestEdgesReadEdgesOut_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/edges/edges?vertex=vertices/1&direction=out

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_within_rectangle.md -->
@startDocuBlock JSA_put_api_simple_within_rectangle

@brief returns all documents of a collection within a rectangle

@RESTHEADER{PUT /_api/simple/within-rectangle, Within rectangle query}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{latitude1,string,required,string}
The latitude of the first rectangle coordinate.

@RESTBODYPARAM{longitude1,string,required,string}
The longitude of the first rectangle coordinate.

@RESTBODYPARAM{latitude2,string,required,string}
The latitude of the second rectangle coordinate.

@RESTBODYPARAM{longitude2,string,required,string}
The longitude of the second rectangle coordinate.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query. (optional)

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip* is
applied before the *limit* restriction. The default is 100. (optional)

@RESTBODYPARAM{geo,string,required,string}
If given, the identifier of the geo-index to use. (optional)

@RESTDESCRIPTION

This will find all documents within the specified rectangle (determined by
the given coordinates (*latitude1*, *longitude1*, *latitude2*, *longitude2*). 

In order to use the *within-rectangle* query, a geo index must be defined for
the collection. This index also defines which attribute holds the
coordinates for the document.  If you have more than one geo-spatial index,
you can use the *geo* field to select a particular index.

Returns a cursor containing the result, see [Http Cursor](../AqlQueryCursor/README.md) for details.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleWithinRectangle_container">
<a class="anchorjs-link " href="#RestSimpleWithinRectangle_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleWithinRectangle_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/within-rectangle &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude1"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude1"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"latitude2"</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">"longitude2"</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12047"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/12047"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YT2--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0.008/"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">0.008</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"12044"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/12044"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YT2--_"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0.006/"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">0.006</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleWithinRectangle_container_collapse" onclick="$('#RestSimpleWithinRectangle_long').hide(); $('#RestSimpleWithinRectangle_short').show(); window.location.hash='RestSimpleWithinRectangle_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleWithinRectangle_short" onclick="$('#RestSimpleWithinRectangle_short').hide(); $('#RestSimpleWithinRectangle_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/within-rectangle &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude1"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude1"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"latitude2"</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">"longitude2"</span> : <span class="hljs-number">0.2</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_remove_by_example.md -->
@startDocuBlock JSA_put_api_simple_remove_by_example

@brief removes all documents of a collection that match an example

@RESTHEADER{PUT /_api/simple/remove-by-example, Remove documents by example}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to remove from.

@RESTBODYPARAM{example,string,required,string}
An example document that all collection documents are compared against.

@RESTBODYPARAM{options,object,optional,put_api_simple_remove_by_example_opts}
a json object which can contains following attributes:

@RESTSTRUCT{waitForSync,put_api_simple_remove_by_example_opts,boolean,optional,}
if set to true, then all removal operations will
instantly be synchronized to disk. If this is not specified, then the
collection's default sync behavior will be applied.

@RESTSTRUCT{limit,put_api_simple_remove_by_example_opts,string,required,string}
an optional value that determines how many documents to
delete at most. If *limit* is specified but is less than the number
of documents in the collection, it is undefined which of the documents
will be deleted.

@RESTDESCRIPTION

This will find all documents in the collection that match the specified
example object.

Note: the *limit* attribute is not supported on sharded collections.
Using it will result in an error.

Returns the number of documents that were deleted.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleRemoveByExample_container">
<a class="anchorjs-link " href="#RestSimpleRemoveByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleRemoveByExample_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deleted"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveByExample_container_collapse" onclick="$('#RestSimpleRemoveByExample_long').hide(); $('#RestSimpleRemoveByExample_short').show(); window.location.hash='RestSimpleRemoveByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveByExample_short" onclick="$('#RestSimpleRemoveByExample_short').hide(); $('#RestSimpleRemoveByExample_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using Parameter: waitForSync and limit


<div class="example-container" id="RestSimpleRemoveByExample_1_container">
<a class="anchorjs-link " href="#RestSimpleRemoveByExample_1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleRemoveByExample_1_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deleted"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveByExample_1_container_collapse" onclick="$('#RestSimpleRemoveByExample_1_long').hide(); $('#RestSimpleRemoveByExample_1_short').show(); window.location.hash='RestSimpleRemoveByExample_1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveByExample_1_short" onclick="$('#RestSimpleRemoveByExample_1_short').hide(); $('#RestSimpleRemoveByExample_1_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using Parameter: waitForSync and limit with new signature


<div class="example-container" id="RestSimpleRemoveByExample_2_container">
<a class="anchorjs-link " href="#RestSimpleRemoveByExample_2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleRemoveByExample_2_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"deleted"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveByExample_2_container_collapse" onclick="$('#RestSimpleRemoveByExample_2_long').hide(); $('#RestSimpleRemoveByExample_2_short').show(); window.location.hash='RestSimpleRemoveByExample_2_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveByExample_2_short" onclick="$('#RestSimpleRemoveByExample_2_short').hide(); $('#RestSimpleRemoveByExample_2_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_within.md -->
@startDocuBlock JSA_put_api_simple_within

@brief returns all documents of a collection within a given radius

@RESTHEADER{PUT /_api/simple/within, Find documents within a radius around a coordinate}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{latitude,string,required,string}
The latitude of the coordinate.

@RESTBODYPARAM{longitude,string,required,string}
The longitude of the coordinate.

@RESTBODYPARAM{radius,string,required,string}
The maximal radius (in meters).

@RESTBODYPARAM{distance,string,required,string}
If given, the attribute key used to return the distance to
the given coordinate. (optional). If specified, distances are returned in meters.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query. (optional)

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip* is
applied before the *limit* restriction. The default is 100. (optional)

@RESTBODYPARAM{geo,string,required,string}
If given, the identifier of the geo-index to use. (optional)

@RESTDESCRIPTION

This will find all documents within a given radius around the coordinate
(*latitude*, *longitude*). The returned list is sorted by distance.

In order to use the *within* operator, a geo index must be defined for
the collection. This index also defines which attribute holds the
coordinates for the document.  If you have more than one geo-spatial index,
you can use the *geo* field to select a particular index.


Returns a cursor containing the result, see [Http Cursor](../AqlQueryCursor/README.md) for details.

Note: the *within* simple query is **deprecated** as of ArangoDB 2.6. 
This API may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to issue an [AQL query](../../AQL/Functions/Geo.html) using the *WITHIN* function as follows: 


    FOR doc IN WITHIN(@@collection, @latitude, @longitude, @radius, @distanceAttributeName)
      RETURN doc

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Without distance


<div class="example-container" id="RestSimpleWithin_container">
<a class="anchorjs-link " href="#RestSimpleWithin_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleWithin_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"radius"</span> : <span class="hljs-number">500</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11950"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11950"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YPm--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0.002/"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11944"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11944"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YPm--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-0.002/"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">-0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleWithin_container_collapse" onclick="$('#RestSimpleWithin_long').hide(); $('#RestSimpleWithin_short').show(); window.location.hash='RestSimpleWithin_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleWithin_short" onclick="$('#RestSimpleWithin_short').hide(); $('#RestSimpleWithin_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"radius"</span> : <span class="hljs-number">500</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With distance


<div class="example-container" id="RestSimpleWithinDistance_container">
<a class="anchorjs-link " href="#RestSimpleWithinDistance_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleWithinDistance_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"distance"</span> : <span class="hljs-string">"distance"</span>, 
  <span class="hljs-string">"radius"</span> : <span class="hljs-number">300</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"distance"</span> : <span class="hljs-number">222.38985328911744</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11988"</span>, 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11988"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YRq--D"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">-0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-0.002/"</span> 
    }, 
    { 
      <span class="hljs-string">"distance"</span> : <span class="hljs-number">222.38985328911744</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11994"</span>, 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11994"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YRu--B"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0.002/"</span> 
    }, 
    { 
      <span class="hljs-string">"distance"</span> : <span class="hljs-number">444.779706578235</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11985"</span>, 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11985"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YRq--B"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">-0.004</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-0.004/"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleWithinDistance_container_collapse" onclick="$('#RestSimpleWithinDistance_long').hide(); $('#RestSimpleWithinDistance_short').show(); window.location.hash='RestSimpleWithinDistance_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleWithinDistance_short" onclick="$('#RestSimpleWithinDistance_short').hide(); $('#RestSimpleWithinDistance_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"distance"</span> : <span class="hljs-string">"distance"</span>, 
  <span class="hljs-string">"radius"</span> : <span class="hljs-number">300</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_all.md -->
@startDocuBlock JSA_put_api_simple_all

@brief returns all documents of a collection

@RESTHEADER{PUT /_api/simple/all, Return all documents}

@RESTALLBODYPARAM{query,string,required}
Contains the query.

@RESTDESCRIPTION
Returns all documents of a collections. The call expects a JSON object
as body with the following attributes:

- *collection*: The name of the collection to query.

- *skip*: The number of documents to skip in the query (optional).

- *limit*: The maximal amount of documents to return. The *skip*
  is applied before the *limit* restriction. (optional)

Returns a cursor containing the result, see [Http Cursor](../AqlQueryCursor/README.md) for details.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Limit the amount of documents using *limit*


<div class="example-container" id="RestSimpleAllSkipLimit_container">
<a class="anchorjs-link " href="#RestSimpleAllSkipLimit_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleAllSkipLimit_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all &lt;&lt;EOF
{ "collection": "products", "skip": 2, "limit" : 2 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11398"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11398"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xxq--B"</span>, 
      <span class="hljs-string">"Hello2"</span> : <span class="hljs-string">"World2"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11401"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11401"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xxq--D"</span>, 
      <span class="hljs-string">"Hello3"</span> : <span class="hljs-string">"World3"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00018596649169921875</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleAllSkipLimit_container_collapse" onclick="$('#RestSimpleAllSkipLimit_long').hide(); $('#RestSimpleAllSkipLimit_short').show(); window.location.hash='RestSimpleAllSkipLimit_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleAllSkipLimit_short" onclick="$('#RestSimpleAllSkipLimit_short').hide(); $('#RestSimpleAllSkipLimit_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all &lt;&lt;EOF
{ "collection": "products", "skip": 2, "limit" : 2 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a *batchSize* value


<div class="example-container" id="RestSimpleAllBatch_container">
<a class="anchorjs-link " href="#RestSimpleAllBatch_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleAllBatch_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all &lt;&lt;EOF
{ "collection": "products", "batchSize" : 3 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11379"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11379"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xwq--_"</span>, 
      <span class="hljs-string">"Hello3"</span> : <span class="hljs-string">"World3"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11382"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11382"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xwq--B"</span>, 
      <span class="hljs-string">"Hello4"</span> : <span class="hljs-string">"World4"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11376"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11376"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xwm--B"</span>, 
      <span class="hljs-string">"Hello2"</span> : <span class="hljs-string">"World2"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"id"</span> : <span class="hljs-string">"11388"</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">5</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">5</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00020956993103027344</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span> 
}
</pre>
<div id="RestSimpleAllBatch_container_collapse" onclick="$('#RestSimpleAllBatch_long').hide(); $('#RestSimpleAllBatch_short').show(); window.location.hash='RestSimpleAllBatch_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleAllBatch_short" onclick="$('#RestSimpleAllBatch_short').hide(); $('#RestSimpleAllBatch_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/all &lt;&lt;EOF
{ "collection": "products", "batchSize" : 3 }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_first_example.md -->
@startDocuBlock JSA_put_api_simple_first_example

@brief returns one document of a collection matching a given example

@RESTHEADER{PUT /_api/simple/first-example, Find documents matching an example}

@HINTS
{% hint 'warning' %}
Till ArangoDB versions 3.2.13 and 3.3.7 this API is quite expensive.
A more lightweight alternative is to use the [HTTP Cursor API](../AqlQueryCursor/README.md).
Starting from versions 3.2.14 and 3.3.8 this performance impact is not
an issue anymore, as the internal implementation of the API has changed.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{example,string,required,string}
The example document.

@RESTDESCRIPTION

This will return the first document matching a given example.

Returns a result containing the document or *HTTP 404* if no
document matched the example.

If more than one document in the collection matches the specified example, only
one of these documents will be returned, and it is undefined which of the matching
documents is returned.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned when the query was successfully executed.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

If a matching document was found


<div class="example-container" id="RestSimpleFirstExample_container">
<a class="anchorjs-link " href="#RestSimpleFirstExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleFirstExample_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/first-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"document"</span> : { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11497"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11497"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X26--_"</span>, 
    <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleFirstExample_container_collapse" onclick="$('#RestSimpleFirstExample_long').hide(); $('#RestSimpleFirstExample_short').show(); window.location.hash='RestSimpleFirstExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleFirstExample_short" onclick="$('#RestSimpleFirstExample_short').hide(); $('#RestSimpleFirstExample_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/first-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





If no document was found


<div class="example-container" id="RestSimpleFirstExampleNotFound_container">
<a class="anchorjs-link " href="#RestSimpleFirstExampleNotFound_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleFirstExampleNotFound_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/first-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"l"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"no match"</span> 
}
</pre>
<div id="RestSimpleFirstExampleNotFound_container_collapse" onclick="$('#RestSimpleFirstExampleNotFound_long').hide(); $('#RestSimpleFirstExampleNotFound_short').show(); window.location.hash='RestSimpleFirstExampleNotFound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleFirstExampleNotFound_short" onclick="$('#RestSimpleFirstExampleNotFound_short').hide(); $('#RestSimpleFirstExampleNotFound_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/first-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"l"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/RestRemoveByKeys.md -->
@startDocuBlock RestRemoveByKeys

@brief removes multiple documents by their keys

@RESTHEADER{PUT /_api/simple/remove-by-keys, Remove documents by their keys}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to look in for the documents to remove

@RESTBODYPARAM{keys,array,required,string}
array with the _keys of documents to remove.

@RESTBODYPARAM{options,object,optional,put_api_simple_remove_by_keys_opts}
a json object which can contains following attributes:

@RESTSTRUCT{waitForSync,put_api_simple_remove_by_keys_opts,boolean,optional,}
if set to true, then all removal operations will
instantly be synchronized to disk. If this is not specified, then the
collection's default sync behavior will be applied.

@RESTSTRUCT{silent,put_api_simple_remove_by_keys_opts,boolean,optional,}
if set to *false*, then the result will contain an additional
attribute *old* which contains an array with one entry for each
removed document. By default, these entries will have the *_id*,
*_key* and *_rev* attributes.

@RESTSTRUCT{returnOld,put_api_simple_remove_by_keys_opts,boolean,optional,}
if set to *true* and *silent* above is *false*, then the above
information about the removed documents contains the complete
removed documents.

@RESTDESCRIPTION
Looks up the documents in the specified collection using the array of keys
provided, and removes all documents from the collection whose keys are
contained in the *keys* array. Keys for which no document can be found in
the underlying collection are ignored, and no exception will be thrown for
them.

The body of the response contains a JSON object with information how many
documents were removed (and how many were not). The *removed* attribute will
contain the number of actually removed documents. The *ignored* attribute 
will contain the number of keys in the request for which no matching document
could be found.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the operation was carried out successfully. The number of removed
documents may still be 0 in this case if none of the specified document keys
were found in the collection.

@RESTRETURNCODE{404}
is returned if the collection was not found.
The response body contains an error document in this case.

@RESTRETURNCODE{405}
is returned if the operation was called with a different HTTP METHOD than PUT.

@EXAMPLES


<div class="example-container" id="RestSimpleRemove_container">
<a class="anchorjs-link " href="#RestSimpleRemove_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleRemove_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"test0"</span>, 
    <span class="hljs-string">"test1"</span>, 
    <span class="hljs-string">"test2"</span>, 
    <span class="hljs-string">"test3"</span>, 
    <span class="hljs-string">"test4"</span>, 
    <span class="hljs-string">"test5"</span>, 
    <span class="hljs-string">"test6"</span>, 
    <span class="hljs-string">"test7"</span>, 
    <span class="hljs-string">"test8"</span>, 
    <span class="hljs-string">"test9"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"removed"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemove_container_collapse" onclick="$('#RestSimpleRemove_long').hide(); $('#RestSimpleRemove_short').show(); window.location.hash='RestSimpleRemove_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemove_short" onclick="$('#RestSimpleRemove_short').hide(); $('#RestSimpleRemove_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"test0"</span>, 
    <span class="hljs-string">"test1"</span>, 
    <span class="hljs-string">"test2"</span>, 
    <span class="hljs-string">"test3"</span>, 
    <span class="hljs-string">"test4"</span>, 
    <span class="hljs-string">"test5"</span>, 
    <span class="hljs-string">"test6"</span>, 
    <span class="hljs-string">"test7"</span>, 
    <span class="hljs-string">"test8"</span>, 
    <span class="hljs-string">"test9"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






<div class="example-container" id="RestSimpleRemoveNotFound_container">
<a class="anchorjs-link " href="#RestSimpleRemoveNotFound_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleRemoveNotFound_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"baz"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"removed"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleRemoveNotFound_container_collapse" onclick="$('#RestSimpleRemoveNotFound_long').hide(); $('#RestSimpleRemoveNotFound_short').show(); window.location.hash='RestSimpleRemoveNotFound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRemoveNotFound_short" onclick="$('#RestSimpleRemoveNotFound_short').hide(); $('#RestSimpleRemoveNotFound_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/remove-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"baz"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_any.md -->
@startDocuBlock JSA_put_api_simple_any

@brief returns a random document from a collection

@RESTHEADER{PUT /_api/simple/any, Return a random document}

@RESTDESCRIPTION
Returns a random document from a collection. The call expects a JSON object
as body with the following attributes:

@RESTBODYPARAM{collection,string,required, string}
The identifier or name of the collection to query.

Returns a JSON object with the document stored in the attribute
*document* if the collection contains at least one document. If
the collection is empty, the *document* attrbute contains null.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleAny_container">
<a class="anchorjs-link " href="#RestSimpleAny_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleAny_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/any &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"document"</span> : { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11422"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11422"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xyu--B"</span>, 
    <span class="hljs-string">"Hello3"</span> : <span class="hljs-string">"World3"</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleAny_container_collapse" onclick="$('#RestSimpleAny_long').hide(); $('#RestSimpleAny_short').show(); window.location.hash='RestSimpleAny_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleAny_short" onclick="$('#RestSimpleAny_short').hide(); $('#RestSimpleAny_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/any &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_range.md -->
@startDocuBlock JSA_put_api_simple_range

@brief returns all documents of a collection within a range

@RESTHEADER{PUT /_api/simple/range, Simple range query}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{attribute,string,required,string}
The attribute path to check.

@RESTBODYPARAM{left,string,required,string}
The lower bound.

@RESTBODYPARAM{right,string,required,string}
The upper bound.

@RESTBODYPARAM{closed,boolean,required,}
If *true*, use interval including *left* and *right*,
otherwise exclude *right*, but include *left*.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query (optional).

@RESTBODYPARAM{limit,integer,optional,int64}
The maximal amount of documents to return. The *skip*
is applied before the *limit* restriction. (optional)

@RESTDESCRIPTION

This will find all documents within a given range. In order to execute a
range query, a skip-list index on the queried attribute must be present.

Returns a cursor containing the result, see [Http Cursor](../AqlQueryCursor/README.md) for details.

Note: the *range* simple query is **deprecated** as of ArangoDB 2.6. 
The function may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection within a specific range
is to use an AQL query as follows: 


    FOR doc IN @@collection 
      FILTER doc.value >= @left && doc.value < @right 
      LIMIT @skip, @limit 
      RETURN doc`

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown or no
suitable index for the range query is present.  The response body contains 
an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleRange_container">
<a class="anchorjs-link " href="#RestSimpleRange_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleRange_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/range &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"attribute"</span> : <span class="hljs-string">"i"</span>, 
  <span class="hljs-string">"left"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"right"</span> : <span class="hljs-number">4</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11694"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11694"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YCq--B"</span>, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">2</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11697"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11697"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YCq--D"</span>, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">3</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleRange_container_collapse" onclick="$('#RestSimpleRange_long').hide(); $('#RestSimpleRange_short').show(); window.location.hash='RestSimpleRange_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleRange_short" onclick="$('#RestSimpleRange_short').hide(); $('#RestSimpleRange_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/range &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"attribute"</span> : <span class="hljs-string">"i"</span>, 
  <span class="hljs-string">"left"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"right"</span> : <span class="hljs-number">4</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_fulltext.md -->
@startDocuBlock JSA_put_api_simple_fulltext

@brief returns documents of a collection as a result of a fulltext query

@RESTHEADER{PUT /_api/simple/fulltext, Fulltext index query}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{attribute,string,required,string}
The attribute that contains the texts.

@RESTBODYPARAM{query,string,required,string}
The fulltext query. Please refer to [Fulltext queries](../../Manual/Appendix/Deprecated/SimpleQueries/FulltextQueries.html)
  for details.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query (optional).

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip*
is applied before the *limit* restriction. (optional)

@RESTBODYPARAM{index,string,required,string}
The identifier of the fulltext-index to use.

@RESTDESCRIPTION

This will find all documents from the collection that match the fulltext
query specified in *query*.

In order to use the *fulltext* operator, a fulltext index must be defined
for the collection and the specified attribute.

Returns a cursor containing the result, see [Http Cursor](../AqlQueryCursor/README.md) for details.

Note: the *fulltext* simple query is **deprecated** as of ArangoDB 2.6. 
This API may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to issue an AQL query using the *FULLTEXT* [AQL function](../../AQL/Functions/Fulltext.html) 
as follows:


    FOR doc IN FULLTEXT(@@collection, @attributeName, @queryString, @limit) 
      RETURN doc

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleFulltext_container">
<a class="anchorjs-link " href="#RestSimpleFulltext_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleFulltext_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/fulltext &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"attribute"</span> : <span class="hljs-string">"text"</span>, 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"word"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11526"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11526"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X5---_"</span>, 
      <span class="hljs-string">"text"</span> : <span class="hljs-string">"this text contains word"</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11530"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11530"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X5---B"</span>, 
      <span class="hljs-string">"text"</span> : <span class="hljs-string">"this text also has a word"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleFulltext_container_collapse" onclick="$('#RestSimpleFulltext_long').hide(); $('#RestSimpleFulltext_short').show(); window.location.hash='RestSimpleFulltext_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleFulltext_short" onclick="$('#RestSimpleFulltext_short').hide(); $('#RestSimpleFulltext_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/fulltext &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"attribute"</span> : <span class="hljs-string">"text"</span>, 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"word"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_near.md -->
@startDocuBlock JSA_put_api_simple_near

@brief returns all documents of a collection near a given location

@RESTHEADER{PUT /_api/simple/near, Returns documents near a coordinate}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{latitude,string,required,string}
The latitude of the coordinate.

@RESTBODYPARAM{longitude,string,required,string}
The longitude of the coordinate.

@RESTBODYPARAM{distance,string,required,string}
If given, the attribute key used to return the distance to
the given coordinate. (optional). If specified, distances are returned in meters.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query. (optional)

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip* is
applied before the *limit* restriction. The default is 100. (optional)

@RESTBODYPARAM{geo,string,required,string}
If given, the identifier of the geo-index to use. (optional)

@RESTDESCRIPTION

The default will find at most 100 documents near the given coordinate.  The
returned array is sorted according to the distance, with the nearest document
being first in the return array. If there are near documents of equal distance, documents
are chosen randomly from this set until the limit is reached.

In order to use the *near* operator, a geo index must be defined for the
collection. This index also defines which attribute holds the coordinates
for the document.  If you have more than one geo-spatial index, you can use
the *geo* field to select a particular index.


Returns a cursor containing the result, see [Http Cursor](../AqlQueryCursor/README.md) for details.

Note: the *near* simple query is **deprecated** as of ArangoDB 2.6. 
This API may be removed in future versions of ArangoDB. The preferred
way for retrieving documents from a collection using the near operator is
to issue an [AQL query](../../AQL/Functions/Geo.html) using the *NEAR* function as follows: 


    FOR doc IN NEAR(@@collection, @latitude, @longitude, @limit)
      RETURN doc`

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Without distance


<div class="example-container" id="RestSimpleNear_container">
<a class="anchorjs-link " href="#RestSimpleNear_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleNear_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11620"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11620"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y-S--F"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0.002/"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11614"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11614"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Y-S--B"</span>, 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-0.002/"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">-0.002</span>, 
        <span class="hljs-number">0</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleNear_container_collapse" onclick="$('#RestSimpleNear_long').hide(); $('#RestSimpleNear_short').show(); window.location.hash='RestSimpleNear_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleNear_short" onclick="$('#RestSimpleNear_short').hide(); $('#RestSimpleNear_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">2</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





With distance


<div class="example-container" id="RestSimpleNearDistance_container">
<a class="anchorjs-link " href="#RestSimpleNearDistance_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleNearDistance_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"distance"</span> : <span class="hljs-string">"distance"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"distance"</span> : <span class="hljs-number">222.38985328911744</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11659"</span>, 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11659"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YAa--E"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">-0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-0.002/"</span> 
    }, 
    { 
      <span class="hljs-string">"distance"</span> : <span class="hljs-number">222.38985328911744</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11665"</span>, 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11665"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YAe--B"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">0.002</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/0.002/"</span> 
    }, 
    { 
      <span class="hljs-string">"distance"</span> : <span class="hljs-number">444.779706578235</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11656"</span>, 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11656"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7YAa--C"</span>, 
      <span class="hljs-string">"loc"</span> : [ 
        <span class="hljs-number">-0.004</span>, 
        <span class="hljs-number">0</span> 
      ], 
      <span class="hljs-string">"name"</span> : <span class="hljs-string">"Name/-0.004/"</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleNearDistance_container_collapse" onclick="$('#RestSimpleNearDistance_long').hide(); $('#RestSimpleNearDistance_short').show(); window.location.hash='RestSimpleNearDistance_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleNearDistance_short" onclick="$('#RestSimpleNearDistance_short').hide(); $('#RestSimpleNearDistance_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/near &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"latitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"longitude"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skip"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"distance"</span> : <span class="hljs-string">"distance"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/RestLookupByKeys.md -->
@startDocuBlock RestLookupByKeys

@brief fetches multiple documents by their keys

@RESTHEADER{PUT /_api/simple/lookup-by-keys, Find documents by their keys}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to look in for the documents

@RESTBODYPARAM{keys,array,required,string}
array with the _keys of documents to remove.

@RESTDESCRIPTION
Looks up the documents in the specified collection
using the array of keys provided. All documents for which a matching
key was specified in the *keys* array and that exist in the collection
will be returned.  Keys for which no document can be found in the
underlying collection are ignored, and no exception will be thrown for
them.

The body of the response contains a JSON object with a *documents*
attribute. The *documents* attribute is an array containing the
matching documents. The order in which matching documents are present
in the result array is unspecified.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the operation was carried out successfully.

@RESTRETURNCODE{404}
is returned if the collection was not found.  The response body
contains an error document in this case.

@RESTRETURNCODE{405}
is returned if the operation was called with a different HTTP METHOD than PUT.

@EXAMPLES

Looking up existing documents


<div class="example-container" id="RestSimpleLookup_container">
<a class="anchorjs-link " href="#RestSimpleLookup_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleLookup_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"test0"</span>, 
    <span class="hljs-string">"test1"</span>, 
    <span class="hljs-string">"test2"</span>, 
    <span class="hljs-string">"test3"</span>, 
    <span class="hljs-string">"test4"</span>, 
    <span class="hljs-string">"test5"</span>, 
    <span class="hljs-string">"test6"</span>, 
    <span class="hljs-string">"test7"</span>, 
    <span class="hljs-string">"test8"</span>, 
    <span class="hljs-string">"test9"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"documents"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test0"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test0"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7C--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">0</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test1"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test1"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7G--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test2"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test2"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7G--B"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">2</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test3"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test3"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7G--D"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">3</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test4"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test4"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7K--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">4</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test5"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test5"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7K--B"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">5</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test6"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test6"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7K--D"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">6</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test7"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test7"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7K--F"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">7</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test8"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test8"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7O--_"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">8</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"test9"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"test/test9"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X7O--B"</span>, 
      <span class="hljs-string">"value"</span> : <span class="hljs-number">9</span> 
    } 
  ], 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleLookup_container_collapse" onclick="$('#RestSimpleLookup_long').hide(); $('#RestSimpleLookup_short').show(); window.location.hash='RestSimpleLookup_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleLookup_short" onclick="$('#RestSimpleLookup_short').hide(); $('#RestSimpleLookup_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"test0"</span>, 
    <span class="hljs-string">"test1"</span>, 
    <span class="hljs-string">"test2"</span>, 
    <span class="hljs-string">"test3"</span>, 
    <span class="hljs-string">"test4"</span>, 
    <span class="hljs-string">"test5"</span>, 
    <span class="hljs-string">"test6"</span>, 
    <span class="hljs-string">"test7"</span>, 
    <span class="hljs-string">"test8"</span>, 
    <span class="hljs-string">"test9"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Looking up non-existing documents


<div class="example-container" id="RestSimpleLookupNotFound_container">
<a class="anchorjs-link " href="#RestSimpleLookupNotFound_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleLookupNotFound_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"baz"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"documents"</span> : [ ], 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleLookupNotFound_container_collapse" onclick="$('#RestSimpleLookupNotFound_long').hide(); $('#RestSimpleLookupNotFound_short').show(); window.location.hash='RestSimpleLookupNotFound_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleLookupNotFound_short" onclick="$('#RestSimpleLookupNotFound_short').hide(); $('#RestSimpleLookupNotFound_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/lookup-by-keys &lt;&lt;EOF
{ 
  <span class="hljs-string">"keys"</span> : [ 
    <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"bar"</span>, 
    <span class="hljs-string">"baz"</span> 
  ], 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"test"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_replace_by_example.md -->
@startDocuBlock JSA_put_api_simple_replace_by_example

@brief replaces the body of all documents of a collection that match an example
@RESTHEADER{PUT /_api/simple/replace-by-example, Replace documents by example}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to replace within.

@RESTBODYPARAM{example,string,required,string}
An example document that all collection documents are compared against.

@RESTBODYPARAM{newValue,string,required,string}
The replacement document that will get inserted in place
of the "old" documents.

@RESTBODYPARAM{options,object,optional,put_api_simple_replace_by_example_options}
a json object which can contain following attributes

@RESTSTRUCT{waitForSync,put_api_simple_replace_by_example_options,boolean,optional,}
if set to true, then all removal operations will
 instantly be synchronized to disk. If this is not specified, then the
 collection's default sync behavior will be applied.

@RESTSTRUCT{limit,put_api_simple_replace_by_example_options,string,optional,string}
an optional value that determines how many documents to
replace at most. If *limit* is specified but is less than the number
of documents in the collection, it is undefined which of the documents
will be replaced.


@RESTDESCRIPTION

This will find all documents in the collection that match the specified
example object, and replace the entire document body with the new value
specified. Note that document meta-attributes such as *_id*, *_key*,
*_from*, *_to* etc. cannot be replaced.

Note: the *limit* attribute is not supported on sharded collections.
Using it will result in an error.

Returns the number of documents that were replaced.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES


<div class="example-container" id="RestSimpleReplaceByExample_container">
<a class="anchorjs-link " href="#RestSimpleReplaceByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleReplaceByExample_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span> 
  }, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"replaced"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleReplaceByExample_container_collapse" onclick="$('#RestSimpleReplaceByExample_long').hide(); $('#RestSimpleReplaceByExample_short').show(); window.location.hash='RestSimpleReplaceByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleReplaceByExample_short" onclick="$('#RestSimpleReplaceByExample_short').hide(); $('#RestSimpleReplaceByExample_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span> 
  }, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using new Signature for attributes WaitForSync and limit


<div class="example-container" id="RestSimpleReplaceByExampleWaitForSync_container">
<a class="anchorjs-link " href="#RestSimpleReplaceByExampleWaitForSync_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleReplaceByExampleWaitForSync_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span> 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"replaced"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleReplaceByExampleWaitForSync_container_collapse" onclick="$('#RestSimpleReplaceByExampleWaitForSync_long').hide(); $('#RestSimpleReplaceByExampleWaitForSync_short').show(); window.location.hash='RestSimpleReplaceByExampleWaitForSync_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleReplaceByExampleWaitForSync_short" onclick="$('#RestSimpleReplaceByExampleWaitForSync_short').hide(); $('#RestSimpleReplaceByExampleWaitForSync_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/replace-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"foo"</span> : <span class="hljs-string">"bar"</span> 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_update_by_example.md -->
@startDocuBlock JSA_put_api_simple_update_by_example

@brief partially updates the body of all documents of a collection that match an example
@RESTHEADER{PUT /_api/simple/update-by-example, Update documents by example}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to update within.

@RESTBODYPARAM{example,string,required,string}
An example document that all collection documents are compared against.

@RESTBODYPARAM{newValue,object,required,}
A document containing all the attributes to update in the found documents.

@RESTBODYPARAM{options,object,optional,put_api_simple_update_by_example_options}
a json object which can contains following attributes:

@RESTSTRUCT{keepNull,put_api_simple_update_by_example_options,boolean,optional,}
This parameter can be used to modify the behavior when
handling *null* values. Normally, *null* values are stored in the
database. By setting the *keepNull* parameter to *false*, this
behavior can be changed so that all attributes in *data* with *null*
values will be removed from the updated document.

@RESTSTRUCT{waitForSync,put_api_simple_update_by_example_options,boolean,optional,}
if set to true, then all removal operations will
instantly be synchronized to disk. If this is not specified, then the
collection's default sync behavior will be applied.

@RESTSTRUCT{limit,put_api_simple_update_by_example_options,integer,optional,int64}
an optional value that determines how many documents to
update at most. If *limit* is specified but is less than the number
of documents in the collection, it is undefined which of the documents
will be updated.

@RESTSTRUCT{mergeObjects,put_api_simple_update_by_example_options,boolean,optional,}
Controls whether objects (not arrays) will be merged if present in both the
existing and the patch document. If set to false, the value in the
patch document will overwrite the existing document's value. If set to
true, objects will be merged. The default is true.

@RESTDESCRIPTION

This will find all documents in the collection that match the specified
example object, and partially update the document body with the new value
specified. Note that document meta-attributes such as *_id*, *_key*,
*_from*, *_to* etc. cannot be replaced.

Note: the *limit* attribute is not supported on sharded collections.
Using it will result in an error.

Returns the number of documents that were updated.


@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the collection was updated successfully and *waitForSync* was
*true*.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

using old syntax for options


<div class="example-container" id="RestSimpleUpdateByExample_container">
<a class="anchorjs-link " href="#RestSimpleUpdateByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleUpdateByExample_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleUpdateByExample_container_collapse" onclick="$('#RestSimpleUpdateByExample_long').hide(); $('#RestSimpleUpdateByExample_short').show(); window.location.hash='RestSimpleUpdateByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleUpdateByExample_short" onclick="$('#RestSimpleUpdateByExample_short').hide(); $('#RestSimpleUpdateByExample_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





using new signature for options


<div class="example-container" id="RestSimpleUpdateByExample_1_container">
<a class="anchorjs-link " href="#RestSimpleUpdateByExample_1_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleUpdateByExample_1_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestSimpleUpdateByExample_1_container_collapse" onclick="$('#RestSimpleUpdateByExample_1_long').hide(); $('#RestSimpleUpdateByExample_1_short').show(); window.location.hash='RestSimpleUpdateByExample_1_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleUpdateByExample_1_short" onclick="$('#RestSimpleUpdateByExample_1_short').hide(); $('#RestSimpleUpdateByExample_1_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/update-by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  }, 
  <span class="hljs-string">"newValue"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">22</span> 
    } 
  }, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"limit"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Simple Queries/JSA_put_api_simple_by_example.md -->
@startDocuBlock JSA_put_api_simple_by_example

@brief returns all documents of a collection matching a given example

@RESTHEADER{PUT /_api/simple/by-example, Simple query by-example}

@HINTS
{% hint 'warning' %}
Till ArangoDB versions 3.2.13 and 3.3.7 this API is quite expensive.
A more lightweight alternative is to use the [HTTP Cursor API](../AqlQueryCursor/README.md).
Starting from versions 3.2.14 and 3.3.8 this performance impact is not
an issue anymore, as the internal implementation of the API has changed.
{% endhint %}

@RESTBODYPARAM{collection,string,required,string}
The name of the collection to query.

@RESTBODYPARAM{example,string,required,string}
The example document.

@RESTBODYPARAM{skip,string,required,string}
The number of documents to skip in the query (optional).

@RESTBODYPARAM{limit,string,required,string}
The maximal amount of documents to return. The *skip*
is applied before the *limit* restriction. (optional)

@RESTBODYPARAM{batchSize,integer,optional,int64}
maximum number of result documents to be transferred from
the server to the client in one roundtrip. If this attribute is
not set, a server-controlled default value will be used. A *batchSize* value of
*0* is disallowed.

@RESTDESCRIPTION

This will find all documents matching a given example.

Returns a cursor containing the result, see [HTTP Cursor](../AqlQueryCursor/README.md) for details.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the query was executed successfully.

@RESTRETURNCODE{400}
is returned if the body does not contain a valid JSON representation of a
query. The response body contains an error document in this case.

@RESTRETURNCODE{404}
is returned if the collection specified by *collection* is unknown.  The
response body contains an error document in this case.

@EXAMPLES

Matching an attribute


<div class="example-container" id="RestSimpleByExample_container">
<a class="anchorjs-link " href="#RestSimpleByExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleByExample_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11446"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11446"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xzy--_"</span>, 
      <span class="hljs-string">"a"</span> : { 
        <span class="hljs-string">"k"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"j"</span> : <span class="hljs-number">2</span> 
      }, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11440"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11440"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xzu--B"</span>, 
      <span class="hljs-string">"a"</span> : { 
        <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11443"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11443"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xzu--D"</span>, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11436"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11436"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Xzu--_"</span>, 
      <span class="hljs-string">"a"</span> : { 
        <span class="hljs-string">"k"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">4</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.00018739700317382812</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleByExample_container_collapse" onclick="$('#RestSimpleByExample_long').hide(); $('#RestSimpleByExample_short').show(); window.location.hash='RestSimpleByExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleByExample_short" onclick="$('#RestSimpleByExample_short').hide(); $('#RestSimpleByExample_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Matching an attribute which is a sub-document


<div class="example-container" id="RestSimpleByExample2_container">
<a class="anchorjs-link " href="#RestSimpleByExample2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleByExample2_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a.j"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11458"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11458"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X0y--B"</span>, 
      <span class="hljs-string">"a"</span> : { 
        <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11454"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11454"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X0y--_"</span>, 
      <span class="hljs-string">"a"</span> : { 
        <span class="hljs-string">"k"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">2</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.0002002716064453125</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleByExample2_container_collapse" onclick="$('#RestSimpleByExample2_long').hide(); $('#RestSimpleByExample2_short').show(); window.location.hash='RestSimpleByExample2_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleByExample2_short" onclick="$('#RestSimpleByExample2_short').hide(); $('#RestSimpleByExample2_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a.j"</span> : <span class="hljs-number">1</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Matching an attribute within a sub-document


<div class="example-container" id="RestSimpleByExample3_container">
<a class="anchorjs-link " href="#RestSimpleByExample3_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestSimpleByExample3_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"result"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"11476"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"products/11476"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7X12--_"</span>, 
      <span class="hljs-string">"a"</span> : { 
        <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
      }, 
      <span class="hljs-string">"i"</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">"hasMore"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"count"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"cached"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"extra"</span> : { 
    <span class="hljs-string">"stats"</span> : { 
      <span class="hljs-string">"writesExecuted"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"writesIgnored"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"scannedFull"</span> : <span class="hljs-number">4</span>, 
      <span class="hljs-string">"scannedIndex"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"filtered"</span> : <span class="hljs-number">3</span>, 
      <span class="hljs-string">"httpRequests"</span> : <span class="hljs-number">0</span>, 
      <span class="hljs-string">"executionTime"</span> : <span class="hljs-number">0.0001556873321533203</span> 
    }, 
    <span class="hljs-string">"warnings"</span> : [ ] 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
<div id="RestSimpleByExample3_container_collapse" onclick="$('#RestSimpleByExample3_long').hide(); $('#RestSimpleByExample3_short').show(); window.location.hash='RestSimpleByExample3_container';" class="example_show_button">Hide response body</div></div>
<div id="RestSimpleByExample3_short" onclick="$('#RestSimpleByExample3_short').hide(); $('#RestSimpleByExample3_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/simple/by-example &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
  <span class="hljs-string">"example"</span> : { 
    <span class="hljs-string">"a"</span> : { 
      <span class="hljs-string">"j"</span> : <span class="hljs-number">1</span> 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryCacheProperties.md -->
@startDocuBlock GetApiQueryCacheProperties

@brief returns the global configuration for the AQL query cache

@RESTHEADER{GET /_api/query-cache/properties, Returns the global properties for the AQL query cache}

@RESTDESCRIPTION
Returns the global AQL query cache configuration. The configuration is a
JSON object with the following properties:

- *mode*: the mode the AQL query cache operates in. The mode is one of the following
  values: *off*, *on* or *demand*.

- *maxResults*: the maximum number of query results that will be stored per database-specific
  cache.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the properties can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/DeleteApiQueryCache.md -->
@startDocuBlock DeleteApiQueryCache

@brief clears the AQL query cache

@RESTHEADER{DELETE /_api/query-cache, Clears any results in the AQL query cache}

@RESTDESCRIPTION
clears the query cache
@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* when the cache was cleared
successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQuerySlow.md -->
@startDocuBlock GetApiQuerySlow

@brief returns a list of slow running AQL queries

@RESTHEADER{GET /_api/query/slow, Returns the list of slow AQL queries}

@RESTDESCRIPTION
Returns an array containing the last AQL queries that are finished and
have exceeded the slow query threshold in the selected database.
The maximum amount of queries in the list can be controlled by setting
the query tracking property `maxSlowQueries`. The threshold for treating
a query as *slow* can be adjusted by setting the query tracking property
`slowQueryThreshold`.

Each query is a JSON object with the following attributes:

- *id*: the query's id

- *query*: the query string (potentially truncated)

- *bindVars*: the bind parameter values used by the query

- *started*: the date and time when the query was started

- *runTime*: the query's total run time 

- *state*: the query's current execution state (will always be "finished"
  for the list of slow queries)

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the list of queries can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/PutApiQueryCacheProperties.md -->
@startDocuBlock PutApiQueryCacheProperties

@brief changes the configuration for the AQL query cache

@RESTHEADER{PUT /_api/query-cache/properties, Globally adjusts the AQL query result cache properties}

@RESTDESCRIPTION
After the properties have been changed, the current set of properties will
be returned in the HTTP response.

Note: changing the properties may invalidate all results in the cache.
The global properties for AQL query cache.
The properties need to be passed in the attribute *properties* in the body
of the HTTP request. *properties* needs to be a JSON object with the following
properties:

@RESTBODYPARAM{mode,string,required,string}
 the mode the AQL query cache should operate in. Possible values are *off*, *on* or *demand*.

@RESTBODYPARAM{maxResults,integer,required,int64}
the maximum number of query results that will be stored per database-specific cache.


@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the properties were changed successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/JSF_post_api_aqlfunction.md -->
@startDocuBlock JSF_post_api_aqlfunction

@brief create a new AQL user function

@RESTHEADER{POST /_api/aqlfunction, Create AQL user function}

@RESTBODYPARAM{name,string,required,string}
the fully qualified name of the user functions.

@RESTBODYPARAM{code,string,required,string}
a string representation of the function body.

@RESTBODYPARAM{isDeterministic,boolean,optional,}
an optional boolean value to indicate that the function
results are fully deterministic (function return value solely depends on
the input value and return value is the same for repeated calls with same
input). The *isDeterministic* attribute is currently not used but may be
used later for optimisations.

@RESTDESCRIPTION

In case of success, the returned JSON object has the following properties:

- *error*: boolean flag to indicate that an error occurred (*false*
  in this case)

- *code*: the HTTP status code

The body of the response will contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the function already existed and was replaced by the
call, the server will respond with *HTTP 200*.

@RESTRETURNCODE{201}
If the function can be registered by the server, the server will respond with
*HTTP 201*.

@RESTRETURNCODE{400}
If the JSON representation is malformed or mandatory data is missing from the
request, the server will respond with *HTTP 400*.

@EXAMPLES


<div class="example-container" id="RestAqlfunctionCreate_container">
<a class="anchorjs-link " href="#RestAqlfunctionCreate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestAqlfunctionCreate_long">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/aqlfunction &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"myfunctions::temperature::celsiustofahrenheit"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-string">"function (celsius) { return celsius * 1.8 + 32; }"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span> 
}
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/JSF_delete_api_aqlfunction.md -->
@startDocuBlock JSF_delete_api_aqlfunction

@brief remove an existing AQL user function

@RESTHEADER{DELETE /_api/aqlfunction/{name}, Remove existing AQL user function}

@RESTURLPARAMETERS

@RESTURLPARAM{name,string,required}
the name of the AQL user function.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{group,string,optional}
If set to *true*, then the function name provided in *name* is treated as
a namespace prefix, and all functions in the specified namespace will be deleted.
If set to *false*, the function name provided in *name* must be fully
qualified, including any namespaces.

@RESTDESCRIPTION
Removes an existing AQL user function, identified by *name*.

In case of success, the returned JSON object has the following properties:

- *error*: boolean flag to indicate that an error occurred (*false*
  in this case)

- *code*: the HTTP status code

The body of the response will contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the function can be removed by the server, the server will respond with
*HTTP 200*.

@RESTRETURNCODE{400}
If the user function name is malformed, the server will respond with *HTTP 400*.

@RESTRETURNCODE{404}
If the specified user user function does not exist, the server will respond with *HTTP 404*.

@EXAMPLES

deletes a function:


<div class="example-container" id="RestAqlfunctionDelete_container">
<a class="anchorjs-link " href="#RestAqlfunctionDelete_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestAqlfunctionDelete_long">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/aqlfunction/square::x::y

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
</div>
</div>






function not found:


<div class="example-container" id="RestAqlfunctionDeleteFails_container">
<a class="anchorjs-link " href="#RestAqlfunctionDeleteFails_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestAqlfunctionDeleteFails_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/aqlfunction/myfunction::x::y

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1582</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"user function '%s()' not found"</span> 
}
</pre>
<div id="RestAqlfunctionDeleteFails_container_collapse" onclick="$('#RestAqlfunctionDeleteFails_long').hide(); $('#RestAqlfunctionDeleteFails_short').show(); window.location.hash='RestAqlfunctionDeleteFails_container';" class="example_show_button">Hide response body</div></div>
<div id="RestAqlfunctionDeleteFails_short" onclick="$('#RestAqlfunctionDeleteFails_short').hide(); $('#RestAqlfunctionDeleteFails_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/aqlfunction/myfunction::x::y

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryCurrent.md -->
@startDocuBlock GetApiQueryCurrent

@brief returns a list of currently running AQL queries

@RESTHEADER{GET /_api/query/current, Returns the currently running AQL queries}

@RESTDESCRIPTION
Returns an array containing the AQL queries currently running in the selected
database. Each query is a JSON object with the following attributes:

- *id*: the query's id

- *query*: the query string (potentially truncated)

- *bindVars*: the bind parameter values used by the query

- *started*: the date and time when the query was started

- *runTime*: the query's run time up to the point the list of queries was
  queried

- *state*: the query's current execution state (as a string)

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned when the list of queries can be retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/DeleteApiQuerySlow.md -->
@startDocuBlock DeleteApiQuerySlow

@brief clears the list of slow AQL queries

@RESTHEADER{DELETE /_api/query/slow, Clears the list of slow AQL queries}

@RESTDESCRIPTION
Clears the list of slow AQL queries

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* when the list of queries was
cleared successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/PostApiQueryProperties.md -->
@startDocuBlock PostApiQueryProperties

@brief parse an AQL query and return information about it

@RESTHEADER{POST /_api/query, Parse an AQL query}

@RESTDESCRIPTION
This endpoint is for query validation only. To actually query the database,
see `/api/cursor`.

@RESTBODYPARAM{query,string,required,string}
To validate a query string without executing it, the query string can be
passed to the server via an HTTP POST request.

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the query is valid, the server will respond with *HTTP 200* and
return the names of the bind parameters it found in the query (if any) in
the *bindVars* attribute of the response. It will also return an array
of the collections used in the query in the *collections* attribute.
If a query can be parsed successfully, the *ast* attribute of the returned
JSON will contain the abstract syntax tree representation of the query.
The format of the *ast* is subject to change in future versions of
ArangoDB, but it can be used to inspect how ArangoDB interprets a given
query. Note that the abstract syntax tree will be returned without any
optimizations applied to it.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,
or if the query contains a parse error. The body of the response will
contain the error details embedded in a JSON object.

@EXAMPLES

a Valid query


<div class="example-container" id="RestQueryValid_container">
<a class="anchorjs-link " href="#RestQueryValid_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestQueryValid_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/query &lt;&lt;EOF
{ "query" : "FOR p IN products FILTER p.name == @name LIMIT 2 RETURN p.n" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"parsed"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"collections"</span> : [ 
    <span class="hljs-string">"products"</span> 
  ], 
  <span class="hljs-string">"bindVars"</span> : [ 
    <span class="hljs-string">"name"</span> 
  ], 
  <span class="hljs-string">"ast"</span> : [ 
    { 
      <span class="hljs-string">"type"</span> : <span class="hljs-string">"root"</span>, 
      <span class="hljs-string">"subNodes"</span> : [ 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"for"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"variable"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"collection"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"filter"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                      <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                    } 
                  ] 
                }, 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"parameter"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
                } 
              ] 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"limit"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">0</span> 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">2</span> 
            } 
          ] 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"return"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"n"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                  <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            } 
          ] 
        } 
      ] 
    } 
  ] 
}
</pre>
<div id="RestQueryValid_container_collapse" onclick="$('#RestQueryValid_long').hide(); $('#RestQueryValid_short').show(); window.location.hash='RestQueryValid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestQueryValid_short" onclick="$('#RestQueryValid_short').hide(); $('#RestQueryValid_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/query &lt;&lt;EOF
{ "query" : "FOR p IN products FILTER p.name == @name LIMIT 2 RETURN p.n" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





an Invalid query


<div class="example-container" id="RestQueryInvalid_container">
<a class="anchorjs-link " href="#RestQueryInvalid_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestQueryInvalid_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/query &lt;&lt;EOF
{ "query" : "FOR p IN products FILTER p.name = @name LIMIT 2 RETURN p.n" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"syntax error, unexpected assignment near '= @name LIMIT 2 RETURN p.n' at position 1:33"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1501</span> 
}
</pre>
<div id="RestQueryInvalid_container_collapse" onclick="$('#RestQueryInvalid_long').hide(); $('#RestQueryInvalid_short').show(); window.location.hash='RestQueryInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestQueryInvalid_short" onclick="$('#RestQueryInvalid_short').hide(); $('#RestQueryInvalid_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/query &lt;&lt;EOF
{ "query" : "FOR p IN products FILTER p.name = @name LIMIT 2 RETURN p.n" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/JSF_post_api_explain.md -->
@startDocuBlock JSF_post_api_explain

@brief explain an AQL query and return information about it

@RESTHEADER{POST /_api/explain, Explain an AQL query}

A JSON object describing the query and query parameters.

@RESTBODYPARAM{query,string,required,string}
the query which you want explained; If the query references any bind variables,
these must also be passed in the attribute *bindVars*. Additional
options for the query can be passed in the *options* attribute.

@RESTBODYPARAM{bindVars,array,optional,object}
key/value pairs representing the bind parameters.

@RESTBODYPARAM{options,object,optional,explain_options}
Options for the query

@RESTSTRUCT{allPlans,explain_options,boolean,optional,}
if set to *true*, all possible execution plans will be returned.
The default is *false*, meaning only the optimal plan will be returned.

@RESTSTRUCT{maxNumberOfPlans,explain_options,integer,optional,int64}
an optional maximum number of plans that the optimizer is 
allowed to generate. Setting this attribute to a low value allows to put a
cap on the amount of work the optimizer does.

@RESTSTRUCT{optimizer.rules,explain_options,array,optional,string}
an array of to-be-included or to-be-excluded optimizer rules
can be put into this attribute, telling the optimizer to include or exclude
specific rules. To disable a rule, prefix its name with a `-`, to enable a rule, prefix it
with a `+`. There is also a pseudo-rule `all`, which will match all optimizer rules.

@RESTDESCRIPTION

To explain how an AQL query would be executed on the server, the query string
can be sent to the server via an HTTP POST request. The server will then validate
the query and create an execution plan for it. The execution plan will be
returned, but the query will not be executed.

The execution plan that is returned by the server can be used to estimate the
probable performance of the query. Though the actual performance will depend
on many different factors, the execution plan normally can provide some rough
estimates on the amount of work the server needs to do in order to actually run 
the query.

By default, the explain operation will return the optimal plan as chosen by
the query optimizer The optimal plan is the plan with the lowest total estimated
cost. The plan will be returned in the attribute *plan* of the response object.
If the option *allPlans* is specified in the request, the result will contain 
all plans created by the optimizer. The plans will then be returned in the 
attribute *plans*.

The result will also contain an attribute *warnings*, which is an array of 
warnings that occurred during optimization or execution plan creation. Additionally,
a *stats* attribute is contained in the result with some optimizer statistics.
If *allPlans* is set to *false*, the result will contain an attribute *cacheable* 
that states whether the query results can be cached on the server if the query
result cache were used. The *cacheable* attribute is not present when *allPlans*
is set to *true*.

Each plan in the result is a JSON object with the following attributes:
- *nodes*: the array of execution nodes of the plan. The array of available node types
  can be found [here](../../AQL/ExecutionAndPerformance/Optimizer.html)

- *estimatedCost*: the total estimated cost for the plan. If there are multiple
  plans, the optimizer will choose the plan with the lowest total cost.

- *collections*: an array of collections used in the query

- *rules*: an array of rules the optimizer applied. An overview of the
  available rules can be found [here](../../AQL/ExecutionAndPerformance/Optimizer.html)

- *variables*: array of variables used in the query (note: this may contain
  internal variables created by the optimizer)

@RESTRETURNCODES

@RESTRETURNCODE{200}
If the query is valid, the server will respond with *HTTP 200* and
return the optimal execution plan in the *plan* attribute of the response.
If option *allPlans* was set in the request, an array of plans will be returned
in the *allPlans* attribute instead.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,
or if the query contains a parse error. The body of the response will
contain the error details embedded in a JSON object.
Omitting bind variables if the query references any will also result
in an *HTTP 400* error.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* in case a non-existing collection is
accessed in the query.

@EXAMPLES

Valid query


<div class="example-container" id="RestExplainValid_container">
<a class="anchorjs-link " href="#RestExplainValid_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainValid_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products RETURN p"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateCollectionNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">12</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
        <span class="hljs-string">"random"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">22</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">22</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainValid_container_collapse" onclick="$('#RestExplainValid_long').hide(); $('#RestExplainValid_short').show(); window.location.hash='RestExplainValid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainValid_short" onclick="$('#RestExplainValid_short').hide(); $('#RestExplainValid_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products RETURN p"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





A plan with some optimizer rules applied


<div class="example-container" id="RestExplainOptimizerRules_container">
<a class="anchorjs-link " href="#RestExplainOptimizerRules_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainOptimizerRules_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">11</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">4.321928094887362</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
        <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
        }, 
        <span class="hljs-string">"projections"</span> : [ ], 
        <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"10874"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"id"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"condition"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
                  <span class="hljs-string">"subNodes"</span> : [ 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                      <span class="hljs-string">"name"</span> : <span class="hljs-string">"id"</span>, 
                      <span class="hljs-string">"subNodes"</span> : [ 
                        { 
                          <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                          <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                        } 
                      ] 
                    }, 
                    { 
                      <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                      <span class="hljs-string">"value"</span> : <span class="hljs-number">4</span> 
                    } 
                  ] 
                } 
              ] 
            } 
          ] 
        }, 
        <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">11</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">5.321928094887362</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"id"</span>, 
              <span class="hljs-string">"subNodes"</span> : [ 
                { 
                  <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                  <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                  <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                } 
              ] 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">4</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"simple"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"FilterNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">6.321928094887362</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        } 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"LimitNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">5</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">9</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">7.321928094887362</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"offset"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"limit"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"fullCount"</span> : <span class="hljs-literal">false</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">9</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">8.321928094887362</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
              <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
              <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">6</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">9.321928094887362</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"move-calculations-up"</span>, 
      <span class="hljs-string">"remove-redundant-calculations"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations"</span>, 
      <span class="hljs-string">"move-calculations-up-2"</span>, 
      <span class="hljs-string">"use-indexes"</span>, 
      <span class="hljs-string">"use-index-for-sort"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations-2"</span>, 
      <span class="hljs-string">"move-calculations-down"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ 
      { 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
      } 
    ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"a"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">9.321928094887362</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainOptimizerRules_container_collapse" onclick="$('#RestExplainOptimizerRules_long').hide(); $('#RestExplainOptimizerRules_short').show(); window.location.hash='RestExplainOptimizerRules_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainOptimizerRules_short" onclick="$('#RestExplainOptimizerRules_short').hide(); $('#RestExplainOptimizerRules_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using some options


<div class="example-container" id="RestExplainOptions_container">
<a class="anchorjs-link " href="#RestExplainOptions_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainOptions_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name"</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"maxNumberOfPlans"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"allPlans"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"optimizer"</span> : { 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"-all"</span>, 
        <span class="hljs-string">"+use-index-for-sort"</span>, 
        <span class="hljs-string">"+use-index-range"</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"plans"</span> : [ 
    { 
      <span class="hljs-string">"nodes"</span> : [ 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">11</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">11</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
          <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
          }, 
          <span class="hljs-string">"projections"</span> : [ ], 
          <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"indexes"</span> : [ 
            { 
              <span class="hljs-string">"id"</span> : <span class="hljs-string">"10913"</span>, 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
              <span class="hljs-string">"fields"</span> : [ 
                <span class="hljs-string">"id"</span> 
              ], 
              <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
            } 
          ], 
          <span class="hljs-string">"condition"</span> : { 
          }, 
          <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">11</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">21</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"expression"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"id"</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"a"</span> 
          }, 
          <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">3</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">31</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"expression"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                <span class="hljs-string">"name"</span> : <span class="hljs-string">"a"</span>, 
                <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span> 
              }, 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                <span class="hljs-string">"value"</span> : <span class="hljs-number">4</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
          }, 
          <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"simple"</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"FilterNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">4</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">41</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"inVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
          } 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">5</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">51</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"expression"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
          }, 
          <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">6</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">7</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">61</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"expression"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"id"</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
              } 
            ] 
          }, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
          }, 
          <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"attribute"</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"LimitNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">7</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">9</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">62</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"offset"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"limit"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"fullCount"</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">9</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">10</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">63</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"inVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
          } 
        } 
      ], 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"use-index-for-sort"</span> 
      ], 
      <span class="hljs-string">"collections"</span> : [ 
        { 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
        } 
      ], 
      <span class="hljs-string">"variables"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"5"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"name"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"a"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
        } 
      ], 
      <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">63</span>, 
      <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
    } 
  ], 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">29</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainOptions_container_collapse" onclick="$('#RestExplainOptions_long').hide(); $('#RestExplainOptions_short').show(); window.location.hash='RestExplainOptions_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainOptions_short" onclick="$('#RestExplainOptions_short').hide(); $('#RestExplainOptions_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products LET a = p.id FILTER a == 4 LET name = p.name SORT p.id LIMIT 1 RETURN name"</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"maxNumberOfPlans"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"allPlans"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"optimizer"</span> : { 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"-all"</span>, 
        <span class="hljs-string">"+use-index-for-sort"</span>, 
        <span class="hljs-string">"+use-index-range"</span> 
      ] 
    } 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Returning all plans


<div class="example-container" id="RestExplainAllPlans_container">
<a class="anchorjs-link " href="#RestExplainAllPlans_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainAllPlans_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products FILTER p.id == 25 RETURN p"</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"allPlans"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"plans"</span> : [ 
    { 
      <span class="hljs-string">"nodes"</span> : [ 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"IndexNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">1</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1.99</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"products"</span>, 
          <span class="hljs-string">"satellite"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"outVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
          }, 
          <span class="hljs-string">"projections"</span> : [ ], 
          <span class="hljs-string">"producesResult"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"indexes"</span> : [ 
            { 
              <span class="hljs-string">"id"</span> : <span class="hljs-string">"10857"</span>, 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
              <span class="hljs-string">"fields"</span> : [ 
                <span class="hljs-string">"id"</span> 
              ], 
              <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
              <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
              <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
            } 
          ], 
          <span class="hljs-string">"condition"</span> : { 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary or"</span>, 
            <span class="hljs-string">"subNodes"</span> : [ 
              { 
                <span class="hljs-string">"type"</span> : <span class="hljs-string">"n-ary and"</span>, 
                <span class="hljs-string">"subNodes"</span> : [ 
                  { 
                    <span class="hljs-string">"type"</span> : <span class="hljs-string">"compare =="</span>, 
                    <span class="hljs-string">"subNodes"</span> : [ 
                      { 
                        <span class="hljs-string">"type"</span> : <span class="hljs-string">"attribute access"</span>, 
                        <span class="hljs-string">"name"</span> : <span class="hljs-string">"id"</span>, 
                        <span class="hljs-string">"subNodes"</span> : [ 
                          { 
                            <span class="hljs-string">"type"</span> : <span class="hljs-string">"reference"</span>, 
                            <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span>, 
                            <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span> 
                          } 
                        ] 
                      }, 
                      { 
                        <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
                        <span class="hljs-string">"value"</span> : <span class="hljs-number">25</span> 
                      } 
                    ] 
                  } 
                ] 
              } 
            ] 
          }, 
          <span class="hljs-string">"reverse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"needsGatherNodeSort"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"indexCoversProjections"</span> : <span class="hljs-literal">false</span> 
        }, 
        { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
          <span class="hljs-string">"dependencies"</span> : [ 
            <span class="hljs-number">6</span> 
          ], 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
          <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2.99</span>, 
          <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"inVariable"</span> : { 
            <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
            <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
          } 
        } 
      ], 
      <span class="hljs-string">"rules"</span> : [ 
        <span class="hljs-string">"use-indexes"</span>, 
        <span class="hljs-string">"remove-filter-covered-by-index"</span>, 
        <span class="hljs-string">"remove-unnecessary-calculations-2"</span> 
      ], 
      <span class="hljs-string">"collections"</span> : [ 
        { 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"products"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"read"</span> 
        } 
      ], 
      <span class="hljs-string">"variables"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"p"</span> 
        } 
      ], 
      <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2.99</span>, 
      <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
    } 
  ], 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainAllPlans_container_collapse" onclick="$('#RestExplainAllPlans_long').hide(); $('#RestExplainAllPlans_short').show(); window.location.hash='RestExplainAllPlans_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainAllPlans_short" onclick="$('#RestExplainAllPlans_short').hide(); $('#RestExplainAllPlans_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products FILTER p.id == 25 RETURN p"</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"allPlans"</span> : <span class="hljs-literal">true</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





A query that produces a warning


<div class="example-container" id="RestExplainWarning_container">
<a class="anchorjs-link " href="#RestExplainWarning_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainWarning_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..10 RETURN 1 / 0"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"range"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">1</span> 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">10</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"simple"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
          <span class="hljs-string">"value"</span> : <span class="hljs-literal">null</span> 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"json"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateListNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">4</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">13</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        } 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">5</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">23</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"move-calculations-up"</span>, 
      <span class="hljs-string">"move-calculations-up-2"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">23</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">10</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"warnings"</span> : [ 
    { 
      <span class="hljs-string">"code"</span> : <span class="hljs-number">1562</span>, 
      <span class="hljs-string">"message"</span> : <span class="hljs-string">"division by zero"</span> 
    } 
  ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainWarning_container_collapse" onclick="$('#RestExplainWarning_long').hide(); $('#RestExplainWarning_short').show(); window.location.hash='RestExplainWarning_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainWarning_short" onclick="$('#RestExplainWarning_short').hide(); $('#RestExplainWarning_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR i IN 1..10 RETURN 1 / 0"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Invalid query (missing bind parameter)


<div class="example-container" id="RestExplainInvalid_container">
<a class="anchorjs-link " href="#RestExplainInvalid_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainInvalid_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products FILTER p.id == @id LIMIT 2 RETURN p.n"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"no value specified for declared bind parameter 'id' (while parsing)"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1551</span> 
}
</pre>
<div id="RestExplainInvalid_container_collapse" onclick="$('#RestExplainInvalid_long').hide(); $('#RestExplainInvalid_short').show(); window.location.hash='RestExplainInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainInvalid_short" onclick="$('#RestExplainInvalid_short').hide(); $('#RestExplainInvalid_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ 
  <span class="hljs-string">"query"</span> : <span class="hljs-string">"FOR p IN products FILTER p.id == @id LIMIT 2 RETURN p.n"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





The data returned in the **plan** attribute of the result contains one element per AQL top-level statement
(i.e. `FOR`, `RETURN`, `FILTER` etc.). If the query optimizer removed some unnecessary statements,
the result might also contain less elements than there were top-level statements in the AQL query.

The following example shows a query with a non-sensible filter condition that
the optimizer has removed so that there are less top-level statements.


<div class="example-container" id="RestExplainEmpty_container">
<a class="anchorjs-link " href="#RestExplainEmpty_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestExplainEmpty_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ "query" : "FOR i IN [ 1, 2, 3 ] FILTER 1 == 2 RETURN i" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"plan"</span> : { 
    <span class="hljs-string">"nodes"</span> : [ 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"SingletonNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"CalculationNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">1</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"expression"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"array"</span>, 
          <span class="hljs-string">"subNodes"</span> : [ 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">1</span> 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">2</span> 
            }, 
            { 
              <span class="hljs-string">"type"</span> : <span class="hljs-string">"value"</span>, 
              <span class="hljs-string">"value"</span> : <span class="hljs-number">3</span> 
            } 
          ] 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"canThrow"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"expressionType"</span> : <span class="hljs-string">"json"</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"NoResultsNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">2</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">7</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">0.5</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">0</span> 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"EnumerateListNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">7</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">0.5</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
        }, 
        <span class="hljs-string">"outVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        } 
      }, 
      { 
        <span class="hljs-string">"type"</span> : <span class="hljs-string">"ReturnNode"</span>, 
        <span class="hljs-string">"dependencies"</span> : [ 
          <span class="hljs-number">3</span> 
        ], 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">0.5</span>, 
        <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"inVariable"</span> : { 
          <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
          <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
        } 
      } 
    ], 
    <span class="hljs-string">"rules"</span> : [ 
      <span class="hljs-string">"move-calculations-up"</span>, 
      <span class="hljs-string">"move-filters-up"</span>, 
      <span class="hljs-string">"remove-unnecessary-filters"</span>, 
      <span class="hljs-string">"remove-unnecessary-calculations"</span> 
    ], 
    <span class="hljs-string">"collections"</span> : [ ], 
    <span class="hljs-string">"variables"</span> : [ 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">4</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"3"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"1"</span> 
      }, 
      { 
        <span class="hljs-string">"id"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"i"</span> 
      } 
    ], 
    <span class="hljs-string">"estimatedCost"</span> : <span class="hljs-number">0.5</span>, 
    <span class="hljs-string">"estimatedNrItems"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"initialize"</span> : <span class="hljs-literal">true</span> 
  }, 
  <span class="hljs-string">"cacheable"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"warnings"</span> : [ ], 
  <span class="hljs-string">"stats"</span> : { 
    <span class="hljs-string">"rulesExecuted"</span> : <span class="hljs-number">30</span>, 
    <span class="hljs-string">"rulesSkipped"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"plansCreated"</span> : <span class="hljs-number">1</span> 
  }, 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="RestExplainEmpty_container_collapse" onclick="$('#RestExplainEmpty_long').hide(); $('#RestExplainEmpty_short').show(); window.location.hash='RestExplainEmpty_container';" class="example_show_button">Hide response body</div></div>
<div id="RestExplainEmpty_short" onclick="$('#RestExplainEmpty_short').hide(); $('#RestExplainEmpty_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/explain &lt;&lt;EOF
{ "query" : "FOR i IN [ 1, 2, 3 ] FILTER 1 == 2 RETURN i" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/GetApiQueryProperties.md -->
@startDocuBlock GetApiQueryProperties

@brief returns the configuration for the AQL query tracking

@RESTHEADER{GET /_api/query/properties, Returns the properties for the AQL query tracking}

@RESTDESCRIPTION
Returns the current query tracking configuration. The configuration is a
JSON object with the following properties:

- *enabled*: if set to *true*, then queries will be tracked. If set to
  *false*, neither queries nor slow queries will be tracked.

- *trackSlowQueries*: if set to *true*, then slow queries will be tracked
  in the list of slow queries if their runtime exceeds the value set in 
  *slowQueryThreshold*. In order for slow queries to be tracked, the *enabled*
  property must also be set to *true*.

- *trackBindVars*: if set to *true*, then bind variables used in queries will 
  be tracked.

- *maxSlowQueries*: the maximum number of slow queries to keep in the list
  of slow queries. If the list of slow queries is full, the oldest entry in
  it will be discarded when additional slow queries occur.

- *slowQueryThreshold*: the threshold value for treating a query as slow. A
  query with a runtime greater or equal to this threshold value will be
  put into the list of slow queries when slow query tracking is enabled.
  The value for *slowQueryThreshold* is specified in seconds.

- *maxQueryStringLength*: the maximum query string length to keep in the
  list of queries. Query strings can have arbitrary lengths, and this property
  can be used to save memory in case very long query strings are used. The
  value is specified in bytes.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if properties were retrieved successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/JSF_get_api_aqlfunction.md -->
@startDocuBlock JSF_get_api_aqlfunction

@brief gets all reqistered AQL user functions

@RESTHEADER{GET /_api/aqlfunction, Return registered AQL user functions}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{namespace,string,optional}
Returns all registered AQL user functions from namespace *namespace*.

@RESTDESCRIPTION
Returns all registered AQL user functions.

The call will return a JSON array with all user functions found. Each user
function will at least have the following attributes:

- *name*: The fully qualified name of the user function

- *code*: A string representation of the function body

@RESTRETURNCODES

@RESTRETURNCODE{200}
if success *HTTP 200* is returned.

@EXAMPLES


<div class="example-container" id="RestAqlfunctionsGetAll_container">
<a class="anchorjs-link " href="#RestAqlfunctionsGetAll_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestAqlfunctionsGetAll_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/aqlfunction

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"myfunctions::temperature::celsiustofahrenheit"</span>, 
    <span class="hljs-string">"code"</span> : <span class="hljs-string">"function (celsius) { return celsius * 1.8 + 32; }"</span> 
  } 
]
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/PutApiQueryProperties.md -->
@startDocuBlock PutApiQueryProperties

@brief changes the configuration for the AQL query tracking

@RESTHEADER{PUT /_api/query/properties, Changes the properties for the AQL query tracking}

@RESTBODYPARAM{enabled,boolean,required,}
If set to *true*, then queries will be tracked. If set to
*false*, neither queries nor slow queries will be tracked.

@RESTBODYPARAM{trackSlowQueries,boolean,required,}
If set to *true*, then slow queries will be tracked
in the list of slow queries if their runtime exceeds the value set in
*slowQueryThreshold*. In order for slow queries to be tracked, the *enabled*
property must also be set to *true*.

@RESTBODYPARAM{trackBindVars,boolean,required,}
If set to *true*, then the bind variables used in queries will be tracked 
along with queries.

@RESTBODYPARAM{maxSlowQueries,integer,required,int64}
The maximum number of slow queries to keep in the list
of slow queries. If the list of slow queries is full, the oldest entry in
it will be discarded when additional slow queries occur.

@RESTBODYPARAM{slowQueryThreshold,integer,required,int64}
The threshold value for treating a query as slow. A
query with a runtime greater or equal to this threshold value will be
put into the list of slow queries when slow query tracking is enabled.
The value for *slowQueryThreshold* is specified in seconds.

@RESTBODYPARAM{maxQueryStringLength,integer,required,int64}
The maximum query string length to keep in the list of queries.
Query strings can have arbitrary lengths, and this property
can be used to save memory in case very long query strings are used. The
value is specified in bytes.

@RESTDESCRIPTION
The properties need to be passed in the attribute *properties* in the body
of the HTTP request. *properties* needs to be a JSON object.

After the properties have been changed, the current set of properties will
be returned in the HTTP response.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the properties were changed successfully.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request,

@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/AQL/DeleteApiQueryKill.md -->
@startDocuBlock DeleteApiQueryKill

@brief kills an AQL query

@RESTHEADER{DELETE /_api/query/{query-id}, Kills a running AQL query}

@RESTURLPARAMETERS

@RESTURLPARAM{query-id,string,required}
The id of the query.

@RESTDESCRIPTION
Kills a running query. The query will be terminated at the next cancelation
point.

@RESTRETURNCODES

@RESTRETURNCODE{200}
The server will respond with *HTTP 200* when the query was still running when
the kill request was executed and the query's kill flag was set.

@RESTRETURNCODE{400}
The server will respond with *HTTP 400* in case of a malformed request.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* when no query with the specified
id was found.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_inventory.md -->
@startDocuBlock JSF_put_api_replication_inventory

@brief Returns an overview of collections and their indexes

@RESTHEADER{GET /_api/replication/inventory, Return inventory of collections and indexes}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{includeSystem,boolean,optional}
Include system collections in the result. The default value is *true*.

@RESTDESCRIPTION
Returns the array of collections and indexes available on the server. This
array can be used by replication clients to initiate an initial sync with the
server.

The response will contain a JSON object with the *collection* and *state* and
*tick* attributes.

*collections* is an array of collections with the following sub-attributes:

- *parameters*: the collection properties

- *indexes*: an array of the indexes of a the collection. Primary indexes and edge indexes
   are not included in this array.

The *state* attribute contains the current state of the replication logger. It
contains the following sub-attributes:

- *running*: whether or not the replication logger is currently active. Note:
  since ArangoDB 2.2, the value will always be *true*

- *lastLogTick*: the value of the last tick the replication logger has written

- *time*: the current time on the server

Replication clients should note the *lastLogTick* value returned. They can then
fetch collections' data using the dump method up to the value of lastLogTick, and
query the continuous replication log for log events after this tick value.

To create a full copy of the collections on the server, a replication client
can execute these steps:

- call the */inventory* API method. This returns the *lastLogTick* value and the
  array of collections and indexes from the server.

- for each collection returned by */inventory*, create the collection locally and
  call */dump* to stream the collection data to the client, up to the value of
  *lastLogTick*.
  After that, the client can create the indexes on the collections as they were
  reported by */inventory*.

If the clients wants to continuously stream replication log events from the logger
server, the following additional steps need to be carried out:

- the client should call */logger-follow* initially to fetch the first batch of
  replication events that were logged after the client's call to */inventory*.

  The call to */logger-follow* should use a *from* parameter with the value of the
  *lastLogTick* as reported by */inventory*. The call to */logger-follow* will return the
  *x-arango-replication-lastincluded* which will contain the last tick value included
  in the response.

- the client can then continuously call */logger-follow* to incrementally fetch new
  replication events that occurred after the last transfer.

  Calls should use a *from* parameter with the value of the *x-arango-replication-lastincluded*
  header of the previous response. If there are no more replication events, the
  response will be empty and clients can go to sleep for a while and try again
  later.

**Note**: on a coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DBserver.
The very same request is forwarded synchronously to that DBserver.
It is an error if this attribute is not bound in the coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationInventory_container">
<a class="anchorjs-link " href="#RestReplicationInventory_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationInventory_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/inventory

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"collections"</span> : [ 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"60"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_appbundles"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"60"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">2097152</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_appbundles"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"60"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"58"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"mount"</span> 
          ], 
          <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"55"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_apps"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"55"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"58"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"mount"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">2097152</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">73</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_apps"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"55"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"26"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_aqlfunctions"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"26"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1048576</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_aqlfunctions"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"26"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"2"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_graphs"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"2"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1048576</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_graphs"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"2"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"11"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_modules"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"11"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1048576</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">9766</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_modules"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"11"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"9"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"user"</span> 
          ], 
          <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"6"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"6"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"9"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"user"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">4194304</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">11263</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"6"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"user"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"97"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/97"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"97"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"animals"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"97"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"91"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/91"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"91"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"demo"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"91"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    } 
  ], 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastLogTick"</span> : <span class="hljs-string">"11301"</span>, 
    <span class="hljs-string">"lastUncommittedLogTick"</span> : <span class="hljs-string">"11304"</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">3841</span>, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:44Z"</span> 
  }, 
  <span class="hljs-string">"tick"</span> : <span class="hljs-string">"11304"</span> 
}
</pre>
<div id="RestReplicationInventory_container_collapse" onclick="$('#RestReplicationInventory_long').hide(); $('#RestReplicationInventory_short').show(); window.location.hash='RestReplicationInventory_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationInventory_short" onclick="$('#RestReplicationInventory_short').hide(); $('#RestReplicationInventory_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/inventory

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




With some additional indexes:


<div class="example-container" id="RestReplicationInventoryIndexes_container">
<a class="anchorjs-link " href="#RestReplicationInventoryIndexes_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationInventoryIndexes_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/inventory

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"collections"</span> : [ 
    { 
      <span class="hljs-string">"indexes"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"11309"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"name"</span> 
          ], 
          <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"11312"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"a"</span>, 
            <span class="hljs-string">"b"</span> 
          ], 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"11305"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/11305"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"11305"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"11309"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"name"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"11312"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"a"</span>, 
              <span class="hljs-string">"b"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"IndexedCollection1"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"11305"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"11318"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"text"</span> 
          ], 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"minLength"</span> : <span class="hljs-number">10</span> 
        }, 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"11321"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"a"</span> 
          ], 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"11314"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/11314"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"11314"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"11318"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"fulltext"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"text"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"minLength"</span> : <span class="hljs-number">10</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"11321"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"skiplist"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"a"</span> 
            ], 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"IndexedCollection2"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"11314"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"60"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_appbundles"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"60"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">2097152</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_appbundles"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"60"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"58"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"mount"</span> 
          ], 
          <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"55"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_apps"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"55"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"58"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"mount"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">2097152</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">73</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_apps"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"55"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"26"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_aqlfunctions"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"26"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1048576</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_aqlfunctions"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"26"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"2"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_graphs"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"2"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1048576</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_graphs"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"2"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"11"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_modules"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"11"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">1048576</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">9766</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_modules"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"11"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ 
        { 
          <span class="hljs-string">"id"</span> : <span class="hljs-string">"9"</span>, 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
          <span class="hljs-string">"fields"</span> : [ 
            <span class="hljs-string">"user"</span> 
          ], 
          <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
          <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
        } 
      ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"6"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"6"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          }, 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"9"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"hash"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"user"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"deduplicate"</span> : <span class="hljs-literal">true</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">4194304</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">11263</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"_users"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"6"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"user"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"97"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/97"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"97"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"animals"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"97"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    }, 
    { 
      <span class="hljs-string">"indexes"</span> : [ ], 
      <span class="hljs-string">"parameters"</span> : { 
        <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"cid"</span> : <span class="hljs-string">"91"</span>, 
        <span class="hljs-string">"count"</span> : <span class="hljs-number">0</span>, 
        <span class="hljs-string">"deleted"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"doCompact"</span> : <span class="hljs-literal">true</span>, 
        <span class="hljs-string">"globallyUniqueId"</span> : <span class="hljs-string">"hACBE6CCD4628/91"</span>, 
        <span class="hljs-string">"id"</span> : <span class="hljs-string">"91"</span>, 
        <span class="hljs-string">"indexBuckets"</span> : <span class="hljs-number">8</span>, 
        <span class="hljs-string">"indexes"</span> : [ 
          { 
            <span class="hljs-string">"id"</span> : <span class="hljs-string">"0"</span>, 
            <span class="hljs-string">"type"</span> : <span class="hljs-string">"primary"</span>, 
            <span class="hljs-string">"fields"</span> : [ 
              <span class="hljs-string">"_key"</span> 
            ], 
            <span class="hljs-string">"selectivityEstimate"</span> : <span class="hljs-number">1</span>, 
            <span class="hljs-string">"unique"</span> : <span class="hljs-literal">true</span>, 
            <span class="hljs-string">"sparse"</span> : <span class="hljs-literal">false</span> 
          } 
        ], 
        <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"isVolatile"</span> : <span class="hljs-literal">false</span>, 
        <span class="hljs-string">"journalSize"</span> : <span class="hljs-number">33554432</span>, 
        <span class="hljs-string">"keyOptions"</span> : { 
          <span class="hljs-string">"type"</span> : <span class="hljs-string">"traditional"</span>, 
          <span class="hljs-string">"allowUserKeys"</span> : <span class="hljs-literal">true</span>, 
          <span class="hljs-string">"lastValue"</span> : <span class="hljs-number">0</span> 
        }, 
        <span class="hljs-string">"name"</span> : <span class="hljs-string">"demo"</span>, 
        <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"planId"</span> : <span class="hljs-string">"91"</span>, 
        <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
        <span class="hljs-string">"shardKeys"</span> : [ 
          <span class="hljs-string">"_key"</span> 
        ], 
        <span class="hljs-string">"shards"</span> : { 
        }, 
        <span class="hljs-string">"status"</span> : <span class="hljs-number">3</span>, 
        <span class="hljs-string">"type"</span> : <span class="hljs-number">2</span>, 
        <span class="hljs-string">"version"</span> : <span class="hljs-number">6</span>, 
        <span class="hljs-string">"waitForSync"</span> : <span class="hljs-literal">false</span> 
      } 
    } 
  ], 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastLogTick"</span> : <span class="hljs-string">"11301"</span>, 
    <span class="hljs-string">"lastUncommittedLogTick"</span> : <span class="hljs-string">"11322"</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">3847</span>, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:44Z"</span> 
  }, 
  <span class="hljs-string">"tick"</span> : <span class="hljs-string">"11322"</span> 
}
</pre>
<div id="RestReplicationInventoryIndexes_container_collapse" onclick="$('#RestReplicationInventoryIndexes_long').hide(); $('#RestReplicationInventoryIndexes_short').show(); window.location.hash='RestReplicationInventoryIndexes_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationInventoryIndexes_short" onclick="$('#RestReplicationInventoryIndexes_short').hide(); $('#RestReplicationInventoryIndexes_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/inventory

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_synchronize.md -->
@startDocuBlock JSF_put_api_replication_synchronize

@brief start a replication

@RESTHEADER{PUT /_api/replication/sync, Synchronize data from a remote endpoint}

@RESTBODYPARAM{endpoint,string,required,string}
the master endpoint to connect to (e.g. "tcp://192.168.173.13:8529").

@RESTBODYPARAM{database,string,optional,string}
the database name on the master (if not specified, defaults to the
name of the local current database).

@RESTBODYPARAM{username,string,optional,string}
an optional ArangoDB username to use when connecting to the endpoint.

@RESTBODYPARAM{password,string,required,string}
the password to use when connecting to the endpoint.

@RESTBODYPARAM{includeSystem,boolean,optional,}
whether or not system collection operations will be applied

@RESTBODYPARAM{incremental,boolean,optional,}
if set to *true*, then an incremental synchronization method will be used
for synchronizing data in collections. This method is useful when
collections already exist locally, and only the remaining differences need
to be transferred from the remote endpoint. In this case, the incremental
synchronization can be faster than a full synchronization.
The default value is *false*, meaning that the complete data from the remote
collection will be transferred.

@RESTBODYPARAM{restrictType,string,optional,string}
an optional string value for collection filtering. When
specified, the allowed values are *include* or *exclude*.

@RESTBODYPARAM{restrictCollections,array,optional,string}
an optional array of collections for use with
*restrictType*. If *restrictType* is *include*, only the specified collections
will be sychronised. If *restrictType* is *exclude*, all but the specified
collections will be synchronized.

@RESTBODYPARAM{initialSyncMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the initial synchronization will
wait for a response from the master when fetching initial collection data.
This wait time can be used to control after what time the initial synchronization
will give up waiting for a response and fail.
This value will be ignored if set to *0*.

@RESTDESCRIPTION
Starts a full data synchronization from a remote endpoint into the local
ArangoDB database.

The *sync* method can be used by replication clients to connect an ArangoDB database
to a remote endpoint, fetch the remote list of collections and indexes, and collection
data. It will thus create a local backup of the state of data at the remote ArangoDB
database. *sync* works on a per-database level.

*sync* will first fetch the list of collections and indexes from the remote endpoint.
It does so by calling the *inventory* API of the remote database. It will then purge
data in the local ArangoDB database, and after start will transfer collection data
from the remote database to the local ArangoDB database. It will extract data from the
remote database by calling the remote database's *dump* API until all data are fetched.

In case of success, the body of the response is a JSON object with the following
attributes:

- *collections*: an array of collections that were transferred from the endpoint

- *lastLogTick*: the last log tick on the endpoint at the time the transfer
  was started. Use this value as the *from* value when starting the continuous
  synchronization later.

WARNING: calling this method will sychronize data from the collections found
on the remote endpoint to the local ArangoDB database. All data in the local
collections will be purged and replaced with data from the endpoint.

Use with caution!

**Note**: this method is not supported on a coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the configuration is incomplete or malformed.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred during sychronization.

@RESTRETURNCODE{501}
is returned when this operation is called on a coordinator in a cluster.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_dump.md -->
@startDocuBlock JSF_get_api_replication_dump

@brief returns the whole content of one collection

@RESTHEADER{GET /_api/replication/dump, Return data of a collection}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The name or id of the collection to dump.

@RESTQUERYPARAM{chunkSize,number,optional} Approximate maximum size of the returned result.

@RESTQUERYPARAM{batchId,string,required}
rocksdb only - The id of the snapshot to use

@RESTQUERYPARAM{from,number,optional}
mmfiles only - Lower bound tick value for results.

@RESTQUERYPARAM{to,number,optional}
mmfiles only - Upper bound tick value for results.

@RESTQUERYPARAM{includeSystem,boolean,optional}
mmfiles only - Include system collections in the result. The default value is *true*.

@RESTQUERYPARAM{ticks,boolean,optional}
mmfiles only - Whether or not to include tick values in the dump. The default value is *true*.

@RESTQUERYPARAM{flush,boolean,optional}
mmfiles only - Whether or not to flush the WAL before dumping. The default value is *true*.

@RESTDESCRIPTION
Returns the data from the collection for the requested range.

When the *from* query parameter is not used, collection events are returned from
the beginning. When the *from* parameter is used, the result will only contain
collection entries which have higher tick values than the specified *from* value
(note: the log entry with a tick value equal to *from* will be excluded).

The *to* query parameter can be used to optionally restrict the upper bound of
the result to a certain tick value. If used, the result will only contain
collection entries with tick values up to (including) *to*.

The *chunkSize* query parameter can be used to control the size of the result.
It must be specified in bytes. The *chunkSize* value will only be honored
approximately. Otherwise a too low *chunkSize* value could cause the server
to not be able to put just one entry into the result and return it.
Therefore, the *chunkSize* value will only be consulted after an entry has
been written into the result. If the result size is then bigger than
*chunkSize*, the server will respond with as many entries as there are
in the response already. If the result size is still smaller than *chunkSize*,
the server will try to return more data if there's more data left to return.

If *chunkSize* is not specified, some server-side default value will be used.

The *Content-Type* of the result is *application/x-arango-dump*. This is an
easy-to-process format, with all entries going onto separate lines in the
response body.

Each line itself is a JSON object, with at least the following attributes:

- *tick*: the operation's tick attribute

- *key*: the key of the document/edge or the key used in the deletion operation

- *rev*: the revision id of the document/edge or the deletion operation

- *data*: the actual document/edge data for types 2300 and 2301. The full
  document/edge data will be returned even for updates.

- *type*: the type of entry. Possible values for *type* are:

  - 2300: document insertion/update

  - 2301: edge insertion/update

  - 2302: document/edge deletion

**Note**: there will be no distinction between inserts and updates when calling this method.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully and data was returned. The header
`x-arango-replication-lastincluded` is set to the tick of the last document returned.

@RESTRETURNCODE{204}
is returned if the request was executed successfully, but there was no content available.
The header `x-arango-replication-lastincluded` is `0` in this case.

@RESTRETURNCODE{400}
is returned if either the *from* or *to* values are invalid.

@RESTRETURNCODE{404}
is returned when the collection could not be found.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES

Empty collection:


<div class="example-container" id="RestReplicationDumpEmpty_container">
<a class="anchorjs-link " href="#RestReplicationDumpEmpty_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationDumpEmpty_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/dump?collection=testCollection

HTTP/1.1 204 No Content
content-type: application/x-arango-dump; charset=utf-8
x-content-type-options: nosniff
x-arango-replication-lastincluded: 0
x-arango-replication-checkmore: false

</pre>
</div>
</div>




Non-empty collection:


<div class="example-container" id="RestReplicationDump_container">
<a class="anchorjs-link " href="#RestReplicationDump_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationDump_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/dump?collection=testCollection

HTTP/1.1 200 OK
content-type: application/x-arango-dump; charset=utf-8
x-content-type-options: nosniff
x-arango-replication-lastincluded: 11285
x-arango-replication-checkmore: false

"{\"tick\":\"11279\",\"type\":2300,\"data\":{\"_id\":\"testCollection/123456\",\"_key\":\"123456\",\"_rev\":\"_a-s7U_m--_\",\"b\":1,\"c\":false,\"d\":\"additional value\"}}\n{\"tick\":\"11283\",\"type\":2302,\"data\":{\"_key\":\"foobar\",\"_rev\":\"_a-s7U_m--D\"}}\n{\"tick\":\"11285\",\"type\":2302,\"data\":{\"_key\":\"abcdef\",\"_rev\":\"_a-s7U_m--F\"}}\n"
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_serverID.md -->
@startDocuBlock JSF_put_api_replication_serverID

@brief fetch this server's unique identifier

@RESTHEADER{GET /_api/replication/server-id, Return server id}

@RESTDESCRIPTION
Returns the servers id. The id is also returned by other replication API
methods, and this method is an easy means of determining a server's id.

The body of the response is a JSON object with the attribute *serverId*. The
server id is returned as a string.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationServerId_container">
<a class="anchorjs-link " href="#RestReplicationServerId_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationServerId_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/server-id

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"serverId"</span> : <span class="hljs-string">"189933869155880"</span> 
}
</pre>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_applier.md -->
@startDocuBlock JSF_put_api_replication_applier

@brief fetch the current replication configuration

@RESTHEADER{GET /_api/replication/applier-config, Return configuration of replication applier}

@RESTDESCRIPTION
Returns the configuration of the replication applier.

The body of the response is a JSON object with the configuration. The
following attributes may be present in the configuration:

- *endpoint*: the logger server to connect to (e.g. "tcp://192.168.173.13:8529").

- *database*: the name of the database to connect to (e.g. "_system").

- *username*: an optional ArangoDB username to use when connecting to the endpoint.

- *password*: the password to use when connecting to the endpoint.

- *maxConnectRetries*: the maximum number of connection attempts the applier
  will make in a row. If the applier cannot establish a connection to the
  endpoint in this number of attempts, it will stop itself.

- *connectTimeout*: the timeout (in seconds) when attempting to connect to the
  endpoint. This value is used for each connection attempt.

- *requestTimeout*: the timeout (in seconds) for individual requests to the endpoint.

- *chunkSize*: the requested maximum size for log transfer packets that
  is used when the endpoint is contacted.

- *autoStart*: whether or not to auto-start the replication applier on
  (next and following) server starts

- *adaptivePolling*: whether or not the replication applier will use
  adaptive polling.

- *includeSystem*: whether or not system collection operations will be applied

- *autoResync*: whether or not the slave should perform a full automatic
  resynchronization with the master in case the master cannot serve log data
  requested by the slave, or when the replication is started and no tick
  value
  can be found.

- *autoResyncRetries*: number of resynchronization retries that will be performed
  in a row when automatic resynchronization is enabled and kicks in. Setting this
  to *0* will effectively disable *autoResync*. Setting it to some other value
  will limit the number of retries that are performed. This helps preventing endless
  retries in case resynchronizations always fail.

- *initialSyncMaxWaitTime*: the maximum wait time (in seconds) that the initial
  synchronization will wait for a response from the master when fetching initial
  collection data.
  This wait time can be used to control after what time the initial synchronization
  will give up waiting for a response and fail. This value is relevant even
  for continuous replication when *autoResync* is set to *true* because this
  may re-start the initial synchronization when the master cannot provide
  log data the slave requires.
  This value will be ignored if set to *0*.

- *connectionRetryWaitTime*: the time (in seconds) that the applier will
  intentionally idle before it retries connecting to the master in case of
  connection problems.
  This value will be ignored if set to *0*.

- *idleMinWaitTime*: the minimum wait time (in seconds) that the applier will
  intentionally idle before fetching more log data from the master in case
  the master has already sent all its log data. This wait time can be used
  to control the frequency with which the replication applier sends HTTP log
  fetch requests to the master in case there is no write activity on the master.
  This value will be ignored if set to *0*.

- *idleMaxWaitTime*: the maximum wait time (in seconds) that the applier will
  intentionally idle before fetching more log data from the master in case the
  master has already sent all its log data and there have been previous log
  fetch attempts that resulted in no more log data. This wait time can be used
  to control the maximum frequency with which the replication applier sends HTTP
  log fetch requests to the master in case there is no write activity on the
  master for longer periods. This configuration value will only be used if the
  option *adaptivePolling* is set to *true*.
  This value will be ignored if set to *0*.

- *requireFromPresent*: if set to *true*, then the replication applier will check
  at start whether the start tick from which it starts or resumes replication is
  still present on the master. If not, then there would be data loss. If
  *requireFromPresent* is *true*, the replication applier will abort with an
  appropriate error message. If set to *false*, then the replication applier will
  still start, and ignore the data loss.

- *verbose*: if set to *true*, then a log line will be emitted for all operations
  performed by the replication applier. This should be used for debugging
  replication
  problems only.

- *restrictType*: the configuration for *restrictCollections*

- *restrictCollections*: the optional array of collections to include or exclude,
  based on the setting of *restrictType*

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierGetConfig_container">
<a class="anchorjs-link " href="#RestReplicationApplierGetConfig_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationApplierGetConfig_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-config

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"requestTimeout"</span> : <span class="hljs-number">600</span>, 
  <span class="hljs-string">"connectTimeout"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"ignoreErrors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"maxConnectRetries"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"lockTimeoutRetries"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"sslProtocol"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"chunkSize"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"skipCreateDrop"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"autoStart"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"adaptivePolling"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"autoResync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"autoResyncRetries"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"includeSystem"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"requireFromPresent"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"verbose"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"incremental"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"restrictType"</span> : <span class="hljs-string">""</span>, 
  <span class="hljs-string">"restrictCollections"</span> : [ ], 
  <span class="hljs-string">"connectionRetryWaitTime"</span> : <span class="hljs-number">15</span>, 
  <span class="hljs-string">"initialSyncMaxWaitTime"</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">"idleMinWaitTime"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"idleMaxWaitTime"</span> : <span class="hljs-number">2.5</span> 
}
</pre>
<div id="RestReplicationApplierGetConfig_container_collapse" onclick="$('#RestReplicationApplierGetConfig_long').hide(); $('#RestReplicationApplierGetConfig_short').show(); window.location.hash='RestReplicationApplierGetConfig_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierGetConfig_short" onclick="$('#RestReplicationApplierGetConfig_short').hide(); $('#RestReplicationApplierGetConfig_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-config

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_post_batch_replication.md -->
@startDocuBlock JSF_post_batch_replication

@brief handle a dump batch command

@RESTHEADER{POST /_api/replication/batch, Create new dump batch}

**Note**: These calls are uninteresting to users.

@RESTBODYPARAM{ttl,integer,required,int64}
the time-to-live for the new batch (in seconds)

A JSON object with the batch configuration.

@RESTDESCRIPTION
Creates a new dump batch and returns the batch's id.

The response is a JSON object with the following attributes:

- *id*: the id of the batch

**Note**: on a coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DBserver.
The very same request is forwarded synchronously to that DBserver.
It is an error if this attribute is not bound in the coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the batch was created successfully.

@RESTRETURNCODE{400}
is returned if the ttl value is invalid or if *DBserver* attribute
is not specified or illegal on a coordinator.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_logger_returns.md -->
@startDocuBlock JSF_get_api_replication_logger_returns

@brief Fetch log lines from the server

@RESTHEADER{GET /_api/replication/logger-follow, Returns log entries}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{from,number,optional}
Lower bound tick value for results.

@RESTQUERYPARAM{to,number,optional}
Upper bound tick value for results.

@RESTQUERYPARAM{chunkSize,number,optional}
Approximate maximum size of the returned result.

@RESTQUERYPARAM{includeSystem,boolean,optional}
Include system collections in the result. The default value is *true*.

@RESTDESCRIPTION
Returns data from the server's replication log. This method can be called
by replication clients after an initial synchronization of data. The method
will return all "recent" log entries from the logger server, and the clients
can replay and apply these entries locally so they get to the same data
state as the logger server.

Clients can call this method repeatedly to incrementally fetch all changes
from the logger server. In this case, they should provide the *from* value so
they will only get returned the log events since their last fetch.

When the *from* query parameter is not used, the logger server will return log
entries starting at the beginning of its replication log. When the *from*
parameter is used, the logger server will only return log entries which have
higher tick values than the specified *from* value (note: the log entry with a
tick value equal to *from* will be excluded). Use the *from* value when
incrementally fetching log data.

The *to* query parameter can be used to optionally restrict the upper bound of
the result to a certain tick value. If used, the result will contain only log events
with tick values up to (including) *to*. In incremental fetching, there is no
need to use the *to* parameter. It only makes sense in special situations,
when only parts of the change log are required.

The *chunkSize* query parameter can be used to control the size of the result.
It must be specified in bytes. The *chunkSize* value will only be honored
approximately. Otherwise a too low *chunkSize* value could cause the server
to not be able to put just one log entry into the result and return it.
Therefore, the *chunkSize* value will only be consulted after a log entry has
been written into the result. If the result size is then bigger than
*chunkSize*, the server will respond with as many log entries as there are
in the response already. If the result size is still smaller than *chunkSize*,
the server will try to return more data if there's more data left to return.

If *chunkSize* is not specified, some server-side default value will be used.

The *Content-Type* of the result is *application/x-arango-dump*. This is an
easy-to-process format, with all log events going onto separate lines in the
response body. Each log event itself is a JSON object, with at least the
following attributes:

- *tick*: the log event tick value

- *type*: the log event type

Individual log events will also have additional attributes, depending on the
event type. A few common attributes which are used for multiple events types
are:

- *cid*: id of the collection the event was for

- *tid*: id of the transaction the event was contained in

- *key*: document key

- *rev*: document revision id

- *data*: the original document data

A more detailed description of the individual replication event types and their
data structures can be found in @ref RefManualReplicationEventTypes.

The response will also contain the following HTTP headers:

- *x-arango-replication-active*: whether or not the logger is active. Clients
  can use this flag as an indication for their polling frequency. If the
  logger is not active and there are no more replication events available, it
  might be sensible for a client to abort, or to go to sleep for a long time
  and try again later to check whether the logger has been activated.

- *x-arango-replication-lastincluded*: the tick value of the last included
  value in the result. In incremental log fetching, this value can be used
  as the *from* value for the following request. **Note** that if the result is
  empty, the value will be *0*. This value should not be used as *from* value
  by clients in the next request (otherwise the server would return the log
  events from the start of the log again).

- *x-arango-replication-lasttick*: the last tick value the logger server has
  logged (not necessarily included in the result). By comparing the the last
  tick and last included tick values, clients have an approximate indication of
  how many events there are still left to fetch.

- *x-arango-replication-checkmore*: whether or not there already exists more
  log data which the client could fetch immediately. If there is more log data
  available, the client could call *logger-follow* again with an adjusted *from*
  value to fetch remaining log entries until there are no more.

  If there isn't any more log data to fetch, the client might decide to go
  to sleep for a while before calling the logger again.

**Note**: this method is not supported on a coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully, and there are log
events available for the requested range. The response body will not be empty
in this case.

@RESTRETURNCODE{204}
is returned if the request was executed successfully, but there are no log
events available for the requested range. The response body will be empty
in this case.

@RESTRETURNCODE{400}
is returned if either the *from* or *to* values are invalid.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@RESTRETURNCODE{501}
is returned when this operation is called on a coordinator in a cluster.

@EXAMPLES

No log events available


<div class="example-container" id="RestReplicationLoggerFollowEmpty_container">
<a class="anchorjs-link " href="#RestReplicationLoggerFollowEmpty_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationLoggerFollowEmpty_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-follow?from=11337

HTTP/1.1 204 No Content
x-arango-replication-checkmore: false
content-type: application/x-arango-dump; charset=utf-8
x-arango-replication-lastscanned: 11337
x-arango-replication-lastincluded: 0
x-arango-replication-active: true
x-arango-replication-frompresent: true
x-content-type-options: nosniff
x-arango-replication-lasttick: 11337

</pre>
</div>
</div>





A few log events


<div class="example-container" id="RestReplicationLoggerFollowSome_container">
<a class="anchorjs-link " href="#RestReplicationLoggerFollowSome_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationLoggerFollowSome_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-follow?from=11337

HTTP/1.1 200 OK
x-arango-replication-checkmore: false
content-type: application/x-arango-dump; charset=utf-8
x-arango-replication-lastscanned: 11350
x-arango-replication-lastincluded: 11350
x-arango-replication-active: true
x-arango-replication-frompresent: true
x-content-type-options: nosniff
x-arango-replication-lasttick: 11350

"{\"tick\":\"11339\",\"type\":2000,\"database\":\"1\",\"cid\":\"11338\",\"cname\":\"products\",\"data\":{\"allowUserKeys\":true,\"cid\":\"11338\",\"count\":0,\"deleted\":false,\"doCompact\":true,\"globallyUniqueId\":\"hACBE6CCD4628/11338\",\"id\":\"11338\",\"indexBuckets\":8,\"indexes\":[{\"fields\":[\"_key\"],\"id\":\"0\",\"selectivityEstimate\":1,\"sparse\":false,\"type\":\"primary\",\"unique\":true}],\"isSmart\":false,\"isSystem\":false,\"isVolatile\":false,\"journalSize\":33554432,\"keyOptions\":{\"allowUserKeys\":true,\"lastValue\":0,\"type\":\"traditional\"},\"name\":\"products\",\"numberOfShards\":1,\"planId\":\"11338\",\"replicationFactor\":1,\"shardKeys\":[\"_key\"],\"shards\":{},\"status\":3,\"type\":2,\"version\":6,\"waitForSync\":false}}\n{\"tick\":\"11343\",\"type\":2300,\"tid\":\"0\",\"database\":\"1\",\"cid\":\"11338\",\"cname\":\"products\",\"data\":{\"_id\":\"_unknown/p1\",\"_key\":\"p1\",\"_rev\":\"_a-s7WuS--_\",\"name\":\"flux compensator\"}}\n{\"tick\":\"11345\",\"type\":2300,\"tid\":\"0\",\"database\":\"1\",\"cid\":\"11338\",\"cname\":\"products\",\"data\":{\"_id\":\"_unknown/p2\",\"_key\":\"p2\",\"_rev\":\"_a-s7WuS--B\",\"hp\":5100,\"name\":\"hybrid hovercraft\"}}\n{\"tick\":\"11347\",\"type\":2302,\"tid\":\"0\",\"database\":\"1\",\"cid\":\"11338\",\"cname\":\"products\",\"data\":{\"_key\":\"p1\",\"_rev\":\"_a-s7WuS--D\"}}\n{\"tick\":\"11349\",\"type\":2300,\"tid\":\"0\",\"database\":\"1\",\"cid\":\"11338\",\"cname\":\"products\",\"data\":{\"_id\":\"_unknown/p2\",\"_key\":\"p2\",\"_rev\":\"_a-s7WuW--_\",\"hp\":5100,\"name\":\"broken hovercraft\"}}\n{\"tick\":\"11350\",\"type\":2001,\"database\":\"1\",\"cid\":\"11338\",\"cname\":\"products\",\"data\":{\"cuid\":\"hACBE6CCD4628/11338\",\"id\":\"11338\",\"name\":\"products\"}}\n"
</pre>
</div>
</div>







More events than would fit into the response


<div class="example-container" id="RestReplicationLoggerFollowBufferLimit_container">
<a class="anchorjs-link " href="#RestReplicationLoggerFollowBufferLimit_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationLoggerFollowBufferLimit_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-follow?from=11324&chunkSize=400

HTTP/1.1 200 OK
x-arango-replication-checkmore: true
content-type: application/x-arango-dump; charset=utf-8
x-arango-replication-lastscanned: 11326
x-arango-replication-lastincluded: 11326
x-arango-replication-active: true
x-arango-replication-frompresent: true
x-content-type-options: nosniff
x-arango-replication-lasttick: 11337

"{\"tick\":\"11326\",\"type\":2000,\"database\":\"1\",\"cid\":\"11325\",\"cname\":\"products\",\"data\":{\"allowUserKeys\":true,\"cid\":\"11325\",\"count\":0,\"deleted\":false,\"doCompact\":true,\"globallyUniqueId\":\"hACBE6CCD4628/11325\",\"id\":\"11325\",\"indexBuckets\":8,\"indexes\":[{\"fields\":[\"_key\"],\"id\":\"0\",\"selectivityEstimate\":1,\"sparse\":false,\"type\":\"primary\",\"unique\":true}],\"isSmart\":false,\"isSystem\":false,\"isVolatile\":false,\"journalSize\":33554432,\"keyOptions\":{\"allowUserKeys\":true,\"lastValue\":0,\"type\":\"traditional\"},\"name\":\"products\",\"numberOfShards\":1,\"planId\":\"11325\",\"replicationFactor\":1,\"shardKeys\":[\"_key\"],\"shards\":{},\"status\":3,\"type\":2,\"version\":6,\"waitForSync\":false}}\n"
</pre>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_applier_stop.md -->
@startDocuBlock JSF_put_api_replication_applier_stop

@brief stop the replication

@RESTHEADER{PUT /_api/replication/applier-stop, Stop replication applier}

@RESTDESCRIPTION
Stops the replication applier. This will return immediately if the
replication applier is not running.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierStop_container">
<a class="anchorjs-link " href="#RestReplicationApplierStop_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationApplierStop_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-stop

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"phase"</span> : <span class="hljs-string">"inactive"</span>, 
    <span class="hljs-string">"lastAppliedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastProcessedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastAvailableContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"safeResumeTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"progress"</span> : { 
      <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:43Z"</span>, 
      <span class="hljs-string">"message"</span> : <span class="hljs-string">"applier shut down"</span>, 
      <span class="hljs-string">"failedConnects"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"totalRequests"</span> : <span class="hljs-number">6</span>, 
    <span class="hljs-string">"totalFailedConnects"</span> : <span class="hljs-number">3</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalResyncs"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalOperationsExcluded"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"lastError"</span> : { 
      <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:43Z"</span> 
  }, 
  <span class="hljs-string">"server"</span> : { 
    <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
    <span class="hljs-string">"serverId"</span> : <span class="hljs-string">"189933869155880"</span> 
  }, 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
}
</pre>
<div id="RestReplicationApplierStop_container_collapse" onclick="$('#RestReplicationApplierStop_long').hide(); $('#RestReplicationApplierStop_short').show(); window.location.hash='RestReplicationApplierStop_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStop_short" onclick="$('#RestReplicationApplierStop_short').hide(); $('#RestReplicationApplierStop_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-stop

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_applier_adjust.md -->
@startDocuBlock JSF_put_api_replication_applier_adjust

@brief set configuration values of an applier

@RESTHEADER{PUT /_api/replication/applier-config, Adjust configuration of replication applier}

@RESTBODYPARAM{endpoint,string,required,string}
the logger server to connect to (e.g. "tcp://192.168.173.13:8529"). The endpoint must be specified.

@RESTBODYPARAM{database,string,required,string}
the name of the database on the endpoint. If not specified, defaults to the current local database name.

@RESTBODYPARAM{username,string,optional,string}
an optional ArangoDB username to use when connecting to the endpoint.

@RESTBODYPARAM{password,string,required,string}
the password to use when connecting to the endpoint.

@RESTBODYPARAM{maxConnectRetries,integer,required,int64}
the maximum number of connection attempts the applier
will make in a row. If the applier cannot establish a connection to the
endpoint in this number of attempts, it will stop itself.

@RESTBODYPARAM{connectTimeout,integer,required,int64}
the timeout (in seconds) when attempting to connect to the
endpoint. This value is used for each connection attempt.

@RESTBODYPARAM{requestTimeout,integer,required,int64}
the timeout (in seconds) for individual requests to the endpoint.

@RESTBODYPARAM{chunkSize,integer,required,int64}
the requested maximum size for log transfer packets that
is used when the endpoint is contacted.

@RESTBODYPARAM{autoStart,boolean,required,}
whether or not to auto-start the replication applier on
(next and following) server starts

@RESTBODYPARAM{adaptivePolling,boolean,required,}
if set to *true*, the replication applier will fall
to sleep for an increasingly long period in case the logger server at the
endpoint does not have any more replication events to apply. Using
adaptive polling is thus useful to reduce the amount of work for both the
applier and the logger server for cases when there are only infrequent
changes. The downside is that when using adaptive polling, it might take
longer for the replication applier to detect that there are new replication
events on the logger server.

Setting *adaptivePolling* to false will make the replication applier
contact the logger server in a constant interval, regardless of whether
the logger server provides updates frequently or seldom.

@RESTBODYPARAM{includeSystem,boolean,required,}
whether or not system collection operations will be applied

@RESTBODYPARAM{autoResync,boolean,optional,}
whether or not the slave should perform a full automatic resynchronization
with the master in case the master cannot serve log data requested by the
slave,
or when the replication is started and no tick value can be found.

@RESTBODYPARAM{autoResyncRetries,integer,optional,int64}
number of resynchronization retries that will be performed in a row when
automatic resynchronization is enabled and kicks in. Setting this to *0*
will
effectively disable *autoResync*. Setting it to some other value will limit
the number of retries that are performed. This helps preventing endless
retries
in case resynchronizations always fail.

@RESTBODYPARAM{initialSyncMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the initial synchronization will
wait for a response from the master when fetching initial collection data.
This wait time can be used to control after what time the initial
synchronization
will give up waiting for a response and fail. This value is relevant even
for continuous replication when *autoResync* is set to *true* because this
may re-start the initial synchronization when the master cannot provide
log data the slave requires.
This value will be ignored if set to *0*.

@RESTBODYPARAM{connectionRetryWaitTime,integer,optional,int64}
the time (in seconds) that the applier will intentionally idle before
it retries connecting to the master in case of connection problems.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMinWaitTime,integer,optional,int64}
the minimum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data. This wait time can be used to control the
frequency with which the replication applier sends HTTP log fetch requests
to the master in case there is no write activity on the master.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the applier will intentionally idle 
before fetching more log data from the master in case the master has 
already sent all its log data and there have been previous log fetch attempts
that resulted in no more log data. This wait time can be used to control the
maximum frequency with which the replication applier sends HTTP log fetch
requests to the master in case there is no write activity on the master for
longer periods. This configuration value will only be used if the option
*adaptivePolling* is set to *true*.
This value will be ignored if set to *0*.

@RESTBODYPARAM{requireFromPresent,boolean,required,}
if set to *true*, then the replication applier will check
at start whether the start tick from which it starts or resumes replication is
still present on the master. If not, then there would be data loss. If 
*requireFromPresent* is *true*, the replication applier will abort with an
appropriate error message. If set to *false*, then the replication applier will
still start, and ignore the data loss.

@RESTBODYPARAM{verbose,boolean,required,}
if set to *true*, then a log line will be emitted for all operations 
performed by the replication applier. This should be used for debugging replication
problems only.

@RESTBODYPARAM{restrictType,string,required,string}
the configuration for *restrictCollections*; Has to be either *include* or *exclude*

@RESTBODYPARAM{restrictCollections,array,optional,string}
the array of collections to include or exclude,
based on the setting of *restrictType*

@RESTDESCRIPTION
Sets the configuration of the replication applier. The configuration can
only be changed while the applier is not running. The updated configuration
will be saved immediately but only become active with the next start of the
applier.

In case of success, the body of the response is a JSON object with the updated
configuration.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the configuration is incomplete or malformed, or if the
replication applier is currently running.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierSetConfig_container">
<a class="anchorjs-link " href="#RestReplicationApplierSetConfig_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationApplierSetConfig_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/replication/applier-config &lt;&lt;EOF
{ 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"username"</span> : <span class="hljs-string">"replicationApplier"</span>, 
  <span class="hljs-string">"password"</span> : <span class="hljs-string">"applier1234@foxx"</span>, 
  <span class="hljs-string">"chunkSize"</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">"autoStart"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"adaptivePolling"</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span>, 
  <span class="hljs-string">"username"</span> : <span class="hljs-string">"replicationApplier"</span>, 
  <span class="hljs-string">"requestTimeout"</span> : <span class="hljs-number">600</span>, 
  <span class="hljs-string">"connectTimeout"</span> : <span class="hljs-number">10</span>, 
  <span class="hljs-string">"ignoreErrors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"maxConnectRetries"</span> : <span class="hljs-number">100</span>, 
  <span class="hljs-string">"lockTimeoutRetries"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"sslProtocol"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"chunkSize"</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">"skipCreateDrop"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"autoStart"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"adaptivePolling"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"autoResync"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"autoResyncRetries"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"includeSystem"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"requireFromPresent"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"verbose"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"incremental"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"restrictType"</span> : <span class="hljs-string">""</span>, 
  <span class="hljs-string">"restrictCollections"</span> : [ ], 
  <span class="hljs-string">"connectionRetryWaitTime"</span> : <span class="hljs-number">15</span>, 
  <span class="hljs-string">"initialSyncMaxWaitTime"</span> : <span class="hljs-number">300</span>, 
  <span class="hljs-string">"idleMinWaitTime"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"idleMaxWaitTime"</span> : <span class="hljs-number">2.5</span> 
}
</pre>
<div id="RestReplicationApplierSetConfig_container_collapse" onclick="$('#RestReplicationApplierSetConfig_long').hide(); $('#RestReplicationApplierSetConfig_short').show(); window.location.hash='RestReplicationApplierSetConfig_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierSetConfig_short" onclick="$('#RestReplicationApplierSetConfig_short').hide(); $('#RestReplicationApplierSetConfig_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/replication/applier-config &lt;&lt;EOF
{ 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"username"</span> : <span class="hljs-string">"replicationApplier"</span>, 
  <span class="hljs-string">"password"</span> : <span class="hljs-string">"applier1234@foxx"</span>, 
  <span class="hljs-string">"chunkSize"</span> : <span class="hljs-number">4194304</span>, 
  <span class="hljs-string">"autoStart"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"adaptivePolling"</span> : <span class="hljs-literal">true</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_logger_return_state.md -->
@startDocuBlock JSF_get_api_replication_logger_return_state

@brief returns the state of the replication logger

@RESTHEADER{GET /_api/replication/logger-state, Return replication logger state}

@RESTDESCRIPTION
Returns the current state of the server's replication logger. The state will
include information about whether the logger is running and about the last
logged tick value. This tick value is important for incremental fetching of
data.

The body of the response contains a JSON object with the following
attributes:

- *state*: the current logger state as a JSON object with the following
  sub-attributes:

  - *running*: whether or not the logger is running

  - *lastLogTick*: the tick value of the latest tick the logger has logged.
    This value can be used for incremental fetching of log data.

  - *totalEvents*: total number of events logged since the server was started.
    The value is not reset between multiple stops and re-starts of the logger.

  - *time*: the current date and time on the logger server

- *server*: a JSON object with the following sub-attributes:

  - *version*: the logger server's version

  - *serverId*: the logger server's id

- *clients*: returns the last fetch status by replication clients connected to
  the logger. Each client is returned as a JSON object with the following attributes:

  - *serverId*: server id of client

  - *lastServedTick*: last tick value served to this client via the *logger-follow* API

  - *time*: date and time when this client last called the *logger-follow* API
  
  - *expires*: date and time when this client would expire without an established connection

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the logger state could be determined successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the logger state could not be determined.

@EXAMPLES

Returns the state of the replication logger.


<div class="example-container" id="RestReplicationLoggerStateActive_container">
<a class="anchorjs-link " href="#RestReplicationLoggerStateActive_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationLoggerStateActive_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-state

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"lastLogTick"</span> : <span class="hljs-string">"11350"</span>, 
    <span class="hljs-string">"lastUncommittedLogTick"</span> : <span class="hljs-string">"11350"</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">3861</span>, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:46Z"</span> 
  }, 
  <span class="hljs-string">"server"</span> : { 
    <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
    <span class="hljs-string">"serverId"</span> : <span class="hljs-string">"189933869155880"</span> 
  }, 
  <span class="hljs-string">"clients"</span> : [ ] 
}
</pre>
<div id="RestReplicationLoggerStateActive_container_collapse" onclick="$('#RestReplicationLoggerStateActive_long').hide(); $('#RestReplicationLoggerStateActive_short').show(); window.location.hash='RestReplicationLoggerStateActive_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationLoggerStateActive_short" onclick="$('#RestReplicationLoggerStateActive_short').hide(); $('#RestReplicationLoggerStateActive_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-state

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_applier_start.md -->
@startDocuBlock JSF_put_api_replication_applier_start

@brief start the replication applier

@RESTHEADER{PUT /_api/replication/applier-start, Start replication applier}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{from,string,optional}
The remote *lastLogTick* value from which to start applying. If not specified,
the last saved tick from the previous applier run is used. If there is no
previous applier state saved, the applier will start at the beginning of the
logger server's log.

@RESTDESCRIPTION
Starts the replication applier. This will return immediately if the
replication applier is already running.

If the replication applier is not already running, the applier configuration
will be checked, and if it is complete, the applier will be started in a
background thread. This means that even if the applier will encounter any
errors while running, they will not be reported in the response to this
method.

To detect replication applier errors after the applier was started, use the
*/_api/replication/applier-state* API instead.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the replication applier is not fully configured or the
configuration is invalid.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES


<div class="example-container" id="RestReplicationApplierStart_container">
<a class="anchorjs-link " href="#RestReplicationApplierStart_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationApplierStart_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-start

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"phase"</span> : <span class="hljs-string">"running"</span>, 
    <span class="hljs-string">"lastAppliedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastProcessedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastAvailableContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"safeResumeTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"progress"</span> : { 
      <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:31Z"</span>, 
      <span class="hljs-string">"message"</span> : <span class="hljs-string">"applier initially created for database '_system'"</span>, 
      <span class="hljs-string">"failedConnects"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"totalRequests"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalFailedConnects"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalResyncs"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalOperationsExcluded"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"lastError"</span> : { 
      <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:41Z"</span> 
  }, 
  <span class="hljs-string">"server"</span> : { 
    <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
    <span class="hljs-string">"serverId"</span> : <span class="hljs-string">"189933869155880"</span> 
  }, 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
}
</pre>
<div id="RestReplicationApplierStart_container_collapse" onclick="$('#RestReplicationApplierStart_long').hide(); $('#RestReplicationApplierStart_short').show(); window.location.hash='RestReplicationApplierStart_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStart_short" onclick="$('#RestReplicationApplierStart_short').hide(); $('#RestReplicationApplierStart_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-start

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_delete_batch_replication.md -->
@startDocuBlock JSF_delete_batch_replication

@brief handle a dump batch command

@RESTHEADER{DELETE /_api/replication/batch/{id}, Deletes an existing dump batch}

**Note**: These calls are uninteresting to users.

@RESTURLPARAMETERS

@RESTURLPARAM{id,string,required}
The id of the batch.

@RESTDESCRIPTION
Deletes the existing dump batch, allowing compaction and cleanup to resume.

**Note**: on a coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DBserver.
The very same request is forwarded synchronously to that DBserver.
It is an error if this attribute is not bound in the coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{204}
is returned if the batch was deleted successfully.

@RESTRETURNCODE{400}
is returned if the batch was not found.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_logger_tick_ranges.md -->
@startDocuBlock JSF_get_api_replication_logger_tick_ranges

@brief returns the tick value ranges available in the logfiles

@RESTHEADER{GET /_api/replication/logger-tick-ranges, Return the tick ranges available in the WAL logfiles}

@RESTDESCRIPTION
Returns the currently available ranges of tick values for all currently
available WAL logfiles. The tick values can be used to determine if certain
data (identified by tick value) are still available for replication.

The body of the response contains a JSON array. Each array member is an
object
that describes a single logfile. Each object has the following attributes:

* *datafile*: name of the logfile

* *status*: status of the datafile, in textual form (e.g. "sealed", "open")

* *tickMin*: minimum tick value contained in logfile

* *tickMax*: maximum tick value contained in logfile

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the tick ranges could be determined successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if the logger state could not be determined.

@RESTRETURNCODE{501}
is returned when this operation is called on a coordinator in a cluster.

@EXAMPLES

Returns the available tick ranges.


<div class="example-container" id="RestReplicationLoggerTickRanges_container">
<a class="anchorjs-link " href="#RestReplicationLoggerTickRanges_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationLoggerTickRanges_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-tick-ranges

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

[ 
  { 
    <span class="hljs-string">"datafile"</span> : <span class="hljs-string">"/tmp/arangosh_fbeCmF/tmp-46-1143880553/data/journals/logfile-3.db"</span>, 
    <span class="hljs-string">"status"</span> : <span class="hljs-string">"collected"</span>, 
    <span class="hljs-string">"tickMin"</span> : <span class="hljs-string">"5"</span>, 
    <span class="hljs-string">"tickMax"</span> : <span class="hljs-string">"10217"</span> 
  }, 
  { 
    <span class="hljs-string">"datafile"</span> : <span class="hljs-string">"/tmp/arangosh_fbeCmF/tmp-46-1143880553/data/journals/logfile-90.db"</span>, 
    <span class="hljs-string">"status"</span> : <span class="hljs-string">"collected"</span>, 
    <span class="hljs-string">"tickMin"</span> : <span class="hljs-string">"10232"</span>, 
    <span class="hljs-string">"tickMax"</span> : <span class="hljs-string">"10288"</span> 
  }, 
  { 
    <span class="hljs-string">"datafile"</span> : <span class="hljs-string">"/tmp/arangosh_fbeCmF/tmp-46-1143880553/data/journals/logfile-1265.db"</span>, 
    <span class="hljs-string">"status"</span> : <span class="hljs-string">"collected"</span>, 
    <span class="hljs-string">"tickMin"</span> : <span class="hljs-string">"10294"</span>, 
    <span class="hljs-string">"tickMax"</span> : <span class="hljs-string">"11285"</span> 
  }, 
  { 
    <span class="hljs-string">"datafile"</span> : <span class="hljs-string">"/tmp/arangosh_fbeCmF/tmp-46-1143880553/data/journals/logfile-10220.db"</span>, 
    <span class="hljs-string">"status"</span> : <span class="hljs-string">"collected"</span>, 
    <span class="hljs-string">"tickMin"</span> : <span class="hljs-string">"11292"</span>, 
    <span class="hljs-string">"tickMax"</span> : <span class="hljs-string">"11298"</span> 
  }, 
  { 
    <span class="hljs-string">"datafile"</span> : <span class="hljs-string">"/tmp/arangosh_fbeCmF/tmp-46-1143880553/data/journals/logfile-10291.db"</span>, 
    <span class="hljs-string">"status"</span> : <span class="hljs-string">"open"</span>, 
    <span class="hljs-string">"tickMin"</span> : <span class="hljs-string">"11304"</span>, 
    <span class="hljs-string">"tickMax"</span> : <span class="hljs-string">"11350"</span> 
  } 
]
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_cluster_inventory.md -->
@startDocuBlock JSF_get_api_replication_cluster_inventory

@brief returs an overview of collections and indexes in a cluster

@RESTHEADER{GET /_api/replication/clusterInventory, Return cluster inventory of collections and indexes}

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{includeSystem,boolean,optional}
Include system collections in the result. The default value is *true*.

@RESTDESCRIPTION
Returns the array of collections and indexes available on the cluster.

The response will be an array of JSON objects, one for each collection.
Each collection containscontains exactly two keys "parameters" and
"indexes". This
information comes from Plan/Collections/{DB-Name}/* in the agency,
just that the *indexes* attribute there is relocated to adjust it to
the data format of arangodump.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_batch_replication.md -->
@startDocuBlock JSF_put_batch_replication

@brief handle a dump batch command

@RESTHEADER{PUT /_api/replication/batch/{id}, Prolong existing dump batch}

**Note**: These calls are uninteresting to users.

@RESTBODYPARAM{ttl,integer,required,int64}
the time-to-live for the new batch (in seconds)

@RESTURLPARAMETERS

@RESTURLPARAM{id,string,required}
The id of the batch.

@RESTDESCRIPTION
Extends the ttl of an existing dump batch, using the batch's id and
the provided ttl value.

If the batch's ttl can be extended successfully, the response is empty.

**Note**: on a coordinator, this request must have the query parameter
*DBserver* which must be an ID of a DBserver.
The very same request is forwarded synchronously to that DBserver.
It is an error if this attribute is not bound in the coordinator case.

@RESTRETURNCODES

@RESTRETURNCODE{204}
is returned if the batch's ttl was extended successfully.

@RESTRETURNCODE{400}
is returned if the ttl value is invalid or the batch was not found.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_put_api_replication_makeSlave.md -->
@startDocuBlock JSF_put_api_replication_makeSlave

@brief Changes role to slave

@RESTHEADER{PUT /_api/replication/make-slave, Turn the server into a slave of another}

@RESTBODYPARAM{endpoint,string,required,string}
the master endpoint to connect to (e.g. "tcp://192.168.173.13:8529").

@RESTBODYPARAM{database,string,required,string}
the database name on the master (if not specified, defaults to the
name of the local current database).

@RESTBODYPARAM{username,string,optional,string}
an optional ArangoDB username to use when connecting to the master.

@RESTBODYPARAM{password,string,required,string}
the password to use when connecting to the master.

@RESTBODYPARAM{includeSystem,boolean,required,}
whether or not system collection operations will be applied

@RESTBODYPARAM{restrictType,string,optional,string}
an optional string value for collection filtering. When
specified, the allowed values are *include* or *exclude*.

@RESTBODYPARAM{restrictCollections,array,optional,string}
an optional array of collections for use with *restrictType*.
If *restrictType* is *include*, only the specified collections
will be sychronised. If *restrictType* is *exclude*, all but the specified
collections will be synchronized.

@RESTBODYPARAM{maxConnectRetries,integer,optional,int64}
the maximum number of connection attempts the applier
will make in a row. If the applier cannot establish a connection to the
endpoint in this number of attempts, it will stop itself.

@RESTBODYPARAM{connectTimeout,integer,optional,int64}
the timeout (in seconds) when attempting to connect to the
endpoint. This value is used for each connection attempt.

@RESTBODYPARAM{requestTimeout,integer,optional,int64}
the timeout (in seconds) for individual requests to the endpoint.

@RESTBODYPARAM{chunkSize,integer,optional,int64}
the requested maximum size for log transfer packets that
is used when the endpoint is contacted.

@RESTBODYPARAM{adaptivePolling,boolean,optional,}
whether or not the replication applier will use adaptive polling.

@RESTBODYPARAM{autoResync,boolean,optional,}
whether or not the slave should perform an automatic resynchronization with
the master in case the master cannot serve log data requested by the slave,
or when the replication is started and no tick value can be found.

@RESTBODYPARAM{autoResyncRetries,integer,optional,int64}
number of resynchronization retries that will be performed in a row when
automatic resynchronization is enabled and kicks in. Setting this to *0* will
effectively disable *autoResync*. Setting it to some other value will limit
the number of retries that are performed. This helps preventing endless retries
in case resynchronizations always fail.

@RESTBODYPARAM{initialSyncMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the initial synchronization will
wait for a response from the master when fetching initial collection data.
This wait time can be used to control after what time the initial synchronization
will give up waiting for a response and fail. This value is relevant even
for continuous replication when *autoResync* is set to *true* because this
may re-start the initial synchronization when the master cannot provide
log data the slave requires.
This value will be ignored if set to *0*.

@RESTBODYPARAM{connectionRetryWaitTime,integer,optional,int64}
the time (in seconds) that the applier will intentionally idle before
it retries connecting to the master in case of connection problems.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMinWaitTime,integer,optional,int64}
the minimum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data. This wait time can be used to control the
frequency with which the replication applier sends HTTP log fetch requests
to the master in case there is no write activity on the master.
This value will be ignored if set to *0*.

@RESTBODYPARAM{idleMaxWaitTime,integer,optional,int64}
the maximum wait time (in seconds) that the applier will intentionally idle
before fetching more log data from the master in case the master has
already sent all its log data and there have been previous log fetch attempts
that resulted in no more log data. This wait time can be used to control the
maximum frequency with which the replication applier sends HTTP log fetch
requests to the master in case there is no write activity on the master for
longer periods. This configuration value will only be used if the option
*adaptivePolling* is set to *true*.
This value will be ignored if set to *0*.

@RESTBODYPARAM{requireFromPresent,boolean,optional,}
if set to *true*, then the replication applier will check
at start of its continuous replication if the start tick from the dump phase
is still present on the master. If not, then there would be data loss. If
*requireFromPresent* is *true*, the replication applier will abort with an
appropriate error message. If set to *false*, then the replication applier will
still start, and ignore the data loss.

@RESTBODYPARAM{verbose,boolean,optional,}
if set to *true*, then a log line will be emitted for all operations
performed by the replication applier. This should be used for debugging
replication
problems only.

@RESTDESCRIPTION
Starts a full data synchronization from a remote endpoint into the local ArangoDB
database and afterwards starts the continuous replication.
The operation works on a per-database level.

All local database data will be removed prior to the synchronization.

In case of success, the body of the response is a JSON object with the following
attributes:

- *state*: a JSON object with the following sub-attributes:

  - *running*: whether or not the applier is active and running

  - *lastAppliedContinuousTick*: the last tick value from the continuous
    replication log the applier has applied.

  - *lastProcessedContinuousTick*: the last tick value from the continuous
    replication log the applier has processed.

    Regularly, the last applied and last processed tick values should be
    identical. For transactional operations, the replication applier will first
    process incoming log events before applying them, so the processed tick
    value might be higher than the applied tick value. This will be the case
    until the applier encounters the *transaction commit* log event for the
    transaction.

  - *lastAvailableContinuousTick*: the last tick value the logger server can
    provide.

  - *time*: the time on the applier server.

  - *totalRequests*: the total number of requests the applier has made to the
    endpoint.

  - *totalFailedConnects*: the total number of failed connection attempts the
    applier has made.

  - *totalEvents*: the total number of log events the applier has processed.

  - *totalOperationsExcluded*: the total number of log events excluded because
    of *restrictCollections*.

  - *progress*: a JSON object with details about the replication applier progress.
    It contains the following sub-attributes if there is progress to report:

    - *message*: a textual description of the progress

    - *time*: the date and time the progress was logged

    - *failedConnects*: the current number of failed connection attempts

  - *lastError*: a JSON object with details about the last error that happened on
    the applier. It contains the following sub-attributes if there was an error:

    - *errorNum*: a numerical error code

    - *errorMessage*: a textual error description

    - *time*: the date and time the error occurred

    In case no error has occurred, *lastError* will be empty.

- *server*: a JSON object with the following sub-attributes:

  - *version*: the applier server's version

  - *serverId*: the applier server's id

- *endpoint*: the endpoint the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

- *database*: the name of the database the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

WARNING: calling this method will sychronize data from the collections found
on the remote master to the local ArangoDB database. All data in the local
collections will be purged and replaced with data from the master.

Use with caution!

Please also keep in mind that this command may take a long time to complete
and return. This is because it will first do a full data synchronization with
the master, which will take time roughly proportional to the amount of data.

**Note**: this method is not supported on a coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{400}
is returned if the configuration is incomplete or malformed.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred during sychronization or when starting the
continuous replication.

@RESTRETURNCODE{501}
is returned when this operation is called on a coordinator in a cluster.
@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_applier_state.md -->
@startDocuBlock JSF_get_api_replication_applier_state

@brief output the current status of the replication

@RESTHEADER{GET /_api/replication/applier-state, State of the replication applier}

@RESTDESCRIPTION
Returns the state of the replication applier, regardless of whether the
applier is currently running or not.

The response is a JSON object with the following attributes:

- *state*: a JSON object with the following sub-attributes:

  - *running*: whether or not the applier is active and running

  - *lastAppliedContinuousTick*: the last tick value from the continuous
    replication log the applier has applied.

  - *lastProcessedContinuousTick*: the last tick value from the continuous
    replication log the applier has processed.

    Regularly, the last applied and last processed tick values should be
    identical. For transactional operations, the replication applier will first
    process incoming log events before applying them, so the processed tick
    value might be higher than the applied tick value. This will be the case
    until the applier encounters the *transaction commit* log event for the
    transaction.

  - *lastAvailableContinuousTick*: the last tick value the logger server can
    provide.

  - *time*: the time on the applier server.

  - *totalRequests*: the total number of requests the applier has made to the
    endpoint.

  - *totalFailedConnects*: the total number of failed connection attempts the
    applier has made.

  - *totalEvents*: the total number of log events the applier has processed.

  - *totalOperationsExcluded*: the total number of log events excluded because
    of *restrictCollections*.

  - *progress*: a JSON object with details about the replication applier progress.
    It contains the following sub-attributes if there is progress to report:

    - *message*: a textual description of the progress

    - *time*: the date and time the progress was logged

    - *failedConnects*: the current number of failed connection attempts

  - *lastError*: a JSON object with details about the last error that happened on
    the applier. It contains the following sub-attributes if there was an error:

    - *errorNum*: a numerical error code

    - *errorMessage*: a textual error description

    - *time*: the date and time the error occurred

    In case no error has occurred, *lastError* will be empty.

- *server*: a JSON object with the following sub-attributes:

  - *version*: the applier server's version

  - *serverId*: the applier server's id

- *endpoint*: the endpoint the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

- *database*: the name of the database the applier is connected to (if applier is
  active) or will connect to (if applier is currently inactive)

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@EXAMPLES

Fetching the state of an inactive applier:


<div class="example-container" id="RestReplicationApplierStateNotRunning_container">
<a class="anchorjs-link " href="#RestReplicationApplierStateNotRunning_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationApplierStateNotRunning_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-state

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"phase"</span> : <span class="hljs-string">"inactive"</span>, 
    <span class="hljs-string">"lastAppliedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastProcessedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastAvailableContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"safeResumeTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"progress"</span> : { 
      <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:42Z"</span>, 
      <span class="hljs-string">"message"</span> : <span class="hljs-string">"applier shut down"</span>, 
      <span class="hljs-string">"failedConnects"</span> : <span class="hljs-number">1</span> 
    }, 
    <span class="hljs-string">"totalRequests"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"totalFailedConnects"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalResyncs"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalOperationsExcluded"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"lastError"</span> : { 
      <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:42Z"</span> 
  }, 
  <span class="hljs-string">"server"</span> : { 
    <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
    <span class="hljs-string">"serverId"</span> : <span class="hljs-string">"189933869155880"</span> 
  }, 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
}
</pre>
<div id="RestReplicationApplierStateNotRunning_container_collapse" onclick="$('#RestReplicationApplierStateNotRunning_long').hide(); $('#RestReplicationApplierStateNotRunning_short').show(); window.location.hash='RestReplicationApplierStateNotRunning_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStateNotRunning_short" onclick="$('#RestReplicationApplierStateNotRunning_short').hide(); $('#RestReplicationApplierStateNotRunning_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-state

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




Fetching the state of an active applier:


<div class="example-container" id="RestReplicationApplierStateRunning_container">
<a class="anchorjs-link " href="#RestReplicationApplierStateRunning_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationApplierStateRunning_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-state

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"state"</span> : { 
    <span class="hljs-string">"running"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"phase"</span> : <span class="hljs-string">"running"</span>, 
    <span class="hljs-string">"lastAppliedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastProcessedContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"lastAvailableContinuousTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"safeResumeTick"</span> : <span class="hljs-literal">null</span>, 
    <span class="hljs-string">"progress"</span> : { 
      <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:42Z"</span>, 
      <span class="hljs-string">"message"</span> : <span class="hljs-string">"fetching master state information"</span>, 
      <span class="hljs-string">"failedConnects"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"totalRequests"</span> : <span class="hljs-number">2</span>, 
    <span class="hljs-string">"totalFailedConnects"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"totalEvents"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalResyncs"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"totalOperationsExcluded"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"lastError"</span> : { 
      <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">0</span> 
    }, 
    <span class="hljs-string">"time"</span> : <span class="hljs-string">"2020-02-03T15:48:42Z"</span> 
  }, 
  <span class="hljs-string">"server"</span> : { 
    <span class="hljs-string">"version"</span> : <span class="hljs-string">"3.3.25"</span>, 
    <span class="hljs-string">"serverId"</span> : <span class="hljs-string">"189933869155880"</span> 
  }, 
  <span class="hljs-string">"endpoint"</span> : <span class="hljs-string">"tcp://127.0.0.1:8529"</span>, 
  <span class="hljs-string">"database"</span> : <span class="hljs-string">"_system"</span> 
}
</pre>
<div id="RestReplicationApplierStateRunning_container_collapse" onclick="$('#RestReplicationApplierStateRunning_long').hide(); $('#RestReplicationApplierStateRunning_short').show(); window.location.hash='RestReplicationApplierStateRunning_container';" class="example_show_button">Hide response body</div></div>
<div id="RestReplicationApplierStateRunning_short" onclick="$('#RestReplicationApplierStateRunning_short').hide(); $('#RestReplicationApplierStateRunning_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/applier-state

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Replication/JSF_get_api_replication_logger_first_tick.md -->
@startDocuBlock JSF_get_api_replication_logger_first_tick

@brief Return the first available tick value from the server

@RESTHEADER{GET /_api/replication/logger-first-tick, Returns the first available tick value}

@RESTDESCRIPTION
Returns the first available tick value that can be served from the server's
replication log. This method can be called by replication clients after to
determine if certain data (identified by a tick value) is still available
for replication.

The result is a JSON object containing the attribute *firstTick*. This
attribute contains the minimum tick value available in the server's
replication
log.

**Note**: this method is not supported on a coordinator in a cluster.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the request was executed successfully.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@RESTRETURNCODE{500}
is returned if an error occurred while assembling the response.

@RESTRETURNCODE{501}
is returned when this operation is called on a coordinator in a cluster.

@EXAMPLES

Returning the first available tick


<div class="example-container" id="RestReplicationLoggerFirstTick_container">
<a class="anchorjs-link " href="#RestReplicationLoggerFirstTick_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestReplicationLoggerFirstTick_long">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/replication/logger-first-tick

HTTP/1.1 200 OK
content-type: application/json; charset=utf-8
x-content-type-options: nosniff

"{\"firstTick\":\"5\"}"
</pre>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_modify_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_modify_http_examples

@brief replace an existing vertex

@RESTHEADER{PATCH /_api/gharial/{graph-name}/vertex/{collection-name}/{vertex-key}, Modify a vertex}

@RESTDESCRIPTION
Updates the data of the specific vertex in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required}
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex-key,string,required} 
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{keepNull,boolean,optional}
Define if values set to null should be stored. By default the key is not removed from the document.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTALLBODYPARAM{replaceAttributes,object,required}
The body has to contain a JSON object containing exactly the attributes that should be replaced.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be updated.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no vertex collection or no vertex with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialModifyVertex_container">
<a class="anchorjs-link " href="#HttpGharialModifyVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialModifyVertex_long" style="Display: none;">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice &lt;&lt;EOF
{ 
  <span class="hljs-string">"age"</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Mh---_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"vertex"</span> : { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Mh---_"</span>, 
    <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7Mgq--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialModifyVertex_container_collapse" onclick="$('#HttpGharialModifyVertex_long').hide(); $('#HttpGharialModifyVertex_short').show(); window.location.hash='HttpGharialModifyVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialModifyVertex_short" onclick="$('#HttpGharialModifyVertex_short').hide(); $('#HttpGharialModifyVertex_long').show();">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice &lt;&lt;EOF
{ 
  <span class="hljs-string">"age"</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Mh---_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_list_vertex_http_examples.md -->
@startDocuBlock JSF_general_graph_list_vertex_http_examples

@brief Lists all vertex collections used in this graph.

@RESTHEADER{GET /_api/gharial/{graph-name}/vertex, List vertex collections}

@RESTDESCRIPTION
Lists all vertex collections within this graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the collections could be listed.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialListVertex_container">
<a class="anchorjs-link " href="#HttpGharialListVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialListVertex_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"collections"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span> 
  ], 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="HttpGharialListVertex_container_collapse" onclick="$('#HttpGharialListVertex_long').hide(); $('#HttpGharialListVertex_short').show(); window.location.hash='HttpGharialListVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialListVertex_short" onclick="$('#HttpGharialListVertex_short').hide(); $('#HttpGharialListVertex_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_replace_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_replace_http_examples

@brief replaces an existing vertex

@RESTHEADER{PUT /_api/gharial/{graph-name}/vertex/{collection-name}/{vertex-key}, Replace a vertex}

@RESTDESCRIPTION
Replaces the data of a vertex in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex-key,string,required} 
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTALLBODYPARAM{storeThisJsonObject,object,required}
The body has to be the JSON object to be stored.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be replaced.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no vertex collection or no vertex with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialReplaceVertex_container">
<a class="anchorjs-link " href="#HttpGharialReplaceVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialReplaceVertex_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice Cooper"</span>, 
  <span class="hljs-string">"age"</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7M56--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"vertex"</span> : { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7M56--_"</span>, 
    <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7M5q--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialReplaceVertex_container_collapse" onclick="$('#HttpGharialReplaceVertex_long').hide(); $('#HttpGharialReplaceVertex_short').show(); window.location.hash='HttpGharialReplaceVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialReplaceVertex_short" onclick="$('#HttpGharialReplaceVertex_short').hide(); $('#HttpGharialReplaceVertex_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice Cooper"</span>, 
  <span class="hljs-string">"age"</span> : <span class="hljs-number">26</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7M56--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_get_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_get_http_examples

@brief fetches an existing vertex

@RESTHEADER{GET /_api/gharial/{graph-name}/vertex/{collection-name}/{vertex-key}, Get a vertex}

@RESTDESCRIPTION
Gets a vertex from the given collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex-key,string,required} 
The *_key* attribute of the vertex.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is returned,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be found.

@RESTRETURNCODE{404}
Returned if no graph with this name, no vertex collection or no vertex with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialGetVertex_container">
<a class="anchorjs-link " href="#HttpGharialGetVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialGetVertex_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7MGi--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"vertex"</span> : { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"alice"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"female/alice"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7MGi--_"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"Alice"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="HttpGharialGetVertex_container_collapse" onclick="$('#HttpGharialGetVertex_long').hide(); $('#HttpGharialGetVertex_short').show(); window.location.hash='HttpGharialGetVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialGetVertex_short" onclick="$('#HttpGharialGetVertex_short').hide(); $('#HttpGharialGetVertex_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7MGi--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_collection_add_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_collection_add_http_examples

@brief Add an additional vertex collection to the graph.

@RESTHEADER{POST /_api/gharial/{graph-name}/vertex, Add vertex collection}

@RESTDESCRIPTION
Adds a vertex collection to the set of collections of the graph. If
the collection does not exist, it will be created.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the edge collection could be added successfully and
waitForSync is true.

@RESTRETURNCODE{202}
Returned if the edge collection could be added successfully and
waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialAddVertexCol_container">
<a class="anchorjs-link " href="#HttpGharialAddVertexCol_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialAddVertexCol_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"otherVertices"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Le6--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"social"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ 
      <span class="hljs-string">"otherVertices"</span> 
    ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/social"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Le6--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialAddVertexCol_container_collapse" onclick="$('#HttpGharialAddVertexCol_long').hide(); $('#HttpGharialAddVertexCol_short').show(); window.location.hash='HttpGharialAddVertexCol_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddVertexCol_short" onclick="$('#HttpGharialAddVertexCol_short').hide(); $('#HttpGharialAddVertexCol_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"otherVertices"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Le6--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_get_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_get_http_examples

@brief fetch an edge

@RESTHEADER{GET /_api/gharial/{graph-name}/edge/{collection-name}/{edge-key}, Get an edge}

@RESTDESCRIPTION
Gets an edge from the given collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge-key,string,required} 
The *_key* attribute of the vertex.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is returned,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the edge could be found.

@RESTRETURNCODE{404}
Returned if no graph with this name, no edge collection or no edge with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialGetEdge_container">
<a class="anchorjs-link " href="#HttpGharialGetEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialGetEdge_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge/relation/8620

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7M_C--B
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"edge"</span> : { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"8620"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/8620"</span>, 
    <span class="hljs-string">"_from"</span> : <span class="hljs-string">"male/charly"</span>, 
    <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7M_C--B"</span>, 
    <span class="hljs-string">"type"</span> : <span class="hljs-string">"married"</span>, 
    <span class="hljs-string">"vertex"</span> : <span class="hljs-string">"charly"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="HttpGharialGetEdge_container_collapse" onclick="$('#HttpGharialGetEdge_long').hide(); $('#HttpGharialGetEdge_short').show(); window.location.hash='HttpGharialGetEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialGetEdge_short" onclick="$('#HttpGharialGetEdge_short').hide(); $('#HttpGharialGetEdge_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge/relation/8620

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7M_C--B
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_replace_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_replace_http_examples

@brief replace the content of an existing edge

@RESTHEADER{PUT /_api/gharial/{graph-name}/edge/{collection-name}/{edge-key}, Replace an edge}

@RESTDESCRIPTION
Replaces the data of an edge in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge-key,string,required} 
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTALLBODYPARAM{storeThisJsonObject,object,required}
The body has to be the JSON object to be stored.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the request was successful but waitForSync is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no edge collection or no edge with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialPutEdge_container">
<a class="anchorjs-link " href="#HttpGharialPutEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialPutEdge_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/9250 &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"divorced"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Mom--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"edge"</span> : { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/9250"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9250"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Mom--_"</span>, 
    <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7MoW--D"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialPutEdge_container_collapse" onclick="$('#HttpGharialPutEdge_long').hide(); $('#HttpGharialPutEdge_short').show(); window.location.hash='HttpGharialPutEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialPutEdge_short" onclick="$('#HttpGharialPutEdge_short').hide(); $('#HttpGharialPutEdge_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/9250 &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"divorced"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"male/bob"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Mom--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_definition_modify_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_definition_modify_http_examples

@brief Replace an existing edge definition

@RESTHEADER{PUT /_api/gharial/{graph-name}/edge/{definition-name}, Replace an edge definition}

@RESTDESCRIPTION
Change one specific edge definition.
This will modify all occurrences of this definition in all graphs known to your database.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{definition-name,string,required}
The name of the edge collection used in the definition.

@RESTBODYPARAM{collection,string,required,string}
The name of the edge collection to be used.

@RESTBODYPARAM{from,array,required,string}
One or many vertex collections that can contain source vertices.

@RESTBODYPARAM{to,array,required,string}
One or many vertex collections that can contain target vertices.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the request was successful and waitForSync is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{400}
Returned if no edge definition with this name is found in the graph.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialReplaceEdgeCol_container">
<a class="anchorjs-link " href="#HttpGharialReplaceEdgeCol_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialReplaceEdgeCol_long" style="Display: none;">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span>, 
    <span class="hljs-string">"animal"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span>, 
    <span class="hljs-string">"animal"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7M0u--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"social"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"animal"</span>, 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"animal"</span>, 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/social"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7M0u--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialReplaceEdgeCol_container_collapse" onclick="$('#HttpGharialReplaceEdgeCol_long').hide(); $('#HttpGharialReplaceEdgeCol_short').show(); window.location.hash='HttpGharialReplaceEdgeCol_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialReplaceEdgeCol_short" onclick="$('#HttpGharialReplaceEdgeCol_short').hide(); $('#HttpGharialReplaceEdgeCol_long').show();">
<pre>
shell> curl -X PUT --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span>, 
    <span class="hljs-string">"animal"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span>, 
    <span class="hljs-string">"animal"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7M0u--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_create_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_create_http_examples

@brief Creates an edge in an existing graph

@RESTHEADER{POST /_api/gharial/{graph-name}/edge/{collection-name}, Create an edge}

@RESTDESCRIPTION
Creates a new edge in the collection.
Within the body the has to contain a *_from* and *_to* value referencing to valid vertices in the graph.
Furthermore the edge has to be valid in the definition of this
[edge collection](../../Manual/Appendix/Glossary.html#edge-collection).

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the edge collection the edge belongs to.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{_from,string,required}

@RESTQUERYPARAM{_to,string,required}

@RESTALLBODYPARAM{storeThisJsonObject,object,required}
The body has to be the JSON object to be stored.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the edge could be created.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no edge collection or no edge with this id could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialAddEdge_container">
<a class="anchorjs-link " href="#HttpGharialAddEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialAddEdge_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7LR6--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"edge"</span> : { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/7987"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"7987"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LR6--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialAddEdge_container_collapse" onclick="$('#HttpGharialAddEdge_long').hide(); $('#HttpGharialAddEdge_short').show(); window.location.hash='HttpGharialAddEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddEdge_short" onclick="$('#HttpGharialAddEdge_short').hide(); $('#HttpGharialAddEdge_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation &lt;&lt;EOF
{ 
  <span class="hljs-string">"type"</span> : <span class="hljs-string">"friend"</span>, 
  <span class="hljs-string">"_from"</span> : <span class="hljs-string">"female/alice"</span>, 
  <span class="hljs-string">"_to"</span> : <span class="hljs-string">"female/diana"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7LR6--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_definition_add_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_definition_add_http_examples

@brief Add a new edge definition to the graph

@RESTHEADER{POST /_api/gharial/{graph-name}/edge, Add edge definition}

@RESTDESCRIPTION
Adds an additional edge definition to the graph.

This edge definition has to contain a *collection* and an array of
each *from* and *to* vertex collections.  An edge definition can only
be added if this definition is either not used in any other graph, or
it is used with exactly the same definition. It is not possible to
store a definition "e" from "v1" to "v2" in the one graph, and "e"
from "v2" to "v1" in the other graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTBODYPARAM{collection,string,required,string}
The name of the edge collection to be used.

@RESTBODYPARAM{from,array,required,string}
One or many vertex collections that can contain source vertices.

@RESTBODYPARAM{to,array,required,string}
One or many vertex collections that can contain target vertices.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the definition could be added successfully and
waitForSync is enabled for the `_graphs` collection.

@RESTRETURNCODE{202}
Returned if the definition could be added successfully and
waitForSync is disabled for the `_graphs` collection.

@RESTRETURNCODE{400}
Returned if the defininition could not be added, the edge collection
is used in an other graph with a different signature.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialAddEdgeCol_container">
<a class="anchorjs-link " href="#HttpGharialAddEdgeCol_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialAddEdgeCol_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"works_in"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"city"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7LVe--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"social"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ] 
      }, 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"works_in"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"city"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/social"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LVe--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialAddEdgeCol_container_collapse" onclick="$('#HttpGharialAddEdgeCol_long').hide(); $('#HttpGharialAddEdgeCol_short').show(); window.location.hash='HttpGharialAddEdgeCol_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddEdgeCol_short" onclick="$('#HttpGharialAddEdgeCol_short').hide(); $('#HttpGharialAddEdgeCol_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge &lt;&lt;EOF
{ 
  <span class="hljs-string">"collection"</span> : <span class="hljs-string">"works_in"</span>, 
  <span class="hljs-string">"from"</span> : [ 
    <span class="hljs-string">"female"</span>, 
    <span class="hljs-string">"male"</span> 
  ], 
  <span class="hljs-string">"to"</span> : [ 
    <span class="hljs-string">"city"</span> 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7LVe--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_drop_http_examples.md -->
@startDocuBlock JSF_general_graph_drop_http_examples

@brief delete an existing graph

@RESTHEADER{DELETE /_api/gharial/{graph-name}, Drop a graph}

@RESTDESCRIPTION
Removes a graph from the collection *_graphs*.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{dropCollections,boolean,optional}
Drop collections of this graph as well.  Collections will only be
dropped if they are not used in other graphs.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Is returned if the graph could be dropped and waitForSync is enabled
for the `_graphs` collection. 

@RESTRETURNCODE{202}
Returned if the graph could be dropped and waitForSync is disabled
for the `_graphs` collection.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialDrop_container">
<a class="anchorjs-link " href="#HttpGharialDrop_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialDrop_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social?dropCollections=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"removed"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialDrop_container_collapse" onclick="$('#HttpGharialDrop_long').hide(); $('#HttpGharialDrop_short').show(); window.location.hash='HttpGharialDrop_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialDrop_short" onclick="$('#HttpGharialDrop_short').hide(); $('#HttpGharialDrop_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social?dropCollections=true

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_list_edge_http_examples.md -->
@startDocuBlock JSF_general_graph_list_edge_http_examples

@brief Lists all edge definitions

@RESTHEADER{GET /_api/gharial/{graph-name}/edge, List edge definitions}

@RESTDESCRIPTION
Lists all edge collections within this graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the edge definitions could be listed.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialListEdge_container">
<a class="anchorjs-link " href="#HttpGharialListEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialListEdge_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"collections"</span> : [ 
    <span class="hljs-string">"relation"</span> 
  ], 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="HttpGharialListEdge_container_collapse" onclick="$('#HttpGharialListEdge_long').hide(); $('#HttpGharialListEdge_short').show(); window.location.hash='HttpGharialListEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialListEdge_short" onclick="$('#HttpGharialListEdge_short').hide(); $('#HttpGharialListEdge_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_definition_remove_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_definition_remove_http_examples

@brief Remove an edge definition form the graph

@RESTHEADER{DELETE /_api/gharial/{graph-name}/edge/{definition-name}, Remove an edge definition from the graph}

@RESTDESCRIPTION
Remove one edge definition from the graph.  This will only remove the
edge collection, the vertex collections remain untouched and can still
be used in your queries.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{definition-name,string,required}
The name of the edge collection used in the definition.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{dropCollection,boolean,optional}
Drop the collection as well.
Collection will only be dropped if it is not used in other graphs.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the edge definition could be removed from the graph 
and waitForSync is true.

@RESTRETURNCODE{202}
Returned if the edge definition could be removed from the graph and
waitForSync is false.

@RESTRETURNCODE{400}
Returned if no edge definition with this name is found in the graph.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialEdgeDefinitionRemove_container">
<a class="anchorjs-link " href="#HttpGharialEdgeDefinitionRemove_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialEdgeDefinitionRemove_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge/relation

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7L7G--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"social"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ ], 
    <span class="hljs-string">"orphanCollections"</span> : [ 
      <span class="hljs-string">"female"</span>, 
      <span class="hljs-string">"male"</span> 
    ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/social"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7L7G--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialEdgeDefinitionRemove_container_collapse" onclick="$('#HttpGharialEdgeDefinitionRemove_long').hide(); $('#HttpGharialEdgeDefinitionRemove_short').show(); window.location.hash='HttpGharialEdgeDefinitionRemove_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialEdgeDefinitionRemove_short" onclick="$('#HttpGharialEdgeDefinitionRemove_short').hide(); $('#HttpGharialEdgeDefinitionRemove_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge/relation

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7L7G--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_delete_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_delete_http_examples

@brief removes a vertex from a graph

@RESTHEADER{DELETE /_api/gharial/{graph-name}/vertex/{collection-name}/{vertex-key}, Remove a vertex}

@RESTDESCRIPTION
Removes a vertex from the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the vertex collection the vertex belongs to.

@RESTURLPARAM{vertex-key,string,required} 
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the vertex could be removed.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no vertex collection or no vertex with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialDeleteVertex_container">
<a class="anchorjs-link " href="#HttpGharialDeleteVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialDeleteVertex_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"removed"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialDeleteVertex_container_collapse" onclick="$('#HttpGharialDeleteVertex_long').hide(); $('#HttpGharialDeleteVertex_short').show(); window.location.hash='HttpGharialDeleteVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialDeleteVertex_short" onclick="$('#HttpGharialDeleteVertex_short').hide(); $('#HttpGharialDeleteVertex_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/female/alice

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_create_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_create_http_examples

@brief create a new vertex

@RESTHEADER{POST /_api/gharial/{graph-name}/vertex/{collection-name}, Create a vertex}

@RESTDESCRIPTION
Adds a vertex to the given collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the vertex collection the vertex belongs to.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTALLBODYPARAM{storeThisObject,object,required}
The body has to be the JSON object to be stored.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the vertex could be added and waitForSync is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph or no vertex collection with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialAddVertex_container">
<a class="anchorjs-link " href="#HttpGharialAddVertex_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialAddVertex_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/male &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Francis"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Lbi--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"vertex"</span> : { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"male/8142"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"8142"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Lbi--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialAddVertex_container_collapse" onclick="$('#HttpGharialAddVertex_long').hide(); $('#HttpGharialAddVertex_short').show(); window.location.hash='HttpGharialAddVertex_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialAddVertex_short" onclick="$('#HttpGharialAddVertex_short').hide(); $('#HttpGharialAddVertex_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/vertex/male &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"Francis"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Lbi--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_vertex_collection_remove_http_examples.md -->
@startDocuBlock JSF_general_graph_vertex_collection_remove_http_examples

@brief Remove a vertex collection form the graph.

@RESTHEADER{DELETE /_api/gharial/{graph-name}/vertex/{collection-name}, Remove vertex collection}

@RESTDESCRIPTION
Removes a vertex collection from the graph and optionally deletes the collection,
if it is not used in any other graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required}
The name of the vertex collection.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{dropCollection,boolean,optional}
Drop the collection as well.
Collection will only be dropped if it is not used in other graphs.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Returned if the vertex collection was removed from the graph successfully
and waitForSync is true.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{400}
Returned if the vertex collection is still used in an edge definition.
In this case it cannot be removed from the graph yet, it has to be
removed from the edge definition first.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES

You can remove vertex collections that are not used in any edge collection:


<div class="example-container" id="HttpGharialRemoveVertexCollection_container">
<a class="anchorjs-link " href="#HttpGharialRemoveVertexCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialRemoveVertexCollection_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/otherVertices

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Msi--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"social"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"female"</span>, 
          <span class="hljs-string">"male"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/social"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Msi--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialRemoveVertexCollection_container_collapse" onclick="$('#HttpGharialRemoveVertexCollection_long').hide(); $('#HttpGharialRemoveVertexCollection_short').show(); window.location.hash='HttpGharialRemoveVertexCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialRemoveVertexCollection_short" onclick="$('#HttpGharialRemoveVertexCollection_short').hide(); $('#HttpGharialRemoveVertexCollection_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/otherVertices

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Msi--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




You cannot remove vertex collections that are used in edge collections:


<div class="example-container" id="HttpGharialRemoveVertexCollectionFailed_container">
<a class="anchorjs-link " href="#HttpGharialRemoveVertexCollectionFailed_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialRemoveVertexCollectionFailed_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/male

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1928</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"not in orphan collection"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="HttpGharialRemoveVertexCollectionFailed_container_collapse" onclick="$('#HttpGharialRemoveVertexCollectionFailed_long').hide(); $('#HttpGharialRemoveVertexCollectionFailed_short').show(); window.location.hash='HttpGharialRemoveVertexCollectionFailed_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialRemoveVertexCollectionFailed_short" onclick="$('#HttpGharialRemoveVertexCollectionFailed_short').hide(); $('#HttpGharialRemoveVertexCollectionFailed_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/vertex/male

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_get_http_examples.md -->
@startDocuBlock JSF_general_graph_get_http_examples

@brief Get a graph from the graph module.

@RESTHEADER{GET /_api/gharial/{graph-name}, Get a graph}

@RESTDESCRIPTION
Gets a graph from the collection *_graphs*.
Returns the definition content of this graph.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the graph could be found.

@RESTRETURNCODE{404}
Returned if no graph with this name could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialGetGraph_container">
<a class="anchorjs-link " href="#HttpGharialGetGraph_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialGetGraph_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/myGraph

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7MCi--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"startVertices"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"endVertices"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/myGraph"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7MCi--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="HttpGharialGetGraph_container_collapse" onclick="$('#HttpGharialGetGraph_long').hide(); $('#HttpGharialGetGraph_short').show(); window.location.hash='HttpGharialGetGraph_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialGetGraph_short" onclick="$('#HttpGharialGetGraph_short').hide(); $('#HttpGharialGetGraph_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/myGraph

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7MCi--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_modify_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_modify_http_examples

@brief modify an existing edge

@RESTHEADER{PATCH /_api/gharial/{graph-name}/edge/{collection-name}/{edge-key}, Modify an edge}

@RESTDESCRIPTION
Updates the data of the specific edge in the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required}
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge-key,string,required}
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTQUERYPARAM{keepNull,boolean,optional}
Define if values set to null should be stored. By default the key is not removed from the document.

@RESTALLBODYPARAM{updateAttributes,object,required}
The body has to be a JSON object containing the attributes to be updated.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the edge could be updated.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no edge collection or no edge with this id could be found.

@EXAMPLES


<div class="example-container" id="HttpGharialPatchEdge_container">
<a class="anchorjs-link " href="#HttpGharialPatchEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialPatchEdge_long" style="Display: none;">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/9175 &lt;&lt;EOF
{ 
  <span class="hljs-string">"since"</span> : <span class="hljs-string">"01.01.2001"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Mky--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"edge"</span> : { 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"relation/9175"</span>, 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"9175"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Mky--_"</span>, 
    <span class="hljs-string">"_oldRev"</span> : <span class="hljs-string">"_a-s7Mki--F"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialPatchEdge_container_collapse" onclick="$('#HttpGharialPatchEdge_long').hide(); $('#HttpGharialPatchEdge_short').show(); window.location.hash='HttpGharialPatchEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialPatchEdge_short" onclick="$('#HttpGharialPatchEdge_short').hide(); $('#HttpGharialPatchEdge_long').show();">
<pre>
shell> curl -X PATCH --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial/social/edge/relation/9175 &lt;&lt;EOF
{ 
  <span class="hljs-string">"since"</span> : <span class="hljs-string">"01.01.2001"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Mky--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>


@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_create_http_examples.md -->
@startDocuBlock JSF_general_graph_create_http_examples

@brief Create a new graph in the graph module.

@RESTHEADER{POST /_api/gharial, Create a graph}

@RESTDESCRIPTION
The creation of a graph requires the name of the graph and a
definition of its edges.
[See also edge definitions](../../Manual/Graphs/GeneralGraphs/Management.html#edge-definitions).

@RESTBODYPARAM{name,string,required,string}
Name of the graph.

@RESTBODYPARAM{edgeDefinitions,string,optional,string}
An array of definitions for the edge

@RESTBODYPARAM{orphanCollections,string,optional,string}
An array of additional vertex collections.

@RESTBODYPARAM{isSmart,boolean,optional,boolean}
Define if the created graph should be smart.
This only has effect in Enterprise version.

@RESTBODYPARAM{options,object,optional,post_api_gharial_create_opts}
a JSON object which is only useful in Enterprise version and with isSmart set to true.
It can contain the following attributes:

@RESTSTRUCT{smartGraphAttribute,post_api_gharial_create_opts,string,required,}
The attribute name that is used to smartly shard the vertices of a graph.
Every vertex in this Graph has to have this attribute.
Cannot be modified later.

@RESTSTRUCT{numberOfShards,post_api_gharial_create_opts,integer,required,}
The number of shards that is used for every collection within this graph.
Cannot be modified later.

@RESTRETURNCODES

@RESTRETURNCODE{201}
Is returned if the graph could be created and waitForSync is enabled
for the `_graphs` collection.  The response body contains the
graph configuration that has been stored.

@RESTRETURNCODE{202}
Is returned if the graph could be created and waitForSync is disabled
for the `_graphs` collection. The response body contains the
graph configuration that has been stored.

@RESTRETURNCODE{409}
Returned if there is a conflict storing the graph.  This can occur
either if a graph with this name is already stored, or if there is one
edge definition with a the same
[edge collection](../../Manual/Appendix/Glossary.html#edge-collection) but a
different signature used in any other graph.

@EXAMPLES


<div class="example-container" id="HttpGharialCreate_container">
<a class="anchorjs-link " href="#HttpGharialCreate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialCreate_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
  <span class="hljs-string">"edgeDefinitions"</span> : [ 
    { 
      <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
      <span class="hljs-string">"from"</span> : [ 
        <span class="hljs-string">"startVertices"</span> 
      ], 
      <span class="hljs-string">"to"</span> : [ 
        <span class="hljs-string">"endVertices"</span> 
      ] 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7LjW--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"startVertices"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"endVertices"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">false</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">0</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">""</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/myGraph"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7LjW--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialCreate_container_collapse" onclick="$('#HttpGharialCreate_long').hide(); $('#HttpGharialCreate_short').show(); window.location.hash='HttpGharialCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialCreate_short" onclick="$('#HttpGharialCreate_short').hide(); $('#HttpGharialCreate_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
  <span class="hljs-string">"edgeDefinitions"</span> : [ 
    { 
      <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
      <span class="hljs-string">"from"</span> : [ 
        <span class="hljs-string">"startVertices"</span> 
      ], 
      <span class="hljs-string">"to"</span> : [ 
        <span class="hljs-string">"endVertices"</span> 
      ] 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7LjW--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>







<div class="example-container" id="HttpGharialCreate2_container">
<a class="anchorjs-link " href="#HttpGharialCreate2_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialCreate2_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
  <span class="hljs-string">"edgeDefinitions"</span> : [ 
    { 
      <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
      <span class="hljs-string">"from"</span> : [ 
        <span class="hljs-string">"startVertices"</span> 
      ], 
      <span class="hljs-string">"to"</span> : [ 
        <span class="hljs-string">"endVertices"</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">9</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">"region"</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Lmi--_
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graph"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
    <span class="hljs-string">"edgeDefinitions"</span> : [ 
      { 
        <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
        <span class="hljs-string">"from"</span> : [ 
          <span class="hljs-string">"startVertices"</span> 
        ], 
        <span class="hljs-string">"to"</span> : [ 
          <span class="hljs-string">"endVertices"</span> 
        ] 
      } 
    ], 
    <span class="hljs-string">"orphanCollections"</span> : [ ], 
    <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">true</span>, 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">9</span>, 
    <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">"region"</span>, 
    <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/myGraph"</span>, 
    <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7Lmi--_"</span> 
  }, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialCreate2_container_collapse" onclick="$('#HttpGharialCreate2_long').hide(); $('#HttpGharialCreate2_short').show(); window.location.hash='HttpGharialCreate2_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialCreate2_short" onclick="$('#HttpGharialCreate2_short').hide(); $('#HttpGharialCreate2_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/gharial &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"myGraph"</span>, 
  <span class="hljs-string">"edgeDefinitions"</span> : [ 
    { 
      <span class="hljs-string">"collection"</span> : <span class="hljs-string">"edges"</span>, 
      <span class="hljs-string">"from"</span> : [ 
        <span class="hljs-string">"startVertices"</span> 
      ], 
      <span class="hljs-string">"to"</span> : [ 
        <span class="hljs-string">"endVertices"</span> 
      ] 
    } 
  ], 
  <span class="hljs-string">"isSmart"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"options"</span> : { 
    <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">9</span>, 
    <span class="hljs-string">"smartGraphAttribute"</span> : <span class="hljs-string">"region"</span> 
  } 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
etag: _a-s7Lmi--_
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_list_http_examples.md -->
@startDocuBlock JSF_general_graph_list_http_examples

@brief Lists all graphs known to the graph module.

@RESTHEADER{GET /_api/gharial, List all graphs}

@RESTDESCRIPTION
Lists all graph names stored in this database.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Is returned if the module is available and the graphs could be listed.

@EXAMPLES


<div class="example-container" id="HttpGharialList_container">
<a class="anchorjs-link " href="#HttpGharialList_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialList_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"graphs"</span> : [ 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"routeplanner"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/routeplanner"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7MM6--_"</span>, 
      <span class="hljs-string">"orphanCollections"</span> : [ ], 
      <span class="hljs-string">"edgeDefinitions"</span> : [ 
        { 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"germanHighway"</span>, 
          <span class="hljs-string">"from"</span> : [ 
            <span class="hljs-string">"germanCity"</span> 
          ], 
          <span class="hljs-string">"to"</span> : [ 
            <span class="hljs-string">"germanCity"</span> 
          ] 
        }, 
        { 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"frenchHighway"</span>, 
          <span class="hljs-string">"from"</span> : [ 
            <span class="hljs-string">"frenchCity"</span> 
          ], 
          <span class="hljs-string">"to"</span> : [ 
            <span class="hljs-string">"frenchCity"</span> 
          ] 
        }, 
        { 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"internationalHighway"</span>, 
          <span class="hljs-string">"from"</span> : [ 
            <span class="hljs-string">"frenchCity"</span>, 
            <span class="hljs-string">"germanCity"</span> 
          ], 
          <span class="hljs-string">"to"</span> : [ 
            <span class="hljs-string">"frenchCity"</span>, 
            <span class="hljs-string">"germanCity"</span> 
          ] 
        } 
      ], 
      <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span> 
    }, 
    { 
      <span class="hljs-string">"_key"</span> : <span class="hljs-string">"social"</span>, 
      <span class="hljs-string">"_id"</span> : <span class="hljs-string">"_graphs/social"</span>, 
      <span class="hljs-string">"_rev"</span> : <span class="hljs-string">"_a-s7MKO--_"</span>, 
      <span class="hljs-string">"orphanCollections"</span> : [ ], 
      <span class="hljs-string">"edgeDefinitions"</span> : [ 
        { 
          <span class="hljs-string">"collection"</span> : <span class="hljs-string">"relation"</span>, 
          <span class="hljs-string">"from"</span> : [ 
            <span class="hljs-string">"female"</span>, 
            <span class="hljs-string">"male"</span> 
          ], 
          <span class="hljs-string">"to"</span> : [ 
            <span class="hljs-string">"female"</span>, 
            <span class="hljs-string">"male"</span> 
          ] 
        } 
      ], 
      <span class="hljs-string">"numberOfShards"</span> : <span class="hljs-number">1</span>, 
      <span class="hljs-string">"replicationFactor"</span> : <span class="hljs-number">1</span> 
    } 
  ], 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span> 
}
</pre>
<div id="HttpGharialList_container_collapse" onclick="$('#HttpGharialList_long').hide(); $('#HttpGharialList_short').show(); window.location.hash='HttpGharialList_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialList_short" onclick="$('#HttpGharialList_short').hide(); $('#HttpGharialList_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Graph/JSF_general_graph_edge_delete_http_examples.md -->
@startDocuBlock JSF_general_graph_edge_delete_http_examples

@brief removes an edge from graph

@RESTHEADER{DELETE /_api/gharial/{graph-name}/edge/{collection-name}/{edge-key}, Remove an edge}

@RESTDESCRIPTION
Removes an edge from the collection.

@RESTURLPARAMETERS

@RESTURLPARAM{graph-name,string,required}
The name of the graph.

@RESTURLPARAM{collection-name,string,required} 
The name of the edge collection the edge belongs to.

@RESTURLPARAM{edge-key,string,required} 
The *_key* attribute of the vertex.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{waitForSync,boolean,optional}
Define if the request should wait until synced to disk.

@RESTHEADERPARAMETERS

@RESTHEADERPARAM{if-match,string,optional}
If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated,
if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative
you can supply the Etag in an attribute rev in the URL.

@RESTRETURNCODES

@RESTRETURNCODE{200}
Returned if the edge could be removed.

@RESTRETURNCODE{202}
Returned if the request was successful but waitForSync is false.

@RESTRETURNCODE{404}
Returned if no graph with this name, no edge collection or no edge with this id could be found.

@RESTRETURNCODE{412}
Returned if if-match header is given, but the documents revision is different.

@EXAMPLES


<div class="example-container" id="HttpGharialDeleteEdge_container">
<a class="anchorjs-link " href="#HttpGharialDeleteEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="HttpGharialDeleteEdge_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge/relation/8331

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"removed"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">202</span> 
}
</pre>
<div id="HttpGharialDeleteEdge_container_collapse" onclick="$('#HttpGharialDeleteEdge_long').hide(); $('#HttpGharialDeleteEdge_short').show(); window.location.hash='HttpGharialDeleteEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="HttpGharialDeleteEdge_short" onclick="$('#HttpGharialDeleteEdge_short').hide(); $('#HttpGharialDeleteEdge_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/gharial/social/edge/relation/8331

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">202</span> Accepted
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/JSF_get_api_database_list.md -->
@startDocuBlock JSF_get_api_database_list

@brief retrieves a list of all existing databases

@RESTHEADER{GET /_api/database, List of databases}

@RESTDESCRIPTION
Retrieves the list of all existing databases

**Note**: retrieving the list of databases is only possible from within the *_system* database.

**Note**: You should use the [*GET user API*](../UserManagement/README.md#list-the-accessible-databases-for-a-user) to fetch the list of the available databases now.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the list of database was compiled successfully.

@RESTRETURNCODE{400}
is returned if the request is invalid.

@RESTRETURNCODE{403}
is returned if the request was not executed in the *_system* database.

@EXAMPLES


<div class="example-container" id="RestDatabaseGet_container">
<a class="anchorjs-link " href="#RestDatabaseGet_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDatabaseGet_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/database

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : [ 
    <span class="hljs-string">"_system"</span> 
  ] 
}
</pre>
<div id="RestDatabaseGet_container_collapse" onclick="$('#RestDatabaseGet_long').hide(); $('#RestDatabaseGet_short').show(); window.location.hash='RestDatabaseGet_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseGet_short" onclick="$('#RestDatabaseGet_short').hide(); $('#RestDatabaseGet_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/database

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/JSF_get_api_database_new.md -->
@startDocuBlock JSF_get_api_database_new

@brief creates a new database

@RESTHEADER{POST /_api/database, Create database}

@RESTBODYPARAM{name,string,required,string}
Has to contain a valid database name.

@RESTBODYPARAM{users,array,optional,JSF_get_api_database_new_USERS}
Has to be an array of user objects to initially create for the new database.
User information will not be changed for users that already exist.
If *users* is not specified or does not contain any users, a default user
*root* will be created with an empty string password. This ensures that the
new database will be accessible after it is created.
Each user object can contain the following attributes:

@RESTSTRUCT{username,JSF_get_api_database_new_USERS,string,required,string}
Loginname of the user to be created

@RESTSTRUCT{passwd,JSF_get_api_database_new_USERS,string,required,string}
The user password as a string. If not specified, it will default to an empty string.

@RESTSTRUCT{active,JSF_get_api_database_new_USERS,boolean,required,}
A flag indicating whether the user account should be activated or not.
The default value is *true*. If set to *false*, the user won't be able to
log into the database.

@RESTSTRUCT{extra,JSF_get_api_database_new_USERS,object,optional,}
A JSON object with extra user information. The data contained in *extra*
will be stored for the user but not be interpreted further by ArangoDB.

@RESTDESCRIPTION
Creates a new database

The response is a JSON object with the attribute *result* set to *true*.

**Note**: creating a new database is only possible from within the *_system* database.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the database was created successfully.

@RESTRETURNCODE{400}
is returned if the request parameters are invalid or if a database with the
specified name already exists.

@RESTRETURNCODE{403}
is returned if the request was not executed in the *_system* database.

@RESTRETURNCODE{409}
is returned if a database with the specified name already exists.

@EXAMPLES

Creating a database named *example*.


<div class="example-container" id="RestDatabaseCreate_container">
<a class="anchorjs-link " href="#RestDatabaseCreate_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDatabaseCreate_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/database &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"example"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestDatabaseCreate_container_collapse" onclick="$('#RestDatabaseCreate_long').hide(); $('#RestDatabaseCreate_short').show(); window.location.hash='RestDatabaseCreate_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseCreate_short" onclick="$('#RestDatabaseCreate_short').hide(); $('#RestDatabaseCreate_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/database &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"example"</span> 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Creating a database named *mydb* with two users.


<div class="example-container" id="RestDatabaseCreateUsers_container">
<a class="anchorjs-link " href="#RestDatabaseCreateUsers_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDatabaseCreateUsers_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/database &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"mydb"</span>, 
  <span class="hljs-string">"users"</span> : [ 
    { 
      <span class="hljs-string">"username"</span> : <span class="hljs-string">"admin"</span>, 
      <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secret"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span> 
    }, 
    { 
      <span class="hljs-string">"username"</span> : <span class="hljs-string">"tester"</span>, 
      <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"test001"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">false</span> 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">201</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestDatabaseCreateUsers_container_collapse" onclick="$('#RestDatabaseCreateUsers_long').hide(); $('#RestDatabaseCreateUsers_short').show(); window.location.hash='RestDatabaseCreateUsers_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseCreateUsers_short" onclick="$('#RestDatabaseCreateUsers_short').hide(); $('#RestDatabaseCreateUsers_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/database &lt;&lt;EOF
{ 
  <span class="hljs-string">"name"</span> : <span class="hljs-string">"mydb"</span>, 
  <span class="hljs-string">"users"</span> : [ 
    { 
      <span class="hljs-string">"username"</span> : <span class="hljs-string">"admin"</span>, 
      <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"secret"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">true</span> 
    }, 
    { 
      <span class="hljs-string">"username"</span> : <span class="hljs-string">"tester"</span>, 
      <span class="hljs-string">"passwd"</span> : <span class="hljs-string">"test001"</span>, 
      <span class="hljs-string">"active"</span> : <span class="hljs-literal">false</span> 
    } 
  ] 
}
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/JSF_get_api_database_current.md -->
@startDocuBlock JSF_get_api_database_current

@brief retrieves information about the current database

@RESTHEADER{GET /_api/database/current, Information of the database}

@RESTDESCRIPTION
Retrieves information about the current database

The response is a JSON object with the following attributes:

- *name*: the name of the current database

- *id*: the id of the current database

- *path*: the filesystem path of the current database

- *isSystem*: whether or not the current database is the *_system* database

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the information was retrieved successfully.

@RESTRETURNCODE{400}
is returned if the request is invalid.

@RESTRETURNCODE{404}
is returned if the database could not be found.

@EXAMPLES


<div class="example-container" id="RestDatabaseGetInfo_container">
<a class="anchorjs-link " href="#RestDatabaseGetInfo_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDatabaseGetInfo_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/database/current

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"_system"</span>, 
    <span class="hljs-string">"id"</span> : <span class="hljs-string">"1"</span>, 
    <span class="hljs-string">"path"</span> : <span class="hljs-string">"/tmp/arangosh_fbeCmF/tmp-46-1143880553/data/databases/database-1"</span>, 
    <span class="hljs-string">"isSystem"</span> : <span class="hljs-literal">true</span> 
  } 
}
</pre>
<div id="RestDatabaseGetInfo_container_collapse" onclick="$('#RestDatabaseGetInfo_long').hide(); $('#RestDatabaseGetInfo_short').show(); window.location.hash='RestDatabaseGetInfo_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseGetInfo_short" onclick="$('#RestDatabaseGetInfo_short').hide(); $('#RestDatabaseGetInfo_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/database/current

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/JSF_get_api_database_delete.md -->
@startDocuBlock JSF_get_api_database_delete

@brief drop an existing database

@RESTHEADER{DELETE /_api/database/{database-name}, Drop database}

@RESTURLPARAMETERS

@RESTURLPARAM{database-name,string,required}
The name of the database

@RESTDESCRIPTION
Drops the database along with all data stored in it.

**Note**: dropping a database is only possible from within the *_system* database.
The *_system* database itself cannot be dropped.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the database was dropped successfully.

@RESTRETURNCODE{400}
is returned if the request is malformed.

@RESTRETURNCODE{403}
is returned if the request was not executed in the *_system* database.

@RESTRETURNCODE{404}
is returned if the database could not be found.

@EXAMPLES


<div class="example-container" id="RestDatabaseDrop_container">
<a class="anchorjs-link " href="#RestDatabaseDrop_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDatabaseDrop_long" style="Display: none;">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/database/example

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : <span class="hljs-literal">true</span> 
}
</pre>
<div id="RestDatabaseDrop_container_collapse" onclick="$('#RestDatabaseDrop_long').hide(); $('#RestDatabaseDrop_short').show(); window.location.hash='RestDatabaseDrop_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseDrop_short" onclick="$('#RestDatabaseDrop_short').hide(); $('#RestDatabaseDrop_long').show();">
<pre>
shell> curl -X DELETE --header 'accept: application/json' --dump - http://localhost:8529/_api/database/example

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Database/JSF_get_api_database_user.md -->
@startDocuBlock JSF_get_api_database_user

@brief retrieves a list of all databases the current user can access

@RESTHEADER{GET /_api/database/user, List of accessible databases }

@RESTDESCRIPTION
Retrieves the list of all databases the current user can access without
specifying a different username or password.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the list of database was compiled successfully.

@RESTRETURNCODE{400}
is returned if the request is invalid.

@EXAMPLES


<div class="example-container" id="RestDatabaseGetUser_container">
<a class="anchorjs-link " href="#RestDatabaseGetUser_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestDatabaseGetUser_long" style="Display: none;">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/database/user

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">200</span>, 
  <span class="hljs-string">"result"</span> : [ 
    <span class="hljs-string">"_system"</span> 
  ] 
}
</pre>
<div id="RestDatabaseGetUser_container_collapse" onclick="$('#RestDatabaseGetUser_long').hide(); $('#RestDatabaseGetUser_short').show(); window.location.hash='RestDatabaseGetUser_container';" class="example_show_button">Hide response body</div></div>
<div id="RestDatabaseGetUser_short" onclick="$('#RestDatabaseGetUser_short').hide(); $('#RestDatabaseGetUser_long').show();">
<pre>
shell> curl --header 'accept: application/json' --dump - http://localhost:8529/_api/database/user

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">200</span> OK
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>



@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/JSF_batch_processing.md -->
@startDocuBlock JSF_batch_processing

@brief executes a batch request

@RESTHEADER{POST /_api/batch,executes a batch request} TODOSWAGGER: contentype

@RESTALLBODYPARAM{body,string,required}
The multipart batch request, consisting of the envelope and the individual
batch parts.

@RESTDESCRIPTION
Executes a batch request. A batch request can contain any number of
other requests that can be sent to ArangoDB in isolation. The benefit of
using batch requests is that batching requests requires less client/server
roundtrips than when sending isolated requests.

All parts of a batch request are executed serially on the server. The
server will return the results of all parts in a single response when all
parts are finished.

Technically, a batch request is a multipart HTTP request, with
content-type `multipart/form-data`. A batch request consists of an
envelope and the individual batch part actions. Batch part actions
are "regular" HTTP requests, including full header and an optional body.
Multiple batch parts are separated by a boundary identifier. The
boundary identifier is declared in the batch envelope. The MIME content-type
for each individual batch part must be `application/x-arango-batchpart`.

Please note that when constructing the individual batch parts, you must
use CRLF (`\r\n`) as the line terminator as in regular HTTP messages.

The response sent by the server will be an `HTTP 200` response, with an
optional error summary header `x-arango-errors`. This header contains the
number of batch part operations that failed with an HTTP error code of at
least 400. This header is only present in the response if the number of
errors is greater than zero.

The response sent by the server is a multipart response, too. It contains
the individual HTTP responses for all batch parts, including the full HTTP
result header (with status code and other potential headers) and an
optional result body. The individual batch parts in the result are
seperated using the same boundary value as specified in the request.

The order of batch parts in the response will be the same as in the
original client request. Client can additionally use the `Content-Id`
MIME header in a batch part to define an individual id for each batch part.
The server will return this id is the batch part responses, too.

@RESTRETURNCODES

@RESTRETURNCODE{200}
is returned if the batch was received successfully. HTTP 200 is returned
even if one or multiple batch part actions failed.

@RESTRETURNCODE{400}
is returned if the batch envelope is malformed or incorrectly formatted.
This code will also be returned if the content-type of the overall batch
request or the individual MIME parts is not as expected.

@RESTRETURNCODE{405}
is returned when an invalid HTTP method is used.

@EXAMPLES

Sending a batch request with five batch parts:

- GET /_api/version

- DELETE /_api/collection/products

- POST /_api/collection/products

- GET /_api/collection/products/figures

- DELETE /_api/collection/products

The boundary (`SomeBoundaryValue`) is passed to the server in the HTTP
`Content-Type` HTTP header.
*Please note the reply is not displayed all accurate.*


<div class="example-container" id="RestBatchMultipartHeader_container">
<a class="anchorjs-link " href="#RestBatchMultipartHeader_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestBatchMultipartHeader_long">
<pre>
shell> curl -X POST --header 'Content-Type: multipart/form-data; boundary=SomeBoundaryValue' --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/batch &lt;&lt;EOF
--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId1

GET /_api/version HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: myId2

DELETE /_api/collection/products HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: someId

POST /_api/collection/products HTTP/1.1

{"name": "products" }

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: nextId

GET /_api/collection/products/figures HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart
Content-Id: otherId

DELETE /_api/collection/products HTTP/1.1
--SomeBoundaryValue--

EOF

HTTP/1.1 200 OK
content-type: multipart/form-data; boundary=SomeBoundaryValue
x-content-type-options: nosniff
x-arango-errors: 1

"--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\nContent-Id: myId1\r\n\r\nHTTP/1.1 200 OK\r\nServer: \r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 61\r\n\r\n{\"server\":\"arango\",\"version\":\"3.3.25\",\"license\":\"enterprise\"}\r\n--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\nContent-Id: myId2\r\n\r\nHTTP/1.1 404 Not Found\r\nServer: \r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 79\r\n\r\n{\"error\":true,\"errorMessage\":\"collection not found\",\"code\":404,\"errorNum\":1203}\r\n--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\nContent-Id: someId\r\n\r\nHTTP/1.1 200 OK\r\nServer: \r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 324\r\n\r\n{\"code\":200,\"error\":false,\"waitForSync\":false,\"type\":2,\"statusString\":\"loaded\",\"indexBuckets\":8,\"globallyUniqueId\":\"hACBE6CCD4628/9856\",\"doCompact\":true,\"isSystem\":false,\"journalSize\":33554432,\"id\":\"9856\",\"isVolatile\":false,\"keyOptions\":{\"type\":\"traditional\",\"allowUserKeys\":true,\"lastValue\":0},\"name\":\"products\",\"status\":3}\r\n--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\nContent-Id: nextId\r\n\r\nHTTP/1.1 200 OK\r\nServer: \r\nLocation: /_api/collection/products/figures\r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 831\r\n\r\n{\"code\":200,\"error\":false,\"waitForSync\":false,\"type\":2,\"statusString\":\"loaded\",\"status\":3,\"name\":\"products\",\"figures\":{\"indexes\":{\"count\":1,\"size\":32128},\"documentReferences\":0,\"waitingFor\":\"-\",\"alive\":{\"count\":0,\"size\":0},\"dead\":{\"count\":0,\"size\":0,\"deletion\":0},\"compactionStatus\":{\"message\":\"compaction not yet started\",\"time\":\"2020-02-03T15:48:38Z\",\"count\":0,\"filesCombined\":0,\"bytesRead\":0,\"bytesWritten\":0},\"datafiles\":{\"count\":0,\"fileSize\":0},\"journals\":{\"count\":0,\"fileSize\":0},\"compactors\":{\"count\":0,\"fileSize\":0},\"revisions\":{\"count\":0,\"size\":48192},\"lastTick\":0,\"uncollectedLogfileEntries\":0},\"doCompact\":true,\"globallyUniqueId\":\"hACBE6CCD4628/9856\",\"count\":0,\"indexBuckets\":8,\"isSystem\":false,\"journalSize\":33554432,\"id\":\"9856\",\"isVolatile\":false,\"keyOptions\":{\"type\":\"traditional\",\"allowUserKeys\":true,\"lastValue\":0}}\r\n--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\nContent-Id: otherId\r\n\r\nHTTP/1.1 200 OK\r\nServer: \r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 38\r\n\r\n{\"code\":200,\"error\":false,\"id\":\"9856\"}\r\n--SomeBoundaryValue--"
</pre>
</div>
</div>









Sending a batch request, setting the boundary implicitly (the server will
in this case try to find the boundary at the beginning of the request body).


<div class="example-container" id="RestBatchImplicitBoundary_container">
<a class="anchorjs-link " href="#RestBatchImplicitBoundary_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestBatchImplicitBoundary_long">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/batch &lt;&lt;EOF
--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

DELETE /_api/collection/notexisting1 HTTP/1.1

--SomeBoundaryValue
Content-Type: application/x-arango-batchpart

DELETE _api/collection/notexisting2 HTTP/1.1
--SomeBoundaryValue--

EOF

HTTP/1.1 200 OK
content-type: 
x-content-type-options: nosniff
x-arango-errors: 2

"--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\n\r\nHTTP/1.1 404 Not Found\r\nServer: \r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 79\r\n\r\n{\"error\":true,\"errorMessage\":\"collection not found\",\"code\":404,\"errorNum\":1203}\r\n--SomeBoundaryValue\r\nContent-Type: application/x-arango-batchpart\r\n\r\nHTTP/1.1 404 Not Found\r\nServer: \r\nConnection: \r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 101\r\n\r\n{\"error\":true,\"code\":404,\"errorNum\":404,\"errorMessage\":\"unknown path '_api/collection/notexisting2'\"}\r\n--SomeBoundaryValue--"
</pre>
</div>
</div>




@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/JSF_import_document.md -->
@startDocuBlock JSF_import_document

@brief imports documents from JSON-encoded lists

@RESTHEADER{POST /_api/import#document,imports document values}

@RESTALLBODYPARAM{documents,string,required}
The body must consist of JSON-encoded arrays of attribute values, with one
line per document. The first row of the request must be a JSON-encoded
array of attribute names. These attribute names are used for the data in the
subsequent lines.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTQUERYPARAM{fromPrefix,string,optional}
An optional prefix for the values in `_from` attributes. If specified, the
value is automatically prepended to each `_from` input value. This allows
specifying just the keys for `_from`.

@RESTQUERYPARAM{toPrefix,string,optional}
An optional prefix for the values in `_to` attributes. If specified, the
value is automatically prepended to each `_to` input value. This allows
specifying just the keys for `_to`.

@RESTQUERYPARAM{overwrite,boolean,optional}
If this parameter has a value of `true` or `yes`, then all data in the
collection will be removed prior to the import. Note that any existing
index definitions will be preseved.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until documents have been synced to disk before returning.

@RESTQUERYPARAM{onDuplicate,string,optional}
Controls what action is carried out in case of a unique key constraint
violation. Possible values are:

- *error*: this will not import the current document because of the unique
  key constraint violation. This is the default setting.

- *update*: this will update an existing document in the database with the
  data specified in the request. Attributes of the existing document that
  are not present in the request will be preseved.

- *replace*: this will replace an existing document in the database with the
  data specified in the request.

- *ignore*: this will not update an existing document and simply ignore the
  error caused by the unique key constraint violation.

Note that *update*, *replace* and *ignore* will only work when the
import document in the request contains the *_key* attribute. *update* and
*replace* may also fail because of secondary unique key constraint
violations.

@RESTQUERYPARAM{complete,boolean,optional}
If set to `true` or `yes`, it will make the whole import fail if any error
occurs. Otherwise the import will continue even if some documents cannot
be imported.

@RESTQUERYPARAM{details,boolean,optional}
If set to `true` or `yes`, the result will include an attribute `details`
with details about documents that could not be imported.

@RESTDESCRIPTION
**NOTE** Swagger examples won't work due to the anchor.


Creates documents in the collection identified by `collection-name`.
The first line of the request body must contain a JSON-encoded array of
attribute names. All following lines in the request body must contain
JSON-encoded arrays of attribute values. Each line is interpreted as a
separate document, and the values specified will be mapped to the array
of attribute names specified in the first header line.

The response is a JSON object with the following attributes:

- `created`: number of documents imported.

- `errors`: number of documents that were not imported due to an error.

- `empty`: number of empty lines found in the input (will only contain a
  value greater zero for types `documents` or `auto`).

- `updated`: number of updated/replaced documents (in case `onDuplicate`
  was set to either `update` or `replace`).

- `ignored`: number of failed but ignored insert operations (in case
  `onDuplicate` was set to `ignore`).

- `details`: if query parameter `details` is set to true, the result will
  contain a `details` attribute which is an array with more detailed
  information about which documents could not be inserted.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if all documents could be imported successfully.

@RESTRETURNCODE{400}
is returned if `type` contains an invalid value, no `collection` is
specified, the documents are incorrectly encoded, or the request
is malformed.

@RESTRETURNCODE{404}
is returned if `collection` or the `_from` or `_to` attributes of an
imported edge refer to an unknown collection.

@RESTRETURNCODE{409}
is returned if the import would trigger a unique key violation and
`complete` is set to `true`.

@RESTRETURNCODE{500}
is returned if the server cannot auto-generate a document key (out of keys
error) for a document with no user-defined key.

@EXAMPLES

Importing two documents, with attributes `_key`, `value1` and `value2` each. One
line in the import data is empty


<div class="example-container" id="RestImportCsvExample_container">
<a class="anchorjs-link " href="#RestImportCsvExample_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvExample_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]

[ "foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportCsvExample_container_collapse" onclick="$('#RestImportCsvExample_long').hide(); $('#RestImportCsvExample_short').show(); window.location.hash='RestImportCsvExample_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvExample_short" onclick="$('#RestImportCsvExample_short').hide(); $('#RestImportCsvExample_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]

[ "foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, with attributes `_from`, `_to` and `name`


<div class="example-container" id="RestImportCsvEdge_container">
<a class="anchorjs-link " href="#RestImportCsvEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvEdge_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links &lt;&lt;EOF
[ "_from", "_to", "name" ]
[ "products/123","products/234", "some name" ]
[ "products/332", "products/abc", "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportCsvEdge_container_collapse" onclick="$('#RestImportCsvEdge_long').hide(); $('#RestImportCsvEdge_short').show(); window.location.hash='RestImportCsvEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvEdge_short" onclick="$('#RestImportCsvEdge_short').hide(); $('#RestImportCsvEdge_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links &lt;&lt;EOF
[ "_from", "_to", "name" ]
[ "products/123","products/234", "some name" ]
[ "products/332", "products/abc", "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, omitting `_from` or `_to`


<div class="example-container" id="RestImportCsvEdgeInvalid_container">
<a class="anchorjs-link " href="#RestImportCsvEdgeInvalid_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvEdgeInvalid_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&details=true &lt;&lt;EOF
[ "name" ]
[ "some name" ]
[ "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"details"</span> : [ 
    <span class="hljs-string">"at position 1: missing '_from' or '_to' attribute, offending document: {\"name\":\"some name\"}"</span>, 
    <span class="hljs-string">"at position 2: missing '_from' or '_to' attribute, offending document: {\"name\":\"other name\"}"</span> 
  ] 
}
</pre>
<div id="RestImportCsvEdgeInvalid_container_collapse" onclick="$('#RestImportCsvEdgeInvalid_long').hide(); $('#RestImportCsvEdgeInvalid_short').show(); window.location.hash='RestImportCsvEdgeInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvEdgeInvalid_short" onclick="$('#RestImportCsvEdgeInvalid_short').hide(); $('#RestImportCsvEdgeInvalid_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&details=true &lt;&lt;EOF
[ "name" ]
[ "some name" ]
[ "other name" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, but allow partial imports


<div class="example-container" id="RestImportCsvUniqueContinue_container">
<a class="anchorjs-link " href="#RestImportCsvUniqueContinue_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvUniqueContinue_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&details=true &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"details"</span> : [ 
    <span class="hljs-string">"at position 1: creating document failed with error 'unique constraint violated', offending document: {\"_key\":\"abc\",\"value1\":\"bar\",\"value2\":\"baz\"}"</span> 
  ] 
}
</pre>
<div id="RestImportCsvUniqueContinue_container_collapse" onclick="$('#RestImportCsvUniqueContinue_long').hide(); $('#RestImportCsvUniqueContinue_short').show(); window.location.hash='RestImportCsvUniqueContinue_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvUniqueContinue_short" onclick="$('#RestImportCsvUniqueContinue_short').hide(); $('#RestImportCsvUniqueContinue_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&details=true &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, not allowing partial imports


<div class="example-container" id="RestImportCsvUniqueFail_container">
<a class="anchorjs-link " href="#RestImportCsvUniqueFail_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvUniqueFail_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&complete=true &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"unique constraint violated"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">409</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1210</span> 
}
</pre>
<div id="RestImportCsvUniqueFail_container_collapse" onclick="$('#RestImportCsvUniqueFail_long').hide(); $('#RestImportCsvUniqueFail_short').show(); window.location.hash='RestImportCsvUniqueFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvUniqueFail_short" onclick="$('#RestImportCsvUniqueFail_short').hide(); $('#RestImportCsvUniqueFail_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&complete=true &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["abc", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a non-existing collection


<div class="example-container" id="RestImportCsvInvalidCollection_container">
<a class="anchorjs-link " href="#RestImportCsvInvalidCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvInvalidCollection_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"collection not found: products"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestImportCsvInvalidCollection_container_collapse" onclick="$('#RestImportCsvInvalidCollection_long').hide(); $('#RestImportCsvInvalidCollection_short').show(); window.location.hash='RestImportCsvInvalidCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvInvalidCollection_short" onclick="$('#RestImportCsvInvalidCollection_short').hide(); $('#RestImportCsvInvalidCollection_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products &lt;&lt;EOF
[ "_key", "value1", "value2" ]
[ "abc", 25, "test" ]
["foo", "bar", "baz" ]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a malformed body


<div class="example-container" id="RestImportCsvInvalidBody_container">
<a class="anchorjs-link " href="#RestImportCsvInvalidBody_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportCsvInvalidBody_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products &lt;&lt;EOF
{ "_key": "foo", "value1": "bar" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"no JSON array found in second line"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestImportCsvInvalidBody_container_collapse" onclick="$('#RestImportCsvInvalidBody_long').hide(); $('#RestImportCsvInvalidBody_short').show(); window.location.hash='RestImportCsvInvalidBody_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportCsvInvalidBody_short" onclick="$('#RestImportCsvInvalidBody_short').hide(); $('#RestImportCsvInvalidBody_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products &lt;&lt;EOF
{ "_key": "foo", "value1": "bar" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/JSF_import_json.md -->
@startDocuBlock JSF_import_json

@brief imports documents from JSON

@RESTHEADER{POST /_api/import#json,imports documents from JSON}

@RESTALLBODYPARAM{documents,string,required}
The body must either be a JSON-encoded array of objects or a string with
multiple JSON objects separated by newlines.

@RESTQUERYPARAMETERS

@RESTQUERYPARAM{type,string,required}
Determines how the body of the request will be interpreted. `type` can have
the following values:
- `documents`: when this type is used, each line in the request body is
  expected to be an individual JSON-encoded document. Multiple JSON objects
  in the request body need to be separated by newlines.
- `list`: when this type is used, the request body must contain a single
  JSON-encoded array of individual objects to import.
- `auto`: if set, this will automatically determine the body type (either
  `documents` or `list`).

@RESTQUERYPARAM{collection,string,required}
The collection name.

@RESTQUERYPARAM{fromPrefix,string,optional}
An optional prefix for the values in `_from` attributes. If specified, the
value is automatically prepended to each `_from` input value. This allows
specifying just the keys for `_from`.

@RESTQUERYPARAM{toPrefix,string,optional}
An optional prefix for the values in `_to` attributes. If specified, the
value is automatically prepended to each `_to` input value. This allows
specifying just the keys for `_to`.

@RESTQUERYPARAM{overwrite,boolean,optional}
If this parameter has a value of `true` or `yes`, then all data in the
collection will be removed prior to the import. Note that any existing
index definitions will be preseved.

@RESTQUERYPARAM{waitForSync,boolean,optional}
Wait until documents have been synced to disk before returning.

@RESTQUERYPARAM{onDuplicate,string,optional}
Controls what action is carried out in case of a unique key constraint
violation. Possible values are:

- *error*: this will not import the current document because of the unique
  key constraint violation. This is the default setting.

- *update*: this will update an existing document in the database with the 
  data specified in the request. Attributes of the existing document that
  are not present in the request will be preseved.

- *replace*: this will replace an existing document in the database with the
  data specified in the request. 

- *ignore*: this will not update an existing document and simply ignore the
  error caused by a unique key constraint violation.

Note that that *update*, *replace* and *ignore* will only work when the
import document in the request contains the *_key* attribute. *update* and
*replace* may also fail because of secondary unique key constraint violations.

@RESTQUERYPARAM{complete,boolean,optional}
If set to `true` or `yes`, it will make the whole import fail if any error
occurs. Otherwise the import will continue even if some documents cannot
be imported.

@RESTQUERYPARAM{details,boolean,optional}
If set to `true` or `yes`, the result will include an attribute `details`
with details about documents that could not be imported.

@RESTDESCRIPTION
**NOTE** Swagger examples won't work due to the anchor.


Creates documents in the collection identified by `collection-name`.
The JSON representations of the documents must be passed as the body of the
POST request. The request body can either consist of multiple lines, with
each line being a single stand-alone JSON object, or a singe JSON array with
sub-objects.

The response is a JSON object with the following attributes:

- `created`: number of documents imported.

- `errors`: number of documents that were not imported due to an error.

- `empty`: number of empty lines found in the input (will only contain a
  value greater zero for types `documents` or `auto`).

- `updated`: number of updated/replaced documents (in case `onDuplicate`
  was set to either `update` or `replace`).

- `ignored`: number of failed but ignored insert operations (in case
  `onDuplicate` was set to `ignore`).

- `details`: if query parameter `details` is set to true, the result will
  contain a `details` attribute which is an array with more detailed
  information about which documents could not be inserted.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if all documents could be imported successfully.

@RESTRETURNCODE{400}
is returned if `type` contains an invalid value, no `collection` is
specified, the documents are incorrectly encoded, or the request
is malformed.

@RESTRETURNCODE{404}
is returned if `collection` or the `_from` or `_to` attributes of an
imported edge refer to an unknown collection.

@RESTRETURNCODE{409}
is returned if the import would trigger a unique key violation and
`complete` is set to `true`.

@RESTRETURNCODE{500}
is returned if the server cannot auto-generate a document key (out of keys
error) for a document with no user-defined key.

@EXAMPLES

Importing documents with heterogenous attributes from a JSON array


<div class="example-container" id="RestImportJsonList_container">
<a class="anchorjs-link " href="#RestImportJsonList_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonList_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=list &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"abc"</span>, 
    <span class="hljs-string">"value1"</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">"value2"</span> : <span class="hljs-string">"test"</span>, 
    <span class="hljs-string">"allowed"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"baz"</span> 
  }, 
  { 
    <span class="hljs-string">"name"</span> : { 
      <span class="hljs-string">"detailed"</span> : <span class="hljs-string">"detailed name"</span>, 
      <span class="hljs-string">"short"</span> : <span class="hljs-string">"short name"</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonList_container_collapse" onclick="$('#RestImportJsonList_long').hide(); $('#RestImportJsonList_short').show(); window.location.hash='RestImportJsonList_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonList_short" onclick="$('#RestImportJsonList_short').hide(); $('#RestImportJsonList_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=list &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"abc"</span>, 
    <span class="hljs-string">"value1"</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">"value2"</span> : <span class="hljs-string">"test"</span>, 
    <span class="hljs-string">"allowed"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"baz"</span> 
  }, 
  { 
    <span class="hljs-string">"name"</span> : { 
      <span class="hljs-string">"detailed"</span> : <span class="hljs-string">"detailed name"</span>, 
      <span class="hljs-string">"short"</span> : <span class="hljs-string">"short name"</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing documents from individual JSON lines


<div class="example-container" id="RestImportJsonLines_container">
<a class="anchorjs-link " href="#RestImportJsonLines_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonLines_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test","allowed": true }
{ "_key": "foo", "name": "baz" }

{ "name": { "detailed": "detailed name", "short": "short name" } }

EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonLines_container_collapse" onclick="$('#RestImportJsonLines_long').hide(); $('#RestImportJsonLines_short').show(); window.location.hash='RestImportJsonLines_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonLines_short" onclick="$('#RestImportJsonLines_short').hide(); $('#RestImportJsonLines_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test","allowed": true }
{ "_key": "foo", "name": "baz" }

{ "name": { "detailed": "detailed name", "short": "short name" } }

EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





Using the auto type detection


<div class="example-container" id="RestImportJsonType_container">
<a class="anchorjs-link " href="#RestImportJsonType_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonType_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=auto &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"abc"</span>, 
    <span class="hljs-string">"value1"</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">"value2"</span> : <span class="hljs-string">"test"</span>, 
    <span class="hljs-string">"allowed"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"baz"</span> 
  }, 
  { 
    <span class="hljs-string">"name"</span> : { 
      <span class="hljs-string">"detailed"</span> : <span class="hljs-string">"detailed name"</span>, 
      <span class="hljs-string">"short"</span> : <span class="hljs-string">"short name"</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">3</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonType_container_collapse" onclick="$('#RestImportJsonType_long').hide(); $('#RestImportJsonType_short').show(); window.location.hash='RestImportJsonType_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonType_short" onclick="$('#RestImportJsonType_short').hide(); $('#RestImportJsonType_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=auto &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"abc"</span>, 
    <span class="hljs-string">"value1"</span> : <span class="hljs-number">25</span>, 
    <span class="hljs-string">"value2"</span> : <span class="hljs-string">"test"</span>, 
    <span class="hljs-string">"allowed"</span> : <span class="hljs-literal">true</span> 
  }, 
  { 
    <span class="hljs-string">"_key"</span> : <span class="hljs-string">"foo"</span>, 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"baz"</span> 
  }, 
  { 
    <span class="hljs-string">"name"</span> : { 
      <span class="hljs-string">"detailed"</span> : <span class="hljs-string">"detailed name"</span>, 
      <span class="hljs-string">"short"</span> : <span class="hljs-string">"short name"</span> 
    } 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, with attributes `_from`, `_to` and `name`


<div class="example-container" id="RestImportJsonEdge_container">
<a class="anchorjs-link " href="#RestImportJsonEdge_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonEdge_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&type=documents &lt;&lt;EOF
{ "_from": "products/123", "_to": "products/234" }
{"_from": "products/332", "_to": "products/abc",   "name": "other name" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">2</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span> 
}
</pre>
<div id="RestImportJsonEdge_container_collapse" onclick="$('#RestImportJsonEdge_long').hide(); $('#RestImportJsonEdge_short').show(); window.location.hash='RestImportJsonEdge_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonEdge_short" onclick="$('#RestImportJsonEdge_short').hide(); $('#RestImportJsonEdge_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&type=documents &lt;&lt;EOF
{ "_from": "products/123", "_to": "products/234" }
{"_from": "products/332", "_to": "products/abc",   "name": "other name" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Importing into an edge collection, omitting `_from` or `_to`


<div class="example-container" id="RestImportJsonEdgeInvalid_container">
<a class="anchorjs-link " href="#RestImportJsonEdgeInvalid_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonEdgeInvalid_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&type=list&details=true &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"some name"</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"details"</span> : [ 
    <span class="hljs-string">"at position 1: missing '_from' or '_to' attribute, offending document: {\"name\":\"some name\"}"</span> 
  ] 
}
</pre>
<div id="RestImportJsonEdgeInvalid_container_collapse" onclick="$('#RestImportJsonEdgeInvalid_long').hide(); $('#RestImportJsonEdgeInvalid_short').show(); window.location.hash='RestImportJsonEdgeInvalid_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonEdgeInvalid_short" onclick="$('#RestImportJsonEdgeInvalid_short').hide(); $('#RestImportJsonEdgeInvalid_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=links&type=list&details=true &lt;&lt;EOF
[ 
  { 
    <span class="hljs-string">"name"</span> : <span class="hljs-string">"some name"</span> 
  } 
]
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, but allow partial imports


<div class="example-container" id="RestImportJsonUniqueContinue_container">
<a class="anchorjs-link " href="#RestImportJsonUniqueContinue_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonUniqueContinue_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents&details=true &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"created"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"errors"</span> : <span class="hljs-number">1</span>, 
  <span class="hljs-string">"empty"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"updated"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"ignored"</span> : <span class="hljs-number">0</span>, 
  <span class="hljs-string">"details"</span> : [ 
    <span class="hljs-string">"at position 1: creating document failed with error 'unique constraint violated', offending document: {\"_key\":\"abc\",\"value1\":\"bar\",\"value2\":\"baz\"}"</span> 
  ] 
}
</pre>
<div id="RestImportJsonUniqueContinue_container_collapse" onclick="$('#RestImportJsonUniqueContinue_long').hide(); $('#RestImportJsonUniqueContinue_short').show(); window.location.hash='RestImportJsonUniqueContinue_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonUniqueContinue_short" onclick="$('#RestImportJsonUniqueContinue_short').hide(); $('#RestImportJsonUniqueContinue_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents&details=true &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">201</span> Created
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Violating a unique constraint, not allowing partial imports


<div class="example-container" id="RestImportJsonUniqueFail_container">
<a class="anchorjs-link " href="#RestImportJsonUniqueFail_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonUniqueFail_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents&complete=true &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"unique constraint violated"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">409</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1210</span> 
}
</pre>
<div id="RestImportJsonUniqueFail_container_collapse" onclick="$('#RestImportJsonUniqueFail_long').hide(); $('#RestImportJsonUniqueFail_short').show(); window.location.hash='RestImportJsonUniqueFail_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonUniqueFail_short" onclick="$('#RestImportJsonUniqueFail_short').hide(); $('#RestImportJsonUniqueFail_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents&complete=true &lt;&lt;EOF
{ "_key": "abc", "value1": 25, "value2": "test" }
{ "_key": "abc", "value1": "bar", "value2": "baz" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">409</span> Conflict
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a non-existing collection


<div class="example-container" id="RestImportJsonInvalidCollection_container">
<a class="anchorjs-link " href="#RestImportJsonInvalidCollection_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonInvalidCollection_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents &lt;&lt;EOF
{ "name": "test" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"collection not found: products"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">404</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">1203</span> 
}
</pre>
<div id="RestImportJsonInvalidCollection_container_collapse" onclick="$('#RestImportJsonInvalidCollection_long').hide(); $('#RestImportJsonInvalidCollection_short').show(); window.location.hash='RestImportJsonInvalidCollection_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonInvalidCollection_short" onclick="$('#RestImportJsonInvalidCollection_short').hide(); $('#RestImportJsonInvalidCollection_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=documents &lt;&lt;EOF
{ "name": "test" }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">404</span> Not Found
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>






Using a malformed body


<div class="example-container" id="RestImportJsonInvalidBody_container">
<a class="anchorjs-link " href="#RestImportJsonInvalidBody_container" aria-label="Anchor" data-anchorjs-icon=""></a><div id="RestImportJsonInvalidBody_long" style="Display: none;">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=list &lt;&lt;EOF
{ }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

{ 
  <span class="hljs-string">"error"</span> : <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"errorMessage"</span> : <span class="hljs-string">"expecting a JSON array in the request"</span>, 
  <span class="hljs-string">"code"</span> : <span class="hljs-number">400</span>, 
  <span class="hljs-string">"errorNum"</span> : <span class="hljs-number">400</span> 
}
</pre>
<div id="RestImportJsonInvalidBody_container_collapse" onclick="$('#RestImportJsonInvalidBody_long').hide(); $('#RestImportJsonInvalidBody_short').show(); window.location.hash='RestImportJsonInvalidBody_container';" class="example_show_button">Hide response body</div></div>
<div id="RestImportJsonInvalidBody_short" onclick="$('#RestImportJsonInvalidBody_short').hide(); $('#RestImportJsonInvalidBody_long').show();">
<pre>
shell> curl -X POST --header 'accept: application/json' --data-binary @- --dump - http://localhost:8529/_api/import?collection=products&type=list &lt;&lt;EOF
{ }
EOF

HTTP/<span class="hljs-number">1.1</span> <span class="hljs-number">400</span> Bad Request
content-type: application/json; charset=utf<span class="hljs-number">-8</span>
x-content-type-options: nosniff

</pre><div class="example_show_button">Show response body</div>
</div>
</div>





@endDocuBlock


<!-- filename: /work/ArangoDB/Documentation/DocuBlocks/Rest/Bulk/JSF_post_api_export.md -->
@startDocuBlock JSF_post_api_export

@brief export all documents from a collection, using a cursor

@RESTHEADER{POST /_api/export, Create export cursor}

@RESTBODYPARAM{flush,boolean,required,}
if set to *true*, a WAL flush operation will be executed prior to the
export. The flush operation will start copying documents from the WAL to the
collection's datafiles. There will be an additional wait time of up
to *flushWait* seconds after the flush to allow the WAL collector to change
the adjusted document meta-data to point into the datafiles, too.
The default value is *false* (i.e. no flush) so most recently inserted or
updated
documents from the collection might be missing in the export.

@RESTBODYPARAM{flushWait,integer,required,int64}
maximum wait time in seconds after a flush operation. The default
value is 10. This option only has an effect when *flush* is set to *true*.

@RESTBODYPARAM{count,boolean,required,}
boolean flag that indicates whether the number of documents
in the result set should be returned in the "count" attribute of the result
(optional).
Calculating the "count" attribute might in the future have a performance
impact so this option is turned off by default, and "count" is only returned
when requested.

@RESTBODYPARAM{batchSize,integer,required,int64}
maximum number of result documents to be transferred from
the server to the client in one roundtrip (optional). If this attribute is
not set, a server-controlled default value will be used.

@RESTBODYPARAM{limit,integer,required,int64}
an optional limit value, determining the maximum number of documents to
be included in the cursor. Omitting the *limit* attribute or setting it to 0 will
lead to no limit being used. If a limit is used, it is undefined which documents
from the collection will be included in the export and which will be excluded. 
This is because there is no natural order of documents in a collection.

@RESTBODYPARAM{ttl,integer,required,int64}
an optional time-to-live for the cursor (in seconds). The cursor will be
removed on the server automatically after the specified amount of time. This
is useful to ensure garbage collection of cursors that are not fully fetched
by clients. If not set, a server-defined value will be used.

@RESTBODYPARAM{restrict,object,optional,JSF_post_api_export_restrictions}
an object containing an array of attribute names that will be 
included or excluded when returning result documents.

Not specifying *restrict* will by default return all attributes of each document.

@RESTSTRUCT{type,JSF_post_api_export_restrictions,string,required,string}
has to be be set to either *include* or *exclude* depending on which you want to use

@RESTSTRUCT{fields,JSF_post_api_export_restrictions,array,required,string}
Contains an array of attribute names to *include* or *exclude*. Matching of attribute names
for *inclusion* or *exclusion* will be done on the top level only.
Specifying names of nested attributes is not supported at the moment.


@RESTQUERYPARAMETERS

@RESTQUERYPARAM{collection,string,required}
The name of the collection to export.

@RESTDESCRIPTION
A call to this method creates a cursor containing all documents in the 
specified collection. In contrast to other data-producing APIs, the internal
data structures produced by the export API are more lightweight, so it is
the preferred way to retrieve all documents from a collection.

Documents are returned in a similar manner as in the `/_api/cursor` REST API. 
If all documents of the collection fit into the first batch, then no cursor
will be created, and the result object's *hasMore* attribute will be set to
*false*. If not all documents fit into the first batch, then the result 
object's *hasMore* attribute will be set to *true*, and the *id* attribute
of the result will contain a cursor id.

The order in which the documents are returned is not specified.

By default, only those documents from the collection will be returned that are
stored in the collection's datafiles. Documents that are present in the write-ahead
log (WAL) at the time the export is run will not be exported.

To export these documents as well, the caller can issue a WAL flush request
before calling the export API or set the *flush* attribute. Setting the *flush*
option will trigger a WAL flush before the export so documents get copied from 
the WAL to the collection datafiles.

If the result set can be created by the server, the server will respond with
*HTTP 201*. The body of the response will contain a JSON object with the
result set.

The returned JSON object has the following properties:

- *error*: boolean flag to indicate that an error occurred (*false*
  in this case)

- *code*: the HTTP status code

- *result*: an array of result documents (might be empty if the collection was empty)

- *hasMore*: a boolean indicator whether there are more results
  available for the cursor on the server

- *count*: the total number of result documents available (only
  available if the query was executed with the *count* attribute set)

- *id*: id of temporary cursor created on the server (optional, see above)

If the JSON representation is malformed or the query specification is
missing from the request, the server will respond with *HTTP 400*.

The body of the response will contain a JSON object with additional error
details. The object has the following attributes:

- *error*: boolean flag to indicate that an error occurred (*true* in this case)

- *code*: the HTTP status code

- *errorNum*: the server error number

- *errorMessage*: a descriptive error message

Clients should always delete an export cursor result as early as possible because a
lingering export cursor will prevent the underlying collection from being
compacted or unloaded. By default, unused cursors will be deleted automatically 
after a server-defined idle time, and clients can adjust this idle time by setting
the *ttl* value.

Note: this API is currently not supported on cluster coordinators.

@RESTRETURNCODES

@RESTRETURNCODE{201}
is returned if the result set can be created by the server.

@RESTRETURNCODE{400}
is returned if the JSON representation is malformed or the query specification is
missing from the request.

@RESTRETURNCODE{404}
The server will respond with *HTTP 404* in case a non-existing collection is
accessed in the query.

@RESTRETURNCODE{405}
The server will respond with *HTTP 405* if an unsupported HTTP method is used.

@RESTRETURNCODE{501}
The server will respond with *HTTP 501* if this API is called on a cluster
coordinator.

@endDocuBlock

